(function(e){var t={};function a(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)a.d(n,l,function(t){return e[t]}.bind(null,l));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/octokit-rest/",a(a.s=0)})({"++zV":function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=l.toKey,o=l.set;n({target:"Reflect",stat:!0},{defineMetadata:function(e,t,a){var n=arguments.length<4?void 0:c(arguments[3]);o(e,t,r(a),n)}})},"+2oP":function(e,t,a){"use strict";var n=a("I+eb"),l=a("hh1v"),r=a("6LWA"),c=a("I8vh"),o=a("UMSQ"),i=a("/GqU"),s=a("hBjN"),u=a("tiKp"),m=a("Hd5f"),d=a("rkAj"),E=m("slice"),p=d("slice",{ACCESSORS:!0,0:0,1:2}),h=u("species"),g=[].slice,b=Math.max;n({target:"Array",proto:!0,forced:!E||!p},{slice:function(e,t){var a,n,u,m=i(this),d=o(m.length),E=c(e,d),p=c(void 0===t?d:t,d);if(r(m)&&(a=m.constructor,"function"!=typeof a||a!==Array&&!r(a.prototype)?l(a)&&(a=a[h],null===a&&(a=void 0)):a=void 0,a===Array||void 0===a))return g.call(m,E,p);for(n=new(void 0===a?Array:a)(b(p-E,0)),u=0;E<p;E++,u++)E in m&&s(n,u,m[E]);return n.length=u,n}})},"+M1K":function(e,t,a){var n=a("ppGB");e.exports=function(e){var t=n(e);if(t<0)throw RangeError("The argument can't be less than 0");return t}},"+wdc":function(e,t,a){"use strict";var n,l,r,c,o;if("undefined"===typeof window||"function"!==typeof MessageChannel){var i=null,s=null,u=function e(){if(null!==i)try{var a=t.unstable_now();i(!0,a),i=null}catch(n){throw setTimeout(e,0),n}},m=Date.now();t.unstable_now=function(){return Date.now()-m},n=function(e){null!==i?setTimeout(n,0,e):(i=e,setTimeout(u,0))},l=function(e,t){s=setTimeout(e,t)},r=function(){clearTimeout(s)},c=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,E=window.Date,p=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var g=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof d&&"function"===typeof d.now)t.unstable_now=function(){return d.now()};else{var b=E.now();t.unstable_now=function(){return E.now()-b}}var f=!1,y=null,k=-1,v=5,w=0;c=function(){return t.unstable_now()>=w},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):v=0<e?Math.floor(1e3/e):5};var L=new MessageChannel,A=L.port2;L.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();w=e+v;try{y(!0,e)?A.postMessage(null):(f=!1,y=null)}catch(a){throw A.postMessage(null),a}}else f=!1},n=function(e){y=e,f||(f=!0,A.postMessage(null))},l=function(e,a){k=p((function(){e(t.unstable_now())}),a)},r=function(){h(k),k=-1}}function x(e,t){var a=e.length;e.push(t);e:for(;;){var n=a-1>>>1,l=e[n];if(!(void 0!==l&&0<P(l,t)))break e;e[n]=t,e[a]=l,a=n}}function _(e){return e=e[0],void 0===e?null:e}function G(e){var t=e[0];if(void 0!==t){var a=e.pop();if(a!==t){e[0]=a;e:for(var n=0,l=e.length;n<l;){var r=2*(n+1)-1,c=e[r],o=r+1,i=e[o];if(void 0!==c&&0>P(c,a))void 0!==i&&0>P(i,c)?(e[n]=i,e[o]=a,n=o):(e[n]=c,e[r]=a,n=r);else{if(!(void 0!==i&&0>P(i,a)))break e;e[n]=i,e[o]=a,n=o}}}return t}return null}function P(e,t){var a=e.sortIndex-t.sortIndex;return 0!==a?a:e.id-t.id}var I=[],S=[],T=1,N=null,j=3,H=!1,q=!1,D=!1;function z(e){for(var t=_(S);null!==t;){if(null===t.callback)G(S);else{if(!(t.startTime<=e))break;G(S),t.sortIndex=t.expirationTime,x(I,t)}t=_(S)}}function C(e){if(D=!1,z(e),!q)if(null!==_(I))q=!0,n(O);else{var t=_(S);null!==t&&l(C,t.startTime-e)}}function O(e,a){q=!1,D&&(D=!1,r()),H=!0;var n=j;try{for(z(a),N=_(I);null!==N&&(!(N.expirationTime>a)||e&&!c());){var o=N.callback;if(null!==o){N.callback=null,j=N.priorityLevel;var i=o(N.expirationTime<=a);a=t.unstable_now(),"function"===typeof i?N.callback=i:N===_(I)&&G(I),z(a)}else G(I);N=_(I)}if(null!==N)var s=!0;else{var u=_(S);null!==u&&l(C,u.startTime-a),s=!1}return s}finally{N=null,j=n,H=!1}}function R(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var F=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){q||H||(q=!0,n(O))},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_getFirstCallbackNode=function(){return _(I)},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var a=j;j=t;try{return e()}finally{j=a}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=F,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var a=j;j=e;try{return t()}finally{j=a}},t.unstable_scheduleCallback=function(e,a,c){var o=t.unstable_now();if("object"===typeof c&&null!==c){var i=c.delay;i="number"===typeof i&&0<i?o+i:o,c="number"===typeof c.timeout?c.timeout:R(e)}else c=R(e),i=o;return c=i+c,e={id:T++,callback:a,priorityLevel:e,startTime:i,expirationTime:c,sortIndex:-1},i>o?(e.sortIndex=i,x(S,e),null===_(I)&&e===_(S)&&(D?r():D=!0,l(C,i-o))):(e.sortIndex=c,x(I,e),q||H||(q=!0,n(O))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();z(e);var a=_(I);return a!==N&&null!==N&&null!==a&&null!==a.callback&&a.startTime<=e&&a.expirationTime<N.expirationTime||c()},t.unstable_wrapCallback=function(e){var t=j;return function(){var a=j;j=t;try{return e.apply(this,arguments)}finally{j=a}}}},"+ywr":function(e,t,a){var n=a("dOgj");n("Uint32",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},"/GqU":function(e,t,a){var n=a("RK3t"),l=a("HYAF");e.exports=function(e){return n(l(e))}},"/Yfv":function(e,t,a){var n=a("dOgj");n("Int8",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},"/b8u":function(e,t,a){var n=a("STAE");e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},"/byt":function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},"/qmn":function(e,t,a){var n=a("2oRo");e.exports=n.Promise},0:function(e,t,a){e.exports=a("1/Kc")},"07d7":function(e,t,a){var n=a("AO7/"),l=a("busE"),r=a("sEFX");n||l(Object.prototype,"toString",r,{unsafe:!0})},"0BK2":function(e,t){e.exports={}},"0Dky":function(e,t){e.exports=function(e){try{return!!e()}catch(t){return!0}}},"0GbY":function(e,t,a){var n=a("Qo9l"),l=a("2oRo"),r=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?r(n[e])||r(l[e]):n[e]&&n[e][t]||l[e]&&l[e][t]}},"0YE5":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-a-repository-to-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#add-a-repository-to-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add a repository to an app installation"),l.a.createElement("p",null,"Add a single repository to an installation. The authenticated user must have admin access to the repository."),l.a.createElement("p",null,"You must use a personal access token (which you can create via the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token"},"command line")," or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication"),") to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.addRepoToInstallation({\n  installation_id,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#add-a-repository-to-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-a-token"},l.a.createElement(r["AnchorLink"],{to:"#check-a-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check a token"),l.a.createElement("p",null,"OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," to use this endpoint, where the username is the OAuth application ",l.a.createElement("code",null,"client_id")," and the password is its ",l.a.createElement("code",null,"client_secret"),". Invalid tokens will return ",l.a.createElement("code",null,"404 NOT FOUND"),"."),l.a.createElement(c["a"],{code:"octokit.apps.checkToken({\n  client_id,\n  access_token,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The access_token of the OAuth application."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#check-a-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-content-attachment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-content-attachment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a content attachment"),l.a.createElement("p",null,"Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the ",l.a.createElement("code",null,"id")," of the content reference from the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#content_reference"},l.a.createElement("code",null,"content_reference")," event")," to create an attachment."),l.a.createElement("p",null,'The app must create a content attachment within six hours of the content reference URL being posted. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/using-content-attachments/"},"Using content attachments"),'" for details about content attachments.'),l.a.createElement("p",null,"You must use an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.createContentAttachment({\n  content_reference_id,\n  title,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"content_reference_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the attachment"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The body of the attachment"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#create-a-content-attachment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-github-app-from-a-manifest"},l.a.createElement(r["AnchorLink"],{to:"#create-a-github-app-from-a-manifest","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a GitHub App from a manifest"),l.a.createElement("p",null,"Use this endpoint to complete the handshake necessary when implementing the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/"},"GitHub App Manifest flow"),". When you create a GitHub App with the manifest flow, you receive a temporary ",l.a.createElement("code",null,"code")," used to retrieve the GitHub App's ",l.a.createElement("code",null,"id"),", ",l.a.createElement("code",null,"pem")," (private key), and ",l.a.createElement("code",null,"webhook_secret"),"."),l.a.createElement(c["a"],{code:"octokit.apps.createFromManifest({\n  code,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"code"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#create-a-github-app-from-a-manifest"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-installation-access-token-for-an-app"},l.a.createElement(r["AnchorLink"],{to:"#create-an-installation-access-token-for-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an installation access token for an app"),l.a.createElement("p",null,"Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of ",l.a.createElement("code",null,"401 - Unauthorized"),", and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the ",l.a.createElement("code",null,"repository_ids")," when creating the token. When you omit ",l.a.createElement("code",null,"repository_ids"),", the response does not contain the ",l.a.createElement("code",null,"repositories")," key."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.createInstallationAccessToken({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"List of repository names that the token should have access to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"List of repository IDs that the token should have access to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions granted to the user-to-server access token."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.checks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for checks on code. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.content_references"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.contents"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.deployments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for deployments and deployment statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.environments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for managing repository environments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.metadata"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.packages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pull_requests"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secret_scanning_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.security_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.single_file"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage just a single file. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.statuses"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for commit statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.vulnerability_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.workflows"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.members"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for organization teams and members. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage access to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_plan"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for viewing an organization's plan. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_self_hosted_runners"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_user_blocking"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.team_discussions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage team discussions and related comments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#create-an-installation-access-token-for-an-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-app-authorization"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-app-authorization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an app authorization"),l.a.createElement("p",null,"OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password. You must also provide a valid OAuth ",l.a.createElement("code",null,"access_token")," as an input parameter and the grant for the token's owner will be deleted. Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on ",l.a.createElement(r["Link"],{to:"https://github.com/settings/applications#authorized"},"the application authorizations settings screen within GitHub"),"."),l.a.createElement(c["a"],{code:"octokit.apps.deleteAuthorization({\n  client_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The OAuth access token used to authenticate to the GitHub API."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#delete-an-app-authorization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an installation for the authenticated app"),l.a.createElement("p",null,"Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#suspend-an-app-installation"},"Suspend an app installation"),'" endpoint.'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.deleteInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#delete-an-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-app-token"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-app-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an app token"),l.a.createElement("p",null,"OAuth application owners can revoke a single token for an OAuth application. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password."),l.a.createElement(c["a"],{code:"octokit.apps.deleteToken({\n  client_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The OAuth access token used to authenticate to the GitHub API."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#delete-an-app-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the authenticated app"),l.a.createElement("p",null,"Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the ",l.a.createElement("code",null,"installations_count")," in the response. For more details about your app's installations, see the \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app"},"List installations for the authenticated app"),'" endpoint.'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-app"},l.a.createElement(r["AnchorLink"],{to:"#get-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an app"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": The ",l.a.createElement("code",null,":app_slug")," is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., ",l.a.createElement("code",null,"https://github.com/settings/apps/:app_slug"),")."),l.a.createElement("p",null,"If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/"},"personal access token")," or an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getBySlug({\n  app_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"app_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-an-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-an-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (",l.a.createElement("code",null,"target_type"),") will be either an organization or a user account, depending which account the repository belongs to."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-an-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find the organization's installation information."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getOrgInstallation({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-an-organization-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getRepoInstallation({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-a-repository-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-subscription-plan-for-an-account"},l.a.createElement(r["AnchorLink"],{to:"#get-a-subscription-plan-for-an-account","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a subscription plan for an account"),l.a.createElement("p",null,"Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getSubscriptionPlanForAccount({\n  account_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"account_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"account_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-subscription-plan-for-an-account-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#get-a-subscription-plan-for-an-account-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a subscription plan for an account (stubbed)"),l.a.createElement("p",null,"Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getSubscriptionPlanForAccountStubbed({\n  account_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"account_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"account_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-user-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-a-user-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a user installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find the user\u2019s installation information."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getUserInstallation({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-a-user-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-webhook-configuration-for-an-app"},l.a.createElement(r["AnchorLink"],{to:"#get-a-webhook-configuration-for-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a webhook configuration for an app"),l.a.createElement("p",null,'Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "',l.a.createElement(r["Link"],{to:"/developers/apps/creating-a-github-app"},"Creating a GitHub App"),'."'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getWebhookConfigForApp();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps#get-a-webhook-configuration-for-an-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-accounts-for-a-plan"},l.a.createElement(r["AnchorLink"],{to:"#list-accounts-for-a-plan","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List accounts for a plan"),l.a.createElement("p",null,"Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listAccountsForPlan({\n  plan_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"plan_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"plan_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"To return the oldest accounts first, set to ",l.a.createElement("code",null,"asc"),". Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without the ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-accounts-for-a-plan-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#list-accounts-for-a-plan-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List accounts for a plan (stubbed)"),l.a.createElement("p",null,"Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listAccountsForPlanStubbed({\n  plan_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"plan_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"plan_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"To return the oldest accounts first, set to ",l.a.createElement("code",null,"asc"),". Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without the ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-accessible-to-the-user-access-token"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-accessible-to-the-user-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories accessible to the user access token"),l.a.createElement("p",null,"List repositories that the authenticated user has explicit permission (",l.a.createElement("code",null,":read"),", ",l.a.createElement("code",null,":write"),", or ",l.a.createElement("code",null,":admin"),") to access for an installation."),l.a.createElement("p",null,"The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint."),l.a.createElement("p",null,"The access the user has to each repository is included in the hash under the ",l.a.createElement("code",null,"permissions")," key."),l.a.createElement(c["a"],{code:"octokit.apps.listInstallationReposForAuthenticatedUser({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-user-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-installations-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#list-installations-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List installations for the authenticated app"),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement("p",null,"The permissions the installation has are included under the ",l.a.createElement("code",null,"permissions")," key."),l.a.createElement(c["a"],{code:"octokit.apps.listInstallations();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"outdated"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#list-installations-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-app-installations-accessible-to-the-user-access-token"},l.a.createElement(r["AnchorLink"],{to:"#list-app-installations-accessible-to-the-user-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List app installations accessible to the user access token"),l.a.createElement("p",null,"Lists installations of your GitHub App that the authenticated user has explicit permission (",l.a.createElement("code",null,":read"),", ",l.a.createElement("code",null,":write"),", or ",l.a.createElement("code",null,":admin"),") to access."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint."),l.a.createElement("p",null,"The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."),l.a.createElement("p",null,"You can find the permissions for the installation under the ",l.a.createElement("code",null,"permissions")," key."),l.a.createElement(c["a"],{code:"octokit.apps.listInstallationsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-plans"},l.a.createElement(r["AnchorLink"],{to:"#list-plans","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List plans"),l.a.createElement("p",null,"Lists all plans that are part of your GitHub Marketplace listing."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listPlans();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-plans"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-plans-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#list-plans-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List plans (stubbed)"),l.a.createElement("p",null,"Lists all plans that are part of your GitHub Marketplace listing."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listPlansStubbed();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-plans-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-accessible-to-the-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-accessible-to-the-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories accessible to the app installation"),l.a.createElement("p",null,"List repositories that an app installation can access."),l.a.createElement("p",null,"You must use an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listReposAccessibleToInstallation();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-subscriptions-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-subscriptions-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List subscriptions for the authenticated user"),l.a.createElement("p",null,"Lists the active subscriptions for the authenticated user. You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/"},"OAuth token"),"."),l.a.createElement(c["a"],{code:"octokit.apps.listSubscriptionsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-subscriptions-for-the-authenticated-user-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#list-subscriptions-for-the-authenticated-user-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List subscriptions for the authenticated user (stubbed)"),l.a.createElement("p",null,"Lists the active subscriptions for the authenticated user. You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/"},"OAuth token"),"."),l.a.createElement(c["a"],{code:"octokit.apps.listSubscriptionsForAuthenticatedUserStubbed();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-repository-from-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-repository-from-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a repository from an app installation"),l.a.createElement("p",null,"Remove a single repository from an installation. The authenticated user must have admin access to the repository."),l.a.createElement("p",null,"You must use a personal access token (which you can create via the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token"},"command line")," or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication"),") to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.removeRepoFromInstallation({\n  installation_id,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#remove-a-repository-from-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"reset-a-token"},l.a.createElement(r["AnchorLink"],{to:"#reset-a-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Reset a token"),l.a.createElement("p",null,'OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password. Invalid tokens will return ",l.a.createElement("code",null,"404 NOT FOUND"),"."),l.a.createElement(c["a"],{code:"octokit.apps.resetToken({\n  client_id,\n  access_token,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The access_token of the OAuth application."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#reset-a-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"revoke-an-installation-access-token"},l.a.createElement(r["AnchorLink"],{to:"#revoke-an-installation-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Revoke an installation access token"),l.a.createElement("p",null,"Revokes the installation token you're using to authenticate as an installation and access this endpoint."),l.a.createElement("p",null,'Once an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#create-an-installation-access-token-for-an-app"},"Create an installation access token for an app"),'" endpoint.'),l.a.createElement("p",null,"You must use an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.revokeInstallationAccessToken();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#revoke-an-installation-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-scoped-access-token"},l.a.createElement(r["AnchorLink"],{to:"#create-a-scoped-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a scoped access token"),l.a.createElement("p",null,"Exchanges a non-repository scoped user-to-server OAuth access token for a repository scoped user-to-server OAuth access token. You can specify which repositories the token can access and which permissions are granted to the token. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password. Invalid tokens will return ",l.a.createElement("code",null,"404 NOT FOUND"),"."),l.a.createElement(c["a"],{code:"octokit.apps.scopeToken({\n  client_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required.")," The OAuth access token used to authenticate to the GitHub API."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the user or organization to scope the user-to-server access token to. ",l.a.createElement("strong",null,"Required")," unless ",l.a.createElement("code",null,"target_id")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the user or organization to scope the user-to-server access token to. ",l.a.createElement("strong",null,"Required")," unless ",l.a.createElement("code",null,"target")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of repository IDs to scope the user-to-server access token to. ",l.a.createElement("code",null,"repositories")," may not be specified if ",l.a.createElement("code",null,"repository_ids")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of repository names to scope the user-to-server access token to. ",l.a.createElement("code",null,"repository_ids")," may not be specified if ",l.a.createElement("code",null,"repositories")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions granted to the user-to-server access token."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.checks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for checks on code. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.content_references"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.contents"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.deployments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for deployments and deployment statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.environments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for managing repository environments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.metadata"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.packages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pull_requests"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secret_scanning_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.security_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.single_file"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage just a single file. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.statuses"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for commit statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.vulnerability_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.workflows"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.members"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for organization teams and members. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage access to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_plan"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for viewing an organization's plan. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_self_hosted_runners"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_user_blocking"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.team_discussions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage team discussions and related comments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#create-a-scoped-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"suspend-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#suspend-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Suspend an app installation"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/"},"Suspending a GitHub App installation"),'."'),l.a.createElement("p",null,"Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.suspendInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#suspend-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unsuspend-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#unsuspend-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unsuspend an app installation"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/"},"Suspending a GitHub App installation"),'."'),l.a.createElement("p",null,"Removes a GitHub App installation suspension."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.unsuspendInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#unsuspend-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-webhook-configuration-for-an-app"},l.a.createElement(r["AnchorLink"],{to:"#update-a-webhook-configuration-for-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a webhook configuration for an app"),l.a.createElement("p",null,'Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "',l.a.createElement(r["Link"],{to:"/developers/apps/creating-a-github-app"},"Creating a GitHub App"),'."'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.updateWebhookConfigForApp();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps#update-a-webhook-configuration-for-an-app"},"GitHub Developer Guide documentation"),".")))}},"0eef":function(e,t,a){"use strict";var n={}.propertyIsEnumerable,l=Object.getOwnPropertyDescriptor,r=l&&!n.call({1:2},1);t.f=r?function(e){var t=l(this,e);return!!t&&t.enumerable}:n},"0he/":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Some API endpoints support alternative response formats, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/reference/media/"},"Media types"),"."),l.a.createElement("p",null,"For example, to request a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/reference/media/#diff"},"pull request as diff format"),", set the ",l.a.createElement("code",null,"mediaType.format")," option"),l.a.createElement(c["a"],{code:'const { data: prDiff } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 1278,\n  mediaType: {\n    format: "diff",\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://developer.mozilla.org/en-US/docs/Web/API/AbortController"},"AbortController")," interface can be used to abort one or more requests as and when desired. When the request is initiated, an ",l.a.createElement(r["Link"],{to:"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal"},"AbortSignal")," instance can be passed as an option inside the request's options object. For usage in Node, the ",l.a.createElement(r["Link"],{to:"https://github.com/mysticatea/abort-controller"},l.a.createElement("code",null,"abort-controller"))," package can be used."),l.a.createElement(c["a"],{code:'const controller = new AbortController();\nconst { data: prDiff } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 1278,\n  request: {\n    signal: controller.signal,\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"Use ",l.a.createElement("code",null,"controller.abort()")," to abort the request when desired.")))}},"0q/z":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("Sssf"),i=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{find:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return i(a,(function(e,a){if(n(a,e,t))return i.stop(a)}),void 0,!0,!0).result}})},"0rvr":function(e,t,a){var n=a("glrk"),l=a("O741");e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,a={};try{e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set,e.call(a,[]),t=a instanceof Array}catch(r){}return function(a,r){return n(a),l(r),t?e.call(a,r):a.__proto__=r,a}}():void 0)},"0zqC":function(e,t,a){"use strict";a.r(t);var n=a("ODXe"),l=a("q1tI"),r=a.n(l),c=a("wx14");function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e){return i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}var s=a("Ff2n");function u(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function m(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?u(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var d=a("TSYQ"),E=a.n(d),p=a("TOwV");function h(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=[];return r.a.Children.forEach(e,(function(e){(void 0!==e&&null!==e||t.keepEmpty)&&(Array.isArray(e)?a=a.concat(h(e)):Object(p["isFragment"])(e)&&e.props?a=a.concat(h(e.props.children,t)):a.push(e))})),a}var g=function(){var e=navigator.userAgent||navigator.vendor||window.opera;return!(!/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e)&&!/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(e.substr(0,4)))};function b(e,t){var a=t||{},r=a.defaultValue,c=a.value,o=a.onChange,i=a.postState,s=l["useState"]((function(){return void 0!==c?c:void 0!==r?"function"===typeof r?r():r:"function"===typeof e?e():e})),u=Object(n["a"])(s,2),m=u[0],d=u[1],E=void 0!==c?c:m;function p(e){d(e),E!==e&&o&&o(e,E)}i&&(E=i(E));var h=l["useRef"](!0);return l["useEffect"]((function(){h.current?h.current=!1:void 0===c&&d(c)}),[c]),[E,p]}var f=a("a3WO");function y(e){if(Array.isArray(e))return Object(f["a"])(e)}function k(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}var v=a("BsWD");function w(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function L(e){return y(e)||k(e)||Object(v["a"])(e)||w()}var A=function(e){return+setTimeout(e,16)},x=function(e){return clearTimeout(e)};function _(e){return A(e)}function G(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function P(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function I(e,t,a){return t&&P(e.prototype,t),a&&P(e,a),e}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function T(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}function j(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function H(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function q(e,t){return!t||"object"!==i(t)&&"function"!==typeof t?H(e):t}function D(e){var t=j();return function(){var a,n=N(e);if(t){var l=N(this).constructor;a=Reflect.construct(n,arguments,l)}else a=n.apply(this,arguments);return q(this,a)}}"undefined"!==typeof window&&"requestAnimationFrame"in window&&(A=function(e){return window.requestAnimationFrame(e)},x=function(e){return window.cancelAnimationFrame(e)}),_.cancel=x;var z=a("i8i4"),C=a.n(z);function O(e){return e instanceof HTMLElement?e:C.a.findDOMNode(e)}var R={};function F(e,t){0}function U(e,t,a){t||R[a]||(e(!1,a),R[a]=!0)}function M(e,t){U(F,e,t)}var Y=M;function B(e,t){"function"===typeof e?e(t):"object"===i(e)&&e&&"current"in e&&(e.current=t)}function W(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return function(e){t.forEach((function(t){B(t,e)}))}}function K(e){var t,a,n=Object(p["isMemo"])(e)?e.type.type:e.type;return!("function"===typeof n&&!(null===(t=n.prototype)||void 0===t?void 0:t.render))&&!("function"===typeof e&&!(null===(a=e.prototype)||void 0===a?void 0:a.render))}var V=a("bdgK"),Z="rc-observer-key",$=function(e){T(a,e);var t=D(a);function a(){var e;return G(this,a),e=t.apply(this,arguments),e.resizeObserver=null,e.childNode=null,e.currentElement=null,e.state={width:0,height:0,offsetHeight:0,offsetWidth:0},e.onResize=function(t){var a=e.props.onResize,n=t[0].target,l=n.getBoundingClientRect(),r=l.width,c=l.height,o=n.offsetWidth,i=n.offsetHeight,s=Math.floor(r),u=Math.floor(c);if(e.state.width!==s||e.state.height!==u||e.state.offsetWidth!==o||e.state.offsetHeight!==i){var d={width:s,height:u,offsetWidth:o,offsetHeight:i};e.setState(d),a&&Promise.resolve().then((function(){a(m(m({},d),{},{offsetWidth:o,offsetHeight:i}),n)}))}},e.setChildNode=function(t){e.childNode=t},e}return I(a,[{key:"componentDidMount",value:function(){this.onComponentUpdated()}},{key:"componentDidUpdate",value:function(){this.onComponentUpdated()}},{key:"componentWillUnmount",value:function(){this.destroyObserver()}},{key:"onComponentUpdated",value:function(){var e=this.props.disabled;if(e)this.destroyObserver();else{var t=O(this.childNode||this),a=t!==this.currentElement;a&&(this.destroyObserver(),this.currentElement=t),!this.resizeObserver&&t&&(this.resizeObserver=new V["a"](this.onResize),this.resizeObserver.observe(t))}}},{key:"destroyObserver",value:function(){this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}},{key:"render",value:function(){var e=this.props.children,t=h(e);if(t.length>1)Y(!1,"Find more than one child node with `children` in ResizeObserver. Will only observe first one.");else if(0===t.length)return Y(!1,"`children` of ResizeObserver is empty. Nothing is in observe."),null;var a=t[0];if(l["isValidElement"](a)&&K(a)){var n=a.ref;t[0]=l["cloneElement"](a,{ref:W(n,this.setChildNode)})}return 1===t.length?t[0]:t.map((function(e,t){return!l["isValidElement"](e)||"key"in e&&null!==e.key?e:l["cloneElement"](e,{key:"".concat(Z,"-").concat(t)})}))}}]),a}(l["Component"]);$.displayName="ResizeObserver";var Q=$;function J(e){var t=Object(l["useRef"])(),a=Object(l["useRef"])(!1);function n(){for(var n=arguments.length,l=new Array(n),r=0;r<n;r++)l[r]=arguments[r];a.current||(_.cancel(t.current),t.current=_((function(){e.apply(void 0,l)})))}return Object(l["useEffect"])((function(){return function(){a.current=!0,_.cancel(t.current)}}),[]),n}function X(e){var t=Object(l["useRef"])([]),a=Object(l["useState"])({}),r=Object(n["a"])(a,2),c=r[1],o=Object(l["useRef"])("function"===typeof e?e():e),i=J((function(){var e=o.current;t.current.forEach((function(t){e=t(e)})),t.current=[],o.current=e,c({})}));function s(e){t.current.push(e),i()}return[o.current,s]}var ee={MAC_ENTER:3,BACKSPACE:8,TAB:9,NUM_CENTER:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,PRINT_SCREEN:44,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,QUESTION_MARK:63,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,META:91,WIN_KEY_RIGHT:92,CONTEXT_MENU:93,NUM_ZERO:96,NUM_ONE:97,NUM_TWO:98,NUM_THREE:99,NUM_FOUR:100,NUM_FIVE:101,NUM_SIX:102,NUM_SEVEN:103,NUM_EIGHT:104,NUM_NINE:105,NUM_MULTIPLY:106,NUM_PLUS:107,NUM_MINUS:109,NUM_PERIOD:110,NUM_DIVISION:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUMLOCK:144,SEMICOLON:186,DASH:189,EQUALS:187,COMMA:188,PERIOD:190,SLASH:191,APOSTROPHE:192,SINGLE_QUOTE:222,OPEN_SQUARE_BRACKET:219,BACKSLASH:220,CLOSE_SQUARE_BRACKET:221,WIN_KEY:224,MAC_FF_META:224,WIN_IME:229,isTextModifyingKeyEvent:function(e){var t=e.keyCode;if(e.altKey&&!e.ctrlKey||e.metaKey||t>=ee.F1&&t<=ee.F12)return!1;switch(t){case ee.ALT:case ee.CAPS_LOCK:case ee.CONTEXT_MENU:case ee.CTRL:case ee.DOWN:case ee.END:case ee.ESC:case ee.HOME:case ee.INSERT:case ee.LEFT:case ee.MAC_FF_META:case ee.META:case ee.NUMLOCK:case ee.NUM_CENTER:case ee.PAGE_DOWN:case ee.PAGE_UP:case ee.PAUSE:case ee.PRINT_SCREEN:case ee.RIGHT:case ee.SHIFT:case ee.UP:case ee.WIN_KEY:case ee.WIN_KEY_RIGHT:return!1;default:return!0}},isCharacterKey:function(e){if(e>=ee.ZERO&&e<=ee.NINE)return!0;if(e>=ee.NUM_ZERO&&e<=ee.NUM_MULTIPLY)return!0;if(e>=ee.A&&e<=ee.Z)return!0;if(-1!==window.navigator.userAgent.indexOf("WebKit")&&0===e)return!0;switch(e){case ee.SPACE:case ee.QUESTION_MARK:case ee.NUM_PLUS:case ee.NUM_MINUS:case ee.NUM_PERIOD:case ee.NUM_DIVISION:case ee.SEMICOLON:case ee.DASH:case ee.EQUALS:case ee.COMMA:case ee.PERIOD:case ee.SLASH:case ee.APOSTROPHE:case ee.SINGLE_QUOTE:case ee.OPEN_SQUARE_BRACKET:case ee.BACKSLASH:case ee.CLOSE_SQUARE_BRACKET:return!0;default:return!1}}},te=ee;function ae(e,t){var a,n=e.prefixCls,r=e.id,c=e.active,i=e.rtl,s=e.tab,u=s.key,m=s.tab,d=s.disabled,p=s.closeIcon,h=e.tabBarGutter,g=e.tabPosition,b=e.closable,f=e.renderWrapper,y=e.removeAriaLabel,k=e.editable,v=e.onClick,w=e.onRemove,L=e.onFocus,A="".concat(n,"-tab");l["useEffect"]((function(){return w}),[]);var x={};"top"===g||"bottom"===g?x[i?"marginLeft":"marginRight"]=h:x.marginBottom=h;var _=k&&!1!==b&&!d;function G(e){d||v(e)}function P(e){e.preventDefault(),e.stopPropagation(),k.onEdit("remove",{key:u,event:e})}var I=l["createElement"]("div",{key:u,ref:t,className:E()(A,(a={},o(a,"".concat(A,"-with-remove"),_),o(a,"".concat(A,"-active"),c),o(a,"".concat(A,"-disabled"),d),a)),style:x,onClick:G},l["createElement"]("div",{role:"tab","aria-selected":c,id:r&&"".concat(r,"-tab-").concat(u),className:"".concat(A,"-btn"),"aria-controls":r&&"".concat(r,"-panel-").concat(u),"aria-disabled":d,tabIndex:d?null:0,onClick:function(e){e.stopPropagation(),G(e)},onKeyDown:function(e){[te.SPACE,te.ENTER].includes(e.which)&&(e.preventDefault(),G(e))},onFocus:L},m),_&&l["createElement"]("button",{type:"button","aria-label":y||"remove",tabIndex:0,className:"".concat(A,"-remove"),onClick:function(e){e.stopPropagation(),P(e)}},p||k.removeIcon||"\xd7"));return f&&(I=f(I)),I}var ne=l["forwardRef"](ae),le={width:0,height:0,left:0,top:0};function re(e,t,a){return Object(l["useMemo"])((function(){for(var a,n=new Map,l=t.get(null===(a=e[0])||void 0===a?void 0:a.key)||le,r=l.left+l.width,c=0;c<e.length;c+=1){var o,i=e[c].key,s=t.get(i);if(!s)s=t.get(null===(o=e[c-1])||void 0===o?void 0:o.key)||le;var u=n.get(i)||m({},s);u.right=r-u.left-u.width,n.set(i,u)}return n}),[e.map((function(e){return e.key})).join("_"),t,a])}var ce={width:0,height:0,left:0,top:0,right:0};function oe(e,t,a,n,r){var c,o,i,s=r.tabs,u=r.tabPosition,m=r.rtl;["top","bottom"].includes(u)?(c="width",o=m?"right":"left",i=Math.abs(t.left)):(c="height",o="top",i=-t.top);var d=t[c],E=a[c],p=n[c],h=d;return E+p>d&&(h=d-p),Object(l["useMemo"])((function(){if(!s.length)return[0,0];for(var t=s.length,a=t,n=0;n<t;n+=1){var l=e.get(s[n].key)||ce;if(l[o]+l[c]>i+h){a=n-1;break}}for(var r=0,u=t-1;u>=0;u-=1){var m=e.get(s[u].key)||ce;if(m[o]<i){r=u+1;break}}return[r,a]}),[e,i,h,u,s.map((function(e){return e.key})).join("_"),m])}var ie=function(){var e=function(t,a){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])},e(t,a)};return function(t,a){function n(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}}(),se=l["createContext"](null),ue=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ie(t,e),t.prototype.render=function(){return l["createElement"](se.Provider,{value:this.props.store},this.props.children)},t}(l["Component"]),me=a("Gytx"),de=a.n(me),Ee=a("2mql"),pe=a.n(Ee),he=function(){var e=function(t,a){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])},e(t,a)};return function(t,a){function n(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(n.prototype=a.prototype,new n)}}(),ge=function(){return ge=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var l in t=arguments[a],t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l]);return e},ge.apply(this,arguments)};function be(e){return e.displayName||e.name||"Component"}var fe=function(){return{}};function ye(e,t){void 0===t&&(t={});var a=!!e,n=e||fe;return function(r){var c=function(t){function c(e,a){var l=t.call(this,e,a)||this;return l.unsubscribe=null,l.handleChange=function(){if(l.unsubscribe){var e=n(l.store.getState(),l.props);l.setState({subscribed:e})}},l.store=l.context,l.state={subscribed:n(l.store.getState(),e),store:l.store,props:e},l}return he(c,t),c.getDerivedStateFromProps=function(t,a){return e&&2===e.length&&t!==a.props?{subscribed:n(a.store.getState(),t),props:t}:{props:t}},c.prototype.componentDidMount=function(){this.trySubscribe()},c.prototype.componentWillUnmount=function(){this.tryUnsubscribe()},c.prototype.shouldComponentUpdate=function(e,t){return!de()(this.props,e)||!de()(this.state.subscribed,t.subscribed)},c.prototype.trySubscribe=function(){a&&(this.unsubscribe=this.store.subscribe(this.handleChange),this.handleChange())},c.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null)},c.prototype.render=function(){var e=ge(ge(ge({},this.props),this.state.subscribed),{store:this.store});return l["createElement"](r,ge({},e,{ref:this.props.miniStoreForwardedRef}))},c.displayName="Connect("+be(r)+")",c.contextType=se,c}(l["Component"]);if(t.forwardRef){var o=l["forwardRef"]((function(e,t){return l["createElement"](c,ge({},e,{miniStoreForwardedRef:t}))}));return pe()(o,r)}return pe()(c,r)}}var ke=function(){return ke=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var l in t=arguments[a],t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l]);return e},ke.apply(this,arguments)};function ve(e){var t=e,a=[];function n(e){t=ke(ke({},t),e);for(var n=0;n<a.length;n++)a[n]()}function l(){return t}function r(e){return a.push(e),function(){var t=a.indexOf(e);a.splice(t,1)}}return{setState:n,getState:l,subscribe:r}}function we(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function Le(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?we(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):we(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function Ae(e,t){var a=Le({},e);return Array.isArray(t)&&t.forEach((function(e){delete a[e]})),a}function xe(){var e=[].slice.call(arguments,0);return 1===e.length?e[0]:function(){for(var t=0;t<e.length;t++)e[t]&&e[t].apply&&e[t].apply(this,arguments)}}var _e=/iPhone/i,Ge=/iPod/i,Pe=/iPad/i,Ie=/\bAndroid(?:.+)Mobile\b/i,Se=/Android/i,Te=/\bAndroid(?:.+)SD4930UR\b/i,Ne=/\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i,je=/Windows Phone/i,He=/\bWindows(?:.+)ARM\b/i,qe=/BlackBerry/i,De=/BB10/i,ze=/Opera Mini/i,Ce=/\b(CriOS|Chrome)(?:.+)Mobile/i,Oe=/Mobile(?:.+)Firefox\b/i;function Re(e,t){return e.test(t)}function Fe(e){var t=e||("undefined"!==typeof navigator?navigator.userAgent:""),a=t.split("[FBAN");if("undefined"!==typeof a[1]){var l=a,r=Object(n["a"])(l,1);t=r[0]}if(a=t.split("Twitter"),"undefined"!==typeof a[1]){var c=a,o=Object(n["a"])(c,1);t=o[0]}var i={apple:{phone:Re(_e,t)&&!Re(je,t),ipod:Re(Ge,t),tablet:!Re(_e,t)&&Re(Pe,t)&&!Re(je,t),device:(Re(_e,t)||Re(Ge,t)||Re(Pe,t))&&!Re(je,t)},amazon:{phone:Re(Te,t),tablet:!Re(Te,t)&&Re(Ne,t),device:Re(Te,t)||Re(Ne,t)},android:{phone:!Re(je,t)&&Re(Te,t)||!Re(je,t)&&Re(Ie,t),tablet:!Re(je,t)&&!Re(Te,t)&&!Re(Ie,t)&&(Re(Ne,t)||Re(Se,t)),device:!Re(je,t)&&(Re(Te,t)||Re(Ne,t)||Re(Ie,t)||Re(Se,t))||Re(/\bokhttp\b/i,t)},windows:{phone:Re(je,t),tablet:Re(He,t),device:Re(je,t)||Re(He,t)},other:{blackberry:Re(qe,t),blackberry10:Re(De,t),opera:Re(ze,t),firefox:Re(Oe,t),chrome:Re(Ce,t),device:Re(qe,t)||Re(De,t)||Re(ze,t)||Re(Oe,t)||Re(Ce,t)},any:null,phone:null,tablet:null};return i.any=i.apple.device||i.android.device||i.windows.device||i.other.device,i.phone=i.apple.phone||i.android.phone||i.windows.phone,i.tablet=i.apple.tablet||i.android.tablet||i.windows.tablet,i}var Ue=m(m({},Fe()),{},{isMobile:Fe}),Me=Ue;function Ye(){}function Be(e,t,a){var n=t||"";return e.key||"".concat(n,"item_").concat(a)}function We(e){return"".concat(e,"-menu-")}function Ke(e,t){var a=-1;l["Children"].forEach(e,(function(e){a+=1,e&&e.type&&e.type.isMenuItemGroup?l["Children"].forEach(e.props.children,(function(e){a+=1,t(e,a)})):t(e,a)}))}function Ve(e,t,a){e&&!a.find&&l["Children"].forEach(e,(function(e){if(e){var n=e.type;if(!n||!(n.isSubMenu||n.isMenuItem||n.isMenuItemGroup))return;-1!==t.indexOf(e.key)?a.find=!0:e.props.children&&Ve(e.props.children,t,a)}}))}var Ze=["defaultSelectedKeys","selectedKeys","defaultOpenKeys","openKeys","mode","getPopupContainer","onSelect","onDeselect","onDestroy","openTransitionName","openAnimation","subMenuOpenDelay","subMenuCloseDelay","forceSubMenuRender","triggerSubMenuAction","level","selectable","multiple","onOpenChange","visible","focusable","defaultActiveFirst","prefixCls","inlineIndent","parentMenu","title","rootPrefixCls","eventKey","active","onItemHover","onTitleMouseEnter","onTitleMouseLeave","onTitleClick","popupAlign","popupOffset","isOpen","renderMenuItem","manualRef","subMenuKey","disabled","index","isSelected","store","activeKey","builtinPlacements","overflowedIndicator","motion","attribute","value","popupClassName","inlineCollapsed","menu","theme","itemIcon","expandIcon"],$e=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=e&&"function"===typeof e.getBoundingClientRect&&e.getBoundingClientRect().width;if(a){if(t){var n=getComputedStyle(e),l=n.marginLeft,r=n.marginRight;a+=+l.replace("px","")+ +r.replace("px","")}a=+a.toFixed(6)}return a||0},Qe=function(e,t,a){e&&"object"===i(e.style)&&(e.style[t]=a)},Je=function(){return Me.any};function Xe(e,t){return!!e&&e.contains(t)}function et(e,t,a,n){var l=C.a.unstable_batchedUpdates?function(e){C.a.unstable_batchedUpdates(a,e)}:a;return e.addEventListener&&e.addEventListener(t,l,n),{remove:function(){e.removeEventListener&&e.removeEventListener(t,l)}}}function tt(){return!("undefined"===typeof window||!window.document||!window.document.createElement)}var at=Object(l["forwardRef"])((function(e,t){var a=e.didUpdate,n=e.getContainer,r=e.children,c=Object(l["useRef"])();Object(l["useImperativeHandle"])(t,(function(){return{}}));var o=Object(l["useRef"])(!1);return!o.current&&tt()&&(c.current=n(),o.current=!0),Object(l["useEffect"])((function(){null===a||void 0===a||a(e)})),Object(l["useEffect"])((function(){return function(){var e,t;null===(e=c.current)||void 0===e||null===(t=e.parentNode)||void 0===t||t.removeChild(c.current)}}),[]),c.current?C.a.createPortal(r,c.current):null})),nt=at;function lt(e,t,a){return a?e[0]===t[0]:e[0]===t[0]&&e[1]===t[1]}function rt(e,t,a){var n=e[t]||{};return m(m({},n),a)}function ct(e,t,a,n){for(var l=a.points,r=Object.keys(e),c=0;c<r.length;c+=1){var o=r[c];if(lt(e[o].points,l,n))return"".concat(t,"-placement-").concat(o)}return""}function ot(e,t){var a={};return a[e.toLowerCase()]=t.toLowerCase(),a["Webkit".concat(e)]="webkit".concat(t),a["Moz".concat(e)]="moz".concat(t),a["ms".concat(e)]="MS".concat(t),a["O".concat(e)]="o".concat(t.toLowerCase()),a}function it(e,t){var a={animationend:ot("Animation","AnimationEnd"),transitionend:ot("Transition","TransitionEnd")};return e&&("AnimationEvent"in t||delete a.animationend.animation,"TransitionEvent"in t||delete a.transitionend.transition),a}var st=it(tt(),"undefined"!==typeof window?window:{}),ut={};if(tt()){var mt=document.createElement("div");ut=mt.style}var dt={};function Et(e){if(dt[e])return dt[e];var t=st[e];if(t)for(var a=Object.keys(t),n=a.length,l=0;l<n;l+=1){var r=a[l];if(Object.prototype.hasOwnProperty.call(t,r)&&r in ut)return dt[e]=t[r],dt[e]}return""}var pt=Et("animationend"),ht=Et("transitionend"),gt=!(!pt||!ht),bt=pt||"animationend",ft=ht||"transitionend";function yt(e,t){if(!e)return null;if("object"===i(e)){var a=t.replace(/-\w/g,(function(e){return e[1].toUpperCase()}));return e[a]}return"".concat(e,"-").concat(t)}var kt="none",vt="appear",wt="enter",Lt="leave",At="none",xt="prepare",_t="start",Gt="active",Pt="end";function It(e){var t=Object(l["useRef"])(!1),a=Object(l["useState"])(e),r=Object(n["a"])(a,2),c=r[0],o=r[1];function i(e){t.current||o(e)}return Object(l["useEffect"])((function(){return function(){t.current=!0}}),[]),[c,i]}var St=tt()?l["useLayoutEffect"]:l["useEffect"],Tt=St,Nt=function(){var e=l["useRef"](null);function t(){_.cancel(e.current)}function a(n){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;t();var r=_((function(){l<=1?n({isCanceled:function(){return r!==e.current}}):a(n,l-1)}));e.current=r}return l["useEffect"]((function(){return function(){t()}}),[]),[a,t]},jt=[xt,_t,Gt,Pt],Ht=!1,qt=!0;function Dt(e){return e===Gt||e===Pt}var zt=function(e,t){var a=l["useState"](At),r=Object(n["a"])(a,2),c=r[0],o=r[1],i=Nt(),s=Object(n["a"])(i,2),u=s[0],m=s[1];function d(){o(xt)}return Tt((function(){if(c!==At&&c!==Pt){var e=jt.indexOf(c),a=jt[e+1],n=t(c);n===Ht?o(a):u((function(e){function t(){e.isCanceled()||o(a)}!0===n?t():Promise.resolve(n).then(t)}))}}),[e,c]),l["useEffect"]((function(){return function(){m()}}),[]),[d,c]},Ct=function(e){var t=Object(l["useRef"])(),a=Object(l["useRef"])(e);a.current=e;var n=l["useCallback"]((function(e){a.current(e)}),[]);function r(e){e&&(e.removeEventListener(ft,n),e.removeEventListener(bt,n))}function c(e){t.current&&t.current!==e&&r(t.current),e&&e!==t.current&&(e.addEventListener(ft,n),e.addEventListener(bt,n),t.current=e)}return l["useEffect"]((function(){return function(){r(t.current)}}),[]),[c,r]};function Ot(e,t,a,r){var c=r.motionEnter,i=void 0===c||c,s=r.motionAppear,u=void 0===s||s,d=r.motionLeave,E=void 0===d||d,p=r.motionDeadline,h=r.motionLeaveImmediately,g=r.onAppearPrepare,b=r.onEnterPrepare,f=r.onLeavePrepare,y=r.onAppearStart,k=r.onEnterStart,v=r.onLeaveStart,w=r.onAppearActive,L=r.onEnterActive,A=r.onLeaveActive,x=r.onAppearEnd,_=r.onEnterEnd,G=r.onLeaveEnd,P=r.onVisibleChanged,I=It(),S=Object(n["a"])(I,2),T=S[0],N=S[1],j=It(kt),H=Object(n["a"])(j,2),q=H[0],D=H[1],z=It(null),C=Object(n["a"])(z,2),O=C[0],R=C[1],F=Object(l["useRef"])(!1),U=Object(l["useRef"])(null),M=Object(l["useRef"])(!1),Y=Object(l["useRef"])(null);function B(){var e=a();return e||Y.current}var W=Object(l["useRef"])(!1);function K(e){var t,a=B();e&&!e.deadline&&e.target!==a||(q===vt&&W.current?t=null===x||void 0===x?void 0:x(a,e):q===wt&&W.current?t=null===_||void 0===_?void 0:_(a,e):q===Lt&&W.current&&(t=null===G||void 0===G?void 0:G(a,e)),!1===t||M.current||(D(kt),R(null)))}var V=Ct(K),Z=Object(n["a"])(V,1),$=Z[0],Q=l["useMemo"]((function(){var e,t,a;switch(q){case"appear":return e={},o(e,xt,g),o(e,_t,y),o(e,Gt,w),e;case"enter":return t={},o(t,xt,b),o(t,_t,k),o(t,Gt,L),t;case"leave":return a={},o(a,xt,f),o(a,_t,v),o(a,Gt,A),a;default:return{}}}),[q]),J=zt(q,(function(e){if(e===xt){var t=Q[xt];return t?t(B()):Ht}var a;te in Q&&R((null===(a=Q[te])||void 0===a?void 0:a.call(Q,B(),null))||null);return te===Gt&&($(B()),p>0&&(clearTimeout(U.current),U.current=setTimeout((function(){K({deadline:!0})}),p))),qt})),X=Object(n["a"])(J,2),ee=X[0],te=X[1],ae=Dt(te);W.current=ae,Tt((function(){if(N(t),e){var a,n=F.current;F.current=!0,!n&&t&&u&&(a=vt),n&&t&&i&&(a=wt),(n&&!t&&E||!n&&h&&!t&&E)&&(a=Lt),a&&(D(a),ee())}}),[t]),Object(l["useEffect"])((function(){(q===vt&&!u||q===wt&&!i||q===Lt&&!E)&&D(kt)}),[u,i,E]),Object(l["useEffect"])((function(){return function(){clearTimeout(U.current),M.current=!0}}),[]),Object(l["useEffect"])((function(){void 0!==T&&q===kt&&(null===P||void 0===P||P(T))}),[T,q]);var ne=O;return Q[xt]&&te===_t&&(ne=m({transition:"none"},ne)),[q,te,ne,null!==T&&void 0!==T?T:t]}var Rt=function(e){T(a,e);var t=D(a);function a(){return G(this,a),t.apply(this,arguments)}return I(a,[{key:"render",value:function(){return this.props.children}}]),a}(l["Component"]),Ft=Rt;function Ut(e){var t=e;function a(e){return!(!e.motionName||!t)}"object"===i(e)&&(t=e.transitionSupport);var r=l["forwardRef"]((function(e,t){var r=e.visible,c=void 0===r||r,i=e.removeOnLeave,s=void 0===i||i,u=e.forceRender,d=e.children,p=e.motionName,h=e.leavedClassName,g=e.eventProps,b=a(e),f=Object(l["useRef"])(),y=Object(l["useRef"])();function k(){try{return O(f.current||y.current)}catch(e){return null}}var v=Ot(b,c,k,e),w=Object(n["a"])(v,4),L=w[0],A=w[1],x=w[2],_=w[3],G=Object(l["useRef"])(t);G.current=t;var P,I=l["useCallback"]((function(e){f.current=e,B(G.current,e)}),[]),S=m(m({},g),{},{visible:c});if(d)if(L!==kt&&a(e)){var T,N;A===xt?N="prepare":Dt(A)?N="active":A===_t&&(N="start"),P=d(m(m({},S),{},{className:E()(yt(p,L),(T={},o(T,yt(p,"".concat(L,"-").concat(N)),N),o(T,p,"string"===typeof p),T)),style:x}),I)}else P=_?d(m({},S),I):s?u?d(m(m({},S),{},{style:{display:"none"}}),I):null:d(m(m({},S),{},{className:h}),I);else P=null;return l["createElement"](Ft,{ref:y},P)}));return r.displayName="CSSMotion",r}var Mt=Ut(gt),Yt="add",Bt="keep",Wt="remove",Kt="removed";function Vt(e){var t;return t=e&&"object"===i(e)&&"key"in e?e:{key:e},m(m({},t),{},{key:String(t.key)})}function Zt(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.map(Vt)}function $t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],a=[],n=0,l=t.length,r=Zt(e),c=Zt(t);r.forEach((function(e){for(var t=!1,r=n;r<l;r+=1){var o=c[r];if(o.key===e.key){n<r&&(a=a.concat(c.slice(n,r).map((function(e){return m(m({},e),{},{status:Yt})}))),n=r),a.push(m(m({},o),{},{status:Bt})),n+=1,t=!0;break}}t||a.push(m(m({},e),{},{status:Wt}))})),n<l&&(a=a.concat(c.slice(n).map((function(e){return m(m({},e),{},{status:Yt})}))));var o={};a.forEach((function(e){var t=e.key;o[t]=(o[t]||0)+1}));var i=Object.keys(o).filter((function(e){return o[e]>1}));return i.forEach((function(e){a=a.filter((function(t){var a=t.key,n=t.status;return a!==e||n!==Wt})),a.forEach((function(t){t.key===e&&(t.status=Bt)}))})),a}var Qt=["eventProps","visible","children","motionName","motionAppear","motionEnter","motionLeave","motionLeaveImmediately","motionDeadline","removeOnLeave","leavedClassName","onAppearStart","onAppearActive","onAppearEnd","onEnterStart","onEnterActive","onEnterEnd","onLeaveStart","onLeaveActive","onLeaveEnd"];function Jt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Mt,a=function(e){T(n,e);var a=D(n);function n(){var e;return G(this,n),e=a.apply(this,arguments),e.state={keyEntities:[]},e.removeKey=function(t){e.setState((function(e){var a=e.keyEntities;return{keyEntities:a.map((function(e){return e.key!==t?e:m(m({},e),{},{status:Kt})}))}}))},e}return I(n,[{key:"render",value:function(){var e=this,a=this.state.keyEntities,n=this.props,r=n.component,c=n.children,o=n.onVisibleChanged,i=Object(s["a"])(n,["component","children","onVisibleChanged"]),u=r||l["Fragment"],m={};return Qt.forEach((function(e){m[e]=i[e],delete i[e]})),delete i.keys,l["createElement"](u,Object.assign({},i),a.map((function(a){var n=a.status,r=Object(s["a"])(a,["status"]),i=n===Yt||n===Bt;return l["createElement"](t,Object.assign({},m,{key:r.key,visible:i,eventProps:r,onVisibleChanged:function(t){null===o||void 0===o||o(t,{key:r.key}),t||e.removeKey(r.key)}}),c)})))}}],[{key:"getDerivedStateFromProps",value:function(e,t){var a=e.keys,n=t.keyEntities,l=Zt(a),r=$t(n,l);return{keyEntities:r.filter((function(e){var t=n.find((function(t){var a=t.key;return e.key===a}));return!t||t.status!==Kt||e.status!==Wt}))}}}]),n}(l["Component"]);return a.defaultProps={component:"div"},a}Jt(gt);var Xt=Mt;function ea(e){var t=e.prefixCls,a=e.motion,n=e.animation,l=e.transitionName;return a||(n?{motionName:"".concat(t,"-").concat(n)}:l?{motionName:l}:null)}function ta(e){var t=e.prefixCls,a=e.visible,n=e.zIndex,r=e.mask,c=e.maskMotion,o=e.maskAnimation,i=e.maskTransitionName;if(!r)return null;var s={};return(c||i||o)&&(s=m({motionAppear:!0},ea({motion:c,prefixCls:t,transitionName:i,animation:o}))),l["createElement"](Xt,Object.assign({},s,{visible:a,removeOnLeave:!0}),(function(e){var a=e.className;return l["createElement"]("div",{style:{zIndex:n},className:E()("".concat(t,"-mask"),a)})}))}var aa,na=function(e){if(!e)return!1;if(e.offsetParent)return!0;if(e.getBBox){var t=e.getBBox();if(t.width||t.height)return!0}if(e.getBoundingClientRect){var a=e.getBoundingClientRect();if(a.width||a.height)return!0}return!1};function la(e){return la="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},la(e)}function ra(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function ca(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function oa(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ca(a,!0).forEach((function(t){ra(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ca(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var ia={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-",O:"-o-"};function sa(){if(void 0!==aa)return aa;aa="";var e=document.createElement("p").style,t="Transform";for(var a in ia)a+t in e&&(aa=a);return aa}function ua(){return sa()?"".concat(sa(),"TransitionProperty"):"transitionProperty"}function ma(){return sa()?"".concat(sa(),"Transform"):"transform"}function da(e,t){var a=ua();a&&(e.style[a]=t,"transitionProperty"!==a&&(e.style.transitionProperty=t))}function Ea(e,t){var a=ma();a&&(e.style[a]=t,"transform"!==a&&(e.style.transform=t))}function pa(e){return e.style.transitionProperty||e.style[ua()]}function ha(e){var t=window.getComputedStyle(e,null),a=t.getPropertyValue("transform")||t.getPropertyValue(ma());if(a&&"none"!==a){var n=a.replace(/[^0-9\-.,]/g,"").split(",");return{x:parseFloat(n[12]||n[4],0),y:parseFloat(n[13]||n[5],0)}}return{x:0,y:0}}var ga=/matrix\((.*)\)/,ba=/matrix3d\((.*)\)/;function fa(e,t){var a=window.getComputedStyle(e,null),n=a.getPropertyValue("transform")||a.getPropertyValue(ma());if(n&&"none"!==n){var l,r=n.match(ga);if(r)r=r[1],l=r.split(",").map((function(e){return parseFloat(e,10)})),l[4]=t.x,l[5]=t.y,Ea(e,"matrix(".concat(l.join(","),")"));else{var c=n.match(ba)[1];l=c.split(",").map((function(e){return parseFloat(e,10)})),l[12]=t.x,l[13]=t.y,Ea(e,"matrix3d(".concat(l.join(","),")"))}}else Ea(e,"translateX(".concat(t.x,"px) translateY(").concat(t.y,"px) translateZ(0)"))}var ya,ka=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;function va(e){var t=e.style.display;e.style.display="none",e.offsetHeight,e.style.display=t}function wa(e,t,a){var n=a;if("object"!==la(t))return"undefined"!==typeof n?("number"===typeof n&&(n="".concat(n,"px")),void(e.style[t]=n)):ya(e,t);for(var l in t)t.hasOwnProperty(l)&&wa(e,l,t[l])}function La(e){var t,a,n,l=e.ownerDocument,r=l.body,c=l&&l.documentElement;return t=e.getBoundingClientRect(),a=t.left,n=t.top,a-=c.clientLeft||r.clientLeft||0,n-=c.clientTop||r.clientTop||0,{left:a,top:n}}function Aa(e,t){var a=e["page".concat(t?"Y":"X","Offset")],n="scroll".concat(t?"Top":"Left");if("number"!==typeof a){var l=e.document;a=l.documentElement[n],"number"!==typeof a&&(a=l.body[n])}return a}function xa(e){return Aa(e)}function _a(e){return Aa(e,!0)}function Ga(e){var t=La(e),a=e.ownerDocument,n=a.defaultView||a.parentWindow;return t.left+=xa(n),t.top+=_a(n),t}function Pa(e){return null!==e&&void 0!==e&&e==e.window}function Ia(e){return Pa(e)?e.document:9===e.nodeType?e:e.ownerDocument}function Sa(e,t,a){var n=a,l="",r=Ia(e);return n=n||r.defaultView.getComputedStyle(e,null),n&&(l=n.getPropertyValue(t)||n[t]),l}var Ta=new RegExp("^(".concat(ka,")(?!px)[a-z%]+$"),"i"),Na=/^(top|right|bottom|left)$/,ja="currentStyle",Ha="runtimeStyle",qa="left",Da="px";function za(e,t){var a=e[ja]&&e[ja][t];if(Ta.test(a)&&!Na.test(t)){var n=e.style,l=n[qa],r=e[Ha][qa];e[Ha][qa]=e[ja][qa],n[qa]="fontSize"===t?"1em":a||0,a=n.pixelLeft+Da,n[qa]=l,e[Ha][qa]=r}return""===a?"auto":a}function Ca(e,t){return"left"===e?t.useCssRight?"right":e:t.useCssBottom?"bottom":e}function Oa(e){return"left"===e?"right":"right"===e?"left":"top"===e?"bottom":"bottom"===e?"top":void 0}function Ra(e,t,a){"static"===wa(e,"position")&&(e.style.position="relative");var n=-999,l=-999,r=Ca("left",a),c=Ca("top",a),o=Oa(r),i=Oa(c);"left"!==r&&(n=999),"top"!==c&&(l=999);var s="",u=Ga(e);("left"in t||"top"in t)&&(s=pa(e)||"",da(e,"none")),"left"in t&&(e.style[o]="",e.style[r]="".concat(n,"px")),"top"in t&&(e.style[i]="",e.style[c]="".concat(l,"px")),va(e);var m=Ga(e),d={};for(var E in t)if(t.hasOwnProperty(E)){var p=Ca(E,a),h="left"===E?n:l,g=u[E]-m[E];d[p]=p===E?h+g:h-g}wa(e,d),va(e),("left"in t||"top"in t)&&da(e,s);var b={};for(var f in t)if(t.hasOwnProperty(f)){var y=Ca(f,a),k=t[f]-u[f];b[y]=f===y?d[y]+k:d[y]-k}wa(e,b)}function Fa(e,t){var a=Ga(e),n=ha(e),l={x:n.x,y:n.y};"left"in t&&(l.x=n.x+t.left-a.left),"top"in t&&(l.y=n.y+t.top-a.top),fa(e,l)}function Ua(e,t,a){if(a.ignoreShake){var n=Ga(e),l=n.left.toFixed(0),r=n.top.toFixed(0),c=t.left.toFixed(0),o=t.top.toFixed(0);if(l===c&&r===o)return}a.useCssRight||a.useCssBottom?Ra(e,t,a):a.useCssTransform&&ma()in document.body.style?Fa(e,t):Ra(e,t,a)}function Ma(e,t){for(var a=0;a<e.length;a++)t(e[a])}function Ya(e){return"border-box"===ya(e,"boxSizing")}"undefined"!==typeof window&&(ya=window.getComputedStyle?Sa:za);var Ba=["margin","border","padding"],Wa=-1,Ka=2,Va=1,Za=0;function $a(e,t,a){var n,l={},r=e.style;for(n in t)t.hasOwnProperty(n)&&(l[n]=r[n],r[n]=t[n]);for(n in a.call(e),t)t.hasOwnProperty(n)&&(r[n]=l[n])}function Qa(e,t,a){var n,l,r,c=0;for(l=0;l<t.length;l++)if(n=t[l],n)for(r=0;r<a.length;r++){var o=void 0;o="border"===n?"".concat(n).concat(a[r],"Width"):n+a[r],c+=parseFloat(ya(e,o))||0}return c}var Ja={getParent:function(e){var t=e;do{t=11===t.nodeType&&t.host?t.host:t.parentNode}while(t&&1!==t.nodeType&&9!==t.nodeType);return t}};function Xa(e,t,a){var n=a;if(Pa(e))return"width"===t?Ja.viewportWidth(e):Ja.viewportHeight(e);if(9===e.nodeType)return"width"===t?Ja.docWidth(e):Ja.docHeight(e);var l="width"===t?["Left","Right"]:["Top","Bottom"],r="width"===t?e.getBoundingClientRect().width:e.getBoundingClientRect().height,c=(ya(e),Ya(e)),o=0;(null===r||void 0===r||r<=0)&&(r=void 0,o=ya(e,t),(null===o||void 0===o||Number(o)<0)&&(o=e.style[t]||0),o=parseFloat(o)||0),void 0===n&&(n=c?Va:Wa);var i=void 0!==r||c,s=r||o;return n===Wa?i?s-Qa(e,["border","padding"],l):o:i?n===Va?s:s+(n===Ka?-Qa(e,["border"],l):Qa(e,["margin"],l)):o+Qa(e,Ba.slice(n),l)}Ma(["Width","Height"],(function(e){Ja["doc".concat(e)]=function(t){var a=t.document;return Math.max(a.documentElement["scroll".concat(e)],a.body["scroll".concat(e)],Ja["viewport".concat(e)](a))},Ja["viewport".concat(e)]=function(t){var a="client".concat(e),n=t.document,l=n.body,r=n.documentElement,c=r[a];return"CSS1Compat"===n.compatMode&&c||l&&l[a]||c}}));var en={position:"absolute",visibility:"hidden",display:"block"};function tn(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var n,l=t[0];return 0!==l.offsetWidth?n=Xa.apply(void 0,t):$a(l,en,(function(){n=Xa.apply(void 0,t)})),n}function an(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a]);return e}Ma(["width","height"],(function(e){var t=e.charAt(0).toUpperCase()+e.slice(1);Ja["outer".concat(t)]=function(t,a){return t&&tn(t,e,a?Za:Va)};var a="width"===e?["Left","Right"]:["Top","Bottom"];Ja[e]=function(t,n){var l=n;if(void 0===l)return t&&tn(t,e,Wa);if(t){ya(t);var r=Ya(t);return r&&(l+=Qa(t,["padding","border"],a)),wa(t,e,l)}}}));var nn={getWindow:function(e){if(e&&e.document&&e.setTimeout)return e;var t=e.ownerDocument||e;return t.defaultView||t.parentWindow},getDocument:Ia,offset:function(e,t,a){if("undefined"===typeof t)return Ga(e);Ua(e,t,a||{})},isWindow:Pa,each:Ma,css:wa,clone:function(e){var t,a={};for(t in e)e.hasOwnProperty(t)&&(a[t]=e[t]);var n=e.overflow;if(n)for(t in e)e.hasOwnProperty(t)&&(a.overflow[t]=e.overflow[t]);return a},mix:an,getWindowScrollLeft:function(e){return xa(e)},getWindowScrollTop:function(e){return _a(e)},merge:function(){for(var e={},t=0;t<arguments.length;t++)nn.mix(e,t<0||arguments.length<=t?void 0:arguments[t]);return e},viewportWidth:0,viewportHeight:0};an(nn,Ja);var ln=nn.getParent;function rn(e){if(nn.isWindow(e)||9===e.nodeType)return null;var t,a=nn.getDocument(e),n=a.body,l=nn.css(e,"position"),r="fixed"===l||"absolute"===l;if(!r)return"html"===e.nodeName.toLowerCase()?null:ln(e);for(t=ln(e);t&&t!==n&&9!==t.nodeType;t=ln(t))if(l=nn.css(t,"position"),"static"!==l)return t;return null}var cn=nn.getParent;function on(e){if(nn.isWindow(e)||9===e.nodeType)return!1;var t=nn.getDocument(e),a=t.body,n=null;for(n=cn(e);n&&n!==a;n=cn(n)){var l=nn.css(n,"position");if("fixed"===l)return!0}return!1}function sn(e,t){var a={left:0,right:1/0,top:0,bottom:1/0},n=rn(e),l=nn.getDocument(e),r=l.defaultView||l.parentWindow,c=l.body,o=l.documentElement;while(n){if(-1!==navigator.userAgent.indexOf("MSIE")&&0===n.clientWidth||n===c||n===o||"visible"===nn.css(n,"overflow")){if(n===c||n===o)break}else{var i=nn.offset(n);i.left+=n.clientLeft,i.top+=n.clientTop,a.top=Math.max(a.top,i.top),a.right=Math.min(a.right,i.left+n.clientWidth),a.bottom=Math.min(a.bottom,i.top+n.clientHeight),a.left=Math.max(a.left,i.left)}n=rn(n)}var s=null;if(!nn.isWindow(e)&&9!==e.nodeType){s=e.style.position;var u=nn.css(e,"position");"absolute"===u&&(e.style.position="fixed")}var m=nn.getWindowScrollLeft(r),d=nn.getWindowScrollTop(r),E=nn.viewportWidth(r),p=nn.viewportHeight(r),h=o.scrollWidth,g=o.scrollHeight,b=window.getComputedStyle(c);if("hidden"===b.overflowX&&(h=r.innerWidth),"hidden"===b.overflowY&&(g=r.innerHeight),e.style&&(e.style.position=s),t||on(e))a.left=Math.max(a.left,m),a.top=Math.max(a.top,d),a.right=Math.min(a.right,m+E),a.bottom=Math.min(a.bottom,d+p);else{var f=Math.max(h,m+E);a.right=Math.min(a.right,f);var y=Math.max(g,d+p);a.bottom=Math.min(a.bottom,y)}return a.top>=0&&a.left>=0&&a.bottom>a.top&&a.right>a.left?a:null}function un(e,t,a,n){var l=nn.clone(e),r={width:t.width,height:t.height};return n.adjustX&&l.left<a.left&&(l.left=a.left),n.resizeWidth&&l.left>=a.left&&l.left+r.width>a.right&&(r.width-=l.left+r.width-a.right),n.adjustX&&l.left+r.width>a.right&&(l.left=Math.max(a.right-r.width,a.left)),n.adjustY&&l.top<a.top&&(l.top=a.top),n.resizeHeight&&l.top>=a.top&&l.top+r.height>a.bottom&&(r.height-=l.top+r.height-a.bottom),n.adjustY&&l.top+r.height>a.bottom&&(l.top=Math.max(a.bottom-r.height,a.top)),nn.mix(l,r)}function mn(e){var t,a,n;if(nn.isWindow(e)||9===e.nodeType){var l=nn.getWindow(e);t={left:nn.getWindowScrollLeft(l),top:nn.getWindowScrollTop(l)},a=nn.viewportWidth(l),n=nn.viewportHeight(l)}else t=nn.offset(e),a=nn.outerWidth(e),n=nn.outerHeight(e);return t.width=a,t.height=n,t}function dn(e,t){var a=t.charAt(0),n=t.charAt(1),l=e.width,r=e.height,c=e.left,o=e.top;return"c"===a?o+=r/2:"b"===a&&(o+=r),"c"===n?c+=l/2:"r"===n&&(c+=l),{left:c,top:o}}function En(e,t,a,n,l){var r=dn(t,a[1]),c=dn(e,a[0]),o=[c.left-r.left,c.top-r.top];return{left:Math.round(e.left-o[0]+n[0]-l[0]),top:Math.round(e.top-o[1]+n[1]-l[1])}}function pn(e,t,a){return e.left<a.left||e.left+t.width>a.right}function hn(e,t,a){return e.top<a.top||e.top+t.height>a.bottom}function gn(e,t,a){return e.left>a.right||e.left+t.width<a.left}function bn(e,t,a){return e.top>a.bottom||e.top+t.height<a.top}function fn(e,t,a){var n=[];return nn.each(e,(function(e){n.push(e.replace(t,(function(e){return a[e]})))})),n}function yn(e,t){return e[t]=-e[t],e}function kn(e,t){var a;return a=/%$/.test(e)?parseInt(e.substring(0,e.length-1),10)/100*t:parseInt(e,10),a||0}function vn(e,t){e[0]=kn(e[0],t.width),e[1]=kn(e[1],t.height)}function wn(e,t,a,n){var l=a.points,r=a.offset||[0,0],c=a.targetOffset||[0,0],o=a.overflow,i=a.source||e;r=[].concat(r),c=[].concat(c),o=o||{};var s={},u=0,m=!(!o||!o.alwaysByViewport),d=sn(i,m),E=mn(i);vn(r,E),vn(c,t);var p=En(E,t,l,r,c),h=nn.merge(E,p);if(d&&(o.adjustX||o.adjustY)&&n){if(o.adjustX&&pn(p,E,d)){var g=fn(l,/[lr]/gi,{l:"r",r:"l"}),b=yn(r,0),f=yn(c,0),y=En(E,t,g,b,f);gn(y,E,d)||(u=1,l=g,r=b,c=f)}if(o.adjustY&&hn(p,E,d)){var k=fn(l,/[tb]/gi,{t:"b",b:"t"}),v=yn(r,1),w=yn(c,1),L=En(E,t,k,v,w);bn(L,E,d)||(u=1,l=k,r=v,c=w)}u&&(p=En(E,t,l,r,c),nn.mix(h,p));var A=pn(p,E,d),x=hn(p,E,d);if(A||x){var _=l;A&&(_=fn(l,/[lr]/gi,{l:"r",r:"l"})),x&&(_=fn(l,/[tb]/gi,{t:"b",b:"t"})),l=_,r=a.offset||[0,0],c=a.targetOffset||[0,0]}s.adjustX=o.adjustX&&A,s.adjustY=o.adjustY&&x,(s.adjustX||s.adjustY)&&(h=un(p,E,d,s))}return h.width!==E.width&&nn.css(i,"width",nn.width(i)+h.width-E.width),h.height!==E.height&&nn.css(i,"height",nn.height(i)+h.height-E.height),nn.offset(i,{left:h.left,top:h.top},{useCssRight:a.useCssRight,useCssBottom:a.useCssBottom,useCssTransform:a.useCssTransform,ignoreShake:a.ignoreShake}),{points:l,offset:r,targetOffset:c,overflow:s}}function Ln(e,t){var a=sn(e,t),n=mn(e);return!a||n.left+n.width<=a.left||n.top+n.height<=a.top||n.left>=a.right||n.top>=a.bottom}function An(e,t,a){var n=a.target||t,l=mn(n),r=!Ln(n,a.overflow&&a.overflow.alwaysByViewport);return wn(e,l,a,r)}function xn(e,t,a){var n,l,r=nn.getDocument(e),c=r.defaultView||r.parentWindow,o=nn.getWindowScrollLeft(c),i=nn.getWindowScrollTop(c),s=nn.viewportWidth(c),u=nn.viewportHeight(c);n="pageX"in t?t.pageX:o+t.clientX,l="pageY"in t?t.pageY:i+t.clientY;var m={left:n,top:l,width:0,height:0},d=n>=0&&n<=o+s&&l>=0&&l<=i+u,E=[a.points[0],"cc"];return wn(e,m,oa({},a,{points:E}),d)}An.__getOffsetParent=rn,An.__getVisibleRectForElement=sn;function _n(e,t){return e===t||!(!e||!t)&&("pageX"in t&&"pageY"in t?e.pageX===t.pageX&&e.pageY===t.pageY:"clientX"in t&&"clientY"in t&&(e.clientX===t.clientX&&e.clientY===t.clientY))}function Gn(e,t){e!==document.activeElement&&Xe(t,e)&&"function"===typeof e.focus&&e.focus()}function Pn(e,t){var a=null,l=null;function r(e){var r=Object(n["a"])(e,1),c=r[0].target;if(document.documentElement.contains(c)){var o=c.getBoundingClientRect(),i=o.width,s=o.height,u=Math.floor(i),m=Math.floor(s);a===u&&l===m||Promise.resolve().then((function(){t({width:u,height:m})})),a=u,l=m}}var c=new V["a"](r);return e&&c.observe(e),function(){c.disconnect()}}var In=function(e,t){var a=r.a.useRef(!1),n=r.a.useRef(null);function l(){window.clearTimeout(n.current)}function c(r){if(a.current&&!0!==r)l(),n.current=window.setTimeout((function(){a.current=!1,c()}),t);else{if(!1===e())return;a.current=!0,l(),n.current=window.setTimeout((function(){a.current=!1}),t)}}return[c,function(){a.current=!1,l()}]};function Sn(e){return"function"!==typeof e?null:e()}function Tn(e){return"object"===i(e)&&e?e:null}var Nn=function(e,t){var a=e.children,l=e.disabled,c=e.target,o=e.align,i=e.onAlign,s=e.monitorWindowResize,u=e.monitorBufferTime,m=void 0===u?0:u,d=r.a.useRef({}),E=r.a.useRef(),p=r.a.Children.only(a),h=r.a.useRef({});h.current.disabled=l,h.current.target=c,h.current.onAlign=i;var g=In((function(){var e=h.current,t=e.disabled,a=e.target,n=e.onAlign;if(!t&&a){var l,r=E.current,c=Sn(a),i=Tn(a);d.current.element=c,d.current.point=i;var s=document,u=s.activeElement;return c&&na(c)?l=An(r,c,o):i&&(l=xn(r,i,o)),Gn(u,r),n&&l&&n(r,l),!0}return!1}),m),b=Object(n["a"])(g,2),f=b[0],y=b[1],k=r.a.useRef({cancel:function(){}}),v=r.a.useRef({cancel:function(){}});r.a.useEffect((function(){var e=Sn(c),t=Tn(c);E.current!==v.current.element&&(v.current.cancel(),v.current.element=E.current,v.current.cancel=Pn(E.current,f)),d.current.element===e&&_n(d.current.point,t)||(f(),k.current.element!==e&&(k.current.cancel(),k.current.element=e,k.current.cancel=Pn(e,f)))})),r.a.useEffect((function(){l?y():f()}),[l]);var w=r.a.useRef(null);return r.a.useEffect((function(){s?w.current||(w.current=et(window,"resize",f)):w.current&&(w.current.remove(),w.current=null)}),[s]),r.a.useEffect((function(){return function(){k.current.cancel(),v.current.cancel(),w.current&&w.current.remove(),y()}}),[]),r.a.useImperativeHandle(t,(function(){return{forceAlign:function(){return f(!0)}}})),r.a.isValidElement(p)&&(p=r.a.cloneElement(p,{ref:W(p.ref,E)})),p},jn=r.a.forwardRef(Nn);jn.displayName="Align";var Hn=jn,qn=Hn,Dn=a("o0o1"),zn=a.n(Dn);function Cn(e,t,a,n,l,r,c){try{var o=e[r](c),i=o.value}catch(s){return void a(s)}o.done?t(i):Promise.resolve(i).then(n,l)}function On(e){return function(){var t=this,a=arguments;return new Promise((function(n,l){var r=e.apply(t,a);function c(e){Cn(r,n,l,c,o,"next",e)}function o(e){Cn(r,n,l,c,o,"throw",e)}c(void 0)}))}}var Rn=["measure","align",null,"motion"],Fn=function(e,t){var a=Object(l["useState"])(null),r=Object(n["a"])(a,2),c=r[0],o=r[1],i=Object(l["useRef"])();function s(){_.cancel(i.current)}function u(e){s(),i.current=_((function(){o((function(e){switch(c){case"align":return"motion";case"motion":return"stable"}return e})),null===e||void 0===e||e()}))}return Object(l["useEffect"])((function(){o("measure")}),[e]),Object(l["useEffect"])((function(){switch(c){case"measure":t();break}c&&(i.current=_(On(zn.a.mark((function e(){var t,a;return zn.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:t=Rn.indexOf(c),a=Rn[t+1],a&&-1!==t&&o(a);case 3:case"end":return e.stop()}}),e)})))))}),[c]),Object(l["useEffect"])((function(){return function(){s()}}),[]),[c,u]},Un=function(e){var t=l["useState"]({width:0,height:0}),a=Object(n["a"])(t,2),r=a[0],c=a[1];function o(e){c({width:e.offsetWidth,height:e.offsetHeight})}var i=l["useMemo"]((function(){var t={};if(e){var a=r.width,n=r.height;-1!==e.indexOf("height")&&n?t.height=n:-1!==e.indexOf("minHeight")&&n&&(t.minHeight=n),-1!==e.indexOf("width")&&a?t.width=a:-1!==e.indexOf("minWidth")&&a&&(t.minWidth=a)}return t}),[e,r]);return[i,o]},Mn=l["forwardRef"]((function(e,t){var a=e.visible,r=e.prefixCls,c=e.className,o=e.style,i=e.children,s=e.zIndex,u=e.stretch,d=e.destroyPopupOnHide,p=e.align,h=e.point,g=e.getRootDomNode,b=e.getClassNameFromAlign,f=e.onAlign,y=e.onMouseEnter,k=e.onMouseLeave,v=e.onMouseDown,w=e.onTouchStart,L=Object(l["useRef"])(),A=Object(l["useRef"])(),x=Object(l["useState"])(),_=Object(n["a"])(x,2),G=_[0],P=_[1],I=Un(u),S=Object(n["a"])(I,2),T=S[0],N=S[1];function j(){u&&N(g())}var H=Fn(a,j),q=Object(n["a"])(H,2),D=q[0],z=q[1],C=Object(l["useRef"])();function O(){return h||g}function R(){var e;null===(e=L.current)||void 0===e||e.forceAlign()}function F(e,t){if("align"===D){var a=b(t);P(a),G!==a?Promise.resolve().then((function(){R()})):z((function(){var e;null===(e=C.current)||void 0===e||e.call(C)})),null===f||void 0===f||f(e,t)}}var U=m({},ea(e));function M(){return new Promise((function(e){C.current=e}))}["onAppearEnd","onEnterEnd","onLeaveEnd"].forEach((function(e){var t=U[e];U[e]=function(e,a){return z(),null===t||void 0===t?void 0:t(e,a)}})),l["useEffect"]((function(){U.motionName||"motion"!==D||z()}),[U.motionName,D]),l["useImperativeHandle"](t,(function(){return{forceAlign:R,getElement:function(){return A.current}}}));var Y=m(m(m({},T),{},{zIndex:s},o),{},{opacity:"motion"!==D&&"stable"!==D&&a?0:void 0,pointerEvents:"stable"===D?void 0:"none"}),B=!0;!(null===p||void 0===p?void 0:p.points)||"align"!==D&&"stable"!==D||(B=!1);var W=i;return l["Children"].count(i)>1&&(W=l["createElement"]("div",{className:"".concat(r,"-content")},i)),l["createElement"](Xt,Object.assign({visible:a,ref:A,leavedClassName:"".concat(r,"-hidden")},U,{onAppearPrepare:M,onEnterPrepare:M,removeOnLeave:d}),(function(e,t){var a=e.className,n=e.style,o=E()(r,c,G,a);return l["createElement"](qn,{target:O(),key:"popup",ref:L,monitorWindowResize:!0,disabled:B,align:p,onAlign:F},l["createElement"]("div",{ref:t,className:o,onMouseEnter:y,onMouseLeave:k,onMouseDown:v,onTouchStart:w,style:m(m({},n),Y)},W))}))}));Mn.displayName="PopupInner";var Yn=Mn,Bn=l["forwardRef"]((function(e,t){var a=e.prefixCls,n=e.visible,r=e.zIndex,c=e.children,o=e.mobile;o=void 0===o?{}:o;var i=o.popupClassName,s=o.popupStyle,u=o.popupMotion,d=void 0===u?{}:u,p=o.popupRender,h=l["useRef"]();l["useImperativeHandle"](t,(function(){return{forceAlign:function(){},getElement:function(){return h.current}}}));var g=m({zIndex:r},s),b=c;return l["Children"].count(c)>1&&(b=l["createElement"]("div",{className:"".concat(a,"-content")},c)),p&&(b=p(b)),l["createElement"](Xt,Object.assign({visible:n,ref:h,removeOnLeave:!0},d),(function(e,t){var n=e.className,r=e.style,c=E()(a,i,n);return l["createElement"]("div",{ref:t,className:c,style:m(m({},r),g)},b)}))}));Bn.displayName="MobilePopupInner";var Wn=Bn,Kn=l["forwardRef"]((function(e,t){var a=e.visible,r=e.mobile,c=Object(s["a"])(e,["visible","mobile"]),o=Object(l["useState"])(a),i=Object(n["a"])(o,2),u=i[0],d=i[1],E=Object(l["useState"])(!1),p=Object(n["a"])(E,2),h=p[0],b=p[1],f=m(m({},c),{},{visible:u});Object(l["useEffect"])((function(){d(a),a&&r&&b(g())}),[a,!!r]);var y=h?l["createElement"](Wn,Object.assign({},f,{mobile:r,ref:t})):l["createElement"](Yn,Object.assign({},f,{ref:t}));return l["createElement"]("div",null,l["createElement"](ta,Object.assign({},f)),y)}));Kn.displayName="Popup";var Vn=Kn,Zn=l["createContext"](null),$n=Zn;function Qn(){}function Jn(){return""}function Xn(e){return e?e.ownerDocument:window.document}var el=["onClick","onMouseDown","onTouchStart","onMouseEnter","onMouseLeave","onFocus","onBlur","onContextMenu"];function tl(e){var t=function(t){T(n,t);var a=D(n);function n(e){var t,r;return G(this,n),t=a.call(this,e),t.popupRef=l["createRef"](),t.triggerRef=l["createRef"](),t.onMouseEnter=function(e){var a=t.props.mouseEnterDelay;t.fireEvents("onMouseEnter",e),t.delaySetPopupVisible(!0,a,a?null:e)},t.onMouseMove=function(e){t.fireEvents("onMouseMove",e),t.setPoint(e)},t.onMouseLeave=function(e){t.fireEvents("onMouseLeave",e),t.delaySetPopupVisible(!1,t.props.mouseLeaveDelay)},t.onPopupMouseEnter=function(){t.clearDelayTimer()},t.onPopupMouseLeave=function(e){var a;e.relatedTarget&&!e.relatedTarget.setTimeout&&Xe(null===(a=t.popupRef.current)||void 0===a?void 0:a.getElement(),e.relatedTarget)||t.delaySetPopupVisible(!1,t.props.mouseLeaveDelay)},t.onFocus=function(e){t.fireEvents("onFocus",e),t.clearDelayTimer(),t.isFocusToShow()&&(t.focusTime=Date.now(),t.delaySetPopupVisible(!0,t.props.focusDelay))},t.onMouseDown=function(e){t.fireEvents("onMouseDown",e),t.preClickTime=Date.now()},t.onTouchStart=function(e){t.fireEvents("onTouchStart",e),t.preTouchTime=Date.now()},t.onBlur=function(e){t.fireEvents("onBlur",e),t.clearDelayTimer(),t.isBlurToHide()&&t.delaySetPopupVisible(!1,t.props.blurDelay)},t.onContextMenu=function(e){e.preventDefault(),t.fireEvents("onContextMenu",e),t.setPopupVisible(!0,e)},t.onContextMenuClose=function(){t.isContextMenuToShow()&&t.close()},t.onClick=function(e){if(t.fireEvents("onClick",e),t.focusTime){var a;if(t.preClickTime&&t.preTouchTime?a=Math.min(t.preClickTime,t.preTouchTime):t.preClickTime?a=t.preClickTime:t.preTouchTime&&(a=t.preTouchTime),Math.abs(a-t.focusTime)<20)return;t.focusTime=0}t.preClickTime=0,t.preTouchTime=0,t.isClickToShow()&&(t.isClickToHide()||t.isBlurToHide())&&e&&e.preventDefault&&e.preventDefault();var n=!t.state.popupVisible;(t.isClickToHide()&&!n||n&&t.isClickToShow())&&t.setPopupVisible(!t.state.popupVisible,e)},t.onPopupMouseDown=function(){var e;(t.hasPopupMouseDown=!0,clearTimeout(t.mouseDownTimeout),t.mouseDownTimeout=window.setTimeout((function(){t.hasPopupMouseDown=!1}),0),t.context)&&(e=t.context).onPopupMouseDown.apply(e,arguments)},t.onDocumentClick=function(e){if(!t.props.mask||t.props.maskClosable){var a=e.target,n=t.getRootDomNode(),l=t.getPopupDomNode();Xe(n,a)||Xe(l,a)||t.hasPopupMouseDown||t.close()}},t.getRootDomNode=function(){var e=t.props.getTriggerDOMNode;if(e)return e(t.triggerRef.current);try{var a=O(t.triggerRef.current);if(a)return a}catch(n){}return C.a.findDOMNode(H(t))},t.getPopupClassNameFromAlign=function(e){var a=[],n=t.props,l=n.popupPlacement,r=n.builtinPlacements,c=n.prefixCls,o=n.alignPoint,i=n.getPopupClassNameFromAlign;return l&&r&&a.push(ct(r,c,e,o)),i&&a.push(i(e)),a.join(" ")},t.getComponent=function(){var e=t.props,a=e.prefixCls,n=e.destroyPopupOnHide,r=e.popupClassName,c=e.onPopupAlign,o=e.popupMotion,i=e.popupAnimation,s=e.popupTransitionName,u=e.popupStyle,m=e.mask,d=e.maskAnimation,E=e.maskTransitionName,p=e.maskMotion,h=e.zIndex,g=e.popup,b=e.stretch,f=e.alignPoint,y=e.mobile,k=t.state,v=k.popupVisible,w=k.point,L=t.getPopupAlign(),A={};return t.isMouseEnterToShow()&&(A.onMouseEnter=t.onPopupMouseEnter),t.isMouseLeaveToHide()&&(A.onMouseLeave=t.onPopupMouseLeave),A.onMouseDown=t.onPopupMouseDown,A.onTouchStart=t.onPopupMouseDown,l["createElement"](Vn,Object.assign({prefixCls:a,destroyPopupOnHide:n,visible:v,point:f&&w,className:r,align:L,onAlign:c,animation:i,getClassNameFromAlign:t.getPopupClassNameFromAlign},A,{stretch:b,getRootDomNode:t.getRootDomNode,style:u,mask:m,zIndex:h,transitionName:s,maskAnimation:d,maskTransitionName:E,maskMotion:p,ref:t.popupRef,motion:o,mobile:y}),"function"===typeof g?g():g)},t.attachParent=function(e){_.cancel(t.attachId);var a,n=t.props,l=n.getPopupContainer,r=n.getDocument,c=t.getRootDomNode();l?(c||0===l.length)&&(a=l(c)):a=r(t.getRootDomNode()).body,a?a.appendChild(e):t.attachId=_((function(){t.attachParent(e)}))},t.getContainer=function(){var e=t.props.getDocument,a=e(t.getRootDomNode()).createElement("div");return a.style.position="absolute",a.style.top="0",a.style.left="0",a.style.width="100%",t.attachParent(a),a},t.setPoint=function(e){var a=t.props.alignPoint;a&&e&&t.setState({point:{pageX:e.pageX,pageY:e.pageY}})},t.handlePortalUpdate=function(){t.state.prevPopupVisible!==t.state.popupVisible&&t.props.afterPopupVisibleChange(t.state.popupVisible)},r="popupVisible"in e?!!e.popupVisible:!!e.defaultPopupVisible,t.state={prevPopupVisible:r,popupVisible:r},el.forEach((function(e){t["fire".concat(e)]=function(a){t.fireEvents(e,a)}})),t}return I(n,[{key:"componentDidMount",value:function(){this.componentDidUpdate()}},{key:"componentDidUpdate",value:function(){var e,t=this.props,a=this.state;if(a.popupVisible)return this.clickOutsideHandler||!this.isClickToHide()&&!this.isContextMenuToShow()||(e=t.getDocument(this.getRootDomNode()),this.clickOutsideHandler=et(e,"mousedown",this.onDocumentClick)),this.touchOutsideHandler||(e=e||t.getDocument(this.getRootDomNode()),this.touchOutsideHandler=et(e,"touchstart",this.onDocumentClick)),!this.contextMenuOutsideHandler1&&this.isContextMenuToShow()&&(e=e||t.getDocument(this.getRootDomNode()),this.contextMenuOutsideHandler1=et(e,"scroll",this.onContextMenuClose)),void(!this.contextMenuOutsideHandler2&&this.isContextMenuToShow()&&(this.contextMenuOutsideHandler2=et(window,"blur",this.onContextMenuClose)));this.clearOutsideHandler()}},{key:"componentWillUnmount",value:function(){this.clearDelayTimer(),this.clearOutsideHandler(),clearTimeout(this.mouseDownTimeout),_.cancel(this.attachId)}},{key:"getPopupDomNode",value:function(){var e;return(null===(e=this.popupRef.current)||void 0===e?void 0:e.getElement())||null}},{key:"getPopupAlign",value:function(){var e=this.props,t=e.popupPlacement,a=e.popupAlign,n=e.builtinPlacements;return t&&n?rt(n,t,a):a}},{key:"setPopupVisible",value:function(e,t){var a=this.props.alignPoint,n=this.state.popupVisible;this.clearDelayTimer(),n!==e&&("popupVisible"in this.props||this.setState({popupVisible:e,prevPopupVisible:n}),this.props.onPopupVisibleChange(e)),a&&t&&e&&this.setPoint(t)}},{key:"delaySetPopupVisible",value:function(e,t,a){var n=this,l=1e3*t;if(this.clearDelayTimer(),l){var r=a?{pageX:a.pageX,pageY:a.pageY}:null;this.delayTimer=window.setTimeout((function(){n.setPopupVisible(e,r),n.clearDelayTimer()}),l)}else this.setPopupVisible(e,a)}},{key:"clearDelayTimer",value:function(){this.delayTimer&&(clearTimeout(this.delayTimer),this.delayTimer=null)}},{key:"clearOutsideHandler",value:function(){this.clickOutsideHandler&&(this.clickOutsideHandler.remove(),this.clickOutsideHandler=null),this.contextMenuOutsideHandler1&&(this.contextMenuOutsideHandler1.remove(),this.contextMenuOutsideHandler1=null),this.contextMenuOutsideHandler2&&(this.contextMenuOutsideHandler2.remove(),this.contextMenuOutsideHandler2=null),this.touchOutsideHandler&&(this.touchOutsideHandler.remove(),this.touchOutsideHandler=null)}},{key:"createTwoChains",value:function(e){var t=this.props.children.props,a=this.props;return t[e]&&a[e]?this["fire".concat(e)]:t[e]||a[e]}},{key:"isClickToShow",value:function(){var e=this.props,t=e.action,a=e.showAction;return-1!==t.indexOf("click")||-1!==a.indexOf("click")}},{key:"isContextMenuToShow",value:function(){var e=this.props,t=e.action,a=e.showAction;return-1!==t.indexOf("contextMenu")||-1!==a.indexOf("contextMenu")}},{key:"isClickToHide",value:function(){var e=this.props,t=e.action,a=e.hideAction;return-1!==t.indexOf("click")||-1!==a.indexOf("click")}},{key:"isMouseEnterToShow",value:function(){var e=this.props,t=e.action,a=e.showAction;return-1!==t.indexOf("hover")||-1!==a.indexOf("mouseEnter")}},{key:"isMouseLeaveToHide",value:function(){var e=this.props,t=e.action,a=e.hideAction;return-1!==t.indexOf("hover")||-1!==a.indexOf("mouseLeave")}},{key:"isFocusToShow",value:function(){var e=this.props,t=e.action,a=e.showAction;return-1!==t.indexOf("focus")||-1!==a.indexOf("focus")}},{key:"isBlurToHide",value:function(){var e=this.props,t=e.action,a=e.hideAction;return-1!==t.indexOf("focus")||-1!==a.indexOf("blur")}},{key:"forcePopupAlign",value:function(){var e;this.state.popupVisible&&(null===(e=this.popupRef.current)||void 0===e||e.forceAlign())}},{key:"fireEvents",value:function(e,t){var a=this.props.children.props[e];a&&a(t);var n=this.props[e];n&&n(t)}},{key:"close",value:function(){this.setPopupVisible(!1)}},{key:"render",value:function(){var t=this.state.popupVisible,a=this.props,n=a.children,r=a.forceRender,c=a.alignPoint,o=a.className,i=a.autoDestroy,s=l["Children"].only(n),u={key:"trigger"};this.isContextMenuToShow()?u.onContextMenu=this.onContextMenu:u.onContextMenu=this.createTwoChains("onContextMenu"),this.isClickToHide()||this.isClickToShow()?(u.onClick=this.onClick,u.onMouseDown=this.onMouseDown,u.onTouchStart=this.onTouchStart):(u.onClick=this.createTwoChains("onClick"),u.onMouseDown=this.createTwoChains("onMouseDown"),u.onTouchStart=this.createTwoChains("onTouchStart")),this.isMouseEnterToShow()?(u.onMouseEnter=this.onMouseEnter,c&&(u.onMouseMove=this.onMouseMove)):u.onMouseEnter=this.createTwoChains("onMouseEnter"),this.isMouseLeaveToHide()?u.onMouseLeave=this.onMouseLeave:u.onMouseLeave=this.createTwoChains("onMouseLeave"),this.isFocusToShow()||this.isBlurToHide()?(u.onFocus=this.onFocus,u.onBlur=this.onBlur):(u.onFocus=this.createTwoChains("onFocus"),u.onBlur=this.createTwoChains("onBlur"));var d=E()(s&&s.props&&s.props.className,o);d&&(u.className=d);var p=m({},u);K(s)&&(p.ref=W(this.triggerRef,s.ref));var h,g=l["cloneElement"](s,p);return(t||this.popupRef.current||r)&&(h=l["createElement"](e,{key:"portal",getContainer:this.getContainer,didUpdate:this.handlePortalUpdate},this.getComponent())),!t&&i&&(h=null),l["createElement"]($n.Provider,{value:{onPopupMouseDown:this.onPopupMouseDown}},g,h)}}],[{key:"getDerivedStateFromProps",value:function(e,t){var a=e.popupVisible,n={};return void 0!==a&&t.popupVisible!==a&&(n.popupVisible=a,n.prevPopupVisible=t.popupVisible),n}}]),n}(l["Component"]);return t.contextType=$n,t.defaultProps={prefixCls:"rc-trigger-popup",getPopupClassNameFromAlign:Jn,getDocument:Xn,onPopupVisibleChange:Qn,afterPopupVisibleChange:Qn,onPopupAlign:Qn,popupClassName:"",mouseEnterDelay:0,mouseLeaveDelay:.1,focusDelay:0,blurDelay:.15,popupStyle:{},destroyPopupOnHide:!1,popupAlign:{},defaultPopupVisible:!1,mask:!1,maskClosable:!0,action:[],showAction:[],hideAction:[],autoDestroy:!1},t}var al=tl(nt),nl={adjustX:1,adjustY:1},ll={topLeft:{points:["bl","tl"],overflow:nl,offset:[0,-7]},bottomLeft:{points:["tl","bl"],overflow:nl,offset:[0,7]},leftTop:{points:["tr","tl"],overflow:nl,offset:[-4,0]},rightTop:{points:["tl","tr"],overflow:nl,offset:[4,0]}},rl={topLeft:{points:["bl","tl"],overflow:nl,offset:[0,-7]},bottomLeft:{points:["tl","bl"],overflow:nl,offset:[0,7]},rightTop:{points:["tr","tl"],overflow:nl,offset:[-4,0]},leftTop:{points:["tl","tr"],overflow:nl,offset:[4,0]}},cl=0,ol={horizontal:"bottomLeft",vertical:"rightTop","vertical-left":"rightTop","vertical-right":"leftTop"},il=function(e,t,a){var n=We(t),l=e.getState();e.setState({defaultActiveFirst:m(m({},l.defaultActiveFirst),{},o({},n,a))})},sl=function(e){T(a,e);var t=D(a);function a(e){var n;G(this,a),n=t.call(this,e),n.onDestroy=function(e){n.props.onDestroy(e)},n.onKeyDown=function(e){var t=e.keyCode,a=n.menuInstance,l=n.props.store,r=n.getVisible();if(t===te.ENTER)return n.onTitleClick(e),il(l,n.props.eventKey,!0),!0;if(t===te.RIGHT)return r?a.onKeyDown(e):(n.triggerOpenChange(!0),il(l,n.props.eventKey,!0)),!0;if(t===te.LEFT){var c;if(!r)return;return c=a.onKeyDown(e),c||(n.triggerOpenChange(!1),c=!0),c}return!r||t!==te.UP&&t!==te.DOWN?void 0:a.onKeyDown(e)},n.onOpenChange=function(e){n.props.onOpenChange(e)},n.onPopupVisibleChange=function(e){n.triggerOpenChange(e,e?"mouseenter":"mouseleave")},n.onMouseEnter=function(e){var t=n.props,a=t.eventKey,l=t.onMouseEnter,r=t.store;il(r,n.props.eventKey,!1),l({key:a,domEvent:e})},n.onMouseLeave=function(e){var t=n.props,a=t.parentMenu,l=t.eventKey,r=t.onMouseLeave;a.subMenuInstance=H(n),r({key:l,domEvent:e})},n.onTitleMouseEnter=function(e){var t=n.props,a=t.eventKey,l=t.onItemHover,r=t.onTitleMouseEnter;l({key:a,hover:!0}),r({key:a,domEvent:e})},n.onTitleMouseLeave=function(e){var t=n.props,a=t.parentMenu,l=t.eventKey,r=t.onItemHover,c=t.onTitleMouseLeave;a.subMenuInstance=H(n),r({key:l,hover:!1}),c({key:l,domEvent:e})},n.onTitleClick=function(e){var t=H(n),a=t.props;a.onTitleClick({key:a.eventKey,domEvent:e}),"hover"!==a.triggerSubMenuAction&&(n.triggerOpenChange(!n.getVisible(),"click"),il(a.store,n.props.eventKey,!1))},n.onSubMenuClick=function(e){"function"===typeof n.props.onClick&&n.props.onClick(n.addKeyPath(e))},n.onSelect=function(e){n.props.onSelect(e)},n.onDeselect=function(e){n.props.onDeselect(e)},n.getPrefixCls=function(){return"".concat(n.props.rootPrefixCls,"-submenu")},n.getActiveClassName=function(){return"".concat(n.getPrefixCls(),"-active")},n.getDisabledClassName=function(){return"".concat(n.getPrefixCls(),"-disabled")},n.getSelectedClassName=function(){return"".concat(n.getPrefixCls(),"-selected")},n.getOpenClassName=function(){return"".concat(n.props.rootPrefixCls,"-submenu-open")},n.getVisible=function(){return n.state.isOpen},n.getMode=function(){return n.state.mode},n.saveMenuInstance=function(e){n.menuInstance=e},n.addKeyPath=function(e){return m(m({},e),{},{keyPath:(e.keyPath||[]).concat(n.props.eventKey)})},n.triggerOpenChange=function(e,t){var a=n.props.eventKey,l=function(){n.onOpenChange({key:a,item:H(n),trigger:t,open:e})};"mouseenter"===t?n.mouseenterTimeout=setTimeout((function(){l()}),0):l()},n.isChildrenSelected=function(){var e={find:!1};return Ve(n.props.children,n.props.selectedKeys,e),e.find},n.isInlineMode=function(){return"inline"===n.getMode()},n.adjustWidth=function(){if(n.subMenuTitle&&n.menuInstance){var e=z["findDOMNode"](n.menuInstance);e.offsetWidth>=n.subMenuTitle.offsetWidth||(e.style.minWidth="".concat(n.subMenuTitle.offsetWidth,"px"))}},n.saveSubMenuTitle=function(e){n.subMenuTitle=e},n.getBaseProps=function(){var e=H(n),t=e.props,a=n.getMode();return{mode:"horizontal"===a?"vertical":a,visible:n.getVisible(),level:t.level+1,inlineIndent:t.inlineIndent,focusable:!1,onClick:n.onSubMenuClick,onSelect:n.onSelect,onDeselect:n.onDeselect,onDestroy:n.onDestroy,selectedKeys:t.selectedKeys,eventKey:"".concat(t.eventKey,"-menu-"),openKeys:t.openKeys,motion:t.motion,onOpenChange:n.onOpenChange,subMenuOpenDelay:t.subMenuOpenDelay,parentMenu:H(n),subMenuCloseDelay:t.subMenuCloseDelay,forceSubMenuRender:t.forceSubMenuRender,triggerSubMenuAction:t.triggerSubMenuAction,builtinPlacements:t.builtinPlacements,defaultActiveFirst:t.store.getState().defaultActiveFirst[We(t.eventKey)],multiple:t.multiple,prefixCls:t.rootPrefixCls,id:n.internalMenuId,manualRef:n.saveMenuInstance,itemIcon:t.itemIcon,expandIcon:t.expandIcon,direction:t.direction}},n.getMotion=function(e,t){var a=H(n),l=a.haveRendered,r=n.props,c=r.motion,o=r.rootPrefixCls,i=m(m({},c),{},{leavedClassName:"".concat(o,"-hidden"),removeOnLeave:!1,motionAppear:l||!t||"inline"!==e});return i};var l=e.store,r=e.eventKey,c=l.getState(),o=c.defaultActiveFirst;n.isRootMenu=!1;var i=!1;return o&&(i=o[r]),il(l,r,i),n.state={mode:e.mode,isOpen:e.isOpen},n}return I(a,[{key:"componentDidMount",value:function(){this.componentDidUpdate()}},{key:"componentDidUpdate",value:function(){var e=this,t=this.props,a=t.mode,n=t.parentMenu,l=t.manualRef,r=t.isOpen,c=function(){e.setState({mode:a,isOpen:r})},o=r!==this.state.isOpen,i=a!==this.state.mode;(i||o)&&(_.cancel(this.updateStateRaf),i?this.updateStateRaf=_(c):c()),l&&l(this),"horizontal"===a&&(null===n||void 0===n?void 0:n.isRootMenu)&&r&&(this.minWidthTimeout=setTimeout((function(){return e.adjustWidth()}),0))}},{key:"componentWillUnmount",value:function(){var e=this.props,t=e.onDestroy,a=e.eventKey;t&&t(a),this.minWidthTimeout&&clearTimeout(this.minWidthTimeout),this.mouseenterTimeout&&clearTimeout(this.mouseenterTimeout),_.cancel(this.updateStateRaf)}},{key:"renderPopupMenu",value:function(e,t){var a=this.getBaseProps();return l["createElement"](Ll,Object.assign({},a,{id:this.internalMenuId,className:e,style:t}),this.props.children)}},{key:"renderChildren",value:function(){var e=this,t=this.getBaseProps(),a=t.mode,n=t.visible,r=t.forceSubMenuRender,c=t.direction,i=this.getMotion(a,n);if(this.haveRendered=!0,this.haveOpened=this.haveOpened||n||r,!this.haveOpened)return l["createElement"]("div",null);var s=E()("".concat(t.prefixCls,"-sub"),o({},"".concat(t.prefixCls,"-rtl"),"rtl"===c));return this.isInlineMode()?l["createElement"](Xt,Object.assign({visible:t.visible},i),(function(t){var a=t.className,n=t.style,l=E()(s,a);return e.renderPopupMenu(l,n)})):this.renderPopupMenu(s)}},{key:"render",value:function(){var e,t,a,n=m({},this.props),r=this.getVisible(),c=this.getPrefixCls(),i=this.isInlineMode(),s=this.getMode(),u=E()(c,"".concat(c,"-").concat(s),(e={},o(e,n.className,!!n.className),o(e,this.getOpenClassName(),r),o(e,this.getActiveClassName(),n.active||r&&!i),o(e,this.getDisabledClassName(),n.disabled),o(e,this.getSelectedClassName(),this.isChildrenSelected()),e));this.internalMenuId||(n.eventKey?this.internalMenuId="".concat(n.eventKey,"$Menu"):(cl+=1,this.internalMenuId="$__$".concat(cl,"$Menu")));var d={},p={},h={};n.disabled||(d={onMouseLeave:this.onMouseLeave,onMouseEnter:this.onMouseEnter},p={onClick:this.onTitleClick},h={onMouseEnter:this.onTitleMouseEnter,onMouseLeave:this.onTitleMouseLeave});var g={},b=n.direction,f="rtl"===b;i&&(f?g.paddingRight=n.inlineIndent*n.level:g.paddingLeft=n.inlineIndent*n.level);var y={};this.getVisible()&&(y={"aria-owns":this.internalMenuId});var k=null;"horizontal"!==s&&(k=this.props.expandIcon,"function"===typeof this.props.expandIcon&&(k=l["createElement"](this.props.expandIcon,m({},this.props))));var v=l["createElement"]("div",Object.assign({ref:this.saveSubMenuTitle,style:g,className:"".concat(c,"-title"),role:"button"},h,p,{"aria-expanded":r},y,{"aria-haspopup":"true",title:"string"===typeof n.title?n.title:void 0}),n.title,k||l["createElement"]("i",{className:"".concat(c,"-arrow")})),w=this.renderChildren(),L=(null===(t=n.parentMenu)||void 0===t?void 0:t.isRootMenu)?n.parentMenu.props.getPopupContainer:function(e){return e.parentNode},A=ol[s],x=n.popupOffset?{offset:n.popupOffset}:{},_=E()((a={},o(a,n.popupClassName,n.popupClassName&&!i),o(a,"".concat(c,"-rtl"),f),a)),G=n.disabled,P=n.triggerSubMenuAction,I=n.subMenuOpenDelay,S=n.forceSubMenuRender,T=n.subMenuCloseDelay,N=n.builtinPlacements;Ze.forEach((function(e){return delete n[e]})),delete n.onClick;var j=f?Object.assign({},rl,N):Object.assign({},ll,N);delete n.direction;var H=this.getBaseProps(),q=i?null:this.getMotion(H.mode,H.visible);return l["createElement"]("li",Object.assign({},n,d,{className:u,role:"menuitem"}),l["createElement"](al,{prefixCls:c,popupClassName:E()("".concat(c,"-popup"),_),getPopupContainer:L,builtinPlacements:j,popupPlacement:A,popupVisible:!i&&r,popupAlign:x,popup:i?null:w,action:G||i?[]:[P],mouseEnterDelay:I,mouseLeaveDelay:T,onPopupVisibleChange:this.onPopupVisibleChange,forceRender:S,popupMotion:q},v),i?w:null)}}]),a}(l["Component"]);sl.defaultProps={onMouseEnter:Ye,onMouseLeave:Ye,onTitleMouseEnter:Ye,onTitleMouseLeave:Ye,onTitleClick:Ye,manualRef:Ye,mode:"vertical",title:""};var ul=ye((function(e,t){var a=e.openKeys,n=e.activeKey,l=e.selectedKeys,r=t.eventKey,c=t.subMenuKey;return{isOpen:a.indexOf(r)>-1,active:n[c]===r,selectedKeys:l}}))(sl);ul.isSubMenu=!0;var ml=ul,dl="menuitem-overflowed",El=.5,pl=function(e){T(a,e);var t=D(a);function a(){var e;return G(this,a),e=t.apply(this,arguments),e.resizeObserver=null,e.mutationObserver=null,e.originalTotalWidth=0,e.overflowedItems=[],e.menuItemSizes=[],e.cancelFrameId=null,e.state={lastVisibleIndex:void 0},e.childRef=l["createRef"](),e.getMenuItemNodes=function(){var t=e.props.prefixCls,a=e.childRef.current;return a?[].slice.call(a.children).filter((function(e){return e.className.split(" ").indexOf("".concat(t,"-overflowed-submenu"))<0})):[]},e.getOverflowedSubMenuItem=function(t,a,n){var r=e.props,c=r.overflowedIndicator,o=r.level,i=r.mode,u=r.prefixCls,d=r.theme;if(1!==o||"horizontal"!==i)return null;var E=e.props.children[0],p=E.props,h=(p.children,p.title,p.style),g=Object(s["a"])(p,["children","title","style"]),b=m({},h),f="".concat(t,"-overflowed-indicator"),y="".concat(t,"-overflowed-indicator");0===a.length&&!0!==n?b=m(m({},b),{},{display:"none"}):n&&(b=m(m({},b),{},{visibility:"hidden",position:"absolute"}),f="".concat(f,"-placeholder"),y="".concat(y,"-placeholder"));var k=d?"".concat(u,"-").concat(d):"",v={};return Ze.forEach((function(e){void 0!==g[e]&&(v[e]=g[e])})),l["createElement"](ml,Object.assign({title:c,className:"".concat(u,"-overflowed-submenu"),popupClassName:k},v,{key:f,eventKey:y,disabled:!1,style:b}),a)},e.setChildrenWidthAndResize=function(){if("horizontal"===e.props.mode){var t=e.childRef.current;if(t){var a=t.children;if(a&&0!==a.length){var n=t.children[a.length-1];Qe(n,"display","inline-block");var l=e.getMenuItemNodes(),r=l.filter((function(e){return e.className.split(" ").indexOf(dl)>=0}));r.forEach((function(e){Qe(e,"display","inline-block")})),e.menuItemSizes=l.map((function(e){return $e(e,!0)})),r.forEach((function(e){Qe(e,"display","none")})),e.overflowedIndicatorWidth=$e(t.children[t.children.length-1],!0),e.originalTotalWidth=e.menuItemSizes.reduce((function(e,t){return e+t}),0),e.handleResize(),Qe(n,"display","none")}}}},e.handleResize=function(){if("horizontal"===e.props.mode){var t=e.childRef.current;if(t){var a=$e(t);e.overflowedItems=[];var n,l=0;e.originalTotalWidth>a+El&&(n=-1,e.menuItemSizes.forEach((function(t){l+=t,l+e.overflowedIndicatorWidth<=a&&(n+=1)}))),e.setState({lastVisibleIndex:n})}}},e}return I(a,[{key:"componentDidMount",value:function(){var e=this;if(this.setChildrenWidthAndResize(),1===this.props.level&&"horizontal"===this.props.mode){var t=this.childRef.current;if(!t)return;this.resizeObserver=new V["a"]((function(t){t.forEach((function(){var t=e.cancelFrameId;cancelAnimationFrame(t),e.cancelFrameId=requestAnimationFrame(e.setChildrenWidthAndResize)}))})),[].slice.call(t.children).concat(t).forEach((function(t){e.resizeObserver.observe(t)})),"undefined"!==typeof MutationObserver&&(this.mutationObserver=new MutationObserver((function(){e.resizeObserver.disconnect(),[].slice.call(t.children).concat(t).forEach((function(t){e.resizeObserver.observe(t)})),e.setChildrenWidthAndResize()})),this.mutationObserver.observe(t,{attributes:!1,childList:!0,subTree:!1}))}}},{key:"componentWillUnmount",value:function(){this.resizeObserver&&this.resizeObserver.disconnect(),this.mutationObserver&&this.mutationObserver.disconnect(),cancelAnimationFrame(this.cancelFrameId)}},{key:"renderChildren",value:function(e){var t=this,a=this.state.lastVisibleIndex;return(e||[]).reduce((function(n,r,c){var o=r;if("horizontal"===t.props.mode){var i=t.getOverflowedSubMenuItem(r.props.eventKey,[]);void 0!==a&&-1!==t.props.className.indexOf("".concat(t.props.prefixCls,"-root"))&&(c>a&&(o=l["cloneElement"](r,{style:{display:"none"},eventKey:"".concat(r.props.eventKey,"-hidden"),className:"".concat(dl)})),c===a+1&&(t.overflowedItems=e.slice(a+1).map((function(e){return l["cloneElement"](e,{key:e.props.eventKey,mode:"vertical-left"})})),i=t.getOverflowedSubMenuItem(r.props.eventKey,t.overflowedItems)));var s=[].concat(L(n),[i,o]);return c===e.length-1&&s.push(t.getOverflowedSubMenuItem(r.props.eventKey,[],!0)),s}return[].concat(L(n),[o])}),[])}},{key:"render",value:function(){var e=this.props,t=(e.visible,e.prefixCls,e.overflowedIndicator,e.mode,e.level,e.tag),a=e.children,n=(e.theme,Object(s["a"])(e,["visible","prefixCls","overflowedIndicator","mode","level","tag","children","theme"])),r=t;return l["createElement"](r,Object.assign({ref:this.childRef},n),this.renderChildren(a))}}]),a}(l["Component"]);pl.defaultProps={tag:"div",className:""};var hl=pl;function gl(e){return!e.length||e.every((function(e){return!!e.props.disabled}))}function bl(e,t,a){var n=e.getState();e.setState({activeKey:m(m({},n.activeKey),{},o({},t,a))})}function fl(e){return e.eventKey||"0-menu-"}function yl(e,t){var a,n=t,l=e.children,r=e.eventKey;if(n&&(Ke(l,(function(e,t){e&&e.props&&!e.props.disabled&&n===Be(e,r,t)&&(a=!0)})),a))return n;return n=null,e.defaultActiveFirst?(Ke(l,(function(e,t){n||!e||e.props.disabled||(n=Be(e,r,t))})),n):n}function kl(e){if(e){var t=this.instanceArray.indexOf(e);-1!==t?this.instanceArray[t]=e:this.instanceArray.push(e)}}var vl=function(e){T(a,e);var t=D(a);function a(e){var n;return G(this,a),n=t.call(this,e),n.onKeyDown=function(e,t){var a,l=e.keyCode;if(n.getFlatInstanceArray().forEach((function(t){t&&t.props.active&&t.onKeyDown&&(a=t.onKeyDown(e))})),a)return 1;var r=null;return l!==te.UP&&l!==te.DOWN||(r=n.step(l===te.UP?-1:1)),r?(e.preventDefault(),bl(n.props.store,fl(n.props),r.props.eventKey),"function"===typeof t&&t(r),1):void 0},n.onItemHover=function(e){var t=e.key,a=e.hover;bl(n.props.store,fl(n.props),a?t:null)},n.onDeselect=function(e){n.props.onDeselect(e)},n.onSelect=function(e){n.props.onSelect(e)},n.onClick=function(e){n.props.onClick(e)},n.onOpenChange=function(e){n.props.onOpenChange(e)},n.onDestroy=function(e){n.props.onDestroy(e)},n.getFlatInstanceArray=function(){return n.instanceArray},n.step=function(e){var t=n.getFlatInstanceArray(),a=n.props.store.getState().activeKey[fl(n.props)],l=t.length;if(!l)return null;e<0&&(t=t.concat().reverse());var r=-1;if(t.every((function(e,t){return!e||e.props.eventKey!==a||(r=t,!1)})),n.props.defaultActiveFirst||-1===r||!gl(t.slice(r,l-1))){var c=(r+1)%l,o=c;do{var i=t[o];if(i&&!i.props.disabled)return i;o=(o+1)%l}while(o!==c);return null}},n.renderCommonMenuItem=function(e,t,a){var r=n.props.store.getState(),c=H(n),o=c.props,i=Be(e,o.eventKey,t),s=e.props;if(!s||"string"===typeof e.type)return e;var u=i===r.activeKey,d=m(m({mode:s.mode||o.mode,level:o.level,inlineIndent:o.inlineIndent,renderMenuItem:n.renderMenuItem,rootPrefixCls:o.prefixCls,index:t,parentMenu:o.parentMenu,manualRef:s.disabled?void 0:xe(e.ref,kl.bind(H(n))),eventKey:i,active:!s.disabled&&u,multiple:o.multiple,onClick:function(e){(s.onClick||Ye)(e),n.onClick(e)},onItemHover:n.onItemHover,motion:o.motion,subMenuOpenDelay:o.subMenuOpenDelay,subMenuCloseDelay:o.subMenuCloseDelay,forceSubMenuRender:o.forceSubMenuRender,onOpenChange:n.onOpenChange,onDeselect:n.onDeselect,onSelect:n.onSelect,builtinPlacements:o.builtinPlacements,itemIcon:s.itemIcon||n.props.itemIcon,expandIcon:s.expandIcon||n.props.expandIcon},a),{},{direction:o.direction});return("inline"===o.mode||Je())&&(d.triggerSubMenuAction="click"),l["cloneElement"](e,m(m({},d),{},{key:i||t}))},n.renderMenuItem=function(e,t,a){if(!e)return null;var l=n.props.store.getState(),r={openKeys:l.openKeys,selectedKeys:l.selectedKeys,triggerSubMenuAction:n.props.triggerSubMenuAction,subMenuKey:a};return n.renderCommonMenuItem(e,t,r)},e.store.setState({activeKey:m(m({},e.store.getState().activeKey),{},o({},e.eventKey,yl(e,e.activeKey)))}),n.instanceArray=[],n}return I(a,[{key:"componentDidMount",value:function(){this.props.manualRef&&this.props.manualRef(this)}},{key:"shouldComponentUpdate",value:function(e){return this.props.visible||e.visible||this.props.className!==e.className||!de()(this.props.style,e.style)}},{key:"componentDidUpdate",value:function(e){var t=this.props,a="activeKey"in t?t.activeKey:t.store.getState().activeKey[fl(t)],n=yl(t,a);if(n!==a)bl(t.store,fl(t),n);else if("activeKey"in e){var l=yl(e,e.activeKey);n!==l&&bl(t.store,fl(t),n)}}},{key:"render",value:function(){var e=this,t=Object(c["a"])({},this.props);this.instanceArray=[];var a=E()(t.prefixCls,t.className,"".concat(t.prefixCls,"-").concat(t.mode)),n={className:a,role:t.role||"menu"};t.id&&(n.id=t.id),t.focusable&&(n.tabIndex=0,n.onKeyDown=this.onKeyDown);var r=t.prefixCls,o=t.eventKey,i=t.visible,s=t.level,u=t.mode,m=t.overflowedIndicator,d=t.theme;return Ze.forEach((function(e){return delete t[e]})),delete t.onClick,l["createElement"](hl,Object.assign({},t,{prefixCls:r,mode:u,tag:"ul",level:s,theme:d,visible:i,overflowedIndicator:m},n),h(t.children).map((function(t,a){return e.renderMenuItem(t,a,o||"0-menu-")})))}}]),a}(l["Component"]);vl.defaultProps={prefixCls:"rc-menu",className:"",mode:"vertical",level:1,inlineIndent:24,visible:!0,focusable:!0,style:{},manualRef:Ye};var wl=ye()(vl),Ll=wl;function Al(e,t,a){var n=e.prefixCls,l=e.motion,r=e.defaultMotions,c=void 0===r?{}:r,o=e.openAnimation,s=e.openTransitionName,u=t.switchingModeFromInline;if(l)return l;if("object"===i(o)&&o)Y(!1,"Object type of `openAnimation` is removed. Please use `motion` instead.");else if("string"===typeof o)return{motionName:"".concat(n,"-open-").concat(o)};if(s)return{motionName:s};var m=c[a];return m||(u?null:c.other)}var xl=function(e){T(a,e);var t=D(a);function a(e){var n;G(this,a),n=t.call(this,e),n.onSelect=function(e){var t=H(n),a=t.props;if(a.selectable){var l=n.store.getState(),r=l.selectedKeys,c=e.key;r=a.multiple?r.concat([c]):[c],"selectedKeys"in a||n.store.setState({selectedKeys:r}),a.onSelect(m(m({},e),{},{selectedKeys:r}))}},n.onClick=function(e){var t=n.getRealMenuMode(),a=H(n),l=a.store,r=a.props.onOpenChange;"inline"===t||"openKeys"in n.props||(l.setState({openKeys:[]}),r([])),n.props.onClick(e)},n.onKeyDown=function(e,t){n.innerMenu.getWrappedInstance().onKeyDown(e,t)},n.onOpenChange=function(e){var t=H(n),a=t.props,l=n.store.getState().openKeys.concat(),r=!1,c=function(e){var t=!1;if(e.open)t=-1===l.indexOf(e.key),t&&l.push(e.key);else{var a=l.indexOf(e.key);t=-1!==a,t&&l.splice(a,1)}r=r||t};Array.isArray(e)?e.forEach(c):c(e),r&&("openKeys"in n.props||n.store.setState({openKeys:l}),a.onOpenChange(l))},n.onDeselect=function(e){var t=H(n),a=t.props;if(a.selectable){var l=n.store.getState().selectedKeys.concat(),r=e.key,c=l.indexOf(r);-1!==c&&l.splice(c,1),"selectedKeys"in a||n.store.setState({selectedKeys:l}),a.onDeselect(m(m({},e),{},{selectedKeys:l}))}},n.onMouseEnter=function(e){n.restoreModeVerticalFromInline();var t=n.props.onMouseEnter;t&&t(e)},n.onTransitionEnd=function(e){var t="width"===e.propertyName&&e.target===e.currentTarget,a=e.target.className,l="[object SVGAnimatedString]"===Object.prototype.toString.call(a)?a.animVal:a,r="font-size"===e.propertyName&&l.indexOf("anticon")>=0;(t||r)&&n.restoreModeVerticalFromInline()},n.setInnerMenu=function(e){n.innerMenu=e},n.isRootMenu=!0;var l=e.defaultSelectedKeys,r=e.defaultOpenKeys;return"selectedKeys"in e&&(l=e.selectedKeys||[]),"openKeys"in e&&(r=e.openKeys||[]),n.store=ve({selectedKeys:l,openKeys:r,activeKey:{"0-menu-":yl(e,e.activeKey)}}),n.state={switchingModeFromInline:!1,prevProps:e,inlineOpenKeys:[],store:n.store},n}return I(a,[{key:"componentDidMount",value:function(){this.updateMiniStore(),this.updateMenuDisplay()}},{key:"componentDidUpdate",value:function(e){var t=this.props,a=t.siderCollapsed,n=t.inlineCollapsed,l=t.onOpenChange;(!e.inlineCollapsed&&n||!e.siderCollapsed&&a)&&l([]),this.updateMiniStore(),this.updateMenuDisplay()}},{key:"updateMenuDisplay",value:function(){var e=this.props.collapsedWidth,t=this.store,a=this.prevOpenKeys,n=this.getInlineCollapsed()&&(0===e||"0"===e||"0px"===e);n?(this.prevOpenKeys=t.getState().openKeys.concat(),this.store.setState({openKeys:[]})):a&&(this.store.setState({openKeys:a}),this.prevOpenKeys=null)}},{key:"getRealMenuMode",value:function(){var e=this.props.mode,t=this.state.switchingModeFromInline,a=this.getInlineCollapsed();return t&&a?"inline":a?"vertical":e}},{key:"getInlineCollapsed",value:function(){var e=this.props,t=e.inlineCollapsed,a=e.siderCollapsed;return void 0!==a?a:t}},{key:"restoreModeVerticalFromInline",value:function(){var e=this.state.switchingModeFromInline;e&&this.setState({switchingModeFromInline:!1})}},{key:"updateMiniStore",value:function(){"selectedKeys"in this.props&&this.store.setState({selectedKeys:this.props.selectedKeys||[]}),"openKeys"in this.props&&this.store.setState({openKeys:this.props.openKeys||[]})}},{key:"render",value:function(){var e=m({},Ae(this.props,["collapsedWidth","siderCollapsed","defaultMotions"])),t=this.getRealMenuMode();return e.className+=" ".concat(e.prefixCls,"-root"),"rtl"===e.direction&&(e.className+=" ".concat(e.prefixCls,"-rtl")),e=m(m({},e),{},{mode:t,onClick:this.onClick,onOpenChange:this.onOpenChange,onDeselect:this.onDeselect,onSelect:this.onSelect,onMouseEnter:this.onMouseEnter,onTransitionEnd:this.onTransitionEnd,parentMenu:this,motion:Al(this.props,this.state,t)}),delete e.openAnimation,delete e.openTransitionName,l["createElement"](ue,{store:this.store},l["createElement"](Ll,Object.assign({},e,{ref:this.setInnerMenu}),this.props.children))}}],[{key:"getDerivedStateFromProps",value:function(e,t){var a=t.prevProps,n=t.store,l=n.getState(),r={},c={prevProps:e};return"inline"===a.mode&&"inline"!==e.mode&&(c.switchingModeFromInline=!0),"openKeys"in e?r.openKeys=e.openKeys||[]:((e.inlineCollapsed&&!a.inlineCollapsed||e.siderCollapsed&&!a.siderCollapsed)&&(c.switchingModeFromInline=!0,c.inlineOpenKeys=l.openKeys,r.openKeys=[]),(!e.inlineCollapsed&&a.inlineCollapsed||!e.siderCollapsed&&a.siderCollapsed)&&(r.openKeys=t.inlineOpenKeys,c.inlineOpenKeys=[])),Object.keys(r).length&&n.setState(r),c}}]),a}(l["Component"]);xl.defaultProps={selectable:!0,onClick:Ye,onSelect:Ye,onOpenChange:Ye,onDeselect:Ye,defaultSelectedKeys:[],defaultOpenKeys:[],subMenuOpenDelay:.1,subMenuCloseDelay:.1,triggerSubMenuAction:"hover",prefixCls:"rc-menu",className:"",mode:"vertical",style:{},builtinPlacements:{},overflowedIndicator:l["createElement"]("span",null,"\xb7\xb7\xb7")};var _l=xl,Gl=function(e){T(a,e);var t=D(a);function a(){var e;return G(this,a),e=t.apply(this,arguments),e.onKeyDown=function(t){var a=t.keyCode;if(a===te.ENTER)return e.onClick(t),!0},e.onMouseLeave=function(t){var a=e.props,n=a.eventKey,l=a.onItemHover,r=a.onMouseLeave;l({key:n,hover:!1}),r({key:n,domEvent:t})},e.onMouseEnter=function(t){var a=e.props,n=a.eventKey,l=a.onItemHover,r=a.onMouseEnter;l({key:n,hover:!0}),r({key:n,domEvent:t})},e.onClick=function(t){var a=e.props,n=a.eventKey,l=a.multiple,r=a.onClick,c=a.onSelect,o=a.onDeselect,i=a.isSelected,s={key:n,keyPath:[n],item:H(e),domEvent:t};r(s),l?i?o(s):c(s):i||c(s)},e.saveNode=function(t){e.node=t},e}return I(a,[{key:"componentDidMount",value:function(){this.callRef()}},{key:"componentDidUpdate",value:function(){this.callRef()}},{key:"componentWillUnmount",value:function(){var e=this.props;e.onDestroy&&e.onDestroy(e.eventKey)}},{key:"getPrefixCls",value:function(){return"".concat(this.props.rootPrefixCls,"-item")}},{key:"getActiveClassName",value:function(){return"".concat(this.getPrefixCls(),"-active")}},{key:"getSelectedClassName",value:function(){return"".concat(this.getPrefixCls(),"-selected")}},{key:"getDisabledClassName",value:function(){return"".concat(this.getPrefixCls(),"-disabled")}},{key:"callRef",value:function(){this.props.manualRef&&this.props.manualRef(this)}},{key:"render",value:function(){var e,t=m({},this.props),a=E()(this.getPrefixCls(),t.className,(e={},o(e,this.getActiveClassName(),!t.disabled&&t.active),o(e,this.getSelectedClassName(),t.isSelected),o(e,this.getDisabledClassName(),t.disabled),e)),n=m(m({},t.attribute),{},{title:"string"===typeof t.title?t.title:void 0,className:a,role:t.role||"menuitem","aria-disabled":t.disabled});"option"===t.role?n=m(m({},n),{},{role:"option","aria-selected":t.isSelected}):null!==t.role&&"none"!==t.role||(n.role="none");var r={onClick:t.disabled?null:this.onClick,onMouseLeave:t.disabled?null:this.onMouseLeave,onMouseEnter:t.disabled?null:this.onMouseEnter},c=m({},t.style);"inline"===t.mode&&("rtl"===t.direction?c.paddingRight=t.inlineIndent*t.level:c.paddingLeft=t.inlineIndent*t.level),Ze.forEach((function(e){return delete t[e]})),delete t.direction;var i=this.props.itemIcon;return"function"===typeof this.props.itemIcon&&(i=l["createElement"](this.props.itemIcon,this.props)),l["createElement"]("li",Object.assign({},Ae(t,["onClick","onMouseEnter","onMouseLeave","onSelect"]),n,r,{style:c,ref:this.saveNode}),t.children,i)}}]),a}(l["Component"]);Gl.isMenuItem=!0,Gl.defaultProps={onSelect:Ye,onMouseEnter:Ye,onMouseLeave:Ye,manualRef:Ye};var Pl=ye((function(e,t){var a=e.activeKey,n=e.selectedKeys,l=t.eventKey,r=t.subMenuKey;return{active:a[r]===l,isSelected:-1!==n.indexOf(l)}}))(Gl),Il=Pl,Sl=function(e){T(a,e);var t=D(a);function a(){var e;return G(this,a),e=t.apply(this,arguments),e.renderInnerMenuItem=function(t){var a=e.props,n=a.renderMenuItem,l=a.index;return n(t,l,e.props.subMenuKey)},e}return I(a,[{key:"render",value:function(){var e=Object(c["a"])({},this.props),t=e.className,a=void 0===t?"":t,n=e.rootPrefixCls,r="".concat(n,"-item-group-title"),o="".concat(n,"-item-group-list"),i=e.title,s=e.children;return Ze.forEach((function(t){return delete e[t]})),delete e.onClick,delete e.direction,l["createElement"]("li",Object.assign({},e,{className:"".concat(a," ").concat(n,"-item-group")}),l["createElement"]("div",{className:r,title:"string"===typeof i?i:void 0},i),l["createElement"]("ul",{className:o},l["Children"].map(s,this.renderInnerMenuItem)))}}]),a}(l["Component"]);Sl.isMenuItemGroup=!0,Sl.defaultProps={disabled:!0};var Tl=function(e){var t=e.className,a=e.rootPrefixCls,n=e.style;return l["createElement"]("li",{className:"".concat(t," ").concat(a,"-item-divider"),style:n})};Tl.defaultProps={disabled:!0,className:"",style:{}};var Nl=_l,jl={adjustX:1,adjustY:1},Hl=[0,0],ql={topLeft:{points:["bl","tl"],overflow:jl,offset:[0,-4],targetOffset:Hl},topCenter:{points:["bc","tc"],overflow:jl,offset:[0,-4],targetOffset:Hl},topRight:{points:["br","tr"],overflow:jl,offset:[0,-4],targetOffset:Hl},bottomLeft:{points:["tl","bl"],overflow:jl,offset:[0,4],targetOffset:Hl},bottomCenter:{points:["tc","bc"],overflow:jl,offset:[0,4],targetOffset:Hl},bottomRight:{points:["tr","br"],overflow:jl,offset:[0,4],targetOffset:Hl}},Dl=ql;function zl(e,t){var a=e.arrow,r=void 0!==a&&a,c=e.prefixCls,i=void 0===c?"rc-dropdown":c,u=e.transitionName,m=e.animation,d=e.align,p=e.placement,h=void 0===p?"bottomLeft":p,g=e.placements,b=void 0===g?Dl:g,f=e.getPopupContainer,y=e.showAction,k=e.hideAction,v=e.overlayClassName,w=e.overlayStyle,L=e.visible,A=e.trigger,x=void 0===A?["hover"]:A,_=Object(s["a"])(e,["arrow","prefixCls","transitionName","animation","align","placement","placements","getPopupContainer","showAction","hideAction","overlayClassName","overlayStyle","visible","trigger"]),G=l["useState"](),P=Object(n["a"])(G,2),I=P[0],S=P[1],T="visible"in e?L:I,N=l["useRef"](null);l["useImperativeHandle"](t,(function(){return N.current}));var j=function(){var t,a=e.overlay;return t="function"===typeof a?a():a,t},H=function(t){var a=e.onOverlayClick,n=j().props;S(!1),a&&a(t),n.onClick&&n.onClick(t)},q=function(t){var a=e.onVisibleChange;S(t),"function"===typeof a&&a(t)},D=function(){var e=j(),t={prefixCls:"".concat(i,"-menu"),onClick:H};return"string"===typeof e.type&&delete t.prefixCls,l["createElement"](l["Fragment"],null,r&&l["createElement"]("div",{className:"".concat(i,"-arrow")}),l["cloneElement"](e,t))},z=function(){var t=e.overlay;return"function"===typeof t?D:D()},C=function(){var t=e.minOverlayWidthMatchTrigger,a=e.alignPoint;return"minOverlayWidthMatchTrigger"in e?t:!a},O=function(){var t=e.openClassName;return void 0!==t?t:"".concat(i,"-open")},R=function(){var t=e.children,a=t.props?t.props:{},n=E()(a.className,O());return I&&t?l["cloneElement"](t,{className:n}):t},F=k;return F||-1===x.indexOf("contextMenu")||(F=["click"]),l["createElement"](al,Object.assign({},_,{prefixCls:i,ref:N,popupClassName:E()(v,o({},"".concat(i,"-show-arrow"),r)),popupStyle:w,builtinPlacements:b,action:x,showAction:y,hideAction:F||[],popupPlacement:h,popupAlign:d,popupTransitionName:u,popupAnimation:m,popupVisible:T,stretch:C()?"minWidth":"",popup:z(),onPopupVisibleChange:q,getPopupContainer:f}),R())}var Cl=l["forwardRef"](zl),Ol=Cl;function Rl(e,t){var a=e.prefixCls,n=e.editable,r=e.locale,c=e.style;return n&&!1!==n.showAdd?l["createElement"]("button",{ref:t,type:"button",className:"".concat(a,"-nav-add"),style:c,"aria-label":(null===r||void 0===r?void 0:r.addAriaLabel)||"Add tab",onClick:function(e){n.onEdit("add",{event:e})}},n.addIcon||"+"):null}var Fl=l["forwardRef"](Rl);function Ul(e,t){var a=e.prefixCls,r=e.id,c=e.tabs,i=e.locale,s=e.mobile,u=e.moreIcon,m=void 0===u?"More":u,d=e.moreTransitionName,p=e.style,h=e.className,g=e.editable,b=e.tabBarGutter,f=e.rtl,y=e.onTabClick,k=Object(l["useState"])(!1),v=Object(n["a"])(k,2),w=v[0],L=v[1],A=Object(l["useState"])(null),x=Object(n["a"])(A,2),_=x[0],G=x[1],P="".concat(r,"-more-popup"),I="".concat(a,"-dropdown"),S=null!==_?"".concat(P,"-").concat(_):null,T=null===i||void 0===i?void 0:i.dropdownAriaLabel,N=l["createElement"](Nl,{onClick:function(e){var t=e.key,a=e.domEvent;y(t,a),L(!1)},id:P,tabIndex:-1,role:"listbox","aria-activedescendant":S,selectedKeys:[_],"aria-label":void 0!==T?T:"expanded dropdown"},c.map((function(e){return l["createElement"](Il,{key:e.key,id:"".concat(P,"-").concat(e.key),role:"option","aria-controls":r&&"".concat(r,"-panel-").concat(e.key),disabled:e.disabled},e.tab)})));function j(e){for(var t=c.filter((function(e){return!e.disabled})),a=t.findIndex((function(e){return e.key===_}))||0,n=t.length,l=0;l<n;l+=1){a=(a+e+n)%n;var r=t[a];if(!r.disabled)return void G(r.key)}}function H(e){var t=e.which;if(w)switch(t){case te.UP:j(-1),e.preventDefault();break;case te.DOWN:j(1),e.preventDefault();break;case te.ESC:L(!1);break;case te.SPACE:case te.ENTER:null!==_&&y(_,e);break}else[te.DOWN,te.SPACE,te.ENTER].includes(t)&&(L(!0),e.preventDefault())}Object(l["useEffect"])((function(){var e=document.getElementById(S);e&&e.scrollIntoView&&e.scrollIntoView(!1)}),[_]),Object(l["useEffect"])((function(){w||G(null)}),[w]);var q=o({},f?"marginLeft":"marginRight",b);c.length||(q.visibility="hidden",q.order=1);var D=E()(o({},"".concat(I,"-rtl"),f)),z=s?null:l["createElement"](Ol,{prefixCls:I,overlay:N,trigger:["hover"],visible:w,transitionName:d,onVisibleChange:L,overlayClassName:D,mouseEnterDelay:.1,mouseLeaveDelay:.1},l["createElement"]("button",{type:"button",className:"".concat(a,"-nav-more"),style:q,tabIndex:-1,"aria-hidden":"true","aria-haspopup":"listbox","aria-controls":P,id:"".concat(r,"-more"),"aria-expanded":w,onKeyDown:H},m));return l["createElement"]("div",{className:E()("".concat(a,"-nav-operations"),h),style:p,ref:t},z,l["createElement"](Fl,{prefixCls:a,locale:i,editable:g}))}var Ml=l["forwardRef"](Ul),Yl=Object(l["createContext"])(null),Bl=.1,Wl=.01,Kl=20,Vl=Math.pow(.995,Kl);function Zl(e,t){var a=Object(l["useState"])(),r=Object(n["a"])(a,2),c=r[0],o=r[1],i=Object(l["useState"])(0),s=Object(n["a"])(i,2),u=s[0],m=s[1],d=Object(l["useState"])(0),E=Object(n["a"])(d,2),p=E[0],h=E[1],g=Object(l["useState"])(),b=Object(n["a"])(g,2),f=b[0],y=b[1],k=Object(l["useRef"])();function v(e){var t=e.touches[0],a=t.screenX,n=t.screenY;o({x:a,y:n}),window.clearInterval(k.current)}function w(e){if(c){e.preventDefault();var a=e.touches[0],n=a.screenX,l=a.screenY;o({x:n,y:l});var r=n-c.x,i=l-c.y;t(r,i);var s=Date.now();m(s),h(s-u),y({x:r,y:i})}}function L(){if(c&&(o(null),y(null),f)){var e=f.x/p,a=f.y/p,n=Math.abs(e),l=Math.abs(a);if(Math.max(n,l)<Bl)return;var r=e,i=a;k.current=window.setInterval((function(){Math.abs(r)<Wl&&Math.abs(i)<Wl?window.clearInterval(k.current):(r*=Vl,i*=Vl,t(r*Kl,i*Kl))}),Kl)}}var A=Object(l["useRef"])();function x(e){var a=e.deltaX,n=e.deltaY,l=0,r=Math.abs(a),c=Math.abs(n);r===c?l="x"===A.current?a:n:r>c?(l=a,A.current="x"):(l=n,A.current="y"),t(-l,-l)&&e.preventDefault()}var _=Object(l["useRef"])(null);_.current={onTouchStart:v,onTouchMove:w,onTouchEnd:L,onWheel:x},l["useEffect"]((function(){function t(e){_.current.onTouchStart(e)}function a(e){_.current.onTouchMove(e)}function n(e){_.current.onTouchEnd(e)}function l(e){_.current.onWheel(e)}return document.addEventListener("touchmove",a,{passive:!1}),document.addEventListener("touchend",n,{passive:!1}),e.current.addEventListener("touchstart",t,{passive:!1}),e.current.addEventListener("wheel",l),function(){document.removeEventListener("touchmove",a),document.removeEventListener("touchend",n)}}),[])}function $l(){var e=Object(l["useRef"])(new Map);function t(t){return e.current.has(t)||e.current.set(t,l["createRef"]()),e.current.get(t)}function a(t){e.current["delete"](t)}return[t,a]}function Ql(e,t){var a=l["useRef"](e),r=l["useState"]({}),c=Object(n["a"])(r,2),o=c[1];function i(e){var n="function"===typeof e?e(a.current):e;n!==a.current&&t(n,a.current),a.current=n,o({})}return[a.current,i]}var Jl=function(e){var t,a=e.position,n=e.prefixCls,r=e.extra;if(!r)return null;var c=r;return"right"===a&&(t=c.right||!c.left&&c||null),"left"===a&&(t=c.left||null),t?l["createElement"]("div",{className:"".concat(n,"-extra-content")},t):null};function Xl(e,t){var a,r=l["useContext"](Yl),i=r.prefixCls,s=r.tabs,u=e.className,d=e.style,p=e.id,h=e.animated,g=e.activeKey,b=e.rtl,f=e.extra,y=e.editable,k=e.locale,v=e.tabPosition,w=e.tabBarGutter,A=e.children,x=e.onTabClick,G=e.onTabScroll,P=Object(l["useRef"])(),I=Object(l["useRef"])(),S=Object(l["useRef"])(),T=Object(l["useRef"])(),N=$l(),j=Object(n["a"])(N,2),H=j[0],q=j[1],D="top"===v||"bottom"===v,z=Ql(0,(function(e,t){D&&G&&G({direction:e>t?"left":"right"})})),C=Object(n["a"])(z,2),O=C[0],R=C[1],F=Ql(0,(function(e,t){!D&&G&&G({direction:e>t?"top":"bottom"})})),U=Object(n["a"])(F,2),M=U[0],Y=U[1],B=Object(l["useState"])(0),W=Object(n["a"])(B,2),K=W[0],V=W[1],Z=Object(l["useState"])(0),$=Object(n["a"])(Z,2),ee=$[0],te=$[1],ae=Object(l["useState"])(0),le=Object(n["a"])(ae,2),ce=le[0],ie=le[1],se=Object(l["useState"])(0),ue=Object(n["a"])(se,2),me=ue[0],de=ue[1],Ee=Object(l["useState"])(null),pe=Object(n["a"])(Ee,2),he=pe[0],ge=pe[1],be=Object(l["useState"])(null),fe=Object(n["a"])(be,2),ye=fe[0],ke=fe[1],ve=Object(l["useState"])(0),we=Object(n["a"])(ve,2),Le=we[0],Ae=we[1],xe=Object(l["useState"])(0),_e=Object(n["a"])(xe,2),Ge=_e[0],Pe=_e[1],Ie=X(new Map),Se=Object(n["a"])(Ie,2),Te=Se[0],Ne=Se[1],je=re(s,Te,K),He="".concat(i,"-nav-operations-hidden"),qe=0,De=0;function ze(e){return e<qe?qe:e>De?De:e}D?b?(qe=0,De=Math.max(0,K-he)):(qe=Math.min(0,he-K),De=0):(qe=Math.min(0,ye-ee),De=0);var Ce=Object(l["useRef"])(),Oe=Object(l["useState"])(),Re=Object(n["a"])(Oe,2),Fe=Re[0],Ue=Re[1];function Me(){Ue(Date.now())}function Ye(){window.clearTimeout(Ce.current)}function Be(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g,t=je.get(e)||{width:0,height:0,left:0,right:0,top:0};if(D){var a=O;b?t.right<O?a=t.right:t.right+t.width>O+he&&(a=t.right+t.width-he):t.left<-O?a=-t.left:t.left+t.width>-O+he&&(a=-(t.left+t.width-he)),Y(0),R(ze(a))}else{var n=M;t.top<-M?n=-t.top:t.top+t.height>-M+ye&&(n=-(t.top+t.height-ye)),R(0),Y(ze(n))}}Zl(P,(function(e,t){function a(e,t){e((function(e){var a=ze(e+t);return a}))}if(D){if(he>=K)return!1;a(R,e)}else{if(ye>=ee)return!1;a(Y,t)}return Ye(),Me(),!0})),Object(l["useEffect"])((function(){return Ye(),Fe&&(Ce.current=window.setTimeout((function(){Ue(0)}),100)),Ye}),[Fe]);var We=oe(je,{width:he,height:ye,left:O,top:M},{width:ce,height:me},{width:Le,height:Ge},m(m({},e),{},{tabs:s})),Ke=Object(n["a"])(We,2),Ve=Ke[0],Ze=Ke[1],$e=s.map((function(e){var t=e.key;return l["createElement"](ne,{id:p,prefixCls:i,key:t,rtl:b,tab:e,closable:e.closable,editable:y,active:t===g,tabPosition:v,tabBarGutter:w,renderWrapper:A,removeAriaLabel:null===k||void 0===k?void 0:k.removeAriaLabel,ref:H(t),onClick:function(e){x(t,e)},onRemove:function(){q(t)},onFocus:function(){Be(t),Me(),b||(P.current.scrollLeft=0),P.current.scrollTop=0}})})),Qe=J((function(){var e,t,a,n,l,r,c,o,i,u=(null===(e=P.current)||void 0===e?void 0:e.offsetWidth)||0,m=(null===(t=P.current)||void 0===t?void 0:t.offsetHeight)||0,d=(null===(a=T.current)||void 0===a?void 0:a.offsetWidth)||0,E=(null===(n=T.current)||void 0===n?void 0:n.offsetHeight)||0,p=(null===(l=S.current)||void 0===l?void 0:l.offsetWidth)||0,h=(null===(r=S.current)||void 0===r?void 0:r.offsetHeight)||0;ge(u),ke(m),Ae(d),Pe(E);var g=((null===(c=I.current)||void 0===c?void 0:c.offsetWidth)||0)-d,b=((null===(o=I.current)||void 0===o?void 0:o.offsetHeight)||0)-E;V(g),te(b);var f=null===(i=S.current)||void 0===i?void 0:i.className.includes(He);ie(g-(f?0:p)),de(b-(f?0:h)),Ne((function(){var e=new Map;return s.forEach((function(t){var a=t.key,n=H(a).current;n&&e.set(a,{width:n.offsetWidth,height:n.offsetHeight,left:n.offsetLeft,top:n.offsetTop})})),e}))})),Je=s.slice(0,Ve),Xe=s.slice(Ze+1),et=[].concat(L(Je),L(Xe)),tt=Object(l["useState"])(),at=Object(n["a"])(tt,2),nt=at[0],lt=at[1],rt=je.get(g),ct=Object(l["useRef"])();function ot(){_.cancel(ct.current)}Object(l["useEffect"])((function(){var e={};return rt&&(D?(b?e.right=rt.right:e.left=rt.left,e.width=rt.width):(e.top=rt.top,e.height=rt.height)),ot(),ct.current=_((function(){lt(e)})),ot}),[rt,D,b]),Object(l["useEffect"])((function(){Be()}),[g,rt,je,D]),Object(l["useEffect"])((function(){Qe()}),[b,w,g,s.map((function(e){return e.key})).join("_")]);var it,st,ut,mt,dt=!!et.length,Et="".concat(i,"-nav-wrap");return D?b?(st=O>0,it=O+he<K):(it=O<0,st=-O+he<K):(ut=M<0,mt=-M+ye<ee),l["createElement"]("div",{ref:t,role:"tablist",className:E()("".concat(i,"-nav"),u),style:d,onKeyDown:function(){Me()}},l["createElement"](Jl,{position:"left",extra:f,prefixCls:i}),l["createElement"](Q,{onResize:Qe},l["createElement"]("div",{className:E()(Et,(a={},o(a,"".concat(Et,"-ping-left"),it),o(a,"".concat(Et,"-ping-right"),st),o(a,"".concat(Et,"-ping-top"),ut),o(a,"".concat(Et,"-ping-bottom"),mt),a)),ref:P},l["createElement"](Q,{onResize:Qe},l["createElement"]("div",{ref:I,className:"".concat(i,"-nav-list"),style:{transform:"translate(".concat(O,"px, ").concat(M,"px)"),transition:Fe?"none":void 0}},$e,l["createElement"](Fl,{ref:T,prefixCls:i,locale:k,editable:y,style:{visibility:dt?"hidden":null}}),l["createElement"]("div",{className:E()("".concat(i,"-ink-bar"),o({},"".concat(i,"-ink-bar-animated"),h.inkBar)),style:nt}))))),l["createElement"](Ml,Object(c["a"])({},e,{ref:S,prefixCls:i,tabs:et,className:!dt&&He})),l["createElement"](Jl,{position:"right",extra:f,prefixCls:i}))}var er=l["forwardRef"](Xl);function tr(e){var t=e.id,a=e.activeKey,n=e.animated,r=e.tabPosition,c=e.rtl,i=e.destroyInactiveTabPane,s=l["useContext"](Yl),u=s.prefixCls,m=s.tabs,d=n.tabPane,p=m.findIndex((function(e){return e.key===a}));return l["createElement"]("div",{className:E()("".concat(u,"-content-holder"))},l["createElement"]("div",{className:E()("".concat(u,"-content"),"".concat(u,"-content-").concat(r),o({},"".concat(u,"-content-animated"),d)),style:p&&d?o({},c?"marginRight":"marginLeft","-".concat(p,"00%")):null},m.map((function(e){return l["cloneElement"](e.node,{key:e.key,prefixCls:u,tabKey:e.key,id:t,animated:d,active:e.key===a,destroyInactiveTabPane:i})}))))}function ar(e){var t=e.prefixCls,a=e.forceRender,r=e.className,c=e.style,o=e.id,i=e.active,s=e.animated,u=e.destroyInactiveTabPane,d=e.tabKey,p=e.children,h=l["useState"](a),g=Object(n["a"])(h,2),b=g[0],f=g[1];l["useEffect"]((function(){i?f(!0):u&&f(!1)}),[i,u]);var y={};return i||(s?(y.visibility="hidden",y.height=0,y.overflowY="hidden"):y.display="none"),l["createElement"]("div",{id:o&&"".concat(o,"-panel-").concat(d),role:"tabpanel",tabIndex:i?0:-1,"aria-labelledby":o&&"".concat(o,"-tab-").concat(d),"aria-hidden":!i,style:m(m({},y),c),className:E()("".concat(t,"-tabpane"),i&&"".concat(t,"-tabpane-active"),r)},(i||b||a)&&p)}var nr=0;function lr(e){return h(e).map((function(e){if(l["isValidElement"](e)){var t=void 0!==e.key?String(e.key):void 0;return m(m({key:t},e.props),{},{node:e})}return null})).filter((function(e){return e}))}function rr(e,t){var a,r,u=e.id,d=e.prefixCls,p=void 0===d?"rc-tabs":d,h=e.className,f=e.children,y=e.direction,k=e.activeKey,v=e.defaultActiveKey,w=e.editable,L=e.animated,A=void 0===L?{inkBar:!0,tabPane:!1}:L,x=e.tabPosition,_=void 0===x?"top":x,G=e.tabBarGutter,P=e.tabBarStyle,I=e.tabBarExtraContent,S=e.locale,T=e.moreIcon,N=e.moreTransitionName,j=e.destroyInactiveTabPane,H=e.renderTabBar,q=e.onChange,D=e.onTabClick,z=e.onTabScroll,C=Object(s["a"])(e,["id","prefixCls","className","children","direction","activeKey","defaultActiveKey","editable","animated","tabPosition","tabBarGutter","tabBarStyle","tabBarExtraContent","locale","moreIcon","moreTransitionName","destroyInactiveTabPane","renderTabBar","onChange","onTabClick","onTabScroll"]),O=lr(f),R="rtl"===y;r=!1===A?{inkBar:!1,tabPane:!1}:!0===A?{inkBar:!0,tabPane:!0}:m({inkBar:!0,tabPane:!1},"object"===i(A)?A:{});var F=Object(l["useState"])(!1),U=Object(n["a"])(F,2),M=U[0],Y=U[1];Object(l["useEffect"])((function(){Y(g())}),[]);var B=b((function(){var e;return null===(e=O[0])||void 0===e?void 0:e.key}),{value:k,defaultValue:v}),W=Object(n["a"])(B,2),K=W[0],V=W[1],Z=Object(l["useState"])((function(){return O.findIndex((function(e){return e.key===K}))})),$=Object(n["a"])(Z,2),Q=$[0],J=$[1];Object(l["useEffect"])((function(){var e,t=O.findIndex((function(e){return e.key===K}));-1===t&&(t=Math.max(0,Math.min(Q,O.length-1)),V(null===(e=O[t])||void 0===e?void 0:e.key));J(t)}),[O.map((function(e){return e.key})).join("_"),K,Q]);var X=b(null,{value:u}),ee=Object(n["a"])(X,2),te=ee[0],ae=ee[1],ne=_;function le(e,t){null===D||void 0===D||D(e,t),V(e),null===q||void 0===q||q(e)}M&&!["left","right"].includes(_)&&(ne="top"),Object(l["useEffect"])((function(){u||(ae("rc-tabs-".concat(nr)),nr+=1)}),[]);var re,ce={id:te,activeKey:K,animated:r,tabPosition:ne,rtl:R,mobile:M},oe=m(m({},ce),{},{editable:w,locale:S,moreIcon:T,moreTransitionName:N,tabBarGutter:G,onTabClick:le,onTabScroll:z,extra:I,style:P,panes:f});return re=H?H(oe,er):l["createElement"](er,oe),l["createElement"](Yl.Provider,{value:{tabs:O,prefixCls:p}},l["createElement"]("div",Object(c["a"])({ref:t,id:u,className:E()(p,"".concat(p,"-").concat(ne),(a={},o(a,"".concat(p,"-mobile"),M),o(a,"".concat(p,"-editable"),w),o(a,"".concat(p,"-rtl"),R),a),h)},C),re,l["createElement"](tr,Object(c["a"])({destroyInactiveTabPane:j},ce,{animated:r}))))}var cr=l["forwardRef"](rr);cr.TabPane=ar;var or=cr,ir=or,sr=a("MZF8"),ur=a("dEAq"),mr=a("ZpkN");a("TIsu");function dr(e,t){var a,n=null===(a=e.match(/\.(\w+)$/))||void 0===a?void 0:a[1];return n||(n=t.tsx?"tsx":"jsx"),n}var Er=e=>{var t,a,c,o=Object(l["useRef"])(),i=Object(l["useContext"])(ur["context"]),s=i.locale,u=Object(ur["useLocaleProps"])(s,e),m=Object(ur["useDemoUrl"])(u.identifier),d=u.demoUrl||m,E=(null===sr["a"]||void 0===sr["a"]?void 0:sr["a"].location.hash)==="#".concat(u.identifier),p=1===Object.keys(u.sources).length,h=Object(ur["useCodeSandbox"])((null===(t=u.hideActions)||void 0===t?void 0:t.includes("CSB"))?null:u),g=Object(ur["useRiddle"])((null===(a=u.hideActions)||void 0===a?void 0:a.includes("RIDDLE"))?null:u),b=Object(ur["useMotions"])(u.motions||[],o.current),f=Object(n["a"])(b,2),y=f[0],k=f[1],v=Object(ur["useCopy"])(),w=Object(n["a"])(v,2),L=w[0],A=w[1],x=Object(l["useState"])("_"),_=Object(n["a"])(x,2),G=_[0],P=_[1],I=Object(l["useState"])(dr(G,u.sources[G])),S=Object(n["a"])(I,2),T=S[0],N=S[1],j=Object(l["useState"])(Boolean(u.defaultShowCode)),H=Object(n["a"])(j,2),q=H[0],D=H[1],z=Object(l["useState"])(Math.random()),C=Object(n["a"])(z,2),O=C[0],R=C[1],F=u.sources[G][T]||u.sources[G].content,U=Object(ur["useTSPlaygroundUrl"])(s,F);function M(e){P(e),N(dr(e,u.sources[e]))}return r.a.createElement("div",{style:u.style,className:[u.className,"__dumi-default-previewer",E?"__dumi-default-previewer-target":""].filter(Boolean).join(" "),id:u.identifier,"data-debug":u.debug||void 0,"data-iframe":u.iframe||void 0},u.iframe&&r.a.createElement("div",{className:"__dumi-default-previewer-browser-nav"}),r.a.createElement("div",{ref:o,className:"__dumi-default-previewer-demo",style:{transform:u.transform?"translate(0, 0)":void 0,padding:u.compact||u.iframe&&!1!==u.compact?"0":void 0,background:u.background}},u.iframe?r.a.createElement("iframe",{title:"dumi-previewer",style:{height:String(u.iframe).replace(/(\d)$/,"$1px")},key:O,src:d}):u.children),r.a.createElement("div",{className:"__dumi-default-previewer-desc","data-title":u.title},u.title&&r.a.createElement(ur["AnchorLink"],{to:"#".concat(u.identifier)},u.title),u.description&&r.a.createElement("div",{dangerouslySetInnerHTML:{__html:u.description}})),r.a.createElement("div",{className:"__dumi-default-previewer-actions"},h&&r.a.createElement("button",{title:"Open demo on CodeSandbox.io",className:"__dumi-default-icon",role:"codesandbox",onClick:h}),g&&r.a.createElement("button",{title:"Open demo on Riddle",className:"__dumi-default-icon",role:"riddle",onClick:g}),u.motions&&r.a.createElement("button",{title:"Execute motions",className:"__dumi-default-icon",role:"motions",disabled:k,onClick:()=>y()}),u.iframe&&r.a.createElement("button",{title:"Reload demo iframe page",className:"__dumi-default-icon",role:"refresh",onClick:()=>R(Math.random())}),!(null===(c=u.hideActions)||void 0===c?void 0:c.includes("EXTERNAL"))&&r.a.createElement(ur["Link"],{target:"_blank",to:d},r.a.createElement("button",{title:"Open demo in new tab",className:"__dumi-default-icon",role:"open-demo",type:"button"})),r.a.createElement("span",null),r.a.createElement("button",{title:"Copy source code",className:"__dumi-default-icon",role:"copy","data-status":A,onClick:()=>L(F)}),"tsx"===T&&q&&r.a.createElement(ur["Link"],{target:"_blank",to:U},r.a.createElement("button",{title:"Get JSX via TypeScript Playground",className:"__dumi-default-icon",role:"change-tsx",type:"button"})),r.a.createElement("button",{title:"Toggle source code panel",className:"__dumi-default-icon".concat(q?" __dumi-default-btn-expand":""),role:"source",type:"button",onClick:()=>D(!q)})),q&&r.a.createElement("div",{className:"__dumi-default-previewer-source-wrapper"},!p&&r.a.createElement(ir,{className:"__dumi-default-previewer-source-tab",prefixCls:"__dumi-default-tabs",moreIcon:"\xb7\xb7\xb7",defaultActiveKey:G,onChange:M},Object.keys(u.sources).map((e=>r.a.createElement(ar,{tab:"_"===e?"index.".concat(dr(e,u.sources[e])):e,key:e})))),r.a.createElement("div",{className:"__dumi-default-previewer-source"},r.a.createElement(mr["a"],{code:F,lang:T,showCopy:!1}))))};t["default"]=Er},"1/Kc":function(e,t,a){"use strict";a.r(t);a("pNMO"),a("4Brf"),a("tjZM"),a("3I1R"),a("7+kd"),a("KhsS"),a("gOCb"),a("a57n"),a("GXvd"),a("I1Gw"),a("gXIK"),a("lEou"),a("ma9I"),a("piMb"),a("TeQF"),a("BIHw"),a("XbcX"),a("QWBl"),a("pjDv"),a("yq1k"),a("yXV3"),a("4mDm"),a("uqXc"),a("2B1R"),a("E9XD"),a("9N29"),a("Junv"),a("+2oP"),a("Rfxz"),a("ToJy"),a("94Xl"),a("pDQq"),a("QGkA"),a("c9m3"),a("rOQg"),a("7+zs"),a("tW5y"),a("DEfu"),a("Tskq"),a("Uydy"),a("QFcT"),a("I9xj"),a("w1rZ"),a("toAj"),a("zKZe"),a("Eqjn"),a("5xtp"),a("T63A"),a("wfmh"),a("27RR"),a("v5b1"),a("W/eh"),a("07d7"),a("B6y2"),a("5s+n"),a("p532"),a("pv2x"),a("SuFq"),a("ftMj"),a("U3f4"),a("JfAA"),a("YGK4"),a("inlA"),a("JTJg"),a("Rm1S"),a("hDyC"),a("TZCg"),a("UxlC"),a("hByQ"),a("EnZy"),a("LKBx"),a("SYor"),a("HiXI"),a("7ueG"),a("z8NH"),a("SpvK"),a("/Yfv"),a("iwkZ"),a("FDzp"),a("XMab"),a("ilnZ"),a("hMMk"),a("+ywr"),a("IL/d"),a("gvgV"),a("7JcK"),a("s5qe"),a("cvf0"),a("ENF9"),a("H+LF"),a("66V8"),a("iIM6"),a("2tOg"),a("gYJb"),a("EDT/"),a("j+VE"),a("wgYD"),a("R3/m"),a("l/vG"),a("0q/z"),a("n5pg"),a("zu+z"),a("ihrJ"),a("Q7Pz"),a("unQa"),a("Vnov"),a("nIe3"),a("CUyW"),a("qc1c"),a("5921"),a("VOz1"),a("Thag"),a("9D6x"),a("cOPa"),a("vdRX"),a("KrxN"),a("SL6q"),a("lehK"),a("eO0o"),a("NqR8"),a("w7s6"),a("uWhJ"),a("WPzJ"),a("NV22"),a("ny8l"),a("a5/B"),a("vzwy"),a("pevA"),a("8go2"),a("DrvE"),a("kCkZ"),a("++zV"),a("Y4C7"),a("ZsH6"),a("vZi8"),a("5r1n"),a("sQ9d"),a("bdeN"),a("AwgR"),a("qgGA"),a("49+q"),a("AVoK"),a("hcok"),a("dNT4"),a("3uUd"),a("tijO"),a("1kQv"),a("ZY7T"),a("C1JJ"),a("lmH4"),a("Co1j"),a("5JV0"),a("ctDJ"),a("8r4s"),a("JwUS"),a("qaHo"),a("Si40"),a("BGb9"),a("fN96"),a("UzNg"),a("DhMN"),a("rZ3M"),a("apDx"),a("4XaG"),a("6V7H"),a("cfiF"),a("702D"),a("TJ79"),a("Z4nd"),a("8STE"),a("spTT"),a("rb3L"),a("FZtP"),a("3bBZ"),a("Ew+T"),a("n5b4"),a("Kz25"),a("vxnP"),a("mGGf"),a("VWci");var n=a("VCU9"),l=(a("30TX"),a("ogwx")),r=a("LtsZ"),c=a("zlVK");function o(){var e=[{path:"/~demos/:uuid",layout:!1,wrappers:[a("KcUY").default],component:e=>{var t=a("q1tI"),n=a("F4QJ").default(e);switch(n.length){case 1:return n[0];case 2:return t.createElement(a("0zqC").default,n[0],n[1]);default:return"Demo ".concat(uuid," not found :(")}}},{path:"/_demos/:uuid",redirect:"/~demos/:uuid"},{__dumiRoot:!0,layout:!1,path:"/",wrappers:[a("KcUY").default,a("JBu9").default],routes:[{path:"/en-US",component:a("nWog").default,exact:!0,meta:{filePath:"docs/index.en-US.md",updatedTime:1611759433e3,title:"Octokit Rest API",order:1,hero:{title:"Octokit Rest API"},footer:'<div class="markdown"><p>Open-source MIT Licensed | Copyright \xa9 2021-present<br />Powered by <a href="https://github.com/xrkffgg" target="_blank">xrkffgg<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></div>',slugs:[{depth:2,value:"Document directory",heading:"document-directory"}],locale:"en-US"},title:"Octokit Rest API"},{path:"/",component:a("F+kV").default,exact:!0,meta:{filePath:"docs/index.md",updatedTime:1611759433e3,title:"Octokit Rest API",order:1,hero:{title:"Octokit Rest API"},footer:'<div class="markdown"><p>Open-source MIT Licensed | Copyright \xa9 2021-present<br />Powered by <a href="https://github.com/xrkffgg" target="_blank">xrkffgg<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></div>',slugs:[{depth:2,value:"\u6587\u6863\u76ee\u5f55",heading:"\u6587\u6863\u76ee\u5f55"}]},title:"Octokit Rest API"},{path:"/en-US/api/actions",component:a("T6Xf").default,exact:!0,meta:{filePath:"docs/api/actions.en-US.md",updatedTime:1611759433e3,title:"actions",slugs:[{depth:2,value:"Add selected repository to an organization secret",heading:"add-selected-repository-to-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters"},{depth:2,value:"Cancel a workflow run",heading:"cancel-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create or update an organization secret",heading:"create-or-update-an-organization-secret"},{depth:6,value:"Example encrypting a secret using Node.js",heading:"example-encrypting-a-secret-using-nodejs"},{depth:4,value:"Example encrypting a secret using Python",heading:"example-encrypting-a-secret-using-python"},{depth:4,value:"Example encrypting a secret using C#",heading:"example-encrypting-a-secret-using-c"},{depth:4,value:"Example encrypting a secret using Ruby",heading:"example-encrypting-a-secret-using-ruby"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create or update a repository secret",heading:"create-or-update-a-repository-secret"},{depth:6,value:"Example encrypting a secret using Node.js",heading:"example-encrypting-a-secret-using-nodejs-1"},{depth:4,value:"Example encrypting a secret using Python",heading:"example-encrypting-a-secret-using-python-1"},{depth:4,value:"Example encrypting a secret using C#",heading:"example-encrypting-a-secret-using-c-1"},{depth:4,value:"Example encrypting a secret using Ruby",heading:"example-encrypting-a-secret-using-ruby-1"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create a registration token for an organization",heading:"create-a-registration-token-for-an-organization"},{depth:6,value:"Example using registration token",heading:"example-using-registration-token"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a registration token for a repository",heading:"create-a-registration-token-for-a-repository"},{depth:6,value:"Example using registration token",heading:"example-using-registration-token-1"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a remove token for an organization",heading:"create-a-remove-token-for-an-organization"},{depth:6,value:"Example using remove token",heading:"example-using-remove-token"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Create a remove token for a repository",heading:"create-a-remove-token-for-a-repository"},{depth:6,value:"Example using remove token",heading:"example-using-remove-token-1"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Create a workflow dispatch event",heading:"create-a-workflow-dispatch-event"},{depth:6,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete an artifact",heading:"delete-an-artifact"},{depth:6,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Delete an organization secret",heading:"delete-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Delete a repository secret",heading:"delete-a-repository-secret"},{depth:6,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Delete a self-hosted runner from an organization",heading:"delete-a-self-hosted-runner-from-an-organization"},{depth:6,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Delete a self-hosted runner from a repository",heading:"delete-a-self-hosted-runner-from-a-repository"},{depth:6,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Delete a workflow run",heading:"delete-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Delete workflow run logs",heading:"delete-workflow-run-logs"},{depth:6,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Disable a selected repository for GitHub Actions in an organization",heading:"disable-a-selected-repository-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Disable a workflow",heading:"disable-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Download an artifact",heading:"download-an-artifact"},{depth:6,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Download job logs for a workflow run",heading:"download-job-logs-for-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Download workflow run logs",heading:"download-workflow-run-logs"},{depth:6,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Enable a selected repository for GitHub Actions in an organization",heading:"enable-a-selected-repository-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Enable a workflow",heading:"enable-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Get allowed actions for an organization",heading:"get-allowed-actions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Get allowed actions for a repository",heading:"get-allowed-actions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Get an artifact",heading:"get-an-artifact"},{depth:6,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Get GitHub Actions permissions for an organization",heading:"get-github-actions-permissions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Get GitHub Actions permissions for a repository",heading:"get-github-actions-permissions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Get a job for a workflow run",heading:"get-a-job-for-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Get an organization public key",heading:"get-an-organization-public-key"},{depth:6,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Get an organization secret",heading:"get-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Get GitHub Actions permissions for a repository",heading:"get-github-actions-permissions-for-a-repository-1"},{depth:6,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Get a repository public key",heading:"get-a-repository-public-key"},{depth:6,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Get a repository secret",heading:"get-a-repository-secret"},{depth:6,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Get a self-hosted runner for an organization",heading:"get-a-self-hosted-runner-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Get a self-hosted runner for a repository",heading:"get-a-self-hosted-runner-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Get a workflow",heading:"get-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Get a workflow run",heading:"get-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Get workflow run usage",heading:"get-workflow-run-usage"},{depth:6,value:"Parameters",heading:"parameters-38"},{depth:2,value:"Get workflow usage",heading:"get-workflow-usage"},{depth:6,value:"Parameters",heading:"parameters-39"},{depth:2,value:"List artifacts for a repository",heading:"list-artifacts-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-40"},{depth:2,value:"List jobs for a workflow run",heading:"list-jobs-for-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-41"},{depth:2,value:"List organization secrets",heading:"list-organization-secrets"},{depth:6,value:"Parameters",heading:"parameters-42"},{depth:2,value:"List repository secrets",heading:"list-repository-secrets"},{depth:6,value:"Parameters",heading:"parameters-43"},{depth:2,value:"List repository workflows",heading:"list-repository-workflows"},{depth:6,value:"Parameters",heading:"parameters-44"},{depth:2,value:"List runner applications for an organization",heading:"list-runner-applications-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-45"},{depth:2,value:"List runner applications for a repository",heading:"list-runner-applications-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-46"},{depth:2,value:"List selected repositories for an organization secret",heading:"list-selected-repositories-for-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-47"},{depth:2,value:"List selected repositories enabled for GitHub Actions in an organization",heading:"list-selected-repositories-enabled-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-48"},{depth:2,value:"List self-hosted runners for an organization",heading:"list-self-hosted-runners-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-49"},{depth:2,value:"List self-hosted runners for a repository",heading:"list-self-hosted-runners-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-50"},{depth:2,value:"List workflow run artifacts",heading:"list-workflow-run-artifacts"},{depth:6,value:"Parameters",heading:"parameters-51"},{depth:2,value:"List workflow runs",heading:"list-workflow-runs"},{depth:6,value:"Parameters",heading:"parameters-52"},{depth:2,value:"List workflow runs for a repository",heading:"list-workflow-runs-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-53"},{depth:2,value:"Remove selected repository from an organization secret",heading:"remove-selected-repository-from-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-54"},{depth:2,value:"Re-run a workflow",heading:"re-run-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-55"},{depth:2,value:"Set allowed actions for an organization",heading:"set-allowed-actions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-56"},{depth:2,value:"Set allowed actions for a repository",heading:"set-allowed-actions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-57"},{depth:2,value:"Set GitHub Actions permissions for an organization",heading:"set-github-actions-permissions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-58"},{depth:2,value:"Set GitHub Actions permissions for a repository",heading:"set-github-actions-permissions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-59"},{depth:2,value:"Set selected repositories for an organization secret",heading:"set-selected-repositories-for-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-60"},{depth:2,value:"Set selected repositories enabled for GitHub Actions in an organization",heading:"set-selected-repositories-enabled-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-61"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"actions"},{path:"/api/actions",component:a("C2L3").default,exact:!0,meta:{filePath:"docs/api/actions.md",updatedTime:1611759433e3,title:"actions",slugs:[{depth:2,value:"Add selected repository to an organization secret",heading:"add-selected-repository-to-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters"},{depth:2,value:"Cancel a workflow run",heading:"cancel-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create or update an organization secret",heading:"create-or-update-an-organization-secret"},{depth:6,value:"Example encrypting a secret using Node.js",heading:"example-encrypting-a-secret-using-nodejs"},{depth:4,value:"Example encrypting a secret using Python",heading:"example-encrypting-a-secret-using-python"},{depth:4,value:"Example encrypting a secret using C#",heading:"example-encrypting-a-secret-using-c"},{depth:4,value:"Example encrypting a secret using Ruby",heading:"example-encrypting-a-secret-using-ruby"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create or update a repository secret",heading:"create-or-update-a-repository-secret"},{depth:6,value:"Example encrypting a secret using Node.js",heading:"example-encrypting-a-secret-using-nodejs-1"},{depth:4,value:"Example encrypting a secret using Python",heading:"example-encrypting-a-secret-using-python-1"},{depth:4,value:"Example encrypting a secret using C#",heading:"example-encrypting-a-secret-using-c-1"},{depth:4,value:"Example encrypting a secret using Ruby",heading:"example-encrypting-a-secret-using-ruby-1"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create a registration token for an organization",heading:"create-a-registration-token-for-an-organization"},{depth:6,value:"Example using registration token",heading:"example-using-registration-token"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a registration token for a repository",heading:"create-a-registration-token-for-a-repository"},{depth:6,value:"Example using registration token",heading:"example-using-registration-token-1"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a remove token for an organization",heading:"create-a-remove-token-for-an-organization"},{depth:6,value:"Example using remove token",heading:"example-using-remove-token"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Create a remove token for a repository",heading:"create-a-remove-token-for-a-repository"},{depth:6,value:"Example using remove token",heading:"example-using-remove-token-1"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Create a workflow dispatch event",heading:"create-a-workflow-dispatch-event"},{depth:6,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete an artifact",heading:"delete-an-artifact"},{depth:6,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Delete an organization secret",heading:"delete-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Delete a repository secret",heading:"delete-a-repository-secret"},{depth:6,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Delete a self-hosted runner from an organization",heading:"delete-a-self-hosted-runner-from-an-organization"},{depth:6,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Delete a self-hosted runner from a repository",heading:"delete-a-self-hosted-runner-from-a-repository"},{depth:6,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Delete a workflow run",heading:"delete-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Delete workflow run logs",heading:"delete-workflow-run-logs"},{depth:6,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Disable a selected repository for GitHub Actions in an organization",heading:"disable-a-selected-repository-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Disable a workflow",heading:"disable-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Download an artifact",heading:"download-an-artifact"},{depth:6,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Download job logs for a workflow run",heading:"download-job-logs-for-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Download workflow run logs",heading:"download-workflow-run-logs"},{depth:6,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Enable a selected repository for GitHub Actions in an organization",heading:"enable-a-selected-repository-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Enable a workflow",heading:"enable-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Get allowed actions for an organization",heading:"get-allowed-actions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Get allowed actions for a repository",heading:"get-allowed-actions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Get an artifact",heading:"get-an-artifact"},{depth:6,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Get GitHub Actions permissions for an organization",heading:"get-github-actions-permissions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Get GitHub Actions permissions for a repository",heading:"get-github-actions-permissions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Get a job for a workflow run",heading:"get-a-job-for-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Get an organization public key",heading:"get-an-organization-public-key"},{depth:6,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Get an organization secret",heading:"get-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Get GitHub Actions permissions for a repository",heading:"get-github-actions-permissions-for-a-repository-1"},{depth:6,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Get a repository public key",heading:"get-a-repository-public-key"},{depth:6,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Get a repository secret",heading:"get-a-repository-secret"},{depth:6,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Get a self-hosted runner for an organization",heading:"get-a-self-hosted-runner-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Get a self-hosted runner for a repository",heading:"get-a-self-hosted-runner-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Get a workflow",heading:"get-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Get a workflow run",heading:"get-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Get workflow run usage",heading:"get-workflow-run-usage"},{depth:6,value:"Parameters",heading:"parameters-38"},{depth:2,value:"Get workflow usage",heading:"get-workflow-usage"},{depth:6,value:"Parameters",heading:"parameters-39"},{depth:2,value:"List artifacts for a repository",heading:"list-artifacts-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-40"},{depth:2,value:"List jobs for a workflow run",heading:"list-jobs-for-a-workflow-run"},{depth:6,value:"Parameters",heading:"parameters-41"},{depth:2,value:"List organization secrets",heading:"list-organization-secrets"},{depth:6,value:"Parameters",heading:"parameters-42"},{depth:2,value:"List repository secrets",heading:"list-repository-secrets"},{depth:6,value:"Parameters",heading:"parameters-43"},{depth:2,value:"List repository workflows",heading:"list-repository-workflows"},{depth:6,value:"Parameters",heading:"parameters-44"},{depth:2,value:"List runner applications for an organization",heading:"list-runner-applications-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-45"},{depth:2,value:"List runner applications for a repository",heading:"list-runner-applications-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-46"},{depth:2,value:"List selected repositories for an organization secret",heading:"list-selected-repositories-for-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-47"},{depth:2,value:"List selected repositories enabled for GitHub Actions in an organization",heading:"list-selected-repositories-enabled-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-48"},{depth:2,value:"List self-hosted runners for an organization",heading:"list-self-hosted-runners-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-49"},{depth:2,value:"List self-hosted runners for a repository",heading:"list-self-hosted-runners-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-50"},{depth:2,value:"List workflow run artifacts",heading:"list-workflow-run-artifacts"},{depth:6,value:"Parameters",heading:"parameters-51"},{depth:2,value:"List workflow runs",heading:"list-workflow-runs"},{depth:6,value:"Parameters",heading:"parameters-52"},{depth:2,value:"List workflow runs for a repository",heading:"list-workflow-runs-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-53"},{depth:2,value:"Remove selected repository from an organization secret",heading:"remove-selected-repository-from-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-54"},{depth:2,value:"Re-run a workflow",heading:"re-run-a-workflow"},{depth:6,value:"Parameters",heading:"parameters-55"},{depth:2,value:"Set allowed actions for an organization",heading:"set-allowed-actions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-56"},{depth:2,value:"Set allowed actions for a repository",heading:"set-allowed-actions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-57"},{depth:2,value:"Set GitHub Actions permissions for an organization",heading:"set-github-actions-permissions-for-an-organization"},{depth:6,value:"Parameters",heading:"parameters-58"},{depth:2,value:"Set GitHub Actions permissions for a repository",heading:"set-github-actions-permissions-for-a-repository"},{depth:6,value:"Parameters",heading:"parameters-59"},{depth:2,value:"Set selected repositories for an organization secret",heading:"set-selected-repositories-for-an-organization-secret"},{depth:6,value:"Parameters",heading:"parameters-60"},{depth:2,value:"Set selected repositories enabled for GitHub Actions in an organization",heading:"set-selected-repositories-enabled-for-github-actions-in-an-organization"},{depth:6,value:"Parameters",heading:"parameters-61"}],nav:{path:"/api",title:"Api"}},title:"actions"},{path:"/en-US/api/activity",component:a("3Zq6").default,exact:!0,meta:{filePath:"docs/api/activity.en-US.md",updatedTime:1611759433e3,title:"activity",slugs:[{depth:2,value:"Check if a repository is starred by the authenticated user",heading:"check-if-a-repository-is-starred-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Delete a repository subscription",heading:"delete-a-repository-subscription"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Delete a thread subscription",heading:"delete-a-thread-subscription"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get feeds",heading:"get-feeds"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Get a repository subscription",heading:"get-a-repository-subscription"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Get a thread",heading:"get-a-thread"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get a thread subscription for the authenticated user",heading:"get-a-thread-subscription-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"List events for the authenticated user",heading:"list-events-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"List notifications for the authenticated user",heading:"list-notifications-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"List organization events for the authenticated user",heading:"list-organization-events-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"List public events",heading:"list-public-events"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List public events for a network of repositories",heading:"list-public-events-for-a-network-of-repositories"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List public events for a user",heading:"list-public-events-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List public organization events",heading:"list-public-organization-events"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List events received by the authenticated user",heading:"list-events-received-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List public events received by a user",heading:"list-public-events-received-by-a-user"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List repository events",heading:"list-repository-events"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List repository notifications for the authenticated user",heading:"list-repository-notifications-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List repositories starred by the authenticated user",heading:"list-repositories-starred-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List repositories starred by a user",heading:"list-repositories-starred-by-a-user"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List repositories watched by a user",heading:"list-repositories-watched-by-a-user"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List stargazers",heading:"list-stargazers"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List repositories watched by the authenticated user",heading:"list-repositories-watched-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List watchers",heading:"list-watchers"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Mark notifications as read",heading:"mark-notifications-as-read"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Mark repository notifications as read",heading:"mark-repository-notifications-as-read"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Mark a thread as read",heading:"mark-a-thread-as-read"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Set a repository subscription",heading:"set-a-repository-subscription"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Set a thread subscription",heading:"set-a-thread-subscription"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Star a repository for the authenticated user",heading:"star-a-repository-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Unstar a repository for the authenticated user",heading:"unstar-a-repository-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-30"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"activity"},{path:"/api/activity",component:a("xG3u").default,exact:!0,meta:{filePath:"docs/api/activity.md",updatedTime:1611759433e3,title:"activity",slugs:[{depth:2,value:"Check if a repository is starred by the authenticated user",heading:"check-if-a-repository-is-starred-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Delete a repository subscription",heading:"delete-a-repository-subscription"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Delete a thread subscription",heading:"delete-a-thread-subscription"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get feeds",heading:"get-feeds"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Get a repository subscription",heading:"get-a-repository-subscription"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Get a thread",heading:"get-a-thread"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get a thread subscription for the authenticated user",heading:"get-a-thread-subscription-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"List events for the authenticated user",heading:"list-events-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"List notifications for the authenticated user",heading:"list-notifications-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"List organization events for the authenticated user",heading:"list-organization-events-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"List public events",heading:"list-public-events"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List public events for a network of repositories",heading:"list-public-events-for-a-network-of-repositories"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List public events for a user",heading:"list-public-events-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List public organization events",heading:"list-public-organization-events"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List events received by the authenticated user",heading:"list-events-received-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List public events received by a user",heading:"list-public-events-received-by-a-user"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List repository events",heading:"list-repository-events"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List repository notifications for the authenticated user",heading:"list-repository-notifications-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List repositories starred by the authenticated user",heading:"list-repositories-starred-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List repositories starred by a user",heading:"list-repositories-starred-by-a-user"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List repositories watched by a user",heading:"list-repositories-watched-by-a-user"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List stargazers",heading:"list-stargazers"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List repositories watched by the authenticated user",heading:"list-repositories-watched-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List watchers",heading:"list-watchers"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Mark notifications as read",heading:"mark-notifications-as-read"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Mark repository notifications as read",heading:"mark-repository-notifications-as-read"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Mark a thread as read",heading:"mark-a-thread-as-read"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Set a repository subscription",heading:"set-a-repository-subscription"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Set a thread subscription",heading:"set-a-thread-subscription"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Star a repository for the authenticated user",heading:"star-a-repository-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Unstar a repository for the authenticated user",heading:"unstar-a-repository-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-30"}],nav:{path:"/api",title:"Api"}},title:"activity"},{path:"/en-US/api/apps",component:a("0YE5").default,exact:!0,meta:{filePath:"docs/api/apps.en-US.md",updatedTime:1611759433e3,title:"apps",slugs:[{depth:2,value:"Add a repository to an app installation",heading:"add-a-repository-to-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Check a token",heading:"check-a-token"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a content attachment",heading:"create-a-content-attachment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a GitHub App from a manifest",heading:"create-a-github-app-from-a-manifest"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create an installation access token for an app",heading:"create-an-installation-access-token-for-an-app"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Delete an app authorization",heading:"delete-an-app-authorization"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete an installation for the authenticated app",heading:"delete-an-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an app token",heading:"delete-an-app-token"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get the authenticated app",heading:"get-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get an app",heading:"get-an-app"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get an installation for the authenticated app",heading:"get-an-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get an organization installation for the authenticated app",heading:"get-an-organization-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get a repository installation for the authenticated app",heading:"get-a-repository-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a subscription plan for an account",heading:"get-a-subscription-plan-for-an-account"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get a subscription plan for an account (stubbed)",heading:"get-a-subscription-plan-for-an-account-stubbed"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Get a user installation for the authenticated app",heading:"get-a-user-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Get a webhook configuration for an app",heading:"get-a-webhook-configuration-for-an-app"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List accounts for a plan",heading:"list-accounts-for-a-plan"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List accounts for a plan (stubbed)",heading:"list-accounts-for-a-plan-stubbed"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List repositories accessible to the user access token",heading:"list-repositories-accessible-to-the-user-access-token"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List installations for the authenticated app",heading:"list-installations-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List app installations accessible to the user access token",heading:"list-app-installations-accessible-to-the-user-access-token"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List plans",heading:"list-plans"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List plans (stubbed)",heading:"list-plans-stubbed"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List repositories accessible to the app installation",heading:"list-repositories-accessible-to-the-app-installation"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List subscriptions for the authenticated user",heading:"list-subscriptions-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List subscriptions for the authenticated user (stubbed)",heading:"list-subscriptions-for-the-authenticated-user-stubbed"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Remove a repository from an app installation",heading:"remove-a-repository-from-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Reset a token",heading:"reset-a-token"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Revoke an installation access token",heading:"revoke-an-installation-access-token"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Create a scoped access token",heading:"create-a-scoped-access-token"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Suspend an app installation",heading:"suspend-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Unsuspend an app installation",heading:"unsuspend-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Update a webhook configuration for an app",heading:"update-a-webhook-configuration-for-an-app"},{depth:4,value:"Parameters",heading:"parameters-33"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"apps"},{path:"/api/apps",component:a("fp/E").default,exact:!0,meta:{filePath:"docs/api/apps.md",updatedTime:1611759433e3,title:"apps",slugs:[{depth:2,value:"Add a repository to an app installation",heading:"add-a-repository-to-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Check a token",heading:"check-a-token"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a content attachment",heading:"create-a-content-attachment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a GitHub App from a manifest",heading:"create-a-github-app-from-a-manifest"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create an installation access token for an app",heading:"create-an-installation-access-token-for-an-app"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Delete an app authorization",heading:"delete-an-app-authorization"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete an installation for the authenticated app",heading:"delete-an-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an app token",heading:"delete-an-app-token"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get the authenticated app",heading:"get-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get an app",heading:"get-an-app"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get an installation for the authenticated app",heading:"get-an-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get an organization installation for the authenticated app",heading:"get-an-organization-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get a repository installation for the authenticated app",heading:"get-a-repository-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a subscription plan for an account",heading:"get-a-subscription-plan-for-an-account"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get a subscription plan for an account (stubbed)",heading:"get-a-subscription-plan-for-an-account-stubbed"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Get a user installation for the authenticated app",heading:"get-a-user-installation-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Get a webhook configuration for an app",heading:"get-a-webhook-configuration-for-an-app"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List accounts for a plan",heading:"list-accounts-for-a-plan"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List accounts for a plan (stubbed)",heading:"list-accounts-for-a-plan-stubbed"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List repositories accessible to the user access token",heading:"list-repositories-accessible-to-the-user-access-token"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List installations for the authenticated app",heading:"list-installations-for-the-authenticated-app"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List app installations accessible to the user access token",heading:"list-app-installations-accessible-to-the-user-access-token"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List plans",heading:"list-plans"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List plans (stubbed)",heading:"list-plans-stubbed"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List repositories accessible to the app installation",heading:"list-repositories-accessible-to-the-app-installation"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List subscriptions for the authenticated user",heading:"list-subscriptions-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List subscriptions for the authenticated user (stubbed)",heading:"list-subscriptions-for-the-authenticated-user-stubbed"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Remove a repository from an app installation",heading:"remove-a-repository-from-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Reset a token",heading:"reset-a-token"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Revoke an installation access token",heading:"revoke-an-installation-access-token"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Create a scoped access token",heading:"create-a-scoped-access-token"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Suspend an app installation",heading:"suspend-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Unsuspend an app installation",heading:"unsuspend-an-app-installation"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Update a webhook configuration for an app",heading:"update-a-webhook-configuration-for-an-app"},{depth:4,value:"Parameters",heading:"parameters-33"}],nav:{path:"/api",title:"Api"}},title:"apps"},{path:"/en-US/api/billing",component:a("x41O").default,exact:!0,meta:{filePath:"docs/api/billing.en-US.md",updatedTime:1611759433e3,title:"billing",slugs:[{depth:2,value:"Get GitHub Actions billing for an organization",heading:"get-github-actions-billing-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get GitHub Actions billing for a user",heading:"get-github-actions-billing-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get GitHub Packages billing for an organization",heading:"get-github-packages-billing-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get GitHub Packages billing for a user",heading:"get-github-packages-billing-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Get shared storage billing for an organization",heading:"get-shared-storage-billing-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Get shared storage billing for a user",heading:"get-shared-storage-billing-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-5"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"billing"},{path:"/api/billing",component:a("Q687").default,exact:!0,meta:{filePath:"docs/api/billing.md",updatedTime:1611759433e3,title:"billing",slugs:[{depth:2,value:"Get GitHub Actions billing for an organization",heading:"get-github-actions-billing-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get GitHub Actions billing for a user",heading:"get-github-actions-billing-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get GitHub Packages billing for an organization",heading:"get-github-packages-billing-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get GitHub Packages billing for a user",heading:"get-github-packages-billing-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Get shared storage billing for an organization",heading:"get-shared-storage-billing-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Get shared storage billing for a user",heading:"get-shared-storage-billing-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-5"}],nav:{path:"/api",title:"Api"}},title:"billing"},{path:"/en-US/api/checks",component:a("Zl2z").default,exact:!0,meta:{filePath:"docs/api/checks.en-US.md",updatedTime:1611759433e3,title:"checks",slugs:[{depth:2,value:"Create a check run",heading:"create-a-check-run"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a check suite",heading:"create-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get a check run",heading:"get-a-check-run"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get a check suite",heading:"get-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"List check run annotations",heading:"list-check-run-annotations"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"List check runs for a Git reference",heading:"list-check-runs-for-a-git-reference"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"List check runs in a check suite",heading:"list-check-runs-in-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"List check suites for a Git reference",heading:"list-check-suites-for-a-git-reference"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Rerequest a check suite",heading:"rerequest-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Update repository preferences for check suites",heading:"update-repository-preferences-for-check-suites"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Update a check run",heading:"update-a-check-run"},{depth:4,value:"Parameters",heading:"parameters-10"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"checks"},{path:"/api/checks",component:a("3/A/").default,exact:!0,meta:{filePath:"docs/api/checks.md",updatedTime:1611759433e3,title:"checks",slugs:[{depth:2,value:"Create a check run",heading:"create-a-check-run"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a check suite",heading:"create-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get a check run",heading:"get-a-check-run"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get a check suite",heading:"get-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"List check run annotations",heading:"list-check-run-annotations"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"List check runs for a Git reference",heading:"list-check-runs-for-a-git-reference"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"List check runs in a check suite",heading:"list-check-runs-in-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"List check suites for a Git reference",heading:"list-check-suites-for-a-git-reference"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Rerequest a check suite",heading:"rerequest-a-check-suite"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Update repository preferences for check suites",heading:"update-repository-preferences-for-check-suites"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Update a check run",heading:"update-a-check-run"},{depth:4,value:"Parameters",heading:"parameters-10"}],nav:{path:"/api",title:"Api"}},title:"checks"},{path:"/en-US/api/code-scanning",component:a("EW1x").default,exact:!0,meta:{filePath:"docs/api/codeScanning.en-US.md",updatedTime:1611759433e3,title:"codeScanning",slugs:[{depth:2,value:"Get a code scanning alert",heading:"get-a-code-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"List code scanning alerts for a repository",heading:"list-code-scanning-alerts-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"List recent code scanning analyses for a repository",heading:"list-recent-code-scanning-analyses-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Update a code scanning alert",heading:"update-a-code-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Upload a SARIF file",heading:"upload-a-sarif-file"},{depth:4,value:"Parameters",heading:"parameters-4"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"codeScanning"},{path:"/api/code-scanning",component:a("qScx").default,exact:!0,meta:{filePath:"docs/api/codeScanning.md",updatedTime:1611759433e3,title:"codeScanning",slugs:[{depth:2,value:"Get a code scanning alert",heading:"get-a-code-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"List code scanning alerts for a repository",heading:"list-code-scanning-alerts-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"List recent code scanning analyses for a repository",heading:"list-recent-code-scanning-analyses-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Update a code scanning alert",heading:"update-a-code-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Upload a SARIF file",heading:"upload-a-sarif-file"},{depth:4,value:"Parameters",heading:"parameters-4"}],nav:{path:"/api",title:"Api"}},title:"codeScanning"},{path:"/en-US/api/codes-of-conduct",component:a("Gqnk").default,exact:!0,meta:{filePath:"docs/api/codesOfConduct.en-US.md",updatedTime:1611759433e3,title:"codesOfConduct",slugs:[{depth:2,value:"Get all codes of conduct",heading:"get-all-codes-of-conduct"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get a code of conduct",heading:"get-a-code-of-conduct"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get the code of conduct for a repository",heading:"get-the-code-of-conduct-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-2"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"codesOfConduct"},{path:"/api/codes-of-conduct",component:a("t+32").default,exact:!0,meta:{filePath:"docs/api/codesOfConduct.md",updatedTime:1611759433e3,title:"codesOfConduct",slugs:[{depth:2,value:"Get all codes of conduct",heading:"get-all-codes-of-conduct"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get a code of conduct",heading:"get-a-code-of-conduct"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get the code of conduct for a repository",heading:"get-the-code-of-conduct-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-2"}],nav:{path:"/api",title:"Api"}},title:"codesOfConduct"},{path:"/en-US/api/emojis",component:a("xQzV").default,exact:!0,meta:{filePath:"docs/api/emojis.en-US.md",updatedTime:1611759433e3,title:"emojis",slugs:[{depth:2,value:"Get emojis",heading:"get-emojis"},{depth:4,value:"Parameters",heading:"parameters"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"emojis"},{path:"/api/emojis",component:a("2/Uw").default,exact:!0,meta:{filePath:"docs/api/emojis.md",updatedTime:1611759433e3,title:"emojis",slugs:[{depth:2,value:"Get emojis",heading:"get-emojis"},{depth:4,value:"Parameters",heading:"parameters"}],nav:{path:"/api",title:"Api"}},title:"emojis"},{path:"/en-US/api/enterprise-admin",component:a("JRIQ").default,exact:!0,meta:{filePath:"docs/api/enterpriseAdmin.en-US.md",updatedTime:1611759433e3,title:"enterpriseAdmin",slugs:[{depth:2,value:"Disable a selected organization for GitHub Actions in an enterprise",heading:"disable-a-selected-organization-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Enable a selected organization for GitHub Actions in an enterprise",heading:"enable-a-selected-organization-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get allowed actions for an enterprise",heading:"get-allowed-actions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get GitHub Actions permissions for an enterprise",heading:"get-github-actions-permissions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"List selected organizations enabled for GitHub Actions in an enterprise",heading:"list-selected-organizations-enabled-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Set allowed actions for an enterprise",heading:"set-allowed-actions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Set GitHub Actions permissions for an enterprise",heading:"set-github-actions-permissions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Set selected organizations enabled for GitHub Actions in an enterprise",heading:"set-selected-organizations-enabled-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-7"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"enterpriseAdmin"},{path:"/api/enterprise-admin",component:a("rMNw").default,exact:!0,meta:{filePath:"docs/api/enterpriseAdmin.md",updatedTime:1611759433e3,title:"enterpriseAdmin",slugs:[{depth:2,value:"Disable a selected organization for GitHub Actions in an enterprise",heading:"disable-a-selected-organization-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Enable a selected organization for GitHub Actions in an enterprise",heading:"enable-a-selected-organization-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get allowed actions for an enterprise",heading:"get-allowed-actions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Get GitHub Actions permissions for an enterprise",heading:"get-github-actions-permissions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"List selected organizations enabled for GitHub Actions in an enterprise",heading:"list-selected-organizations-enabled-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Set allowed actions for an enterprise",heading:"set-allowed-actions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Set GitHub Actions permissions for an enterprise",heading:"set-github-actions-permissions-for-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Set selected organizations enabled for GitHub Actions in an enterprise",heading:"set-selected-organizations-enabled-for-github-actions-in-an-enterprise"},{depth:4,value:"Parameters",heading:"parameters-7"}],nav:{path:"/api",title:"Api"}},title:"enterpriseAdmin"},{path:"/en-US/api/gists",component:a("sL9R").default,exact:!0,meta:{filePath:"docs/api/gists.en-US.md",updatedTime:1611759433e3,title:"gists",slugs:[{depth:2,value:"Check if a gist is starred",heading:"check-if-a-gist-is-starred"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a gist",heading:"create-a-gist"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a gist comment",heading:"create-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Delete a gist",heading:"delete-a-gist"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Delete a gist comment",heading:"delete-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Fork a gist",heading:"fork-a-gist"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get a gist",heading:"get-a-gist"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Get a gist comment",heading:"get-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a gist revision",heading:"get-a-gist-revision"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"List gists for the authenticated user",heading:"list-gists-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"List gist comments",heading:"list-gist-comments"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List gist commits",heading:"list-gist-commits"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List gist forks",heading:"list-gist-forks"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List gists for a user",heading:"list-gists-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List public gists",heading:"list-public-gists"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List starred gists",heading:"list-starred-gists"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Star a gist",heading:"star-a-gist"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Unstar a gist",heading:"unstar-a-gist"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Update a gist",heading:"update-a-gist"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Update a gist comment",heading:"update-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-19"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"gists"},{path:"/api/gists",component:a("rstq").default,exact:!0,meta:{filePath:"docs/api/gists.md",updatedTime:1611759433e3,title:"gists",slugs:[{depth:2,value:"Check if a gist is starred",heading:"check-if-a-gist-is-starred"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a gist",heading:"create-a-gist"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a gist comment",heading:"create-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Delete a gist",heading:"delete-a-gist"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Delete a gist comment",heading:"delete-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Fork a gist",heading:"fork-a-gist"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get a gist",heading:"get-a-gist"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Get a gist comment",heading:"get-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a gist revision",heading:"get-a-gist-revision"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"List gists for the authenticated user",heading:"list-gists-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"List gist comments",heading:"list-gist-comments"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List gist commits",heading:"list-gist-commits"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List gist forks",heading:"list-gist-forks"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List gists for a user",heading:"list-gists-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List public gists",heading:"list-public-gists"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List starred gists",heading:"list-starred-gists"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Star a gist",heading:"star-a-gist"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Unstar a gist",heading:"unstar-a-gist"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Update a gist",heading:"update-a-gist"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Update a gist comment",heading:"update-a-gist-comment"},{depth:4,value:"Parameters",heading:"parameters-19"}],nav:{path:"/api",title:"Api"}},title:"gists"},{path:"/en-US/api/git",component:a("Z/Fd").default,exact:!0,meta:{filePath:"docs/api/git.en-US.md",updatedTime:1611759433e3,title:"git",slugs:[{depth:2,value:"Create a blob",heading:"create-a-blob"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a commit",heading:"create-a-commit"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a reference",heading:"create-a-reference"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a tag object",heading:"create-a-tag-object"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create a tree",heading:"create-a-tree"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Delete a reference",heading:"delete-a-reference"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get a blob",heading:"get-a-blob"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Get a commit",heading:"get-a-commit"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a reference",heading:"get-a-reference"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get a tag",heading:"get-a-tag"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get a tree",heading:"get-a-tree"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List matching references",heading:"list-matching-references"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Update a reference",heading:"update-a-reference"},{depth:4,value:"Parameters",heading:"parameters-12"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"git"},{path:"/api/git",component:a("k4lj").default,exact:!0,meta:{filePath:"docs/api/git.md",updatedTime:1611759433e3,title:"git",slugs:[{depth:2,value:"Create a blob",heading:"create-a-blob"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a commit",heading:"create-a-commit"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a reference",heading:"create-a-reference"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a tag object",heading:"create-a-tag-object"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create a tree",heading:"create-a-tree"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Delete a reference",heading:"delete-a-reference"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get a blob",heading:"get-a-blob"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Get a commit",heading:"get-a-commit"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a reference",heading:"get-a-reference"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get a tag",heading:"get-a-tag"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get a tree",heading:"get-a-tree"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List matching references",heading:"list-matching-references"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Update a reference",heading:"update-a-reference"},{depth:4,value:"Parameters",heading:"parameters-12"}],nav:{path:"/api",title:"Api"}},title:"git"},{path:"/en-US/api/gitignore",component:a("GPIl").default,exact:!0,meta:{filePath:"docs/api/gitignore.en-US.md",updatedTime:1611759433e3,title:"gitignore",slugs:[{depth:2,value:"Get all gitignore templates",heading:"get-all-gitignore-templates"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get a gitignore template",heading:"get-a-gitignore-template"},{depth:4,value:"Parameters",heading:"parameters-1"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"gitignore"},{path:"/api/gitignore",component:a("cuJx").default,exact:!0,meta:{filePath:"docs/api/gitignore.md",updatedTime:1611759433e3,title:"gitignore",slugs:[{depth:2,value:"Get all gitignore templates",heading:"get-all-gitignore-templates"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get a gitignore template",heading:"get-a-gitignore-template"},{depth:4,value:"Parameters",heading:"parameters-1"}],nav:{path:"/api",title:"Api"}},title:"gitignore"},{path:"/en-US/api/interactions",component:a("zTfE").default,exact:!0,meta:{filePath:"docs/api/interactions.en-US.md",updatedTime:1611759433e3,title:"interactions",slugs:[{depth:2,value:"Get interaction restrictions for an organization",heading:"get-interaction-restrictions-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get interaction restrictions for a repository",heading:"get-interaction-restrictions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get interaction restrictions for your public repositories",heading:"get-interaction-restrictions-for-your-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Remove interaction restrictions for an organization",heading:"remove-interaction-restrictions-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Remove interaction restrictions for a repository",heading:"remove-interaction-restrictions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Remove interaction restrictions from your public repositories",heading:"remove-interaction-restrictions-from-your-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Set interaction restrictions for an organization",heading:"set-interaction-restrictions-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Set interaction restrictions for a repository",heading:"set-interaction-restrictions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Set interaction restrictions for your public repositories",heading:"set-interaction-restrictions-for-your-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-8"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"interactions"},{path:"/api/interactions",component:a("NuVC").default,exact:!0,meta:{filePath:"docs/api/interactions.md",updatedTime:1611759433e3,title:"interactions",slugs:[{depth:2,value:"Get interaction restrictions for an organization",heading:"get-interaction-restrictions-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get interaction restrictions for a repository",heading:"get-interaction-restrictions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get interaction restrictions for your public repositories",heading:"get-interaction-restrictions-for-your-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Remove interaction restrictions for an organization",heading:"remove-interaction-restrictions-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Remove interaction restrictions for a repository",heading:"remove-interaction-restrictions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Remove interaction restrictions from your public repositories",heading:"remove-interaction-restrictions-from-your-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Set interaction restrictions for an organization",heading:"set-interaction-restrictions-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Set interaction restrictions for a repository",heading:"set-interaction-restrictions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Set interaction restrictions for your public repositories",heading:"set-interaction-restrictions-for-your-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-8"}],nav:{path:"/api",title:"Api"}},title:"interactions"},{path:"/en-US/api/issues",component:a("NN28").default,exact:!0,meta:{filePath:"docs/api/issues.en-US.md",updatedTime:1611759433e3,title:"issues",slugs:[{depth:2,value:"Add assignees to an issue",heading:"add-assignees-to-an-issue"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Add labels to an issue",heading:"add-labels-to-an-issue"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Check if a user can be assigned",heading:"check-if-a-user-can-be-assigned"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create an issue",heading:"create-an-issue"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create an issue comment",heading:"create-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a label",heading:"create-a-label"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a milestone",heading:"create-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an issue comment",heading:"delete-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a label",heading:"delete-a-label"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a milestone",heading:"delete-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get an issue",heading:"get-an-issue"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get an issue comment",heading:"get-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get an issue event",heading:"get-an-issue-event"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a label",heading:"get-a-label"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get a milestone",heading:"get-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List issues assigned to the authenticated user",heading:"list-issues-assigned-to-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List assignees",heading:"list-assignees"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List issue comments",heading:"list-issue-comments"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List issue comments for a repository",heading:"list-issue-comments-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List issue events",heading:"list-issue-events"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List issue events for a repository",heading:"list-issue-events-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List timeline events for an issue",heading:"list-timeline-events-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List user account issues assigned to the authenticated user",heading:"list-user-account-issues-assigned-to-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List organization issues assigned to the authenticated user",heading:"list-organization-issues-assigned-to-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List repository issues",heading:"list-repository-issues"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List labels for issues in a milestone",heading:"list-labels-for-issues-in-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List labels for a repository",heading:"list-labels-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"List labels for an issue",heading:"list-labels-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"List milestones",heading:"list-milestones"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Lock an issue",heading:"lock-an-issue"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Remove all labels from an issue",heading:"remove-all-labels-from-an-issue"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Remove assignees from an issue",heading:"remove-assignees-from-an-issue"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Remove a label from an issue",heading:"remove-a-label-from-an-issue"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Set labels for an issue",heading:"set-labels-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Unlock an issue",heading:"unlock-an-issue"},{depth:4,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Update an issue",heading:"update-an-issue"},{depth:4,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Update an issue comment",heading:"update-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Update a label",heading:"update-a-label"},{depth:4,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Update a milestone",heading:"update-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-38"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"issues"},{path:"/api/issues",component:a("NbvT").default,exact:!0,meta:{filePath:"docs/api/issues.md",updatedTime:1611759433e3,title:"issues",slugs:[{depth:2,value:"Add assignees to an issue",heading:"add-assignees-to-an-issue"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Add labels to an issue",heading:"add-labels-to-an-issue"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Check if a user can be assigned",heading:"check-if-a-user-can-be-assigned"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create an issue",heading:"create-an-issue"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create an issue comment",heading:"create-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a label",heading:"create-a-label"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a milestone",heading:"create-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an issue comment",heading:"delete-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a label",heading:"delete-a-label"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a milestone",heading:"delete-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get an issue",heading:"get-an-issue"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get an issue comment",heading:"get-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get an issue event",heading:"get-an-issue-event"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a label",heading:"get-a-label"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get a milestone",heading:"get-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List issues assigned to the authenticated user",heading:"list-issues-assigned-to-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List assignees",heading:"list-assignees"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List issue comments",heading:"list-issue-comments"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List issue comments for a repository",heading:"list-issue-comments-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List issue events",heading:"list-issue-events"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List issue events for a repository",heading:"list-issue-events-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List timeline events for an issue",heading:"list-timeline-events-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List user account issues assigned to the authenticated user",heading:"list-user-account-issues-assigned-to-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List organization issues assigned to the authenticated user",heading:"list-organization-issues-assigned-to-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List repository issues",heading:"list-repository-issues"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List labels for issues in a milestone",heading:"list-labels-for-issues-in-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List labels for a repository",heading:"list-labels-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"List labels for an issue",heading:"list-labels-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"List milestones",heading:"list-milestones"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Lock an issue",heading:"lock-an-issue"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Remove all labels from an issue",heading:"remove-all-labels-from-an-issue"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Remove assignees from an issue",heading:"remove-assignees-from-an-issue"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Remove a label from an issue",heading:"remove-a-label-from-an-issue"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Set labels for an issue",heading:"set-labels-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Unlock an issue",heading:"unlock-an-issue"},{depth:4,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Update an issue",heading:"update-an-issue"},{depth:4,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Update an issue comment",heading:"update-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Update a label",heading:"update-a-label"},{depth:4,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Update a milestone",heading:"update-a-milestone"},{depth:4,value:"Parameters",heading:"parameters-38"}],nav:{path:"/api",title:"Api"}},title:"issues"},{path:"/en-US/api/licenses",component:a("43L/").default,exact:!0,meta:{filePath:"docs/api/licenses.en-US.md",updatedTime:1611759433e3,title:"licenses",slugs:[{depth:2,value:"Get a license",heading:"get-a-license"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get all commonly used licenses",heading:"get-all-commonly-used-licenses"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get the license for a repository",heading:"get-the-license-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-2"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"licenses"},{path:"/api/licenses",component:a("H6r7").default,exact:!0,meta:{filePath:"docs/api/licenses.md",updatedTime:1611759433e3,title:"licenses",slugs:[{depth:2,value:"Get a license",heading:"get-a-license"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get all commonly used licenses",heading:"get-all-commonly-used-licenses"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get the license for a repository",heading:"get-the-license-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-2"}],nav:{path:"/api",title:"Api"}},title:"licenses"},{path:"/en-US/api/markdown",component:a("eK+M").default,exact:!0,meta:{filePath:"docs/api/markdown.en-US.md",updatedTime:1611759433e3,title:"markdown",slugs:[{depth:2,value:"Render a Markdown document",heading:"render-a-markdown-document"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Render a Markdown document in raw mode",heading:"render-a-markdown-document-in-raw-mode"},{depth:4,value:"Parameters",heading:"parameters-1"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"markdown"},{path:"/api/markdown",component:a("S5Sd").default,exact:!0,meta:{filePath:"docs/api/markdown.md",updatedTime:1611759433e3,title:"markdown",slugs:[{depth:2,value:"Render a Markdown document",heading:"render-a-markdown-document"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Render a Markdown document in raw mode",heading:"render-a-markdown-document-in-raw-mode"},{depth:4,value:"Parameters",heading:"parameters-1"}],nav:{path:"/api",title:"Api"}},title:"markdown"},{path:"/en-US/api/meta",component:a("bian").default,exact:!0,meta:{filePath:"docs/api/meta.en-US.md",updatedTime:1611759433e3,title:"meta",slugs:[{depth:2,value:"Get GitHub meta information",heading:"get-github-meta-information"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get Octocat",heading:"get-octocat"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get the Zen of GitHub",heading:"get-the-zen-of-github"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"GitHub API Root",heading:"github-api-root"},{depth:4,value:"Parameters",heading:"parameters-3"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"meta"},{path:"/api/meta",component:a("FDcn").default,exact:!0,meta:{filePath:"docs/api/meta.md",updatedTime:1611759433e3,title:"meta",slugs:[{depth:2,value:"Get GitHub meta information",heading:"get-github-meta-information"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Get Octocat",heading:"get-octocat"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Get the Zen of GitHub",heading:"get-the-zen-of-github"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"GitHub API Root",heading:"github-api-root"},{depth:4,value:"Parameters",heading:"parameters-3"}],nav:{path:"/api",title:"Api"}},title:"meta"},{path:"/en-US/api/migrations",component:a("pm8L").default,exact:!0,meta:{filePath:"docs/api/migrations.en-US.md",updatedTime:1611759433e3,title:"migrations",slugs:[{depth:2,value:"Cancel an import",heading:"cancel-an-import"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Delete a user migration archive",heading:"delete-a-user-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Delete an organization migration archive",heading:"delete-an-organization-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Download an organization migration archive",heading:"download-an-organization-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Download a user migration archive",heading:"download-a-user-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Get commit authors",heading:"get-commit-authors"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get an import status",heading:"get-an-import-status"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Get large files",heading:"get-large-files"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a user migration status",heading:"get-a-user-migration-status"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get an organization migration status",heading:"get-an-organization-migration-status"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"List user migrations",heading:"list-user-migrations"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List organization migrations",heading:"list-organization-migrations"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List repositories in an organization migration",heading:"list-repositories-in-an-organization-migration"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List repositories for a user migration",heading:"list-repositories-for-a-user-migration"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Map a commit author",heading:"map-a-commit-author"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Update Git LFS preference",heading:"update-git-lfs-preference"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Start a user migration",heading:"start-a-user-migration"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Start an organization migration",heading:"start-an-organization-migration"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Start an import",heading:"start-an-import"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Unlock a user repository",heading:"unlock-a-user-repository"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Unlock an organization repository",heading:"unlock-an-organization-repository"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Update an import",heading:"update-an-import"},{depth:4,value:"Parameters",heading:"parameters-21"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"migrations"},{path:"/api/migrations",component:a("G/4h").default,exact:!0,meta:{filePath:"docs/api/migrations.md",updatedTime:1611759433e3,title:"migrations",slugs:[{depth:2,value:"Cancel an import",heading:"cancel-an-import"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Delete a user migration archive",heading:"delete-a-user-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Delete an organization migration archive",heading:"delete-an-organization-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Download an organization migration archive",heading:"download-an-organization-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Download a user migration archive",heading:"download-a-user-migration-archive"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Get commit authors",heading:"get-commit-authors"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Get an import status",heading:"get-an-import-status"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Get large files",heading:"get-large-files"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a user migration status",heading:"get-a-user-migration-status"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get an organization migration status",heading:"get-an-organization-migration-status"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"List user migrations",heading:"list-user-migrations"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List organization migrations",heading:"list-organization-migrations"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List repositories in an organization migration",heading:"list-repositories-in-an-organization-migration"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List repositories for a user migration",heading:"list-repositories-for-a-user-migration"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Map a commit author",heading:"map-a-commit-author"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Update Git LFS preference",heading:"update-git-lfs-preference"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Start a user migration",heading:"start-a-user-migration"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Start an organization migration",heading:"start-an-organization-migration"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Start an import",heading:"start-an-import"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Unlock a user repository",heading:"unlock-a-user-repository"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Unlock an organization repository",heading:"unlock-an-organization-repository"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Update an import",heading:"update-an-import"},{depth:4,value:"Parameters",heading:"parameters-21"}],nav:{path:"/api",title:"Api"}},title:"migrations"},{path:"/en-US/api/orgs",component:a("IvW+").default,exact:!0,meta:{filePath:"docs/api/orgs.en-US.md",updatedTime:1611759433e3,title:"orgs",slugs:[{depth:2,value:"Block a user from an organization",heading:"block-a-user-from-an-organization"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Cancel an organization invitation",heading:"cancel-an-organization-invitation"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Check if a user is blocked by an organization",heading:"check-if-a-user-is-blocked-by-an-organization"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Check organization membership for a user",heading:"check-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Check public organization membership for a user",heading:"check-public-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Convert an organization member to outside collaborator",heading:"convert-an-organization-member-to-outside-collaborator"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create an organization invitation",heading:"create-an-organization-invitation"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Create an organization webhook",heading:"create-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete an organization webhook",heading:"delete-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get an organization",heading:"get-an-organization"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get an organization membership for the authenticated user",heading:"get-an-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get organization membership for a user",heading:"get-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get an organization webhook",heading:"get-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a webhook configuration for an organization",heading:"get-a-webhook-configuration-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List organizations",heading:"list-organizations"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List app installations for an organization",heading:"list-app-installations-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List users blocked by an organization",heading:"list-users-blocked-by-an-organization"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List failed organization invitations",heading:"list-failed-organization-invitations"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List organizations for the authenticated user",heading:"list-organizations-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List organizations for a user",heading:"list-organizations-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List organization invitation teams",heading:"list-organization-invitation-teams"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List organization members",heading:"list-organization-members"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List organization memberships for the authenticated user",heading:"list-organization-memberships-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List outside collaborators for an organization",heading:"list-outside-collaborators-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List pending organization invitations",heading:"list-pending-organization-invitations"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List public organization members",heading:"list-public-organization-members"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List organization webhooks",heading:"list-organization-webhooks"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Ping an organization webhook",heading:"ping-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Remove an organization member",heading:"remove-an-organization-member"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Remove organization membership for a user",heading:"remove-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Remove outside collaborator from an organization",heading:"remove-outside-collaborator-from-an-organization"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Remove public organization membership for the authenticated user",heading:"remove-public-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Set organization membership for a user",heading:"set-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Set public organization membership for the authenticated user",heading:"set-public-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Unblock a user from an organization",heading:"unblock-a-user-from-an-organization"},{depth:4,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Update an organization",heading:"update-an-organization"},{depth:4,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Update an organization membership for the authenticated user",heading:"update-an-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Update an organization webhook",heading:"update-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Update a webhook configuration for an organization",heading:"update-a-webhook-configuration-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-38"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"orgs"},{path:"/api/orgs",component:a("BB9S").default,exact:!0,meta:{filePath:"docs/api/orgs.md",updatedTime:1611759433e3,title:"orgs",slugs:[{depth:2,value:"Block a user from an organization",heading:"block-a-user-from-an-organization"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Cancel an organization invitation",heading:"cancel-an-organization-invitation"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Check if a user is blocked by an organization",heading:"check-if-a-user-is-blocked-by-an-organization"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Check organization membership for a user",heading:"check-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Check public organization membership for a user",heading:"check-public-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Convert an organization member to outside collaborator",heading:"convert-an-organization-member-to-outside-collaborator"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create an organization invitation",heading:"create-an-organization-invitation"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Create an organization webhook",heading:"create-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete an organization webhook",heading:"delete-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get an organization",heading:"get-an-organization"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get an organization membership for the authenticated user",heading:"get-an-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get organization membership for a user",heading:"get-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get an organization webhook",heading:"get-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a webhook configuration for an organization",heading:"get-a-webhook-configuration-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List organizations",heading:"list-organizations"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List app installations for an organization",heading:"list-app-installations-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List users blocked by an organization",heading:"list-users-blocked-by-an-organization"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List failed organization invitations",heading:"list-failed-organization-invitations"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List organizations for the authenticated user",heading:"list-organizations-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List organizations for a user",heading:"list-organizations-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List organization invitation teams",heading:"list-organization-invitation-teams"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List organization members",heading:"list-organization-members"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List organization memberships for the authenticated user",heading:"list-organization-memberships-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List outside collaborators for an organization",heading:"list-outside-collaborators-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List pending organization invitations",heading:"list-pending-organization-invitations"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List public organization members",heading:"list-public-organization-members"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List organization webhooks",heading:"list-organization-webhooks"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Ping an organization webhook",heading:"ping-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Remove an organization member",heading:"remove-an-organization-member"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Remove organization membership for a user",heading:"remove-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Remove outside collaborator from an organization",heading:"remove-outside-collaborator-from-an-organization"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Remove public organization membership for the authenticated user",heading:"remove-public-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Set organization membership for a user",heading:"set-organization-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Set public organization membership for the authenticated user",heading:"set-public-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Unblock a user from an organization",heading:"unblock-a-user-from-an-organization"},{depth:4,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Update an organization",heading:"update-an-organization"},{depth:4,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Update an organization membership for the authenticated user",heading:"update-an-organization-membership-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Update an organization webhook",heading:"update-an-organization-webhook"},{depth:4,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Update a webhook configuration for an organization",heading:"update-a-webhook-configuration-for-an-organization"},{depth:4,value:"Parameters",heading:"parameters-38"}],nav:{path:"/api",title:"Api"}},title:"orgs"},{path:"/en-US/api/projects",component:a("7moZ").default,exact:!0,meta:{filePath:"docs/api/projects.en-US.md",updatedTime:1611759433e3,title:"projects",slugs:[{depth:2,value:"Add project collaborator",heading:"add-project-collaborator"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a project card",heading:"create-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a project column",heading:"create-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a user project",heading:"create-a-user-project"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create an organization project",heading:"create-an-organization-project"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a repository project",heading:"create-a-repository-project"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete a project",heading:"delete-a-project"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete a project card",heading:"delete-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a project column",heading:"delete-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get a project",heading:"get-a-project"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get a project card",heading:"get-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get a project column",heading:"get-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get project permission for a user",heading:"get-project-permission-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List project cards",heading:"list-project-cards"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List project collaborators",heading:"list-project-collaborators"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List project columns",heading:"list-project-columns"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List organization projects",heading:"list-organization-projects"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List repository projects",heading:"list-repository-projects"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List user projects",heading:"list-user-projects"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Move a project card",heading:"move-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Move a project column",heading:"move-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Remove user as a collaborator",heading:"remove-user-as-a-collaborator"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Update a project",heading:"update-a-project"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Update an existing project card",heading:"update-an-existing-project-card"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Update an existing project column",heading:"update-an-existing-project-column"},{depth:4,value:"Parameters",heading:"parameters-24"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"projects"},{path:"/api/projects",component:a("wHa0").default,exact:!0,meta:{filePath:"docs/api/projects.md",updatedTime:1611759433e3,title:"projects",slugs:[{depth:2,value:"Add project collaborator",heading:"add-project-collaborator"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a project card",heading:"create-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a project column",heading:"create-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a user project",heading:"create-a-user-project"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create an organization project",heading:"create-an-organization-project"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a repository project",heading:"create-a-repository-project"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete a project",heading:"delete-a-project"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete a project card",heading:"delete-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a project column",heading:"delete-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get a project",heading:"get-a-project"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get a project card",heading:"get-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get a project column",heading:"get-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get project permission for a user",heading:"get-project-permission-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List project cards",heading:"list-project-cards"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List project collaborators",heading:"list-project-collaborators"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List project columns",heading:"list-project-columns"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List organization projects",heading:"list-organization-projects"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List repository projects",heading:"list-repository-projects"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List user projects",heading:"list-user-projects"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Move a project card",heading:"move-a-project-card"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Move a project column",heading:"move-a-project-column"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Remove user as a collaborator",heading:"remove-user-as-a-collaborator"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Update a project",heading:"update-a-project"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Update an existing project card",heading:"update-an-existing-project-card"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Update an existing project column",heading:"update-an-existing-project-column"},{depth:4,value:"Parameters",heading:"parameters-24"}],nav:{path:"/api",title:"Api"}},title:"projects"},{path:"/en-US/api/pulls",component:a("S6PD").default,exact:!0,meta:{filePath:"docs/api/pulls.en-US.md",updatedTime:1611759433e3,title:"pulls",slugs:[{depth:2,value:"Check if a pull request has been merged",heading:"check-if-a-pull-request-has-been-merged"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a pull request",heading:"create-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a reply for a review comment",heading:"create-a-reply-for-a-review-comment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a review for a pull request",heading:"create-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create a review comment for a pull request",heading:"create-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Delete a pending review for a pull request",heading:"delete-a-pending-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete a review comment for a pull request",heading:"delete-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Dismiss a review for a pull request",heading:"dismiss-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a pull request",heading:"get-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get a review for a pull request",heading:"get-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get a review comment for a pull request",heading:"get-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List pull requests",heading:"list-pull-requests"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List comments for a pull request review",heading:"list-comments-for-a-pull-request-review"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List commits on a pull request",heading:"list-commits-on-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List pull requests files",heading:"list-pull-requests-files"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List requested reviewers for a pull request",heading:"list-requested-reviewers-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List review comments on a pull request",heading:"list-review-comments-on-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List review comments in a repository",heading:"list-review-comments-in-a-repository"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List reviews for a pull request",heading:"list-reviews-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Merge a pull request",heading:"merge-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Remove requested reviewers from a pull request",heading:"remove-requested-reviewers-from-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Request reviewers for a pull request",heading:"request-reviewers-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Submit a review for a pull request",heading:"submit-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Update a pull request",heading:"update-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Update a pull request branch",heading:"update-a-pull-request-branch"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Update a review for a pull request",heading:"update-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Update a review comment for a pull request",heading:"update-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-26"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"pulls"},{path:"/api/pulls",component:a("8um0").default,exact:!0,meta:{filePath:"docs/api/pulls.md",updatedTime:1611759433e3,title:"pulls",slugs:[{depth:2,value:"Check if a pull request has been merged",heading:"check-if-a-pull-request-has-been-merged"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create a pull request",heading:"create-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create a reply for a review comment",heading:"create-a-reply-for-a-review-comment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create a review for a pull request",heading:"create-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create a review comment for a pull request",heading:"create-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Delete a pending review for a pull request",heading:"delete-a-pending-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete a review comment for a pull request",heading:"delete-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Dismiss a review for a pull request",heading:"dismiss-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Get a pull request",heading:"get-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Get a review for a pull request",heading:"get-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Get a review comment for a pull request",heading:"get-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"List pull requests",heading:"list-pull-requests"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"List comments for a pull request review",heading:"list-comments-for-a-pull-request-review"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List commits on a pull request",heading:"list-commits-on-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List pull requests files",heading:"list-pull-requests-files"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List requested reviewers for a pull request",heading:"list-requested-reviewers-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List review comments on a pull request",heading:"list-review-comments-on-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List review comments in a repository",heading:"list-review-comments-in-a-repository"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List reviews for a pull request",heading:"list-reviews-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Merge a pull request",heading:"merge-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Remove requested reviewers from a pull request",heading:"remove-requested-reviewers-from-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Request reviewers for a pull request",heading:"request-reviewers-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Submit a review for a pull request",heading:"submit-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Update a pull request",heading:"update-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Update a pull request branch",heading:"update-a-pull-request-branch"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Update a review for a pull request",heading:"update-a-review-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Update a review comment for a pull request",heading:"update-a-review-comment-for-a-pull-request"},{depth:4,value:"Parameters",heading:"parameters-26"}],nav:{path:"/api",title:"Api"}},title:"pulls"},{path:"/en-US/api/rate-limit",component:a("7lJQ").default,exact:!0,meta:{filePath:"docs/api/rateLimit.en-US.md",updatedTime:1611759433e3,title:"rateLimit",slugs:[{depth:2,value:"Get rate limit status for the authenticated user",heading:"get-rate-limit-status-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"rateLimit"},{path:"/api/rate-limit",component:a("QoFd").default,exact:!0,meta:{filePath:"docs/api/rateLimit.md",updatedTime:1611759433e3,title:"rateLimit",slugs:[{depth:2,value:"Get rate limit status for the authenticated user",heading:"get-rate-limit-status-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters"}],nav:{path:"/api",title:"Api"}},title:"rateLimit"},{path:"/en-US/api/reactions",component:a("c+NL").default,exact:!0,meta:{filePath:"docs/api/reactions.en-US.md",updatedTime:1611759433e3,title:"reactions",slugs:[{depth:2,value:"Create reaction for a commit comment",heading:"create-reaction-for-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create reaction for an issue",heading:"create-reaction-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create reaction for an issue comment",heading:"create-reaction-for-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create reaction for a pull request review comment",heading:"create-reaction-for-a-pull-request-review-comment"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create reaction for a team discussion comment",heading:"create-reaction-for-a-team-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create reaction for a team discussion",heading:"create-reaction-for-a-team-discussion"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete a commit comment reaction",heading:"delete-a-commit-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an issue reaction",heading:"delete-an-issue-reaction"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete an issue comment reaction",heading:"delete-an-issue-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a pull request comment reaction",heading:"delete-a-pull-request-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Delete team discussion reaction",heading:"delete-team-discussion-reaction"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Delete team discussion comment reaction",heading:"delete-team-discussion-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Delete a reaction (Legacy)",heading:"delete-a-reaction-legacy"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List reactions for a commit comment",heading:"list-reactions-for-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List reactions for an issue",heading:"list-reactions-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List reactions for an issue comment",heading:"list-reactions-for-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List reactions for a pull request review comment",heading:"list-reactions-for-a-pull-request-review-comment"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List reactions for a team discussion comment",heading:"list-reactions-for-a-team-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List reactions for a team discussion",heading:"list-reactions-for-a-team-discussion"},{depth:4,value:"Parameters",heading:"parameters-18"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"reactions"},{path:"/api/reactions",component:a("MWYE").default,exact:!0,meta:{filePath:"docs/api/reactions.md",updatedTime:1611759433e3,title:"reactions",slugs:[{depth:2,value:"Create reaction for a commit comment",heading:"create-reaction-for-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Create reaction for an issue",heading:"create-reaction-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Create reaction for an issue comment",heading:"create-reaction-for-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Create reaction for a pull request review comment",heading:"create-reaction-for-a-pull-request-review-comment"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Create reaction for a team discussion comment",heading:"create-reaction-for-a-team-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create reaction for a team discussion",heading:"create-reaction-for-a-team-discussion"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Delete a commit comment reaction",heading:"delete-a-commit-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an issue reaction",heading:"delete-an-issue-reaction"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete an issue comment reaction",heading:"delete-an-issue-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a pull request comment reaction",heading:"delete-a-pull-request-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Delete team discussion reaction",heading:"delete-team-discussion-reaction"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Delete team discussion comment reaction",heading:"delete-team-discussion-comment-reaction"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Delete a reaction (Legacy)",heading:"delete-a-reaction-legacy"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"List reactions for a commit comment",heading:"list-reactions-for-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"List reactions for an issue",heading:"list-reactions-for-an-issue"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List reactions for an issue comment",heading:"list-reactions-for-an-issue-comment"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List reactions for a pull request review comment",heading:"list-reactions-for-a-pull-request-review-comment"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List reactions for a team discussion comment",heading:"list-reactions-for-a-team-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List reactions for a team discussion",heading:"list-reactions-for-a-team-discussion"},{depth:4,value:"Parameters",heading:"parameters-18"}],nav:{path:"/api",title:"Api"}},title:"reactions"},{path:"/en-US/api/repos",component:a("zFjo").default,exact:!0,meta:{filePath:"docs/api/repos.en-US.md",updatedTime:1611759433e3,title:"repos",slugs:[{depth:2,value:"Accept a repository invitation",heading:"accept-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Add app access restrictions",heading:"add-app-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Add a repository collaborator",heading:"add-a-repository-collaborator"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Add status check contexts",heading:"add-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Add team access restrictions",heading:"add-team-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Add user access restrictions",heading:"add-user-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Check if a user is a repository collaborator",heading:"check-if-a-user-is-a-repository-collaborator"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Check if vulnerability alerts are enabled for a repository",heading:"check-if-vulnerability-alerts-are-enabled-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Compare two commits",heading:"compare-two-commits"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Create a commit comment",heading:"create-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Create commit signature protection",heading:"create-commit-signature-protection"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Create a commit status",heading:"create-a-commit-status"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Create a deploy key",heading:"create-a-deploy-key"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Create a deployment",heading:"create-a-deployment"},{depth:6,value:"Merged branch response",heading:"merged-branch-response"},{depth:4,value:"Merge conflict response",heading:"merge-conflict-response"},{depth:4,value:"Failed commit status checks",heading:"failed-commit-status-checks"},{depth:2,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Create a deployment status",heading:"create-a-deployment-status"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Create a repository dispatch event",heading:"create-a-repository-dispatch-event"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Create a repository for the authenticated user",heading:"create-a-repository-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Create a fork",heading:"create-a-fork"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Create an organization repository",heading:"create-an-organization-repository"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Create or update file contents",heading:"create-or-update-file-contents"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Create a GitHub Pages site",heading:"create-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Create a release",heading:"create-a-release"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Create a repository using a template",heading:"create-a-repository-using-a-template"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Create a repository webhook",heading:"create-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Decline a repository invitation",heading:"decline-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Delete a repository",heading:"delete-a-repository"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Delete access restrictions",heading:"delete-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Delete admin branch protection",heading:"delete-admin-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Delete branch protection",heading:"delete-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Delete a commit comment",heading:"delete-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Delete commit signature protection",heading:"delete-commit-signature-protection"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Delete a deploy key",heading:"delete-a-deploy-key"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Delete a deployment",heading:"delete-a-deployment"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Delete a file",heading:"delete-a-file"},{depth:4,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Delete a repository invitation",heading:"delete-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Delete a GitHub Pages site",heading:"delete-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Delete pull request review protection",heading:"delete-pull-request-review-protection"},{depth:4,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Delete a release",heading:"delete-a-release"},{depth:4,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Delete a release asset",heading:"delete-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-38"},{depth:2,value:"Delete a repository webhook",heading:"delete-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-39"},{depth:2,value:"Disable automated security fixes",heading:"disable-automated-security-fixes"},{depth:4,value:"Parameters",heading:"parameters-40"},{depth:2,value:"Disable vulnerability alerts",heading:"disable-vulnerability-alerts"},{depth:4,value:"Parameters",heading:"parameters-41"},{depth:2,value:"Download a repository archive (zip)",heading:"download-a-repository-archive-zip"},{depth:4,value:"Parameters",heading:"parameters-42"},{depth:2,value:"Download a repository archive (tar)",heading:"download-a-repository-archive-tar"},{depth:4,value:"Parameters",heading:"parameters-43"},{depth:2,value:"Download a repository archive (zip)",heading:"download-a-repository-archive-zip-1"},{depth:4,value:"Parameters",heading:"parameters-44"},{depth:2,value:"Enable automated security fixes",heading:"enable-automated-security-fixes"},{depth:4,value:"Parameters",heading:"parameters-45"},{depth:2,value:"Enable vulnerability alerts",heading:"enable-vulnerability-alerts"},{depth:4,value:"Parameters",heading:"parameters-46"},{depth:2,value:"Get a repository",heading:"get-a-repository"},{depth:4,value:"Parameters",heading:"parameters-47"},{depth:2,value:"Get access restrictions",heading:"get-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-48"},{depth:2,value:"Get admin branch protection",heading:"get-admin-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-49"},{depth:2,value:"Get all status check contexts",heading:"get-all-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-50"},{depth:2,value:"Get all repository topics",heading:"get-all-repository-topics"},{depth:4,value:"Parameters",heading:"parameters-51"},{depth:2,value:"Get apps with access to the protected branch",heading:"get-apps-with-access-to-the-protected-branch"},{depth:4,value:"Parameters",heading:"parameters-52"},{depth:2,value:"Get a branch",heading:"get-a-branch"},{depth:4,value:"Parameters",heading:"parameters-53"},{depth:2,value:"Get branch protection",heading:"get-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-54"},{depth:2,value:"Get repository clones",heading:"get-repository-clones"},{depth:4,value:"Parameters",heading:"parameters-55"},{depth:2,value:"Get the weekly commit activity",heading:"get-the-weekly-commit-activity"},{depth:4,value:"Parameters",heading:"parameters-56"},{depth:2,value:"Get repository permissions for a user",heading:"get-repository-permissions-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-57"},{depth:2,value:"Get the combined status for a specific reference",heading:"get-the-combined-status-for-a-specific-reference"},{depth:4,value:"Parameters",heading:"parameters-58"},{depth:2,value:"Get a commit",heading:"get-a-commit"},{depth:4,value:"Parameters",heading:"parameters-59"},{depth:2,value:"Get the last year of commit activity",heading:"get-the-last-year-of-commit-activity"},{depth:4,value:"Parameters",heading:"parameters-60"},{depth:2,value:"Get a commit comment",heading:"get-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-61"},{depth:2,value:"Get commit signature protection",heading:"get-commit-signature-protection"},{depth:4,value:"Parameters",heading:"parameters-62"},{depth:2,value:"Get community profile metrics",heading:"get-community-profile-metrics"},{depth:4,value:"Parameters",heading:"parameters-63"},{depth:2,value:"Get repository content",heading:"get-repository-content"},{depth:6,value:"If the content is a directory",heading:"if-the-content-is-a-directory"},{depth:4,value:"If the content is a symlink",heading:"if-the-content-is-a-symlink"},{depth:4,value:"If the content is a submodule",heading:"if-the-content-is-a-submodule"},{depth:2,value:"Parameters",heading:"parameters-64"},{depth:2,value:"Get all contributor commit activity",heading:"get-all-contributor-commit-activity"},{depth:4,value:"Parameters",heading:"parameters-65"},{depth:2,value:"Get a deploy key",heading:"get-a-deploy-key"},{depth:4,value:"Parameters",heading:"parameters-66"},{depth:2,value:"Get a deployment",heading:"get-a-deployment"},{depth:4,value:"Parameters",heading:"parameters-67"},{depth:2,value:"Get a deployment status",heading:"get-a-deployment-status"},{depth:4,value:"Parameters",heading:"parameters-68"},{depth:2,value:"Get latest Pages build",heading:"get-latest-pages-build"},{depth:4,value:"Parameters",heading:"parameters-69"},{depth:2,value:"Get the latest release",heading:"get-the-latest-release"},{depth:4,value:"Parameters",heading:"parameters-70"},{depth:2,value:"Get a GitHub Pages site",heading:"get-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-71"},{depth:2,value:"Get GitHub Pages build",heading:"get-github-pages-build"},{depth:4,value:"Parameters",heading:"parameters-72"},{depth:2,value:"Get the weekly commit count",heading:"get-the-weekly-commit-count"},{depth:4,value:"Parameters",heading:"parameters-73"},{depth:2,value:"Get pull request review protection",heading:"get-pull-request-review-protection"},{depth:4,value:"Parameters",heading:"parameters-74"},{depth:2,value:"Get the hourly commit count for each day",heading:"get-the-hourly-commit-count-for-each-day"},{depth:4,value:"Parameters",heading:"parameters-75"},{depth:2,value:"Get a repository README",heading:"get-a-repository-readme"},{depth:4,value:"Parameters",heading:"parameters-76"},{depth:2,value:"Get a release",heading:"get-a-release"},{depth:4,value:"Parameters",heading:"parameters-77"},{depth:2,value:"Get a release asset",heading:"get-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-78"},{depth:2,value:"Get a release by tag name",heading:"get-a-release-by-tag-name"},{depth:4,value:"Parameters",heading:"parameters-79"},{depth:2,value:"Get status checks protection",heading:"get-status-checks-protection"},{depth:4,value:"Parameters",heading:"parameters-80"},{depth:2,value:"Get teams with access to the protected branch",heading:"get-teams-with-access-to-the-protected-branch"},{depth:4,value:"Parameters",heading:"parameters-81"},{depth:2,value:"Get top referral paths",heading:"get-top-referral-paths"},{depth:4,value:"Parameters",heading:"parameters-82"},{depth:2,value:"Get top referral sources",heading:"get-top-referral-sources"},{depth:4,value:"Parameters",heading:"parameters-83"},{depth:2,value:"Get users with access to the protected branch",heading:"get-users-with-access-to-the-protected-branch"},{depth:4,value:"Parameters",heading:"parameters-84"},{depth:2,value:"Get page views",heading:"get-page-views"},{depth:4,value:"Parameters",heading:"parameters-85"},{depth:2,value:"Get a repository webhook",heading:"get-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-86"},{depth:2,value:"Get a webhook configuration for a repository",heading:"get-a-webhook-configuration-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-87"},{depth:2,value:"List branches",heading:"list-branches"},{depth:4,value:"Parameters",heading:"parameters-88"},{depth:2,value:"List branches for HEAD commit",heading:"list-branches-for-head-commit"},{depth:4,value:"Parameters",heading:"parameters-89"},{depth:2,value:"List repository collaborators",heading:"list-repository-collaborators"},{depth:4,value:"Parameters",heading:"parameters-90"},{depth:2,value:"List commit comments",heading:"list-commit-comments"},{depth:4,value:"Parameters",heading:"parameters-91"},{depth:2,value:"List commit comments for a repository",heading:"list-commit-comments-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-92"},{depth:2,value:"List commits",heading:"list-commits"},{depth:4,value:"Parameters",heading:"parameters-93"},{depth:2,value:"List commit statuses for a reference",heading:"list-commit-statuses-for-a-reference"},{depth:4,value:"Parameters",heading:"parameters-94"},{depth:2,value:"List repository contributors",heading:"list-repository-contributors"},{depth:4,value:"Parameters",heading:"parameters-95"},{depth:2,value:"List deploy keys",heading:"list-deploy-keys"},{depth:4,value:"Parameters",heading:"parameters-96"},{depth:2,value:"List deployments",heading:"list-deployments"},{depth:4,value:"Parameters",heading:"parameters-97"},{depth:2,value:"List deployment statuses",heading:"list-deployment-statuses"},{depth:4,value:"Parameters",heading:"parameters-98"},{depth:2,value:"List repositories for the authenticated user",heading:"list-repositories-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-99"},{depth:2,value:"List forks",heading:"list-forks"},{depth:4,value:"Parameters",heading:"parameters-100"},{depth:2,value:"List organization repositories",heading:"list-organization-repositories"},{depth:4,value:"Parameters",heading:"parameters-101"},{depth:2,value:"List repositories for a user",heading:"list-repositories-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-102"},{depth:2,value:"List repository invitations",heading:"list-repository-invitations"},{depth:4,value:"Parameters",heading:"parameters-103"},{depth:2,value:"List repository invitations for the authenticated user",heading:"list-repository-invitations-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-104"},{depth:2,value:"List repository languages",heading:"list-repository-languages"},{depth:4,value:"Parameters",heading:"parameters-105"},{depth:2,value:"List GitHub Pages builds",heading:"list-github-pages-builds"},{depth:4,value:"Parameters",heading:"parameters-106"},{depth:2,value:"List public repositories",heading:"list-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-107"},{depth:2,value:"List pull requests associated with a commit",heading:"list-pull-requests-associated-with-a-commit"},{depth:4,value:"Parameters",heading:"parameters-108"},{depth:2,value:"List release assets",heading:"list-release-assets"},{depth:4,value:"Parameters",heading:"parameters-109"},{depth:2,value:"List releases",heading:"list-releases"},{depth:4,value:"Parameters",heading:"parameters-110"},{depth:2,value:"List repository tags",heading:"list-repository-tags"},{depth:4,value:"Parameters",heading:"parameters-111"},{depth:2,value:"List repository teams",heading:"list-repository-teams"},{depth:4,value:"Parameters",heading:"parameters-112"},{depth:2,value:"List repository webhooks",heading:"list-repository-webhooks"},{depth:4,value:"Parameters",heading:"parameters-113"},{depth:2,value:"Merge a branch",heading:"merge-a-branch"},{depth:4,value:"Parameters",heading:"parameters-114"},{depth:2,value:"Ping a repository webhook",heading:"ping-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-115"},{depth:2,value:"Remove app access restrictions",heading:"remove-app-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-116"},{depth:2,value:"Remove a repository collaborator",heading:"remove-a-repository-collaborator"},{depth:4,value:"Parameters",heading:"parameters-117"},{depth:2,value:"Remove status check contexts",heading:"remove-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-118"},{depth:2,value:"Remove status check protection",heading:"remove-status-check-protection"},{depth:4,value:"Parameters",heading:"parameters-119"},{depth:2,value:"Remove team access restrictions",heading:"remove-team-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-120"},{depth:2,value:"Remove user access restrictions",heading:"remove-user-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-121"},{depth:2,value:"Rename a branch",heading:"rename-a-branch"},{depth:4,value:"Parameters",heading:"parameters-122"},{depth:2,value:"Replace all repository topics",heading:"replace-all-repository-topics"},{depth:4,value:"Parameters",heading:"parameters-123"},{depth:2,value:"Request a GitHub Pages build",heading:"request-a-github-pages-build"},{depth:4,value:"Parameters",heading:"parameters-124"},{depth:2,value:"Set admin branch protection",heading:"set-admin-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-125"},{depth:2,value:"Set app access restrictions",heading:"set-app-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-126"},{depth:2,value:"Set status check contexts",heading:"set-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-127"},{depth:2,value:"Set team access restrictions",heading:"set-team-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-128"},{depth:2,value:"Set user access restrictions",heading:"set-user-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-129"},{depth:2,value:"Test the push repository webhook",heading:"test-the-push-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-130"},{depth:2,value:"Transfer a repository",heading:"transfer-a-repository"},{depth:4,value:"Parameters",heading:"parameters-131"},{depth:2,value:"Update a repository",heading:"update-a-repository"},{depth:4,value:"Parameters",heading:"parameters-132"},{depth:2,value:"Update branch protection",heading:"update-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-133"},{depth:2,value:"Update a commit comment",heading:"update-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-134"},{depth:2,value:"Update information about a GitHub Pages site",heading:"update-information-about-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-135"},{depth:2,value:"Update a repository invitation",heading:"update-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters-136"},{depth:2,value:"Update pull request review protection",heading:"update-pull-request-review-protection"},{depth:4,value:"Parameters",heading:"parameters-137"},{depth:2,value:"Update a release",heading:"update-a-release"},{depth:4,value:"Parameters",heading:"parameters-138"},{depth:2,value:"Update a release asset",heading:"update-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-139"},{depth:2,value:"Update status check protection",heading:"update-status-check-protection"},{depth:4,value:"Parameters",heading:"parameters-140"},{depth:2,value:"Update status check protection",heading:"update-status-check-protection-1"},{depth:4,value:"Parameters",heading:"parameters-141"},{depth:2,value:"Update a repository webhook",heading:"update-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-142"},{depth:2,value:"Update a webhook configuration for a repository",heading:"update-a-webhook-configuration-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-143"},{depth:2,value:"Upload a release asset",heading:"upload-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-144"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"repos"},{path:"/api/repos",component:a("Fxm0").default,exact:!0,meta:{filePath:"docs/api/repos.md",updatedTime:1611759433e3,title:"repos",slugs:[{depth:2,value:"Accept a repository invitation",heading:"accept-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Add app access restrictions",heading:"add-app-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Add a repository collaborator",heading:"add-a-repository-collaborator"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Add status check contexts",heading:"add-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Add team access restrictions",heading:"add-team-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Add user access restrictions",heading:"add-user-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Check if a user is a repository collaborator",heading:"check-if-a-user-is-a-repository-collaborator"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Check if vulnerability alerts are enabled for a repository",heading:"check-if-vulnerability-alerts-are-enabled-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Compare two commits",heading:"compare-two-commits"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Create a commit comment",heading:"create-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Create commit signature protection",heading:"create-commit-signature-protection"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Create a commit status",heading:"create-a-commit-status"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Create a deploy key",heading:"create-a-deploy-key"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Create a deployment",heading:"create-a-deployment"},{depth:6,value:"Merged branch response",heading:"merged-branch-response"},{depth:4,value:"Merge conflict response",heading:"merge-conflict-response"},{depth:4,value:"Failed commit status checks",heading:"failed-commit-status-checks"},{depth:2,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Create a deployment status",heading:"create-a-deployment-status"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Create a repository dispatch event",heading:"create-a-repository-dispatch-event"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"Create a repository for the authenticated user",heading:"create-a-repository-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"Create a fork",heading:"create-a-fork"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"Create an organization repository",heading:"create-an-organization-repository"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"Create or update file contents",heading:"create-or-update-file-contents"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"Create a GitHub Pages site",heading:"create-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"Create a release",heading:"create-a-release"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"Create a repository using a template",heading:"create-a-repository-using-a-template"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"Create a repository webhook",heading:"create-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Decline a repository invitation",heading:"decline-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Delete a repository",heading:"delete-a-repository"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Delete access restrictions",heading:"delete-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Delete admin branch protection",heading:"delete-admin-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Delete branch protection",heading:"delete-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Delete a commit comment",heading:"delete-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Delete commit signature protection",heading:"delete-commit-signature-protection"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Delete a deploy key",heading:"delete-a-deploy-key"},{depth:4,value:"Parameters",heading:"parameters-31"},{depth:2,value:"Delete a deployment",heading:"delete-a-deployment"},{depth:4,value:"Parameters",heading:"parameters-32"},{depth:2,value:"Delete a file",heading:"delete-a-file"},{depth:4,value:"Parameters",heading:"parameters-33"},{depth:2,value:"Delete a repository invitation",heading:"delete-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters-34"},{depth:2,value:"Delete a GitHub Pages site",heading:"delete-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-35"},{depth:2,value:"Delete pull request review protection",heading:"delete-pull-request-review-protection"},{depth:4,value:"Parameters",heading:"parameters-36"},{depth:2,value:"Delete a release",heading:"delete-a-release"},{depth:4,value:"Parameters",heading:"parameters-37"},{depth:2,value:"Delete a release asset",heading:"delete-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-38"},{depth:2,value:"Delete a repository webhook",heading:"delete-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-39"},{depth:2,value:"Disable automated security fixes",heading:"disable-automated-security-fixes"},{depth:4,value:"Parameters",heading:"parameters-40"},{depth:2,value:"Disable vulnerability alerts",heading:"disable-vulnerability-alerts"},{depth:4,value:"Parameters",heading:"parameters-41"},{depth:2,value:"Download a repository archive (zip)",heading:"download-a-repository-archive-zip"},{depth:4,value:"Parameters",heading:"parameters-42"},{depth:2,value:"Download a repository archive (tar)",heading:"download-a-repository-archive-tar"},{depth:4,value:"Parameters",heading:"parameters-43"},{depth:2,value:"Download a repository archive (zip)",heading:"download-a-repository-archive-zip-1"},{depth:4,value:"Parameters",heading:"parameters-44"},{depth:2,value:"Enable automated security fixes",heading:"enable-automated-security-fixes"},{depth:4,value:"Parameters",heading:"parameters-45"},{depth:2,value:"Enable vulnerability alerts",heading:"enable-vulnerability-alerts"},{depth:4,value:"Parameters",heading:"parameters-46"},{depth:2,value:"Get a repository",heading:"get-a-repository"},{depth:4,value:"Parameters",heading:"parameters-47"},{depth:2,value:"Get access restrictions",heading:"get-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-48"},{depth:2,value:"Get admin branch protection",heading:"get-admin-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-49"},{depth:2,value:"Get all status check contexts",heading:"get-all-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-50"},{depth:2,value:"Get all repository topics",heading:"get-all-repository-topics"},{depth:4,value:"Parameters",heading:"parameters-51"},{depth:2,value:"Get apps with access to the protected branch",heading:"get-apps-with-access-to-the-protected-branch"},{depth:4,value:"Parameters",heading:"parameters-52"},{depth:2,value:"Get a branch",heading:"get-a-branch"},{depth:4,value:"Parameters",heading:"parameters-53"},{depth:2,value:"Get branch protection",heading:"get-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-54"},{depth:2,value:"Get repository clones",heading:"get-repository-clones"},{depth:4,value:"Parameters",heading:"parameters-55"},{depth:2,value:"Get the weekly commit activity",heading:"get-the-weekly-commit-activity"},{depth:4,value:"Parameters",heading:"parameters-56"},{depth:2,value:"Get repository permissions for a user",heading:"get-repository-permissions-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-57"},{depth:2,value:"Get the combined status for a specific reference",heading:"get-the-combined-status-for-a-specific-reference"},{depth:4,value:"Parameters",heading:"parameters-58"},{depth:2,value:"Get a commit",heading:"get-a-commit"},{depth:4,value:"Parameters",heading:"parameters-59"},{depth:2,value:"Get the last year of commit activity",heading:"get-the-last-year-of-commit-activity"},{depth:4,value:"Parameters",heading:"parameters-60"},{depth:2,value:"Get a commit comment",heading:"get-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-61"},{depth:2,value:"Get commit signature protection",heading:"get-commit-signature-protection"},{depth:4,value:"Parameters",heading:"parameters-62"},{depth:2,value:"Get community profile metrics",heading:"get-community-profile-metrics"},{depth:4,value:"Parameters",heading:"parameters-63"},{depth:2,value:"Get repository content",heading:"get-repository-content"},{depth:6,value:"If the content is a directory",heading:"if-the-content-is-a-directory"},{depth:4,value:"If the content is a symlink",heading:"if-the-content-is-a-symlink"},{depth:4,value:"If the content is a submodule",heading:"if-the-content-is-a-submodule"},{depth:2,value:"Parameters",heading:"parameters-64"},{depth:2,value:"Get all contributor commit activity",heading:"get-all-contributor-commit-activity"},{depth:4,value:"Parameters",heading:"parameters-65"},{depth:2,value:"Get a deploy key",heading:"get-a-deploy-key"},{depth:4,value:"Parameters",heading:"parameters-66"},{depth:2,value:"Get a deployment",heading:"get-a-deployment"},{depth:4,value:"Parameters",heading:"parameters-67"},{depth:2,value:"Get a deployment status",heading:"get-a-deployment-status"},{depth:4,value:"Parameters",heading:"parameters-68"},{depth:2,value:"Get latest Pages build",heading:"get-latest-pages-build"},{depth:4,value:"Parameters",heading:"parameters-69"},{depth:2,value:"Get the latest release",heading:"get-the-latest-release"},{depth:4,value:"Parameters",heading:"parameters-70"},{depth:2,value:"Get a GitHub Pages site",heading:"get-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-71"},{depth:2,value:"Get GitHub Pages build",heading:"get-github-pages-build"},{depth:4,value:"Parameters",heading:"parameters-72"},{depth:2,value:"Get the weekly commit count",heading:"get-the-weekly-commit-count"},{depth:4,value:"Parameters",heading:"parameters-73"},{depth:2,value:"Get pull request review protection",heading:"get-pull-request-review-protection"},{depth:4,value:"Parameters",heading:"parameters-74"},{depth:2,value:"Get the hourly commit count for each day",heading:"get-the-hourly-commit-count-for-each-day"},{depth:4,value:"Parameters",heading:"parameters-75"},{depth:2,value:"Get a repository README",heading:"get-a-repository-readme"},{depth:4,value:"Parameters",heading:"parameters-76"},{depth:2,value:"Get a release",heading:"get-a-release"},{depth:4,value:"Parameters",heading:"parameters-77"},{depth:2,value:"Get a release asset",heading:"get-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-78"},{depth:2,value:"Get a release by tag name",heading:"get-a-release-by-tag-name"},{depth:4,value:"Parameters",heading:"parameters-79"},{depth:2,value:"Get status checks protection",heading:"get-status-checks-protection"},{depth:4,value:"Parameters",heading:"parameters-80"},{depth:2,value:"Get teams with access to the protected branch",heading:"get-teams-with-access-to-the-protected-branch"},{depth:4,value:"Parameters",heading:"parameters-81"},{depth:2,value:"Get top referral paths",heading:"get-top-referral-paths"},{depth:4,value:"Parameters",heading:"parameters-82"},{depth:2,value:"Get top referral sources",heading:"get-top-referral-sources"},{depth:4,value:"Parameters",heading:"parameters-83"},{depth:2,value:"Get users with access to the protected branch",heading:"get-users-with-access-to-the-protected-branch"},{depth:4,value:"Parameters",heading:"parameters-84"},{depth:2,value:"Get page views",heading:"get-page-views"},{depth:4,value:"Parameters",heading:"parameters-85"},{depth:2,value:"Get a repository webhook",heading:"get-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-86"},{depth:2,value:"Get a webhook configuration for a repository",heading:"get-a-webhook-configuration-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-87"},{depth:2,value:"List branches",heading:"list-branches"},{depth:4,value:"Parameters",heading:"parameters-88"},{depth:2,value:"List branches for HEAD commit",heading:"list-branches-for-head-commit"},{depth:4,value:"Parameters",heading:"parameters-89"},{depth:2,value:"List repository collaborators",heading:"list-repository-collaborators"},{depth:4,value:"Parameters",heading:"parameters-90"},{depth:2,value:"List commit comments",heading:"list-commit-comments"},{depth:4,value:"Parameters",heading:"parameters-91"},{depth:2,value:"List commit comments for a repository",heading:"list-commit-comments-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-92"},{depth:2,value:"List commits",heading:"list-commits"},{depth:4,value:"Parameters",heading:"parameters-93"},{depth:2,value:"List commit statuses for a reference",heading:"list-commit-statuses-for-a-reference"},{depth:4,value:"Parameters",heading:"parameters-94"},{depth:2,value:"List repository contributors",heading:"list-repository-contributors"},{depth:4,value:"Parameters",heading:"parameters-95"},{depth:2,value:"List deploy keys",heading:"list-deploy-keys"},{depth:4,value:"Parameters",heading:"parameters-96"},{depth:2,value:"List deployments",heading:"list-deployments"},{depth:4,value:"Parameters",heading:"parameters-97"},{depth:2,value:"List deployment statuses",heading:"list-deployment-statuses"},{depth:4,value:"Parameters",heading:"parameters-98"},{depth:2,value:"List repositories for the authenticated user",heading:"list-repositories-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-99"},{depth:2,value:"List forks",heading:"list-forks"},{depth:4,value:"Parameters",heading:"parameters-100"},{depth:2,value:"List organization repositories",heading:"list-organization-repositories"},{depth:4,value:"Parameters",heading:"parameters-101"},{depth:2,value:"List repositories for a user",heading:"list-repositories-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-102"},{depth:2,value:"List repository invitations",heading:"list-repository-invitations"},{depth:4,value:"Parameters",heading:"parameters-103"},{depth:2,value:"List repository invitations for the authenticated user",heading:"list-repository-invitations-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-104"},{depth:2,value:"List repository languages",heading:"list-repository-languages"},{depth:4,value:"Parameters",heading:"parameters-105"},{depth:2,value:"List GitHub Pages builds",heading:"list-github-pages-builds"},{depth:4,value:"Parameters",heading:"parameters-106"},{depth:2,value:"List public repositories",heading:"list-public-repositories"},{depth:4,value:"Parameters",heading:"parameters-107"},{depth:2,value:"List pull requests associated with a commit",heading:"list-pull-requests-associated-with-a-commit"},{depth:4,value:"Parameters",heading:"parameters-108"},{depth:2,value:"List release assets",heading:"list-release-assets"},{depth:4,value:"Parameters",heading:"parameters-109"},{depth:2,value:"List releases",heading:"list-releases"},{depth:4,value:"Parameters",heading:"parameters-110"},{depth:2,value:"List repository tags",heading:"list-repository-tags"},{depth:4,value:"Parameters",heading:"parameters-111"},{depth:2,value:"List repository teams",heading:"list-repository-teams"},{depth:4,value:"Parameters",heading:"parameters-112"},{depth:2,value:"List repository webhooks",heading:"list-repository-webhooks"},{depth:4,value:"Parameters",heading:"parameters-113"},{depth:2,value:"Merge a branch",heading:"merge-a-branch"},{depth:4,value:"Parameters",heading:"parameters-114"},{depth:2,value:"Ping a repository webhook",heading:"ping-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-115"},{depth:2,value:"Remove app access restrictions",heading:"remove-app-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-116"},{depth:2,value:"Remove a repository collaborator",heading:"remove-a-repository-collaborator"},{depth:4,value:"Parameters",heading:"parameters-117"},{depth:2,value:"Remove status check contexts",heading:"remove-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-118"},{depth:2,value:"Remove status check protection",heading:"remove-status-check-protection"},{depth:4,value:"Parameters",heading:"parameters-119"},{depth:2,value:"Remove team access restrictions",heading:"remove-team-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-120"},{depth:2,value:"Remove user access restrictions",heading:"remove-user-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-121"},{depth:2,value:"Rename a branch",heading:"rename-a-branch"},{depth:4,value:"Parameters",heading:"parameters-122"},{depth:2,value:"Replace all repository topics",heading:"replace-all-repository-topics"},{depth:4,value:"Parameters",heading:"parameters-123"},{depth:2,value:"Request a GitHub Pages build",heading:"request-a-github-pages-build"},{depth:4,value:"Parameters",heading:"parameters-124"},{depth:2,value:"Set admin branch protection",heading:"set-admin-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-125"},{depth:2,value:"Set app access restrictions",heading:"set-app-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-126"},{depth:2,value:"Set status check contexts",heading:"set-status-check-contexts"},{depth:4,value:"Parameters",heading:"parameters-127"},{depth:2,value:"Set team access restrictions",heading:"set-team-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-128"},{depth:2,value:"Set user access restrictions",heading:"set-user-access-restrictions"},{depth:4,value:"Parameters",heading:"parameters-129"},{depth:2,value:"Test the push repository webhook",heading:"test-the-push-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-130"},{depth:2,value:"Transfer a repository",heading:"transfer-a-repository"},{depth:4,value:"Parameters",heading:"parameters-131"},{depth:2,value:"Update a repository",heading:"update-a-repository"},{depth:4,value:"Parameters",heading:"parameters-132"},{depth:2,value:"Update branch protection",heading:"update-branch-protection"},{depth:4,value:"Parameters",heading:"parameters-133"},{depth:2,value:"Update a commit comment",heading:"update-a-commit-comment"},{depth:4,value:"Parameters",heading:"parameters-134"},{depth:2,value:"Update information about a GitHub Pages site",heading:"update-information-about-a-github-pages-site"},{depth:4,value:"Parameters",heading:"parameters-135"},{depth:2,value:"Update a repository invitation",heading:"update-a-repository-invitation"},{depth:4,value:"Parameters",heading:"parameters-136"},{depth:2,value:"Update pull request review protection",heading:"update-pull-request-review-protection"},{depth:4,value:"Parameters",heading:"parameters-137"},{depth:2,value:"Update a release",heading:"update-a-release"},{depth:4,value:"Parameters",heading:"parameters-138"},{depth:2,value:"Update a release asset",heading:"update-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-139"},{depth:2,value:"Update status check protection",heading:"update-status-check-protection"},{depth:4,value:"Parameters",heading:"parameters-140"},{depth:2,value:"Update status check protection",heading:"update-status-check-protection-1"},{depth:4,value:"Parameters",heading:"parameters-141"},{depth:2,value:"Update a repository webhook",heading:"update-a-repository-webhook"},{depth:4,value:"Parameters",heading:"parameters-142"},{depth:2,value:"Update a webhook configuration for a repository",heading:"update-a-webhook-configuration-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-143"},{depth:2,value:"Upload a release asset",heading:"upload-a-release-asset"},{depth:4,value:"Parameters",heading:"parameters-144"}],nav:{path:"/api",title:"Api"}},title:"repos"},{path:"/en-US/api/search",component:a("XGRi").default,exact:!0,meta:{filePath:"docs/api/search.en-US.md",updatedTime:1611759433e3,title:"search",slugs:[{depth:2,value:"Search code",heading:"search-code"},{depth:6,value:"Considerations for code search",heading:"considerations-for-code-search"},{depth:2,value:"Parameters",heading:"parameters"},{depth:2,value:"Search commits",heading:"search-commits"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Search issues and pull requests",heading:"search-issues-and-pull-requests"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Search labels",heading:"search-labels"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Search repositories",heading:"search-repositories"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Search topics",heading:"search-topics"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Search users",heading:"search-users"},{depth:4,value:"Parameters",heading:"parameters-6"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"search"},{path:"/api/search",component:a("9Zrl").default,exact:!0,meta:{filePath:"docs/api/search.md",updatedTime:1611759433e3,title:"search",slugs:[{depth:2,value:"Search code",heading:"search-code"},{depth:6,value:"Considerations for code search",heading:"considerations-for-code-search"},{depth:2,value:"Parameters",heading:"parameters"},{depth:2,value:"Search commits",heading:"search-commits"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Search issues and pull requests",heading:"search-issues-and-pull-requests"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Search labels",heading:"search-labels"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Search repositories",heading:"search-repositories"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Search topics",heading:"search-topics"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Search users",heading:"search-users"},{depth:4,value:"Parameters",heading:"parameters-6"}],nav:{path:"/api",title:"Api"}},title:"search"},{path:"/en-US/api/secret-scanning",component:a("uJ+Q").default,exact:!0,meta:{filePath:"docs/api/secretScanning.en-US.md",updatedTime:1611759433e3,title:"secretScanning",slugs:[{depth:2,value:"Get a secret scanning alert",heading:"get-a-secret-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"List secret scanning alerts for a repository",heading:"list-secret-scanning-alerts-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Update a secret scanning alert",heading:"update-a-secret-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters-2"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"secretScanning"},{path:"/api/secret-scanning",component:a("CQfV").default,exact:!0,meta:{filePath:"docs/api/secretScanning.md",updatedTime:1611759433e3,title:"secretScanning",slugs:[{depth:2,value:"Get a secret scanning alert",heading:"get-a-secret-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"List secret scanning alerts for a repository",heading:"list-secret-scanning-alerts-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Update a secret scanning alert",heading:"update-a-secret-scanning-alert"},{depth:4,value:"Parameters",heading:"parameters-2"}],nav:{path:"/api",title:"Api"}},title:"secretScanning"},{path:"/en-US/api/teams",component:a("PKDs").default,exact:!0,meta:{filePath:"docs/api/teams.en-US.md",updatedTime:1611759433e3,title:"teams",slugs:[{depth:2,value:"Add or update team membership for a user",heading:"add-or-update-team-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Add or update team project permissions",heading:"add-or-update-team-project-permissions"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Add or update team repository permissions",heading:"add-or-update-team-repository-permissions"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Check team permissions for a project",heading:"check-team-permissions-for-a-project"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Check team permissions for a repository",heading:"check-team-permissions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a team",heading:"create-a-team"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a discussion comment",heading:"create-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Create a discussion",heading:"create-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a discussion comment",heading:"delete-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a discussion",heading:"delete-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Delete a team",heading:"delete-a-team"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get a team by name",heading:"get-a-team-by-name"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get a discussion comment",heading:"get-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a discussion",heading:"get-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get team membership for a user",heading:"get-team-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List teams",heading:"list-teams"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List child teams",heading:"list-child-teams"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List discussion comments",heading:"list-discussion-comments"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List discussions",heading:"list-discussions"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List teams for the authenticated user",heading:"list-teams-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List team members",heading:"list-team-members"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List pending team invitations",heading:"list-pending-team-invitations"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List team projects",heading:"list-team-projects"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List team repositories",heading:"list-team-repositories"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Remove team membership for a user",heading:"remove-team-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Remove a project from a team",heading:"remove-a-project-from-a-team"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Remove a repository from a team",heading:"remove-a-repository-from-a-team"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Update a discussion comment",heading:"update-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Update a discussion",heading:"update-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Update a team",heading:"update-a-team"},{depth:4,value:"Parameters",heading:"parameters-29"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"teams"},{path:"/api/teams",component:a("ct3h").default,exact:!0,meta:{filePath:"docs/api/teams.md",updatedTime:1611759433e3,title:"teams",slugs:[{depth:2,value:"Add or update team membership for a user",heading:"add-or-update-team-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Add or update team project permissions",heading:"add-or-update-team-project-permissions"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Add or update team repository permissions",heading:"add-or-update-team-repository-permissions"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Check team permissions for a project",heading:"check-team-permissions-for-a-project"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Check team permissions for a repository",heading:"check-team-permissions-for-a-repository"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a team",heading:"create-a-team"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a discussion comment",heading:"create-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Create a discussion",heading:"create-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a discussion comment",heading:"delete-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a discussion",heading:"delete-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Delete a team",heading:"delete-a-team"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get a team by name",heading:"get-a-team-by-name"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get a discussion comment",heading:"get-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get a discussion",heading:"get-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get team membership for a user",heading:"get-team-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"List teams",heading:"list-teams"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List child teams",heading:"list-child-teams"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List discussion comments",heading:"list-discussion-comments"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List discussions",heading:"list-discussions"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List teams for the authenticated user",heading:"list-teams-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List team members",heading:"list-team-members"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List pending team invitations",heading:"list-pending-team-invitations"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List team projects",heading:"list-team-projects"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List team repositories",heading:"list-team-repositories"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"Remove team membership for a user",heading:"remove-team-membership-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"Remove a project from a team",heading:"remove-a-project-from-a-team"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"Remove a repository from a team",heading:"remove-a-repository-from-a-team"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"Update a discussion comment",heading:"update-a-discussion-comment"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Update a discussion",heading:"update-a-discussion"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Update a team",heading:"update-a-team"},{depth:4,value:"Parameters",heading:"parameters-29"}],nav:{path:"/api",title:"Api"}},title:"teams"},{path:"/en-US/api/users",component:a("Boz7").default,exact:!0,meta:{filePath:"docs/api/users.en-US.md",updatedTime:1611759433e3,title:"users",slugs:[{depth:2,value:"Add an email address for the authenticated user",heading:"add-an-email-address-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Block a user",heading:"block-a-user"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Check if a user is blocked by the authenticated user",heading:"check-if-a-user-is-blocked-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Check if a user follows another user",heading:"check-if-a-user-follows-another-user"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Check if a person is followed by the authenticated user",heading:"check-if-a-person-is-followed-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a GPG key for the authenticated user",heading:"create-a-gpg-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a public SSH key for the authenticated user",heading:"create-a-public-ssh-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an email address for the authenticated user",heading:"delete-an-email-address-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a GPG key for the authenticated user",heading:"delete-a-gpg-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a public SSH key for the authenticated user",heading:"delete-a-public-ssh-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Follow a user",heading:"follow-a-user"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get the authenticated user",heading:"get-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get a user",heading:"get-a-user"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get contextual information for a user",heading:"get-contextual-information-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get a GPG key for the authenticated user",heading:"get-a-gpg-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Get a public SSH key for the authenticated user",heading:"get-a-public-ssh-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List users",heading:"list-users"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List users blocked by the authenticated user",heading:"list-users-blocked-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List email addresses for the authenticated user",heading:"list-email-addresses-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List the people the authenticated user follows",heading:"list-the-people-the-authenticated-user-follows"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List followers of the authenticated user",heading:"list-followers-of-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List followers of a user",heading:"list-followers-of-a-user"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List the people a user follows",heading:"list-the-people-a-user-follows"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List GPG keys for the authenticated user",heading:"list-gpg-keys-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List GPG keys for a user",heading:"list-gpg-keys-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List public email addresses for the authenticated user",heading:"list-public-email-addresses-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List public keys for a user",heading:"list-public-keys-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"List public SSH keys for the authenticated user",heading:"list-public-ssh-keys-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Set primary email visibility for the authenticated user",heading:"set-primary-email-visibility-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Unblock a user",heading:"unblock-a-user"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Unfollow a user",heading:"unfollow-a-user"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Update the authenticated user",heading:"update-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-31"}],locale:"en-US",nav:{path:"/en-US/api",title:"Api"}},title:"users"},{path:"/api/users",component:a("5VSm").default,exact:!0,meta:{filePath:"docs/api/users.md",updatedTime:1611759433e3,title:"users",slugs:[{depth:2,value:"Add an email address for the authenticated user",heading:"add-an-email-address-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters"},{depth:2,value:"Block a user",heading:"block-a-user"},{depth:4,value:"Parameters",heading:"parameters-1"},{depth:2,value:"Check if a user is blocked by the authenticated user",heading:"check-if-a-user-is-blocked-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-2"},{depth:2,value:"Check if a user follows another user",heading:"check-if-a-user-follows-another-user"},{depth:4,value:"Parameters",heading:"parameters-3"},{depth:2,value:"Check if a person is followed by the authenticated user",heading:"check-if-a-person-is-followed-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-4"},{depth:2,value:"Create a GPG key for the authenticated user",heading:"create-a-gpg-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-5"},{depth:2,value:"Create a public SSH key for the authenticated user",heading:"create-a-public-ssh-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-6"},{depth:2,value:"Delete an email address for the authenticated user",heading:"delete-an-email-address-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-7"},{depth:2,value:"Delete a GPG key for the authenticated user",heading:"delete-a-gpg-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-8"},{depth:2,value:"Delete a public SSH key for the authenticated user",heading:"delete-a-public-ssh-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-9"},{depth:2,value:"Follow a user",heading:"follow-a-user"},{depth:4,value:"Parameters",heading:"parameters-10"},{depth:2,value:"Get the authenticated user",heading:"get-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-11"},{depth:2,value:"Get a user",heading:"get-a-user"},{depth:4,value:"Parameters",heading:"parameters-12"},{depth:2,value:"Get contextual information for a user",heading:"get-contextual-information-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-13"},{depth:2,value:"Get a GPG key for the authenticated user",heading:"get-a-gpg-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-14"},{depth:2,value:"Get a public SSH key for the authenticated user",heading:"get-a-public-ssh-key-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-15"},{depth:2,value:"List users",heading:"list-users"},{depth:4,value:"Parameters",heading:"parameters-16"},{depth:2,value:"List users blocked by the authenticated user",heading:"list-users-blocked-by-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-17"},{depth:2,value:"List email addresses for the authenticated user",heading:"list-email-addresses-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-18"},{depth:2,value:"List the people the authenticated user follows",heading:"list-the-people-the-authenticated-user-follows"},{depth:4,value:"Parameters",heading:"parameters-19"},{depth:2,value:"List followers of the authenticated user",heading:"list-followers-of-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-20"},{depth:2,value:"List followers of a user",heading:"list-followers-of-a-user"},{depth:4,value:"Parameters",heading:"parameters-21"},{depth:2,value:"List the people a user follows",heading:"list-the-people-a-user-follows"},{depth:4,value:"Parameters",heading:"parameters-22"},{depth:2,value:"List GPG keys for the authenticated user",heading:"list-gpg-keys-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-23"},{depth:2,value:"List GPG keys for a user",heading:"list-gpg-keys-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-24"},{depth:2,value:"List public email addresses for the authenticated user",heading:"list-public-email-addresses-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-25"},{depth:2,value:"List public keys for a user",heading:"list-public-keys-for-a-user"},{depth:4,value:"Parameters",heading:"parameters-26"},{depth:2,value:"List public SSH keys for the authenticated user",heading:"list-public-ssh-keys-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-27"},{depth:2,value:"Set primary email visibility for the authenticated user",heading:"set-primary-email-visibility-for-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-28"},{depth:2,value:"Unblock a user",heading:"unblock-a-user"},{depth:4,value:"Parameters",heading:"parameters-29"},{depth:2,value:"Unfollow a user",heading:"unfollow-a-user"},{depth:4,value:"Parameters",heading:"parameters-30"},{depth:2,value:"Update the authenticated user",heading:"update-the-authenticated-user"},{depth:4,value:"Parameters",heading:"parameters-31"}],nav:{path:"/api",title:"Api"}},title:"users"},{path:"/en-US/guide/00_usage",component:a("23Rd").default,exact:!0,meta:{filePath:"docs/guide/00_usage.en-US.md",updatedTime:1611759433e3,title:"Usage",toc:"menu",slugs:[{depth:2,value:"Browsers",heading:"browsers"},{depth:2,value:"Node",heading:"node"}],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Usage"},{path:"/guide/00_usage",component:a("N34b").default,exact:!0,meta:{filePath:"docs/guide/00_usage.md",updatedTime:1611759433e3,title:"Usage",toc:"menu",slugs:[{depth:2,value:"Browsers",heading:"browsers"},{depth:2,value:"Node",heading:"node"}],nav:{path:"/guide",title:"Guide"}},title:"Usage"},{path:"/en-US/guide/01_authentication",component:a("GMmF").default,exact:!0,meta:{filePath:"docs/guide/01_authentication.en-US.md",updatedTime:1611759433e3,title:"Authentication",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Authentication"},{path:"/guide/01_authentication",component:a("z+as").default,exact:!0,meta:{filePath:"docs/guide/01_authentication.md",updatedTime:1611759433e3,title:"Authentication",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Authentication"},{path:"/en-US/guide/02_previews",component:a("mEd0").default,exact:!0,meta:{filePath:"docs/guide/02_previews.en-US.md",updatedTime:1611759433e3,title:"Previews",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Previews"},{path:"/guide/02_previews",component:a("gGGJ").default,exact:!0,meta:{filePath:"docs/guide/02_previews.md",updatedTime:1611759433e3,title:"Previews",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Previews"},{path:"/en-US/guide/03_request_formats",component:a("0he/").default,exact:!0,meta:{filePath:"docs/guide/03_request_formats.en-US.md",updatedTime:1611759433e3,title:"Request formats & aborts",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Request formats & aborts"},{path:"/guide/03_request_formats",component:a("bnzS").default,exact:!0,meta:{filePath:"docs/guide/03_request_formats.md",updatedTime:1611759433e3,title:"Request formats & aborts",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Request formats & aborts"},{path:"/en-US/guide/04_custom_requests",component:a("kiDB").default,exact:!0,meta:{filePath:"docs/guide/04_custom_requests.en-US.md",updatedTime:1611759433e3,title:"Custom requests",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Custom requests"},{path:"/guide/04_custom_requests",component:a("OZv6").default,exact:!0,meta:{filePath:"docs/guide/04_custom_requests.md",updatedTime:1611759433e3,title:"Custom requests",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Custom requests"},{path:"/en-US/guide/05_pagination",component:a("jzWn").default,exact:!0,meta:{filePath:"docs/guide/05_pagination.en-US.md",updatedTime:1611759433e3,title:"Pagination",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Pagination"},{path:"/guide/05_pagination",component:a("Svka").default,exact:!0,meta:{filePath:"docs/guide/05_pagination.md",updatedTime:1611759433e3,title:"Pagination",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Pagination"},{path:"/en-US/guide/06_hooks",component:a("ZOpk").default,exact:!0,meta:{filePath:"docs/guide/06_hooks.en-US.md",updatedTime:1611759433e3,title:"Hooks",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Hooks"},{path:"/guide/06_hooks",component:a("DsTl").default,exact:!0,meta:{filePath:"docs/guide/06_hooks.md",updatedTime:1611759433e3,title:"Hooks",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Hooks"},{path:"/en-US/guide/07_custom_endpoints",component:a("aQ6p").default,exact:!0,meta:{filePath:"docs/guide/07_custom_endpoints.en-US.md",updatedTime:1611759433e3,title:"Custom endpoint methods",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Custom endpoint methods"},{path:"/guide/07_custom_endpoints",component:a("8asx").default,exact:!0,meta:{filePath:"docs/guide/07_custom_endpoints.md",updatedTime:1611759433e3,title:"Custom endpoint methods",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Custom endpoint methods"},{path:"/en-US/guide/08_plugins",component:a("hIOp").default,exact:!0,meta:{filePath:"docs/guide/08_plugins.en-US.md",updatedTime:1611759433e3,title:"Plugins",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Plugins"},{path:"/guide/08_plugins",component:a("J6+M").default,exact:!0,meta:{filePath:"docs/guide/08_plugins.md",updatedTime:1611759433e3,title:"Plugins",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Plugins"},{path:"/en-US/guide/09_throttling",component:a("fnfB").default,exact:!0,meta:{filePath:"docs/guide/09_throttling.en-US.md",updatedTime:1611759433e3,title:"Throttling",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Throttling"},{path:"/guide/09_throttling",component:a("zCfM").default,exact:!0,meta:{filePath:"docs/guide/09_throttling.md",updatedTime:1611759433e3,title:"Throttling",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Throttling"},{path:"/en-US/guide/10_retries",component:a("AENf").default,exact:!0,meta:{filePath:"docs/guide/10_retries.en-US.md",updatedTime:1611759433e3,title:"Automatic retries",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Automatic retries"},{path:"/guide/10_retries",component:a("r+Pq").default,exact:!0,meta:{filePath:"docs/guide/10_retries.md",updatedTime:1611759433e3,title:"Automatic retries",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Automatic retries"},{path:"/en-US/guide/11_logging",component:a("rR/O").default,exact:!0,meta:{filePath:"docs/guide/11_logging.en-US.md",updatedTime:1611759433e3,title:"Logging",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Logging"},{path:"/guide/11_logging",component:a("LZsK").default,exact:!0,meta:{filePath:"docs/guide/11_logging.md",updatedTime:1611759433e3,title:"Logging",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Logging"},{path:"/en-US/guide/12_debug",component:a("DcLV").default,exact:!0,meta:{filePath:"docs/guide/12_debug.en-US.md",updatedTime:1611759433e3,title:"Debug",toc:"menu",slugs:[],locale:"en-US",nav:{path:"/en-US/guide",title:"Guide"}},title:"Debug"},{path:"/guide/12_debug",component:a("7mo+").default,exact:!0,meta:{filePath:"docs/guide/12_debug.md",updatedTime:1611759433e3,title:"Debug",toc:"menu",slugs:[],nav:{path:"/guide",title:"Guide"}},title:"Debug"},{path:"/en-US/api",meta:{},exact:!0,redirect:"/en-US/api/actions"},{path:"/api",meta:{},exact:!0,redirect:"/api/actions"},{path:"/en-US/guide",meta:{},exact:!0,redirect:"/en-US/guide/00_usage"},{path:"/guide",meta:{},exact:!0,redirect:"/guide/00_usage"}],title:"Octokit Rest API",component:e=>e.children}];return n["a"].applyPlugins({key:"patchRoutes",type:r["ApplyPluginsType"].event,args:{routes:e}}),e}var i=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n["a"].applyPlugins({key:"render",type:r["ApplyPluginsType"].compose,initialValue:()=>{var t=n["a"].applyPlugins({key:"modifyClientRenderOpts",type:r["ApplyPluginsType"].modify,initialValue:{routes:e.routes||o(),plugin:n["a"],history:Object(l["a"])(e.hot),isServer:!1,ssrProps:{},rootElement:"root",defaultTitle:"Octokit Rest API"}});return Object(c["renderClient"])(t)},args:e})},s=i();t["default"]=s();window.g_umi={version:"3.3.7"}},"14Sl":function(e,t,a){"use strict";a("rB9j");var n=a("busE"),l=a("0Dky"),r=a("tiKp"),c=a("kmMV"),o=a("kRJp"),i=r("species"),s=!l((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u=function(){return"$0"==="a".replace(/./,"$0")}(),m=r("replace"),d=function(){return!!/./[m]&&""===/./[m]("a","$0")}(),E=!l((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var a="ab".split(e);return 2!==a.length||"a"!==a[0]||"b"!==a[1]}));e.exports=function(e,t,a,m){var p=r(e),h=!l((function(){var t={};return t[p]=function(){return 7},7!=""[e](t)})),g=h&&!l((function(){var t=!1,a=/a/;return"split"===e&&(a={},a.constructor={},a.constructor[i]=function(){return a},a.flags="",a[p]=/./[p]),a.exec=function(){return t=!0,null},a[p](""),!t}));if(!h||!g||"replace"===e&&(!s||!u||d)||"split"===e&&!E){var b=/./[p],f=a(p,""[e],(function(e,t,a,n,l){return t.exec===c?h&&!l?{done:!0,value:b.call(t,a,n)}:{done:!0,value:e.call(a,t,n)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),y=f[0],k=f[1];n(String.prototype,e,y),n(RegExp.prototype,p,2==t?function(e,t){return k.call(e,this,t)}:function(e){return k.call(e,this)})}m&&o(RegExp.prototype[p],"sham",!0)}},"16Al":function(e,t,a){"use strict";var n=a("WbBG");function l(){}function r(){}r.resetWarningCache=l,e.exports=function(){function e(e,t,a,l,r,c){if(c!==n){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var a={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:l};return a.PropTypes=a,a}},"17x9":function(e,t,a){e.exports=a("16Al")()},"1E5z":function(e,t,a){var n=a("m/L8").f,l=a("UTVS"),r=a("tiKp"),c=r("toStringTag");e.exports=function(e,t,a){e&&!l(e=a?e:e.prototype,c)&&n(e,c,{configurable:!0,value:t})}},"1Y/n":function(e,t,a){var n=a("HAuM"),l=a("ewvW"),r=a("RK3t"),c=a("UMSQ"),o=function(e){return function(t,a,o,i){n(a);var s=l(t),u=r(s),m=c(s.length),d=e?m-1:0,E=e?-1:1;if(o<2)while(1){if(d in u){i=u[d],d+=E;break}if(d+=E,e?d<0:m<=d)throw TypeError("Reduce of empty array with no initial value")}for(;e?d>=0:m>d;d+=E)d in u&&(i=a(i,u[d],d,s));return i}};e.exports={left:o(!1),right:o(!0)}},"1kQv":function(e,t,a){var n=a("I+eb"),l=a("qY7S");n({target:"Set",stat:!0},{from:l})},"2/Uw":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-emojis"},l.a.createElement(r["AnchorLink"],{to:"#get-emojis","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get emojis"),l.a.createElement("p",null,"Lists all the emojis available to use on GitHub."),l.a.createElement(c["a"],{code:"octokit.emojis.get();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/emojis/#get-emojis"},"GitHub Developer Guide documentation"),".")))}},"23Rd":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Import the Octokit constructor based on your platform."),l.a.createElement("h2",{id:"browsers"},l.a.createElement(r["AnchorLink"],{to:"#browsers","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Browsers"),l.a.createElement("p",null,"Load ",l.a.createElement("code",null,"@octokit/rest")," directly from ",l.a.createElement(r["Link"],{to:"https://cdn.skypack.dev/"},"cdn.skypack.dev")),l.a.createElement(c["a"],{code:'<script type="module">\n  import { Octokit } from "https://cdn.skypack.dev/@octokit/rest";\n<\/script>\n',lang:"html"}),l.a.createElement("h2",{id:"node"},l.a.createElement(r["AnchorLink"],{to:"#node","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Node"),l.a.createElement("p",null,"Install with ",l.a.createElement("code",null,"npm install @octokit/rest")),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\n// or: import { Octokit } from "@octokit/rest";\n',lang:"js"}),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\n',lang:"js"}),l.a.createElement("p",null,"Now instantiate your octokit API. All options are optional, but authentication is strongly encouraged."),l.a.createElement(c["a"],{code:"const octokit = new Octokit({\n",lang:"js"}),l.a.createElement("p",null,"You can set ",l.a.createElement("code",null,"auth")," to a personal access token string."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#authentication"},"authentication"),"."),l.a.createElement(c["a"],{code:'  auth: "secret123",\n',lang:"js"}),l.a.createElement("p",null,"Setting a user agent ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#user-agent-required"},"is required"),". It defaults to ",l.a.createElement("code",null,"octokit/rest.js v1.2.3")," where ",l.a.createElement("code",null,"v1.2.3")," is the current version of ",l.a.createElement("code",null,"@octokit/rest"),", but you should set it to something that identifies your app or script."),l.a.createElement(c["a"],{code:"  userAgent: 'myApp v1.2.3',\n",lang:"js"}),l.a.createElement("p",null,"API Previews can be enabled globally by setting the ",l.a.createElement("code",null,"previews")," option. They can be set per-request as well."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#previews"},"API Previews"),"."),l.a.createElement(c["a"],{code:"  previews: ['jean-grey', 'symmetra'],\n",lang:"js"}),l.a.createElement("p",null,"A default time zone can be enabled by setting the ",l.a.createElement("code",null,"timeZone")," option."),l.a.createElement(c["a"],{code:"  timeZone: 'Europe/Amsterdam',\n",lang:"js"}),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#timezones"},"using time zones with the GitHub API"),"."),l.a.createElement("p",null,"In order to use Octokit with GitHub Enterprise, set the ",l.a.createElement("code",null,"baseUrl")," option."),l.a.createElement(c["a"],{code:"  baseUrl: 'https://api.github.com',\n",lang:"js"}),l.a.createElement("p",null,"For custom logging, pass an object with ",l.a.createElement("code",null,"debug"),", ",l.a.createElement("code",null,"info"),", ",l.a.createElement("code",null,"warn")," and ",l.a.createElement("code",null,"error")," methods as the ",l.a.createElement("code",null,"log")," option."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#logging"},"logging")," and ",l.a.createElement(r["AnchorLink"],{to:"#debug"},"debugging"),"."),l.a.createElement(c["a"],{code:"  log: {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error\n  },\n",lang:"js"}),l.a.createElement("p",null,"Custom request options can be passed as ",l.a.createElement("code",null,"request.*")," options. See ",l.a.createElement(r["Link"],{to:"https://www.npmjs.com/package/@octokit/request#octokitrequest"},l.a.createElement("code",null,"@octokit/request"))," options. The same options can be passed to each endpoint request method."),l.a.createElement(c["a"],{code:"  request: {\n    agent: undefined,\n    fetch: undefined,\n    timeout: 0\n  }\n})\n",lang:"js"}),l.a.createElement("p",null,"Most of GitHub\u2019s REST API endpoints have matching methods. All endpoint methods are asynchronous, in order to use ",l.a.createElement("code",null,"await")," in the code examples, we wrap them into an anonymous async function."),l.a.createElement(c["a"],{code:"(async () => {\n",lang:"js"}),l.a.createElement("p",null,"For example to retrieve a pull request, use ",l.a.createElement(r["AnchorLink"],{to:"#octokit-routes-pulls-get"},l.a.createElement("code",null,"octokit.pulls.get()")),". We recommend to use the search above to find the endpoint method you are looking for"),l.a.createElement(c["a"],{code:'const { data: pullRequest } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 123,\n});\n',lang:"js"}),l.a.createElement("p",null,"Some API endpoints support alternative response formats, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/media-types"},"Media types"),". For example, to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/media-types/#diff"},"request the above pull request in a diff format"),", pass the ",l.a.createElement("code",null,"mediaType.format")," option."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#request-formats"},"request formats"),"."),l.a.createElement(c["a"],{code:'const { data: diff } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 123,\n  mediaType: {\n    format: "diff",\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"For the API endpoints that do not have a matching method, such as the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#root-endpoint"},"root endpoint")," or legacy endpoints, you can send custom requests."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#custom-requests"},"custom requests"),"."),l.a.createElement(c["a"],{code:'const { data: root } = await octokit.request("GET /");\n',lang:"js"}),l.a.createElement("p",null,"You can also register custom endpoint methods, which is particularly useful if you participate in a private beta."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#custom-endpoint-methods"},"custom endpoint methods"),"."),l.a.createElement(c["a"],{code:'await octokit.registerEndpoints({\n  misc: {\n    getRoot: {\n      method: "GET",\n      url: "/",\n    },\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"Some endpoints return a list which has to be paginated in order to retrieve the complete data set."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#pagination"},"pagination"),"."),l.a.createElement(c["a"],{code:"  octokit.paginate(octokit.issues.listForRepo, {\n    owner: 'octokit',\n    repo: 'rest.js'\n  })\n    .then(issues => {\n      // issues is an array of all issue objects\n    })\n})\n",lang:"js"}),l.a.createElement("p",null,"You can add more functionality with plugins. We recommend the retry and throttling plugins."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#throttling"},"throttling"),", ",l.a.createElement(r["AnchorLink"],{to:"#automatic-retries"},"automatic retries")," and building your own ",l.a.createElement(r["AnchorLink"],{to:"#plugins"},"Plugins"),"."),l.a.createElement(c["a"],{code:'import { retry } from "@octokit/plugin-retry";\nimport { throttling } from "@octokit/plugin-throttling";\n\nconst MyOctokit = Octokit.plugin(retry, throttling);\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,"Octokit.plugin()")," returns a new constructor. The same options can be passed to the constructor. The options are passed on to all plugin functions as the 2nd argument."),l.a.createElement(c["a"],{code:'const myOctokit = new MyOctokit({\n  auth: "secret123",\n  throttle: {\n    onRateLimit: (retryAfter, options) => {\n      myOctokit.log.warn(\n        `Request quota exhausted for request ${options.method} ${options.url}`\n      );\n\n      if (options.request.retryCount === 0) {\n        // only retries once\n        myOctokit.log.info(`Retrying after ${retryAfter} seconds!`);\n        return true;\n      }\n    },\n    onAbuseLimit: (retryAfter, options) => {\n      // does not retry, only logs a warning\n      myOctokit.log.warn(\n        `Abuse detected for request ${options.method} ${options.url}`\n      );\n    },\n  },\n  retry: {\n    doNotRetry: ["429"],\n  },\n});\n',lang:"js"})))}},"27RR":function(e,t,a){var n=a("I+eb"),l=a("g6v/"),r=a("Vu81"),c=a("/GqU"),o=a("Bs8V"),i=a("hBjN");n({target:"Object",stat:!0,sham:!l},{getOwnPropertyDescriptors:function(e){var t,a,n=c(e),l=o.f,s=r(n),u={},m=0;while(s.length>m)a=l(n,t=s[m++]),void 0!==a&&i(u,t,a);return u}})},"2B1R":function(e,t,a){"use strict";var n=a("I+eb"),l=a("tycR").map,r=a("Hd5f"),c=a("rkAj"),o=r("map"),i=c("map");n({target:"Array",proto:!0,forced:!o||!i},{map:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}})},"2mql":function(e,t,a){"use strict";var n=a("TOwV"),l={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},r={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},c={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function s(e){return n.isMemo(e)?o:i[e["$$typeof"]]||l}i[n.ForwardRef]=c,i[n.Memo]=o;var u=Object.defineProperty,m=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,E=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;function g(e,t,a){if("string"!==typeof t){if(h){var n=p(t);n&&n!==h&&g(e,n,a)}var l=m(t);d&&(l=l.concat(d(t)));for(var c=s(e),o=s(t),i=0;i<l.length;++i){var b=l[i];if(!r[b]&&(!a||!a[b])&&(!o||!o[b])&&(!c||!c[b])){var f=E(t,b);try{u(e,b,f)}catch(y){}}}}return e}e.exports=g},"2oRo":function(e,t,a){(function(t){var a=function(e){return e&&e.Math==Math&&e};e.exports=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof t&&t)||Function("return this")()}).call(this,a("yLpj"))},"2tOg":function(e,t,a){"use strict";var n=a("g6v/"),l=a("RNIs"),r=a("ewvW"),c=a("UMSQ"),o=a("m/L8").f;n&&!("lastItem"in[])&&(o(Array.prototype,"lastItem",{configurable:!0,get:function(){var e=r(this),t=c(e.length);return 0==t?void 0:e[t-1]},set:function(e){var t=r(this),a=c(t.length);return t[0==a?0:a-1]=e}}),l("lastItem"))},"3/A/":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"create-a-check-run"},l.a.createElement(r["AnchorLink"],{to:"#create-a-check-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a check run"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Creates a new check run for a specific commit in a repository. Your GitHub App must have the ",l.a.createElement("code",null,"checks:write")," permission to create check runs."),l.a.createElement("p",null,"In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs."),l.a.createElement(c["a"],{code:"octokit.checks.create({\n        owner,\nrepo,\nname,\nhead_sha,\noutput.title,\noutput.summary,\noutput.annotations[].path,\noutput.annotations[].start_line,\noutput.annotations[].end_line,\noutput.annotations[].annotation_level,\noutput.annotations[].message,\noutput.images[].alt,\noutput.images[].image_url,\nactions[].label,\nactions[].description,\nactions[].identifier\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,'The name of the check. For example, "code-coverage".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"head_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the commit."))),l.a.createElement("tr",null,l.a.createElement("td",null,"details_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used."))),l.a.createElement("tr",null,l.a.createElement("td",null,"external_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the run on the integrator's system."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The current status. Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"started_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time that the check run began. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"conclusion"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required if you provide ",l.a.createElement("code",null,"completed_at")," or a ",l.a.createElement("code",null,"status")," of ",l.a.createElement("code",null,"completed")),". The final conclusion of the check. Can be one of ",l.a.createElement("code",null,"success"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"neutral"),", ",l.a.createElement("code",null,"cancelled"),", ",l.a.createElement("code",null,"skipped"),", ",l.a.createElement("code",null,"timed_out"),", or ",l.a.createElement("code",null,"action_required"),". When the conclusion is ",l.a.createElement("code",null,"action_required"),", additional details should be provided on the site specified by ",l.a.createElement("code",null,"details_url"),".",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," Providing ",l.a.createElement("code",null,"conclusion")," will automatically set the ",l.a.createElement("code",null,"status")," parameter to ",l.a.createElement("code",null,"completed"),". Only GitHub can change a check run conclusion to ",l.a.createElement("code",null,"stale"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"completed_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time the check completed. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Check runs can accept a variety of data in the ",l.a.createElement("code",null,"output")," object, including a ",l.a.createElement("code",null,"title")," and ",l.a.createElement("code",null,"summary")," and can optionally provide descriptive details about the run. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#output-object"},l.a.createElement("code",null,"output")," object")," description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the check run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.summary"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The summary of the check run. This parameter supports Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.text"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The details of the check run. This parameter supports Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the ",l.a.createElement("strong",null,"Checks")," and ",l.a.createElement("strong",null,"Files changed")," tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-a-check-run"},"Update a check run"),' endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-status-checks#checks"},"About status checks"),'". See the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#annotations-object"},l.a.createElement("code",null,"annotations")," object")," description for details about how to use this parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The path of the file to add an annotation to. For example, ",l.a.createElement("code",null,"assets/css/main.css"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The start line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The end line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The start column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The end column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].annotation_level"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of the annotation. Can be one of ",l.a.createElement("code",null,"notice"),", ",l.a.createElement("code",null,"warning"),", or ",l.a.createElement("code",null,"failure"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the feedback for these lines of code. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title that represents the annotation. The maximum size is 255 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].raw_details"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Details about this annotation. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds images to the output displayed in the GitHub pull request UI. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#images-object"},l.a.createElement("code",null,"images")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].alt"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The alternative text for the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].image_url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The full URL of the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].caption"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short image description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#check_run"},l.a.createElement("code",null,"check_run.requested_action")," webhook")," to your app. Each action includes a ",l.a.createElement("code",null,"label"),", ",l.a.createElement("code",null,"identifier")," and ",l.a.createElement("code",null,"description"),". A maximum of three actions are accepted. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#actions-object"},l.a.createElement("code",null,"actions")," object"),' description. To learn more about check runs and requested actions, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions"},"Check runs and requested actions"),'." To learn more about check runs and requested actions, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions"},"Check runs and requested actions"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].label"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text to be displayed on a button in the web UI. The maximum size is 20 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].description"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short explanation of what this action would do. The maximum size is 40 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].identifier"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the action on the integrator's system. The maximum size is 20 characters."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#create-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a check suite"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array and a ",l.a.createElement("code",null,"null")," value for ",l.a.createElement("code",null,"head_branch"),"."),l.a.createElement("p",null,"By default, check suites are automatically created when you create a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs"},"check run"),". You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites"},"Update repository preferences for check suites"),'". Your GitHub App must have the ',l.a.createElement("code",null,"checks:write")," permission to create check suites."),l.a.createElement(c["a"],{code:"octokit.checks.createSuite({\n  owner,\n  repo,\n  head_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"head_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The sha of the head commit."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-check-run"},l.a.createElement(r["AnchorLink"],{to:"#get-a-check-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a check run"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Gets a single check run using its ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check runs in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.get({\n  owner,\n  repo,\n  check_run_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_run_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#get-a-check-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#get-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a check suite"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array and a ",l.a.createElement("code",null,"null")," value for ",l.a.createElement("code",null,"head_branch"),"."),l.a.createElement("p",null,"Gets a single check suite using its ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check suites in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.getSuite({\n  owner,\n  repo,\n  check_suite_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_suite_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_suite_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#get-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-run-annotations"},l.a.createElement(r["AnchorLink"],{to:"#list-check-run-annotations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check run annotations"),l.a.createElement("p",null,"Lists annotations for a check run using the annotation ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get annotations for a check run in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listAnnotations({\n  owner,\n  repo,\n  check_run_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_run_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-run-annotations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-runs-for-a-git-reference"},l.a.createElement(r["AnchorLink"],{to:"#list-check-runs-for-a-git-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check runs for a Git reference"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Lists check runs for a commit ref. The ",l.a.createElement("code",null,"ref")," can be a SHA, branch name, or a tag name. GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check runs in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"check_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"status"),". Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters check runs by their ",l.a.createElement("code",null,"completed_at")," timestamp. Can be one of ",l.a.createElement("code",null,"latest")," (returning the most recent check runs) or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-runs-for-a-git-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-runs-in-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#list-check-runs-in-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check runs in a check suite"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Lists check runs for a check suite using its ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check runs in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listForSuite({\n  owner,\n  repo,\n  check_suite_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_suite_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_suite_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"check_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"status"),". Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters check runs by their ",l.a.createElement("code",null,"completed_at")," timestamp. Can be one of ",l.a.createElement("code",null,"latest")," (returning the most recent check runs) or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-suites-for-a-git-reference"},l.a.createElement(r["AnchorLink"],{to:"#list-check-suites-for-a-git-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check suites for a Git reference"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array and a ",l.a.createElement("code",null,"null")," value for ",l.a.createElement("code",null,"head_branch"),"."),l.a.createElement("p",null,"Lists check suites for a commit ",l.a.createElement("code",null,"ref"),". The ",l.a.createElement("code",null,"ref")," can be a SHA, branch name, or a tag name. GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check suites in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listSuitesForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"app_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters check suites by GitHub App ",l.a.createElement("code",null,"id"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"check_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"rerequest-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#rerequest-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Rerequest a check suite"),l.a.createElement("p",null,"Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#check_suite"},l.a.createElement("code",null,"check_suite")," webhook")," event with the action ",l.a.createElement("code",null,"rerequested"),". When a check suite is ",l.a.createElement("code",null,"rerequested"),", its ",l.a.createElement("code",null,"status")," is reset to ",l.a.createElement("code",null,"queued")," and the ",l.a.createElement("code",null,"conclusion")," is cleared."),l.a.createElement("p",null,"To rerequest a check suite, your GitHub App must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository."),l.a.createElement(c["a"],{code:"octokit.checks.rerequestSuite({\n  owner,\n  repo,\n  check_suite_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_suite_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_suite_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#rerequest-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-repository-preferences-for-check-suites"},l.a.createElement(r["AnchorLink"],{to:"#update-repository-preferences-for-check-suites","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update repository preferences for check suites"),l.a.createElement("p",null,"Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-suite"},"Create a check suite"),". You must have admin permissions in the repository to set preferences for check suites."),l.a.createElement(c["a"],{code:"octokit.checks.setSuitesPreferences({\n        owner,\nrepo,\nauto_trigger_checks[].app_id,\nauto_trigger_checks[].setting\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_trigger_checks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#auto_trigger_checks-object"},l.a.createElement("code",null,"auto_trigger_checks")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_trigger_checks[].app_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement("code",null,"id")," of the GitHub App."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_trigger_checks[].setting"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," to enable automatic creation of CheckSuite events upon pushes to the repository, or ",l.a.createElement("code",null,"false")," to disable them."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-check-run"},l.a.createElement(r["AnchorLink"],{to:"#update-a-check-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a check run"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Updates a check run for a specific commit in a repository. Your GitHub App must have the ",l.a.createElement("code",null,"checks:write")," permission to edit check runs."),l.a.createElement(c["a"],{code:"octokit.checks.update({\n        owner,\nrepo,\ncheck_run_id,\noutput.summary,\noutput.annotations[].path,\noutput.annotations[].start_line,\noutput.annotations[].end_line,\noutput.annotations[].annotation_level,\noutput.annotations[].message,\noutput.images[].alt,\noutput.images[].image_url,\nactions[].label,\nactions[].description,\nactions[].identifier\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_run_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,'The name of the check. For example, "code-coverage".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"details_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL of the integrator's site that has the full details of the check."))),l.a.createElement("tr",null,l.a.createElement("td",null,"external_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the run on the integrator's system."))),l.a.createElement("tr",null,l.a.createElement("td",null,"started_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The current status. Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"conclusion"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required if you provide ",l.a.createElement("code",null,"completed_at")," or a ",l.a.createElement("code",null,"status")," of ",l.a.createElement("code",null,"completed")),". The final conclusion of the check. Can be one of ",l.a.createElement("code",null,"success"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"neutral"),", ",l.a.createElement("code",null,"cancelled"),", ",l.a.createElement("code",null,"skipped"),", ",l.a.createElement("code",null,"timed_out"),", or ",l.a.createElement("code",null,"action_required"),".",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," Providing ",l.a.createElement("code",null,"conclusion")," will automatically set the ",l.a.createElement("code",null,"status")," parameter to ",l.a.createElement("code",null,"completed"),". Only GitHub can change a check run conclusion to ",l.a.createElement("code",null,"stale"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"completed_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time the check completed. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Check runs can accept a variety of data in the ",l.a.createElement("code",null,"output")," object, including a ",l.a.createElement("code",null,"title")," and ",l.a.createElement("code",null,"summary")," and can optionally provide descriptive details about the run. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#output-object-1"},l.a.createElement("code",null,"output")," object")," description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.summary"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Can contain Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.text"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can contain Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-a-check-run"},"Update a check run"),' endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-status-checks#checks"},"About status checks"),'". See the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#annotations-object-1"},l.a.createElement("code",null,"annotations")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The path of the file to add an annotation to. For example, ",l.a.createElement("code",null,"assets/css/main.css"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The start line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The end line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The start column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The end column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].annotation_level"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of the annotation. Can be one of ",l.a.createElement("code",null,"notice"),", ",l.a.createElement("code",null,"warning"),", or ",l.a.createElement("code",null,"failure"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the feedback for these lines of code. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title that represents the annotation. The maximum size is 255 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].raw_details"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Details about this annotation. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds images to the output displayed in the GitHub pull request UI. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#annotations-object-1"},l.a.createElement("code",null,"images")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].alt"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The alternative text for the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].image_url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The full URL of the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].caption"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short image description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Possible further actions the integrator can perform, which a user may trigger. Each action includes a ",l.a.createElement("code",null,"label"),", ",l.a.createElement("code",null,"identifier")," and ",l.a.createElement("code",null,"description"),". A maximum of three actions are accepted. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#actions-object"},l.a.createElement("code",null,"actions")," object"),' description. To learn more about check runs and requested actions, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions"},"Check runs and requested actions"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].label"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text to be displayed on a button in the web UI. The maximum size is 20 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].description"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short explanation of what this action would do. The maximum size is 40 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].identifier"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the action on the integrator's system. The maximum size is 20 characters."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-a-check-run"},"GitHub Developer Guide documentation"),".")))}},"30TX":function(e,t){},"33Wh":function(e,t,a){var n=a("yoRg"),l=a("eDl+");e.exports=Object.keys||function(e){return n(e,l)}},"3I1R":function(e,t,a){var n=a("dG/n");n("hasInstance")},"3QDa":function(e,t,a){"use strict";var n=a("J4zp");function l(){var e=s(a("q1tI"));return l=function(){return e},e}function r(){var e=o(a("Zs1V"));return r=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var c=o(a("nLCz"));function o(e){return e&&e.__esModule?e:{default:e}}function i(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function s(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if(Object.prototype.hasOwnProperty.call(e,l)){var r=n?Object.getOwnPropertyDescriptor(e,l):null;r&&(r.get||r.set)?Object.defineProperty(a,l,r):a[l]=e[l]}return a["default"]=e,t&&t.set(e,a),a}function u(e,t){return h(e)||p(e,t)||d(e,t)||m()}function m(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function d(e,t){if(e){if("string"===typeof e)return E(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?E(e,t):void 0}}function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function p(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function h(e){if(Array.isArray(e))return e}function g(e,t,a){return Object.entries(r()["default"][e]).reduce((function(e,l){var r=n(l,2),c=r[0],o=r[1];return e[c]=o.map((function(e){var n=Object.assign({},e);return Object.keys(e).forEach((function(e){if(/^description(\.|$)/.test(e)){var l=e.match(/^description\.?(.*)$/),r=u(l,2),c=r[1];c&&c!==t||!c&&!a?delete n[e]:n.description=n[e]}})),n})),e}),{})}var b=function(e){var t=(0,l().useContext)(c["default"]),a=t.locale,n=t.config.locales,r=!n.length||n[0].name===a,o=(0,l().useState)(g(e,a,r)),i=u(o,2),s=i[0],m=i[1];return(0,l().useEffect)((function(){m(g(e,a,r))}),[e,a,r]),s};t["default"]=b},"3Zq6":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"check-if-a-repository-is-starred-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-repository-is-starred-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a repository is starred by the authenticated user"),l.a.createElement(c["a"],{code:"octokit.activity.checkRepoIsStarredByAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-subscription"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository subscription"),l.a.createElement("p",null,"This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-repository-subscription"},"set the repository's subscription manually"),"."),l.a.createElement(c["a"],{code:"octokit.activity.deleteRepoSubscription({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-repository-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-thread-subscription"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-thread-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a thread subscription"),l.a.createElement("p",null,"Mutes all future notifications for a conversation until you comment on the thread or get an ",l.a.createElement("strong",null,"@mention"),". If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-thread-subscription"},"Set a thread subscription")," endpoint and set ",l.a.createElement("code",null,"ignore")," to ",l.a.createElement("code",null,"true"),"."),l.a.createElement(c["a"],{code:"octokit.activity.deleteThreadSubscription({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-thread-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-feeds"},l.a.createElement(r["AnchorLink"],{to:"#get-feeds","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get feeds"),l.a.createElement("p",null,"GitHub provides several timeline resources in ",l.a.createElement(r["Link"],{to:"http://en.wikipedia.org/wiki/Atom_(standard)"},"Atom")," format. The Feeds API lists all the feeds available to the authenticated user:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Timeline"),": The GitHub global public timeline"),l.a.createElement("li",null,l.a.createElement("strong",null,"User"),": The public timeline for any user, using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia"},"URI template")),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user public"),": The public timeline for the authenticated user"),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user"),": The private timeline for the authenticated user"),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user actor"),": The private timeline for activity created by the authenticated user"),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user organizations"),": The private timeline for the organizations the authenticated user is a member of."),l.a.createElement("li",null,l.a.createElement("strong",null,"Security advisories"),": A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.")),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Private feeds are only returned when ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"authenticating via Basic Auth")," since current feed URIs use the older, non revocable auth tokens."),l.a.createElement(c["a"],{code:"octokit.activity.getFeeds();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-feeds"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-subscription"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository subscription"),l.a.createElement(c["a"],{code:"octokit.activity.getRepoSubscription({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-repository-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-thread"},l.a.createElement(r["AnchorLink"],{to:"#get-a-thread","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a thread"),l.a.createElement(c["a"],{code:"octokit.activity.getThread({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-thread"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-thread-subscription-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-thread-subscription-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a thread subscription for the authenticated user"),l.a.createElement("p",null,"This checks to see if the current user is subscribed to a thread. You can also ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-repository-subscription"},"get a repository subscription"),"."),l.a.createElement("p",null,"Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were ",l.a.createElement("strong",null,"@mentioned"),", or manually subscribe to a thread."),l.a.createElement(c["a"],{code:"octokit.activity.getThreadSubscriptionForAuthenticatedUser({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-events-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-events-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List events for the authenticated user"),l.a.createElement("p",null,"If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events."),l.a.createElement(c["a"],{code:"octokit.activity.listEventsForAuthenticatedUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-events-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-notifications-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-notifications-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List notifications for the authenticated user"),l.a.createElement("p",null,"List all notifications for the current user, sorted by most recently updated."),l.a.createElement(c["a"],{code:"octokit.activity.listNotificationsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"all"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", show notifications marked as read."))),l.a.createElement("tr",null,l.a.createElement("td",null,"participating"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", only shows notifications in which the user is directly participating or mentioned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"before"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated before the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-events-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-events-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization events for the authenticated user"),l.a.createElement("p",null,"This is the user's organization dashboard. You must be authenticated as the user to view this."),l.a.createElement(c["a"],{code:"octokit.activity.listOrgEventsForAuthenticatedUser({\n  username,\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-organization-events-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events"),l.a.createElement("p",null,"We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago."),l.a.createElement(c["a"],{code:"octokit.activity.listPublicEvents();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events-for-a-network-of-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events-for-a-network-of-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events for a network of repositories"),l.a.createElement(c["a"],{code:"octokit.activity.listPublicEventsForRepoNetwork({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events-for-a-network-of-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events for a user"),l.a.createElement(c["a"],{code:"octokit.activity.listPublicEventsForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-organization-events"},l.a.createElement(r["AnchorLink"],{to:"#list-public-organization-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public organization events"),l.a.createElement(c["a"],{code:"octokit.activity.listPublicOrgEvents({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-organization-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-events-received-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-events-received-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List events received by the authenticated user"),l.a.createElement("p",null,"These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events."),l.a.createElement(c["a"],{code:"octokit.activity.listReceivedEventsForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-events-received-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events-received-by-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events-received-by-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events received by a user"),l.a.createElement(c["a"],{code:"octokit.activity.listReceivedPublicEventsForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events-received-by-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-events"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository events"),l.a.createElement(c["a"],{code:"octokit.activity.listRepoEvents({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repository-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-notifications-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-notifications-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository notifications for the authenticated user"),l.a.createElement("p",null,"List all notifications for the current user."),l.a.createElement(c["a"],{code:"octokit.activity.listRepoNotificationsForAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"all"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", show notifications marked as read."))),l.a.createElement("tr",null,l.a.createElement("td",null,"participating"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", only shows notifications in which the user is directly participating or mentioned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"before"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated before the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-starred-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-starred-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories starred by the authenticated user"),l.a.createElement("p",null,"Lists repositories the authenticated user has starred."),l.a.createElement("p",null,"You can also find out ",l.a.createElement("em",null,"when")," stars were created by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"Accept")," header:"),l.a.createElement(c["a"],{code:"octokit.activity.listReposStarredByAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-starred-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-starred-by-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-starred-by-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories starred by a user"),l.a.createElement("p",null,"Lists repositories a user has starred."),l.a.createElement("p",null,"You can also find out ",l.a.createElement("em",null,"when")," stars were created by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"Accept")," header:"),l.a.createElement(c["a"],{code:"octokit.activity.listReposStarredByUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-starred-by-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-watched-by-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-watched-by-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories watched by a user"),l.a.createElement("p",null,"Lists repositories a user is watching."),l.a.createElement(c["a"],{code:"octokit.activity.listReposWatchedByUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-watched-by-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-stargazers"},l.a.createElement(r["AnchorLink"],{to:"#list-stargazers","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List stargazers"),l.a.createElement("p",null,"Lists the people that have starred the repository."),l.a.createElement("p",null,"You can also find out ",l.a.createElement("em",null,"when")," stars were created by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"Accept")," header:"),l.a.createElement(c["a"],{code:"octokit.activity.listStargazersForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-stargazers"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-watched-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-watched-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories watched by the authenticated user"),l.a.createElement("p",null,"Lists repositories the authenticated user is watching."),l.a.createElement(c["a"],{code:"octokit.activity.listWatchedReposForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-watched-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-watchers"},l.a.createElement(r["AnchorLink"],{to:"#list-watchers","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List watchers"),l.a.createElement("p",null,"Lists the people watching the specified repository."),l.a.createElement(c["a"],{code:"octokit.activity.listWatchersForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-watchers"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"mark-notifications-as-read"},l.a.createElement(r["AnchorLink"],{to:"#mark-notifications-as-read","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Mark notifications as read"),l.a.createElement("p",null,'Marks all notifications as "read" removes it from the ',l.a.createElement(r["Link"],{to:"https://github.com/notifications"},"default view on GitHub"),". If the number of notifications is too large to complete in one request, you will receive a ",l.a.createElement("code",null,"202 Accepted"),' status and GitHub will run an asynchronous process to mark notifications as "read." To check whether any "unread" notifications remain, you can use the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user"},"List notifications for the authenticated user")," endpoint and pass the query parameter ",l.a.createElement("code",null,"all=false"),"."),l.a.createElement(c["a"],{code:"octokit.activity.markNotificationsAsRead();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"last_read_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Describes the last point that notifications were checked."))),l.a.createElement("tr",null,l.a.createElement("td",null,"read"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the notification has been read."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#mark-notifications-as-read"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"mark-repository-notifications-as-read"},l.a.createElement(r["AnchorLink"],{to:"#mark-repository-notifications-as-read","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Mark repository notifications as read"),l.a.createElement("p",null,'Marks all notifications in a repository as "read" removes them from the ',l.a.createElement(r["Link"],{to:"https://github.com/notifications"},"default view on GitHub"),". If the number of notifications is too large to complete in one request, you will receive a ",l.a.createElement("code",null,"202 Accepted"),' status and GitHub will run an asynchronous process to mark notifications as "read." To check whether any "unread" notifications remain, you can use the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user"},"List repository notifications for the authenticated user")," endpoint and pass the query parameter ",l.a.createElement("code",null,"all=false"),"."),l.a.createElement(c["a"],{code:"octokit.activity.markRepoNotificationsAsRead({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"last_read_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),". Default: The current timestamp."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#mark-repository-notifications-as-read"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"mark-a-thread-as-read"},l.a.createElement(r["AnchorLink"],{to:"#mark-a-thread-as-read","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Mark a thread as read"),l.a.createElement(c["a"],{code:"octokit.activity.markThreadAsRead({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#mark-a-thread-as-read"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-a-repository-subscription"},l.a.createElement(r["AnchorLink"],{to:"#set-a-repository-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set a repository subscription"),l.a.createElement("p",null,"If you would like to watch a repository, set ",l.a.createElement("code",null,"subscribed")," to ",l.a.createElement("code",null,"true"),". If you would like to ignore notifications made within a repository, set ",l.a.createElement("code",null,"ignored")," to ",l.a.createElement("code",null,"true"),". If you would like to stop watching a repository, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-repository-subscription"},"delete the repository's subscription")," completely."),l.a.createElement(c["a"],{code:"octokit.activity.setRepoSubscription({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"subscribed"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications should be received from this repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ignored"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if all notifications should be blocked from this repository."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-repository-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-a-thread-subscription"},l.a.createElement(r["AnchorLink"],{to:"#set-a-thread-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set a thread subscription"),l.a.createElement("p",null,"If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an ",l.a.createElement("strong",null,"@mention"),"."),l.a.createElement("p",null,"You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored."),l.a.createElement("p",null,"Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-thread-subscription"},"Delete a thread subscription")," endpoint."),l.a.createElement(c["a"],{code:"octokit.activity.setThreadSubscription({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"ignored"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to block all notifications from a thread."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-thread-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"star-a-repository-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#star-a-repository-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Star a repository for the authenticated user"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.activity.starRepoForAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#star-a-repository-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unstar-a-repository-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#unstar-a-repository-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unstar a repository for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.activity.unstarRepoForAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#unstar-a-repository-for-the-authenticated-user"},"GitHub Developer Guide documentation"),".")))}},"3bBZ":function(e,t,a){var n=a("2oRo"),l=a("/byt"),r=a("4mDm"),c=a("kRJp"),o=a("tiKp"),i=o("iterator"),s=o("toStringTag"),u=r.values;for(var m in l){var d=n[m],E=d&&d.prototype;if(E){if(E[i]!==u)try{c(E,i,u)}catch(h){E[i]=u}if(E[s]||c(E,s,m),l[m])for(var p in r)if(E[p]!==r[p])try{c(E,p,r[p])}catch(h){E[p]=r[p]}}}},"3uUd":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("A2ZE"),s=a("SEBh"),u=a("WGBp"),m=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{filter:function(e){var t=c(this),a=u(t),n=i(e,arguments.length>1?arguments[1]:void 0,3),l=new(s(t,r("Set"))),d=o(l.add);return m(a,(function(e){n(e,e,t)&&d.call(l,e)}),void 0,!1,!0),l}})},"43L/":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-a-license"},l.a.createElement(r["AnchorLink"],{to:"#get-a-license","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a license"),l.a.createElement(c["a"],{code:"octokit.licenses.get({\n  license,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"license"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/licenses/#get-a-license"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-commonly-used-licenses"},l.a.createElement(r["AnchorLink"],{to:"#get-all-commonly-used-licenses","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all commonly used licenses"),l.a.createElement(c["a"],{code:"octokit.licenses.getAllCommonlyUsed();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"featured"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/licenses/#get-all-commonly-used-licenses"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-license-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-the-license-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the license for a repository"),l.a.createElement("p",null,"This method returns the contents of the repository's license file, if one is detected."),l.a.createElement("p",null,"Similar to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-content"},"Get repository content"),", this method also supports ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types"},"custom media types")," for retrieving the raw license content or rendered license HTML."),l.a.createElement(c["a"],{code:"octokit.licenses.getForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/licenses/#get-the-license-for-a-repository"},"GitHub Developer Guide documentation"),".")))}},"49+q":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("fXLg");n({target:"Set",proto:!0,real:!0,forced:l},{addAll:function(){return r.apply(this,arguments)}})},"49sm":function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},"4Brf":function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("2oRo"),c=a("UTVS"),o=a("hh1v"),i=a("m/L8").f,s=a("6JNq"),u=r.Symbol;if(l&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var m={},d=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof d?new u(e):void 0===e?u():u(e);return""===e&&(m[t]=!0),t};s(d,u);var E=d.prototype=u.prototype;E.constructor=d;var p=E.toString,h="Symbol(test)"==String(u("test")),g=/^Symbol\((.*)\)[^)]+$/;i(E,"description",{configurable:!0,get:function(){var e=o(this)?this.valueOf():this,t=p.call(e);if(c(m,e))return"";var a=h?t.slice(7,-1):t.replace(g,"$1");return""===a?void 0:a}}),n({global:!0,forced:!0},{Symbol:d})}},"4WOD":function(e,t,a){var n=a("UTVS"),l=a("ewvW"),r=a("93I0"),c=a("4Xet"),o=r("IE_PROTO"),i=Object.prototype;e.exports=c?Object.getPrototypeOf:function(e){return e=l(e),n(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}},"4XaG":function(e,t,a){var n=a("dG/n");n("observable")},"4Xet":function(e,t,a){var n=a("0Dky");e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},"4mDm":function(e,t,a){"use strict";var n=a("/GqU"),l=a("RNIs"),r=a("P4y1"),c=a("afO8"),o=a("fdAy"),i="Array Iterator",s=c.set,u=c.getterFor(i);e.exports=o(Array,"Array",(function(e,t){s(this,{type:i,target:n(e),index:0,kind:t})}),(function(){var e=u(this),t=e.target,a=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==a?{value:n,done:!1}:"values"==a?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),r.Arguments=r.Array,l("keys"),l("values"),l("entries")},"4oU/":function(e,t,a){var n=a("2oRo"),l=n.isFinite;e.exports=Number.isFinite||function(e){return"number"==typeof e&&l(e)}},"4syw":function(e,t,a){var n=a("busE");e.exports=function(e,t,a){for(var l in t)n(e,l,t[l],a);return e}},5921:function(e,t,a){var n=a("I+eb"),l=a("P940");n({target:"Map",stat:!0},{of:l})},"5JV0":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("WGBp"),o=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{join:function(e){var t=r(this),a=c(t),n=void 0===e?",":String(e),l=[];return o(a,l.push,l,!1,!0),l.join(n)}})},"5Tg+":function(e,t,a){var n=a("tiKp");t.f=n},"5VSm":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-an-email-address-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#add-an-email-address-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add an email address for the authenticated user"),l.a.createElement("p",null,"This endpoint is accessible with the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.users.addEmailForAuthenticated({\n  emails,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"emails"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds one or more email addresses to your GitHub account. Must contain at least one email address. ",l.a.createElement("strong",null,"Note:")," Alternatively, you can pass a single email address or an ",l.a.createElement("code",null,"array")," of emails addresses directly, but we recommend that you pass an object using the ",l.a.createElement("code",null,"emails")," key."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"block-a-user"},l.a.createElement(r["AnchorLink"],{to:"#block-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Block a user"),l.a.createElement(c["a"],{code:"octokit.users.block({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#block-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-is-blocked-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-is-blocked-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user is blocked by the authenticated user"),l.a.createElement(c["a"],{code:"octokit.users.checkBlocked({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#check-if-a-user-is-blocked-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-follows-another-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-follows-another-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user follows another user"),l.a.createElement(c["a"],{code:"octokit.users.checkFollowingForUser({\n  username,\n  target_user,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"target_user"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#check-if-a-user-follows-another-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-person-is-followed-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-person-is-followed-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a person is followed by the authenticated user"),l.a.createElement(c["a"],{code:"octokit.users.checkPersonIsFollowedByAuthenticated({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-gpg-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#create-a-gpg-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a GPG key for the authenticated user"),l.a.createElement("p",null,"Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least ",l.a.createElement("code",null,"write:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.createGpgKeyForAuthenticated({\n  armored_public_key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"armored_public_key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A GPG key in ASCII-armored format."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#create-a-gpg-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-public-ssh-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#create-a-public-ssh-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a public SSH key for the authenticated user"),l.a.createElement("p",null,"Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least ",l.a.createElement("code",null,"write:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.createPublicSshKeyForAuthenticated({\n  key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A descriptive name for the new key."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The public SSH key to add to your GitHub account."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-email-address-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-email-address-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an email address for the authenticated user"),l.a.createElement("p",null,"This endpoint is accessible with the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.users.deleteEmailForAuthenticated({\n  emails,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"emails"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Email addresses associated with the GitHub user account."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#delete-an-email-address-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-gpg-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-gpg-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a GPG key for the authenticated user"),l.a.createElement("p",null,"Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"admin:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.deleteGpgKeyForAuthenticated({\n  gpg_key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gpg_key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gpg_key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-public-ssh-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-public-ssh-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a public SSH key for the authenticated user"),l.a.createElement("p",null,"Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"admin:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.deletePublicSshKeyForAuthenticated({\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"follow-a-user"},l.a.createElement(r["AnchorLink"],{to:"#follow-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Follow a user"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement("p",null,"Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the ",l.a.createElement("code",null,"user:follow")," scope."),l.a.createElement(c["a"],{code:"octokit.users.follow({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#follow-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the authenticated user"),l.a.createElement("p",null,"If the authenticated user is authenticated through basic authentication or OAuth with the ",l.a.createElement("code",null,"user")," scope, then the response lists public and private profile information."),l.a.createElement("p",null,"If the authenticated user is authenticated through OAuth without the ",l.a.createElement("code",null,"user")," scope, then the response lists only public profile information."),l.a.createElement(c["a"],{code:"octokit.users.getAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#get-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a user"),l.a.createElement("p",null,"Provides publicly available information about someone with a GitHub account."),l.a.createElement("p",null,"GitHub Apps with the ",l.a.createElement("code",null,"Plan")," user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/"},"Identifying and authorizing users for GitHub Apps"),"\" for details about authentication. For an example response, see 'Response with GitHub plan information' below\""),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"email")," key in the following response is the publicly visible email address from your GitHub ",l.a.createElement(r["Link"],{to:"https://github.com/settings/profile"},"profile page"),". When setting up your profile, you can select a primary email address to be \u201cpublic\u201d which provides an email entry for this endpoint. If you do not set a public email address for ",l.a.createElement("code",null,"email"),", then it will have a value of ",l.a.createElement("code",null,"null"),". You only see publicly visible email addresses when authenticated with GitHub. For more information, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication"},"Authentication"),"."),l.a.createElement("p",null,'The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#emails"},"Emails API"),'".'),l.a.createElement(c["a"],{code:"octokit.users.getByUsername({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#get-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-contextual-information-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-contextual-information-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get contextual information for a user"),l.a.createElement("p",null,"Provides hovercard information when authenticated through basic auth or OAuth with the ",l.a.createElement("code",null,"repo")," scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"subject_type")," and ",l.a.createElement("code",null,"subject_id")," parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about ",l.a.createElement("code",null,"octocat")," who owns the ",l.a.createElement("code",null,"Spoon-Knife")," repository via cURL, it would look like this:"),l.a.createElement(c["a"],{code:" curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192\n",lang:"shell"}),l.a.createElement(c["a"],{code:"octokit.users.getContextForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"subject_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Identifies which additional information you'd like to receive about the person's hovercard. Can be ",l.a.createElement("code",null,"organization"),", ",l.a.createElement("code",null,"repository"),", ",l.a.createElement("code",null,"issue"),", ",l.a.createElement("code",null,"pull_request"),". ",l.a.createElement("strong",null,"Required")," when using ",l.a.createElement("code",null,"subject_id"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"subject_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Uses the ID for the ",l.a.createElement("code",null,"subject_type")," you specified. ",l.a.createElement("strong",null,"Required")," when using ",l.a.createElement("code",null,"subject_type"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#get-contextual-information-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gpg-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gpg-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a GPG key for the authenticated user"),l.a.createElement("p",null,"View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.getGpgKeyForAuthenticated({\n  gpg_key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gpg_key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gpg_key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#get-a-gpg-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-public-ssh-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-public-ssh-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a public SSH key for the authenticated user"),l.a.createElement("p",null,"View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.getPublicSshKeyForAuthenticated({\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-users"},l.a.createElement(r["AnchorLink"],{to:"#list-users","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List users"),l.a.createElement("p",null,"Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts."),l.a.createElement("p",null,"Note: Pagination is powered exclusively by the ",l.a.createElement("code",null,"since")," parameter. Use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header"},"Link header")," to get the URL for the next page of users."),l.a.createElement(c["a"],{code:"octokit.users.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A user ID. Only return users with an ID greater than this ID."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#list-users"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-users-blocked-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-users-blocked-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List users blocked by the authenticated user"),l.a.createElement("p",null,"List the users you've blocked on your personal account."),l.a.createElement(c["a"],{code:"octokit.users.listBlockedByAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-users-blocked-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-email-addresses-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-email-addresses-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List email addresses for the authenticated user"),l.a.createElement("p",null,"Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the ",l.a.createElement("code",null,"user:email")," scope."),l.a.createElement(c["a"],{code:"octokit.users.listEmailsForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-email-addresses-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-the-people-the-authenticated-user-follows"},l.a.createElement(r["AnchorLink"],{to:"#list-the-people-the-authenticated-user-follows","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List the people the authenticated user follows"),l.a.createElement("p",null,"Lists the people who the authenticated user follows."),l.a.createElement(c["a"],{code:"octokit.users.listFollowedByAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-the-people-the-authenticated-user-follows"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-followers-of-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-followers-of-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List followers of the authenticated user"),l.a.createElement("p",null,"Lists the people following the authenticated user."),l.a.createElement(c["a"],{code:"octokit.users.listFollowersForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-followers-of-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-followers-of-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-followers-of-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List followers of a user"),l.a.createElement("p",null,"Lists the people following the specified user."),l.a.createElement(c["a"],{code:"octokit.users.listFollowersForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-followers-of-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-the-people-a-user-follows"},l.a.createElement(r["AnchorLink"],{to:"#list-the-people-a-user-follows","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List the people a user follows"),l.a.createElement("p",null,"Lists the people who the specified user follows."),l.a.createElement(c["a"],{code:"octokit.users.listFollowingForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-the-people-a-user-follows"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gpg-keys-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gpg-keys-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List GPG keys for the authenticated user"),l.a.createElement("p",null,"Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.listGpgKeysForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-gpg-keys-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gpg-keys-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gpg-keys-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List GPG keys for a user"),l.a.createElement("p",null,"Lists the GPG keys for a user. This information is accessible by anyone."),l.a.createElement(c["a"],{code:"octokit.users.listGpgKeysForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-gpg-keys-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-email-addresses-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-email-addresses-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public email addresses for the authenticated user"),l.a.createElement("p",null,"Lists your publicly visible email address, which you can set with the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user"},"Set primary email visibility for the authenticated user")," endpoint. This endpoint is accessible with the ",l.a.createElement("code",null,"user:email")," scope."),l.a.createElement(c["a"],{code:"octokit.users.listPublicEmailsForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-keys-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-keys-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public keys for a user"),l.a.createElement("p",null,"Lists the ",l.a.createElement("em",null,"verified")," public SSH keys for a user. This is accessible by anyone."),l.a.createElement(c["a"],{code:"octokit.users.listPublicKeysForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-public-keys-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-ssh-keys-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-ssh-keys-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public SSH keys for the authenticated user"),l.a.createElement("p",null,"Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.listPublicSshKeysForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-primary-email-visibility-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#set-primary-email-visibility-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set primary email visibility for the authenticated user"),l.a.createElement("p",null,"Sets the visibility for your primary email addresses."),l.a.createElement(c["a"],{code:"octokit.users.setPrimaryEmailVisibilityForAuthenticated({\n  email,\n  visibility,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"An email address associated with the GitHub user account to manage."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Denotes whether an email is publically visible."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unblock-a-user"},l.a.createElement(r["AnchorLink"],{to:"#unblock-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unblock a user"),l.a.createElement(c["a"],{code:"octokit.users.unblock({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#unblock-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unfollow-a-user"},l.a.createElement(r["AnchorLink"],{to:"#unfollow-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unfollow a user"),l.a.createElement("p",null,"Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the ",l.a.createElement("code",null,"user:follow")," scope."),l.a.createElement(c["a"],{code:"octokit.users.unfollow({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#unfollow-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#update-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update the authenticated user"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," If your email is set to private and you send an ",l.a.createElement("code",null,"email")," parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API."),l.a.createElement(c["a"],{code:"octokit.users.updateAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new name of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The publicly visible email address of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"blog"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new blog URL of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"twitter_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new Twitter username of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"company"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new company of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"location"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new location of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"hireable"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new hiring availability of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"bio"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new short biography of the user."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#update-the-authenticated-user"},"GitHub Developer Guide documentation"),".")))}},"5Yz+":function(e,t,a){"use strict";var n=a("/GqU"),l=a("ppGB"),r=a("UMSQ"),c=a("pkCn"),o=a("rkAj"),i=Math.min,s=[].lastIndexOf,u=!!s&&1/[1].lastIndexOf(1,-0)<0,m=c("lastIndexOf"),d=o("indexOf",{ACCESSORS:!0,1:0}),E=u||!m||!d;e.exports=E?function(e){if(u)return s.apply(this,arguments)||0;var t=n(this),a=r(t.length),c=a-1;for(arguments.length>1&&(c=i(c,l(arguments[1]))),c<0&&(c=a+c);c>=0;c--)if(c in t&&t[c]===e)return c||0;return-1}:s},"5mdu":function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(t){return{error:!0,value:t}}}},"5r1n":function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=l.get,o=l.toKey;n({target:"Reflect",stat:!0},{getOwnMetadata:function(e,t){var a=arguments.length<3?void 0:o(arguments[2]);return c(e,r(t),a)}})},"5s+n":function(e,t,a){"use strict";var n,l,r,c,o=a("I+eb"),i=a("xDBR"),s=a("2oRo"),u=a("0GbY"),m=a("/qmn"),d=a("busE"),E=a("4syw"),p=a("1E5z"),h=a("JiZb"),g=a("hh1v"),b=a("HAuM"),f=a("GarU"),y=a("xrYK"),k=a("iSVu"),v=a("ImZN"),w=a("HH4o"),L=a("SEBh"),A=a("LPSS").set,x=a("tXUg"),_=a("zfnd"),G=a("RN6c"),P=a("8GlL"),I=a("5mdu"),S=a("afO8"),T=a("lMq5"),N=a("tiKp"),j=a("LQDL"),H=N("species"),q="Promise",D=S.get,z=S.set,C=S.getterFor(q),O=m,R=s.TypeError,F=s.document,U=s.process,M=u("fetch"),Y=P.f,B=Y,W="process"==y(U),K=!!(F&&F.createEvent&&s.dispatchEvent),V="unhandledrejection",Z="rejectionhandled",$=0,Q=1,J=2,X=1,ee=2,te=T(q,(function(){var e=k(O)!==String(O);if(!e){if(66===j)return!0;if(!W&&"function"!=typeof PromiseRejectionEvent)return!0}if(i&&!O.prototype["finally"])return!0;if(j>=51&&/native code/.test(O))return!1;var t=O.resolve(1),a=function(e){e((function(){}),(function(){}))},n=t.constructor={};return n[H]=a,!(t.then((function(){}))instanceof a)})),ae=te||!w((function(e){O.all(e)["catch"]((function(){}))})),ne=function(e){var t;return!(!g(e)||"function"!=typeof(t=e.then))&&t},le=function(e,t,a){if(!t.notified){t.notified=!0;var n=t.reactions;x((function(){var l=t.value,r=t.state==Q,c=0;while(n.length>c){var o,i,s,u=n[c++],m=r?u.ok:u.fail,d=u.resolve,E=u.reject,p=u.domain;try{m?(r||(t.rejection===ee&&ie(e,t),t.rejection=X),!0===m?o=l:(p&&p.enter(),o=m(l),p&&(p.exit(),s=!0)),o===u.promise?E(R("Promise-chain cycle")):(i=ne(o))?i.call(o,d,E):d(o)):E(l)}catch(h){p&&!s&&p.exit(),E(h)}}t.reactions=[],t.notified=!1,a&&!t.rejection&&ce(e,t)}))}},re=function(e,t,a){var n,l;K?(n=F.createEvent("Event"),n.promise=t,n.reason=a,n.initEvent(e,!1,!0),s.dispatchEvent(n)):n={promise:t,reason:a},(l=s["on"+e])?l(n):e===V&&G("Unhandled promise rejection",a)},ce=function(e,t){A.call(s,(function(){var a,n=t.value,l=oe(t);if(l&&(a=I((function(){W?U.emit("unhandledRejection",n,e):re(V,e,n)})),t.rejection=W||oe(t)?ee:X,a.error))throw a.value}))},oe=function(e){return e.rejection!==X&&!e.parent},ie=function(e,t){A.call(s,(function(){W?U.emit("rejectionHandled",e):re(Z,e,t.value)}))},se=function(e,t,a,n){return function(l){e(t,a,l,n)}},ue=function(e,t,a,n){t.done||(t.done=!0,n&&(t=n),t.value=a,t.state=J,le(e,t,!0))},me=function(e,t,a,n){if(!t.done){t.done=!0,n&&(t=n);try{if(e===a)throw R("Promise can't be resolved itself");var l=ne(a);l?x((function(){var n={done:!1};try{l.call(a,se(me,e,n,t),se(ue,e,n,t))}catch(r){ue(e,n,r,t)}})):(t.value=a,t.state=Q,le(e,t,!1))}catch(r){ue(e,{done:!1},r,t)}}};te&&(O=function(e){f(this,O,q),b(e),n.call(this);var t=D(this);try{e(se(me,this,t),se(ue,this,t))}catch(a){ue(this,t,a)}},n=function(e){z(this,{type:q,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:$,value:void 0})},n.prototype=E(O.prototype,{then:function(e,t){var a=C(this),n=Y(L(this,O));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=W?U.domain:void 0,a.parent=!0,a.reactions.push(n),a.state!=$&&le(this,a,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),l=function(){var e=new n,t=D(e);this.promise=e,this.resolve=se(me,e,t),this.reject=se(ue,e,t)},P.f=Y=function(e){return e===O||e===r?new l(e):B(e)},i||"function"!=typeof m||(c=m.prototype.then,d(m.prototype,"then",(function(e,t){var a=this;return new O((function(e,t){c.call(a,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof M&&o({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return _(O,M.apply(s,arguments))}}))),o({global:!0,wrap:!0,forced:te},{Promise:O}),p(O,q,!1,!0),h(q),r=u(q),o({target:q,stat:!0,forced:te},{reject:function(e){var t=Y(this);return t.reject.call(void 0,e),t.promise}}),o({target:q,stat:!0,forced:i||te},{resolve:function(e){return _(i&&this===r?O:this,e)}}),o({target:q,stat:!0,forced:ae},{all:function(e){var t=this,a=Y(t),n=a.resolve,l=a.reject,r=I((function(){var a=b(t.resolve),r=[],c=0,o=1;v(e,(function(e){var i=c++,s=!1;r.push(void 0),o++,a.call(t,e).then((function(e){s||(s=!0,r[i]=e,--o||n(r))}),l)})),--o||n(r)}));return r.error&&l(r.value),a.promise},race:function(e){var t=this,a=Y(t),n=a.reject,l=I((function(){var l=b(t.resolve);v(e,(function(e){l.call(t,e).then(a.resolve,n)}))}));return l.error&&n(l.value),a.promise}})},"5xtp":function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("6x0u"),c=a("ewvW"),o=a("HAuM"),i=a("m/L8");l&&n({target:"Object",proto:!0,forced:r},{__defineSetter__:function(e,t){i.f(c(this),e,{set:o(t),enumerable:!0,configurable:!0})}})},"66V8":function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("4WOD"),c=a("0rvr"),o=a("fHMY"),i=a("m/L8"),s=a("XGwC"),u=a("ImZN"),m=a("kRJp"),d=a("afO8"),E=d.set,p=d.getterFor("AggregateError"),h=function(e,t){var a=this;if(!(a instanceof h))return new h(e,t);c&&(a=c(new Error(t),r(a)));var n=[];return u(e,n.push,n),l?E(a,{errors:n,type:"AggregateError"}):a.errors=n,void 0!==t&&m(a,"message",String(t)),a};h.prototype=o(Error.prototype,{constructor:s(5,h),message:s(5,""),name:s(5,"AggregateError")}),l&&i.f(h.prototype,"errors",{get:function(){return p(this).errors},configurable:!0}),n({global:!0},{AggregateError:h})},"67WC":function(e,t,a){"use strict";var n,l=a("qYE9"),r=a("g6v/"),c=a("2oRo"),o=a("hh1v"),i=a("UTVS"),s=a("9d/t"),u=a("kRJp"),m=a("busE"),d=a("m/L8").f,E=a("4WOD"),p=a("0rvr"),h=a("tiKp"),g=a("kOOl"),b=c.Int8Array,f=b&&b.prototype,y=c.Uint8ClampedArray,k=y&&y.prototype,v=b&&E(b),w=f&&E(f),L=Object.prototype,A=L.isPrototypeOf,x=h("toStringTag"),_=g("TYPED_ARRAY_TAG"),G=l&&!!p&&"Opera"!==s(c.opera),P=!1,I={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},S=function(e){var t=s(e);return"DataView"===t||i(I,t)},T=function(e){return o(e)&&i(I,s(e))},N=function(e){if(T(e))return e;throw TypeError("Target is not a typed array")},j=function(e){if(p){if(A.call(v,e))return e}else for(var t in I)if(i(I,n)){var a=c[t];if(a&&(e===a||A.call(a,e)))return e}throw TypeError("Target is not a typed array constructor")},H=function(e,t,a){if(r){if(a)for(var n in I){var l=c[n];l&&i(l.prototype,e)&&delete l.prototype[e]}w[e]&&!a||m(w,e,a?t:G&&f[e]||t)}},q=function(e,t,a){var n,l;if(r){if(p){if(a)for(n in I)l=c[n],l&&i(l,e)&&delete l[e];if(v[e]&&!a)return;try{return m(v,e,a?t:G&&b[e]||t)}catch(o){}}for(n in I)l=c[n],!l||l[e]&&!a||m(l,e,t)}};for(n in I)c[n]||(G=!1);if((!G||"function"!=typeof v||v===Function.prototype)&&(v=function(){throw TypeError("Incorrect invocation")},G))for(n in I)c[n]&&p(c[n],v);if((!G||!w||w===L)&&(w=v.prototype,G))for(n in I)c[n]&&p(c[n].prototype,w);if(G&&E(k)!==w&&p(k,w),r&&!i(w,x))for(n in P=!0,d(w,x,{get:function(){return o(this)?this[_]:void 0}}),I)c[n]&&u(c[n],_,n);e.exports={NATIVE_ARRAY_BUFFER_VIEWS:G,TYPED_ARRAY_TAG:P&&_,aTypedArray:N,aTypedArrayConstructor:j,exportTypedArrayMethod:H,exportTypedArrayStaticMethod:q,isView:S,isTypedArray:T,TypedArray:v,TypedArrayPrototype:w}},"6JNq":function(e,t,a){var n=a("UTVS"),l=a("Vu81"),r=a("Bs8V"),c=a("m/L8");e.exports=function(e,t){for(var a=l(t),o=c.f,i=r.f,s=0;s<a.length;s++){var u=a[s];n(e,u)||o(e,u,i(t,u))}}},"6LWA":function(e,t,a){var n=a("xrYK");e.exports=Array.isArray||function(e){return"Array"==n(e)}},"6V7H":function(e,t,a){var n=a("dG/n");n("patternMatch")},"6VoE":function(e,t,a){var n=a("tiKp"),l=a("P4y1"),r=n("iterator"),c=Array.prototype;e.exports=function(e){return void 0!==e&&(l.Array===e||c[r]===e)}},"6asN":function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var n=a("LtsZ"),l=a("zqmC"),r=(0,l.LinkWrapper)(n.NavLink);t["default"]=r},"6x0u":function(e,t,a){"use strict";var n=a("xDBR"),l=a("2oRo"),r=a("0Dky");e.exports=n||!r((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete l[e]}))},"6xEa":function(e,t,a){var n,l=function(){var e=String.fromCharCode,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",n={};function l(e,t){if(!n[e]){n[e]={};for(var a=0;a<e.length;a++)n[e][e.charAt(a)]=a}return n[e][t]}var r={compressToBase64:function(e){if(null==e)return"";var a=r._compress(e,6,(function(e){return t.charAt(e)}));switch(a.length%4){default:case 0:return a;case 1:return a+"===";case 2:return a+"==";case 3:return a+"="}},decompressFromBase64:function(e){return null==e?"":""==e?null:r._decompress(e.length,32,(function(a){return l(t,e.charAt(a))}))},compressToUTF16:function(t){return null==t?"":r._compress(t,15,(function(t){return e(t+32)}))+" "},decompressFromUTF16:function(e){return null==e?"":""==e?null:r._decompress(e.length,16384,(function(t){return e.charCodeAt(t)-32}))},compressToUint8Array:function(e){for(var t=r.compress(e),a=new Uint8Array(2*t.length),n=0,l=t.length;n<l;n++){var c=t.charCodeAt(n);a[2*n]=c>>>8,a[2*n+1]=c%256}return a},decompressFromUint8Array:function(t){if(null===t||void 0===t)return r.decompress(t);for(var a=new Array(t.length/2),n=0,l=a.length;n<l;n++)a[n]=256*t[2*n]+t[2*n+1];var c=[];return a.forEach((function(t){c.push(e(t))})),r.decompress(c.join(""))},compressToEncodedURIComponent:function(e){return null==e?"":r._compress(e,6,(function(e){return a.charAt(e)}))},decompressFromEncodedURIComponent:function(e){return null==e?"":""==e?null:(e=e.replace(/ /g,"+"),r._decompress(e.length,32,(function(t){return l(a,e.charAt(t))})))},compress:function(t){return r._compress(t,16,(function(t){return e(t)}))},_compress:function(e,t,a){if(null==e)return"";var n,l,r,c={},o={},i="",s="",u="",m=2,d=3,E=2,p=[],h=0,g=0;for(r=0;r<e.length;r+=1)if(i=e.charAt(r),Object.prototype.hasOwnProperty.call(c,i)||(c[i]=d++,o[i]=!0),s=u+i,Object.prototype.hasOwnProperty.call(c,s))u=s;else{if(Object.prototype.hasOwnProperty.call(o,u)){if(u.charCodeAt(0)<256){for(n=0;n<E;n++)h<<=1,g==t-1?(g=0,p.push(a(h)),h=0):g++;for(l=u.charCodeAt(0),n=0;n<8;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1}else{for(l=1,n=0;n<E;n++)h=h<<1|l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l=0;for(l=u.charCodeAt(0),n=0;n<16;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1}m--,0==m&&(m=Math.pow(2,E),E++),delete o[u]}else for(l=c[u],n=0;n<E;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1;m--,0==m&&(m=Math.pow(2,E),E++),c[s]=d++,u=String(i)}if(""!==u){if(Object.prototype.hasOwnProperty.call(o,u)){if(u.charCodeAt(0)<256){for(n=0;n<E;n++)h<<=1,g==t-1?(g=0,p.push(a(h)),h=0):g++;for(l=u.charCodeAt(0),n=0;n<8;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1}else{for(l=1,n=0;n<E;n++)h=h<<1|l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l=0;for(l=u.charCodeAt(0),n=0;n<16;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1}m--,0==m&&(m=Math.pow(2,E),E++),delete o[u]}else for(l=c[u],n=0;n<E;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1;m--,0==m&&(m=Math.pow(2,E),E++)}for(l=2,n=0;n<E;n++)h=h<<1|1&l,g==t-1?(g=0,p.push(a(h)),h=0):g++,l>>=1;while(1){if(h<<=1,g==t-1){p.push(a(h));break}g++}return p.join("")},decompress:function(e){return null==e?"":""==e?null:r._decompress(e.length,32768,(function(t){return e.charCodeAt(t)}))},_decompress:function(t,a,n){var l,r,c,o,i,s,u,m=[],d=4,E=4,p=3,h="",g=[],b={val:n(0),position:a,index:1};for(l=0;l<3;l+=1)m[l]=l;c=0,i=Math.pow(2,2),s=1;while(s!=i)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=a,b.val=n(b.index++)),c|=(o>0?1:0)*s,s<<=1;switch(c){case 0:c=0,i=Math.pow(2,8),s=1;while(s!=i)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=a,b.val=n(b.index++)),c|=(o>0?1:0)*s,s<<=1;u=e(c);break;case 1:c=0,i=Math.pow(2,16),s=1;while(s!=i)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=a,b.val=n(b.index++)),c|=(o>0?1:0)*s,s<<=1;u=e(c);break;case 2:return""}m[3]=u,r=u,g.push(u);while(1){if(b.index>t)return"";c=0,i=Math.pow(2,p),s=1;while(s!=i)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=a,b.val=n(b.index++)),c|=(o>0?1:0)*s,s<<=1;switch(u=c){case 0:c=0,i=Math.pow(2,8),s=1;while(s!=i)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=a,b.val=n(b.index++)),c|=(o>0?1:0)*s,s<<=1;m[E++]=e(c),u=E-1,d--;break;case 1:c=0,i=Math.pow(2,16),s=1;while(s!=i)o=b.val&b.position,b.position>>=1,0==b.position&&(b.position=a,b.val=n(b.index++)),c|=(o>0?1:0)*s,s<<=1;m[E++]=e(c),u=E-1,d--;break;case 2:return g.join("")}if(0==d&&(d=Math.pow(2,p),p++),m[u])h=m[u];else{if(u!==E)return null;h=r+r.charAt(0)}g.push(h),m[E++]=r+h.charAt(0),d--,r=h,0==d&&(d=Math.pow(2,p),p++)}}};return r}();n=function(){return l}.call(t,a,t,e),void 0===n||(e.exports=n)},"7+kd":function(e,t,a){var n=a("dG/n");n("isConcatSpreadable")},"7+zs":function(e,t,a){var n=a("kRJp"),l=a("UesL"),r=a("tiKp"),c=r("toPrimitive"),o=Date.prototype;c in o||n(o,c,l)},"702D":function(e,t,a){var n=a("I+eb"),l=a("qY7S");n({target:"WeakMap",stat:!0},{from:l})},"7JcK":function(e,t,a){"use strict";var n=a("67WC"),l=a("iqeF"),r=n.aTypedArrayConstructor,c=n.exportTypedArrayStaticMethod;c("of",(function(){var e=0,t=arguments.length,a=new(r(this))(t);while(t>e)a[e]=arguments[e++];return a}),l)},"7ZSp":function(e,t,a){},"7lJQ":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-rate-limit-status-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-rate-limit-status-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get rate limit status for the authenticated user"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Accessing this endpoint does not count against your REST API rate limit."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The ",l.a.createElement("code",null,"rate")," object is deprecated. If you're writing new API client code or updating existing code, you should use the ",l.a.createElement("code",null,"core")," object instead of the ",l.a.createElement("code",null,"rate")," object. The ",l.a.createElement("code",null,"core")," object contains the same information that is present in the ",l.a.createElement("code",null,"rate")," object."),l.a.createElement(c["a"],{code:"octokit.rateLimit.get();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/rate_limit/#get-rate-limit-status-for-the-authenticated-user"},"GitHub Developer Guide documentation"),".")))}},"7mo+":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"The simplest way to receive debug information is to set the ",l.a.createElement("code",null,"log")," client option to ",l.a.createElement("code",null,"console"),"."),l.a.createElement(c["a"],{code:'const octokit = require("@octokit/rest")({\n  log: console,\n});\n\noctokit.request("/");\n',lang:"js"}),l.a.createElement("p",null,"This will log"),l.a.createElement(c["a"],{code:"request { method: 'GET',\n  baseUrl: 'https://api.github.com',\n  headers:\n   { accept: 'application/vnd.github.v3+json',\n     'user-agent':\n      'octokit.js/0.0.0-development Node.js/10.15.0 (macOS Mojave; x64)' },\n  request: {},\n  url: '/' }\nGET / - 200 in 514ms\n",lang:"unknown"}),l.a.createElement("p",null,"If you like to support a configurable log level, we recommend using the ",l.a.createElement(r["Link"],{to:"https://github.com/watson/console-log-level"},"console-log-level")," module"),l.a.createElement(c["a"],{code:'const octokit = require("@octokit/rest")({\n  log: require("console-log-level")({ level: "info" }),\n});\n\noctokit.request("/");\n',lang:"js"}),l.a.createElement("p",null,"This will only log"),l.a.createElement(c["a"],{code:"GET / - 200 in 514ms\n",lang:"unknown"})))}},"7moZ":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-project-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#add-project-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add project collaborator"),l.a.createElement("p",null,"Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to add a collaborator."),l.a.createElement(c["a"],{code:"octokit.projects.addCollaborator({\n  project_id,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant the collaborator."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#add-project-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#create-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a project card"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key."),l.a.createElement("p",null,"Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.projects.createCard({\n  column_id,\n  note,\n  content_id,\n  content_type,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"note"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The project card's note"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The unique identifier of the content associated with the card"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The piece of content associated with the card"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#create-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#create-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a project column"),l.a.createElement(c["a"],{code:"octokit.projects.createColumn({\n  project_id,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project column"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#create-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-user-project"},l.a.createElement(r["AnchorLink"],{to:"#create-a-user-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a user project"),l.a.createElement(c["a"],{code:"octokit.projects.createForAuthenticatedUser({\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Body of the project"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#create-a-user-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-project"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization project"),l.a.createElement("p",null,"Creates an organization project board. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.createForOrg({\n  org,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the project."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the project."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#create-an-organization-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-project"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository project"),l.a.createElement("p",null,"Creates a repository project board. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.createForRepo({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the project."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the project."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#create-a-repository-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-project"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a project"),l.a.createElement("p",null,"Deletes a project board. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled."),l.a.createElement(c["a"],{code:"octokit.projects.delete({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#delete-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a project card"),l.a.createElement(c["a"],{code:"octokit.projects.deleteCard({\n  card_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#delete-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a project column"),l.a.createElement(c["a"],{code:"octokit.projects.deleteColumn({\n  column_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#delete-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-project"},l.a.createElement(r["AnchorLink"],{to:"#get-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a project"),l.a.createElement("p",null,"Gets a project by its ",l.a.createElement("code",null,"id"),". Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.get({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#get-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#get-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a project card"),l.a.createElement(c["a"],{code:"octokit.projects.getCard({\n  card_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#get-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#get-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a project column"),l.a.createElement(c["a"],{code:"octokit.projects.getColumn({\n  column_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#get-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-project-permission-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-project-permission-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get project permission for a user"),l.a.createElement("p",null,"Returns the collaborator's permission level for an organization project. Possible values for the ",l.a.createElement("code",null,"permission")," key: ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"write"),", ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"none"),". You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to review a user's permission level."),l.a.createElement(c["a"],{code:"octokit.projects.getPermissionForUser({\n  project_id,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#get-project-permission-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-project-cards"},l.a.createElement(r["AnchorLink"],{to:"#list-project-cards","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List project cards"),l.a.createElement(c["a"],{code:"octokit.projects.listCards({\n  column_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"archived_state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters the project cards that are returned by the card's state. Can be one of ",l.a.createElement("code",null,"all"),",",l.a.createElement("code",null,"archived"),", or ",l.a.createElement("code",null,"not_archived"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#list-project-cards"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-project-collaborators"},l.a.createElement(r["AnchorLink"],{to:"#list-project-collaborators","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List project collaborators"),l.a.createElement("p",null,"Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to list collaborators."),l.a.createElement(c["a"],{code:"octokit.projects.listCollaborators({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"affiliation"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters the collaborators by their affiliation. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"outside"),": Outside collaborators of a project that are not a member of the project's organization.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"direct"),": Collaborators with permissions to a project, regardless of organization membership status.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All collaborators the authenticated user can see."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#list-project-collaborators"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-project-columns"},l.a.createElement(r["AnchorLink"],{to:"#list-project-columns","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List project columns"),l.a.createElement(c["a"],{code:"octokit.projects.listColumns({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#list-project-columns"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization projects"),l.a.createElement("p",null,"Lists the projects in an organization. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the projects to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#list-organization-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository projects"),l.a.createElement("p",null,"Lists the projects in a repository. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.listForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the projects to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#list-repository-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-user-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-user-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List user projects"),l.a.createElement(c["a"],{code:"octokit.projects.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the projects to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#list-user-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"move-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#move-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Move a project card"),l.a.createElement(c["a"],{code:"octokit.projects.moveCard({\n  card_id,\n  position,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The position of the card in a column"))),l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The unique identifier of the column the card should be moved to"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#move-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"move-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#move-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Move a project column"),l.a.createElement(c["a"],{code:"octokit.projects.moveColumn({\n  column_id,\n  position,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The position of the column in a project"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#move-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-user-as-a-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#remove-user-as-a-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove user as a collaborator"),l.a.createElement("p",null,"Removes a collaborator from an organization project. You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to remove a collaborator."),l.a.createElement(c["a"],{code:"octokit.projects.removeCollaborator({\n  project_id,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#remove-project-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-project"},l.a.createElement(r["AnchorLink"],{to:"#update-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a project"),l.a.createElement("p",null,"Updates a project board's information. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.update({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Body of the project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"State of the project; either 'open' or 'closed'"))),l.a.createElement("tr",null,l.a.createElement("td",null,"organization_permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The baseline permission that all organization members have on this project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether or not this project can be seen by everyone."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#update-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-existing-project-card"},l.a.createElement(r["AnchorLink"],{to:"#update-an-existing-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an existing project card"),l.a.createElement(c["a"],{code:"octokit.projects.updateCard({\n  card_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"note"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The project card's note"))),l.a.createElement("tr",null,l.a.createElement("td",null,"archived"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether or not the card is archived"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#update-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-existing-project-column"},l.a.createElement(r["AnchorLink"],{to:"#update-an-existing-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an existing project column"),l.a.createElement(c["a"],{code:"octokit.projects.updateColumn({\n  column_id,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project column"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#update-a-project-column"},"GitHub Developer Guide documentation"),".")))}},"7sf/":function(e,t,a){"use strict";function n(){var e=o(a("q1tI"));return n=function(){return e},e}function l(){var e=r(a("6xEa"));return l=function(){return e},e}function r(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if(Object.prototype.hasOwnProperty.call(e,l)){var r=n?Object.getOwnPropertyDescriptor(e,l):null;r&&(r.get||r.set)?Object.defineProperty(a,l,r):a[l]=e[l]}return a["default"]=e,t&&t.set(e,a),a}function i(e,t){return E(e)||d(e,t)||u(e,t)||s()}function s(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(e,t){if(e){if("string"===typeof e)return m(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?m(e,t):void 0}}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function d(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function E(e){if(Array.isArray(e))return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var p={"zh-CN":"https://www.typescriptlang.org/zh/play","en-US":"https://www.typescriptlang.org/play"},h=function(e,t){var a=function(){var e=/^zh|cn$/.test(arguments.length<=0?void 0:arguments[0])?p["zh-CN"]:p["en-US"];return"".concat(e,"?skipLibCheck=true&jsx=1#code/").concat(l()["default"].compressToEncodedURIComponent(arguments.length<=1?void 0:arguments[1]))},r=(0,n().useState)(a(e,t)),c=i(r,2),o=c[0],s=c[1];return(0,n().useEffect)((function(){s(a(e,t))}),[e,t]),o};t["default"]=h},"7ueG":function(e,t,a){"use strict";var n=a("I+eb"),l=a("WKiH").start,r=a("yNLB"),c=r("trimStart"),o=c?function(){return l(this)}:"".trimStart;n({target:"String",proto:!0,forced:c},{trimStart:o,trimLeft:o})},"8Cms":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide"},"Guide"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/00_usage"},"Usage")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/01_authentication"},"Authentication")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/02_previews"},"Previews")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/03_request_formats"},"Request formats & aborts")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/04_custom_requests"},"Custom requests")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/05_pagination"},"Pagination")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/06_hooks"},"Hooks")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/07_custom_endpoints"},"Custom endpoint methods")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/08_plugins"},"Plugins")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/09_throttling"},"Throttling")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/10_retries"},"Automatic retries")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/11_logging"},"Logging")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/guide/12_debug"},"Debug")))),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api"},"API"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/actions"},"actions")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/activity"},"activity")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/apps"},"apps")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/billing"},"billing")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/checks"},"checks")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/codeScanning"},"codeScanning")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/codesOfConduct"},"codesOfConduct")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/emojis"},"emojis")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/enterpriseAdmin"},"enterpriseAdmin")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/gists"},"gists")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/git"},"git")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/gitignore"},"gitignore")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/interactions"},"interactions")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/issues"},"issues")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/licenses"},"licenses")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/markdown"},"markdown")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/meta"},"meta")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/migrations"},"migrations")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/orgs"},"orgs")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/projects"},"projects")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/pulls"},"pulls")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/rateLimit"},"rateLimit")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/reactions"},"reactions")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/repos"},"repos")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/search"},"search")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/secretScanning"},"secretScanning")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/teams"},"teams")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/en-US/api/users"},"users")))))))}},"8GlL":function(e,t,a){"use strict";var n=a("HAuM"),l=function(e){var t,a;this.promise=new e((function(e,n){if(void 0!==t||void 0!==a)throw TypeError("Bad Promise constructor");t=e,a=n})),this.resolve=n(t),this.reject=n(a)};e.exports.f=function(e){return new l(e)}},"8L3h":function(e,t,a){"use strict";e.exports=a("f/k9")},"8STE":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("Cg3G");n({target:"WeakSet",proto:!0,real:!0,forced:l},{deleteAll:function(){return r.apply(this,arguments)}})},"8YOa":function(e,t,a){var n=a("0BK2"),l=a("hh1v"),r=a("UTVS"),c=a("m/L8").f,o=a("kOOl"),i=a("uy83"),s=o("meta"),u=0,m=Object.isExtensible||function(){return!0},d=function(e){c(e,s,{value:{objectID:"O"+ ++u,weakData:{}}})},E=function(e,t){if(!l(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!r(e,s)){if(!m(e))return"F";if(!t)return"E";d(e)}return e[s].objectID},p=function(e,t){if(!r(e,s)){if(!m(e))return!0;if(!t)return!1;d(e)}return e[s].weakData},h=function(e){return i&&g.REQUIRED&&m(e)&&!r(e,s)&&d(e),e},g=e.exports={REQUIRED:!1,fastKey:E,getWeakData:p,onFreeze:h};n[s]=!0},"8asx":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": ",l.a.createElement("code",null,"octokit.registerEndpoints()")," has been deprecated."),l.a.createElement("p",null,"Instead of"),l.a.createElement(c["a"],{code:'await octokit.registerEndpoints({\n  misc: {\n    getRoot: {\n      method: "GET",\n      url: "/",\n    },\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"do"),l.a.createElement(c["a"],{code:'Object.assign(octokit.misc, {\n  getRoot: octokit.request.defaults({\n    method: "GET",\n    url: "/",\n  }),\n});\n',lang:"js"}),l.a.createElement("p",null,"If you use ",l.a.createElement("code",null,"octokit.registerEndpoints()")," in a plugin, return an object instead:"),l.a.createElement(c["a"],{code:'function myPlugin(octokit, options) {\n  return {\n    misc: {\n      octokit.request.defaults({ method: "GET", url: "/" })\n    }\n  }\n}\n',lang:"js"}),l.a.createElement("hr",null),l.a.createElement("p",null,"You can register custom endpoint methods such as ",l.a.createElement("code",null,"octokit.repos.get()")," using the ",l.a.createElement("code",null,"octokit.registerEndpoints(routes)")," method"),l.a.createElement(c["a"],{code:'octokit.registerEndpoints({\n  foo: {\n    bar: {\n      method: "PATCH",\n      url: "/repos/{owner}/{repo}/foo",\n      headers: {\n        accept: "application/vnd.github.foo-bar-preview+json",\n      },\n      params: {\n        owner: {\n          required: true,\n          type: "string",\n        },\n        repo: {\n          required: true,\n          type: "string",\n        },\n        baz: {\n          required: true,\n          type: "string",\n          enum: ["qux", "quux", "quuz"],\n        },\n      },\n    },\n  },\n});\n\noctokit.foo.bar({\n  owner: "octokit",\n  repo: "rest.js",\n  baz: "quz",\n});\n',lang:"js"}),l.a.createElement("p",null,"This is useful when you participate in private beta features and prefer the convenience of methods for the new endpoints instead of using ",l.a.createElement(r["AnchorLink"],{to:"#custom-requests"},l.a.createElement("code",null,"octokit.request()")),".")))}},"8go2":function(e,t,a){a("gg6r")},"8jRI":function(e,t,a){"use strict";var n="%[a-f0-9]{2}",l=new RegExp(n,"gi"),r=new RegExp("("+n+")+","gi");function c(e,t){try{return decodeURIComponent(e.join(""))}catch(l){}if(1===e.length)return e;t=t||1;var a=e.slice(0,t),n=e.slice(t);return Array.prototype.concat.call([],c(a),c(n))}function o(e){try{return decodeURIComponent(e)}catch(n){for(var t=e.match(l),a=1;a<t.length;a++)e=c(t,a).join(""),t=e.match(l);return e}}function i(e){var t={"%FE%FF":"\ufffd\ufffd","%FF%FE":"\ufffd\ufffd"},a=r.exec(e);while(a){try{t[a[0]]=decodeURIComponent(a[0])}catch(s){var n=o(a[0]);n!==a[0]&&(t[a[0]]=n)}a=r.exec(e)}t["%C2"]="\ufffd";for(var l=Object.keys(t),c=0;c<l.length;c++){var i=l[c];e=e.replace(new RegExp(i,"g"),t[i])}return e}e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return i(e)}}},"8r4s":function(e,t,a){var n=a("I+eb"),l=a("P940");n({target:"Set",stat:!0},{of:l})},"8um0":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"check-if-a-pull-request-has-been-merged"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-pull-request-has-been-merged","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a pull request has been merged"),l.a.createElement(c["a"],{code:"octokit.pulls.checkIfMerged({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#check-if-a-pull-request-has-been-merged"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#create-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a pull request"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request."),l.a.createElement("p",null,"You can create a new pull request."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.create({\n  owner,\n  repo,\n  head,\n  base,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the new pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace ",l.a.createElement("code",null,"head")," with a user like this: ",l.a.createElement("code",null,"username:branch"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"maintainer_can_modify"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/"},"maintainers can modify")," the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"draft"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,'Indicates whether the pull request is a draft. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-pull-requests#draft-pull-requests"},"Draft Pull Requests"),'" in the GitHub Help documentation to learn more.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"issue"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#create-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-reply-for-a-review-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-reply-for-a-review-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a reply for a review comment"),l.a.createElement("p",null,"Creates a reply to a review comment for a pull request. For the ",l.a.createElement("code",null,"comment_id"),", provide the ID of the review comment you are replying to. This must be the ID of a ",l.a.createElement("em",null,"top-level review comment"),", not a reply to that comment. Replies to replies are not supported."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.createReplyForReviewComment({\n  owner,\n  repo,\n  pull_number,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text of the review comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-reply-for-a-review-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#create-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a review for a pull request"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,"Pull request reviews created in the ",l.a.createElement("code",null,"PENDING")," state do not include the ",l.a.createElement("code",null,"submitted_at")," property in the response."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," To comment on a specific line in a file, you need to first determine the ",l.a.createElement("em",null,"position")," of that line in the diff. The GitHub REST API v3 offers the ",l.a.createElement("code",null,"application/vnd.github.v3.diff")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types#commits-commit-comparison-and-pull-requests"},"media type"),". To see a pull request diff, add this media type to the ",l.a.createElement("code",null,"Accept")," header of a call to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-pull-request"},"single pull request")," endpoint."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"position"),' value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.'),l.a.createElement(c["a"],{code:"octokit.pulls.createReview({\n        owner,\nrepo,\npull_number,\ncomments[].path,\ncomments[].body\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the ",l.a.createElement("code",null,"position"),". Defaults to the most recent commit in the pull request when you do not specify a value."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required")," when using ",l.a.createElement("code",null,"REQUEST_CHANGES")," or ",l.a.createElement("code",null,"COMMENT")," for the ",l.a.createElement("code",null,"event")," parameter. The body text of the pull request review."))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The review action you want to perform. The review actions include: ",l.a.createElement("code",null,"APPROVE"),", ",l.a.createElement("code",null,"REQUEST_CHANGES"),", or ",l.a.createElement("code",null,"COMMENT"),". By leaving this blank, you set the review action state to ",l.a.createElement("code",null,"PENDING"),", which means you will need to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request"},"submit the pull request review")," when you are ready."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Use the following table to specify the location, destination, and contents of the draft review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The relative path to the file that necessitates a review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].position"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Text of the review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].start_line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].start_side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#create-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a review comment for a pull request"),l.a.createElement("p",null,'Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-an-issue-comment"},"Create an issue comment"),'." We recommend creating a review comment using ',l.a.createElement("code",null,"line"),", ",l.a.createElement("code",null,"side"),", and optionally ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"start_side")," if your comment applies to more than one line in the pull request diff."),l.a.createElement("p",null,"You can still create a review comment using the ",l.a.createElement("code",null,"position")," parameter. When you use ",l.a.createElement("code",null,"position"),", the ",l.a.createElement("code",null,"line"),", ",l.a.createElement("code",null,"side"),", ",l.a.createElement("code",null,"start_line"),", and ",l.a.createElement("code",null,"start_side")," parameters are not required. For more information, see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request-preview-notices"},l.a.createElement("code",null,"comfort-fade")," preview notice"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.'),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.createReviewComment({\n  owner,\n  repo,\n  pull_number,\n  body,\n  path,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text of the review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the ",l.a.createElement("code",null,"position"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The relative path to the file that necessitates a comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required without ",l.a.createElement("code",null,"comfort-fade")," preview"),". The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note above."))),l.a.createElement("tr",null,l.a.createElement("td",null,"side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required with ",l.a.createElement("code",null,"comfort-fade")," preview"),". In a split diff view, the side of the diff that the pull request's changes appear on. Can be ",l.a.createElement("code",null,"LEFT")," or ",l.a.createElement("code",null,"RIGHT"),". Use ",l.a.createElement("code",null,"LEFT")," for deletions that appear in red. Use ",l.a.createElement("code",null,"RIGHT"),' for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-comparing-branches-in-pull-requests#diff-view-options"},"Diff view options"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required with ",l.a.createElement("code",null,"comfort-fade")," preview"),". The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to."))),l.a.createElement("tr",null,l.a.createElement("td",null,"start_line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when using multi-line comments"),". To create multi-line comments, you must use the ",l.a.createElement("code",null,"comfort-fade")," preview header. The ",l.a.createElement("code",null,"start_line"),' is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request"},"Commenting on a pull request"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"start_side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when using multi-line comments"),". To create multi-line comments, you must use the ",l.a.createElement("code",null,"comfort-fade")," preview header. The ",l.a.createElement("code",null,"start_side")," is the starting side of the diff that the comment applies to. Can be ",l.a.createElement("code",null,"LEFT")," or ",l.a.createElement("code",null,"RIGHT"),'. To learn more about multi-line comments, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request"},"Commenting on a pull request"),'" in the GitHub Help documentation. See ',l.a.createElement("code",null,"side")," in this table for additional context."))),l.a.createElement("tr",null,l.a.createElement("td",null,"in_reply_to"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-pending-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-pending-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a pending review for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.deletePendingReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#delete-a-pending-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a review comment for a pull request"),l.a.createElement("p",null,"Deletes a review comment."),l.a.createElement(c["a"],{code:"octokit.pulls.deleteReviewComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#delete-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"dismiss-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#dismiss-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Dismiss a review for a pull request"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," To dismiss a pull request review on a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#branches"},"protected branch"),", you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews."),l.a.createElement(c["a"],{code:"octokit.pulls.dismissReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  message,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The message for the pull request review dismissal"))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#dismiss-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#get-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a pull request"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists details of a pull request by providing its number."),l.a.createElement("p",null,"When you get, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls/#create-a-pull-request"},"create"),", or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#update-a-pull-request"},"edit")," a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the ",l.a.createElement("code",null,"mergeable"),' key. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"},"Checking mergeability of pull requests"),'".'),l.a.createElement("p",null,"The value of the ",l.a.createElement("code",null,"mergeable")," attribute can be ",l.a.createElement("code",null,"true"),", ",l.a.createElement("code",null,"false"),", or ",l.a.createElement("code",null,"null"),". If the value is ",l.a.createElement("code",null,"null"),", then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-",l.a.createElement("code",null,"null")," value for the ",l.a.createElement("code",null,"mergeable")," attribute in the response. If ",l.a.createElement("code",null,"mergeable")," is ",l.a.createElement("code",null,"true"),", then ",l.a.createElement("code",null,"merge_commit_sha")," will be the SHA of the ",l.a.createElement("em",null,"test")," merge commit."),l.a.createElement("p",null,"The value of the ",l.a.createElement("code",null,"merge_commit_sha")," attribute changes depending on the state of the pull request. Before merging a pull request, the ",l.a.createElement("code",null,"merge_commit_sha")," attribute holds the SHA of the ",l.a.createElement("em",null,"test")," merge commit. After merging a pull request, the ",l.a.createElement("code",null,"merge_commit_sha")," attribute changes depending on how you merged the pull request:"),l.a.createElement("ul",null,l.a.createElement("li",null,"If merged as a ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-merge-methods-on-github/"},"merge commit"),", ",l.a.createElement("code",null,"merge_commit_sha")," represents the SHA of the merge commit."),l.a.createElement("li",null,"If merged via a ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits"},"squash"),", ",l.a.createElement("code",null,"merge_commit_sha")," represents the SHA of the squashed commit on the base branch."),l.a.createElement("li",null,"If ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits"},"rebased"),", ",l.a.createElement("code",null,"merge_commit_sha")," represents the commit that the base branch was updated to.")),l.a.createElement("p",null,"Pass the appropriate ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," to fetch diff and patch formats."),l.a.createElement(c["a"],{code:"octokit.pulls.get({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#get-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#get-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a review for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.getReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#get-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a review comment for a pull request"),l.a.createElement("p",null,"Provides details for a review comment."),l.a.createElement(c["a"],{code:"octokit.pulls.getReviewComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pull-requests"},l.a.createElement(r["AnchorLink"],{to:"#list-pull-requests","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pull requests"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.pulls.list({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all")," to filter by state."))),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter pulls by head user or head organization and branch name in the format of ",l.a.createElement("code",null,"user:ref-name")," or ",l.a.createElement("code",null,"organization:ref-name"),". For example: ",l.a.createElement("code",null,"github:new-script-format")," or ",l.a.createElement("code",null,"octocat:test-branch"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter pulls by base branch name. Example: ",l.a.createElement("code",null,"gh-pages"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"popularity")," (comment count) or ",l.a.createElement("code",null,"long-running")," (age, filtering by pulls updated in the last month)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The direction of the sort. Can be either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: ",l.a.createElement("code",null,"desc")," when sort is ",l.a.createElement("code",null,"created")," or sort is not specified, otherwise ",l.a.createElement("code",null,"asc"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#list-pull-requests"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-comments-for-a-pull-request-review"},l.a.createElement(r["AnchorLink"],{to:"#list-comments-for-a-pull-request-review","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List comments for a pull request review"),l.a.createElement("p",null,"List comments for a specific pull request review."),l.a.createElement(c["a"],{code:"octokit.pulls.listCommentsForReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-comments-for-a-pull-request-review"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commits-on-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-commits-on-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commits on a pull request"),l.a.createElement("p",null,"Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"List commits")," endpoint."),l.a.createElement(c["a"],{code:"octokit.pulls.listCommits({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#list-commits-on-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pull-requests-files"},l.a.createElement(r["AnchorLink"],{to:"#list-pull-requests-files","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pull requests files"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default."),l.a.createElement(c["a"],{code:"octokit.pulls.listFiles({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#list-pull-requests-files"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-requested-reviewers-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-requested-reviewers-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List requested reviewers for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.listRequestedReviewers({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-requested-reviewers-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-review-comments-on-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-review-comments-on-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List review comments on a pull request"),l.a.createElement("p",null,"Lists all review comments for a pull request. By default, review comments are in ascending order by ID."),l.a.createElement(c["a"],{code:"octokit.pulls.listReviewComments({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-review-comments-on-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-review-comments-in-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-review-comments-in-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List review comments in a repository"),l.a.createElement("p",null,"Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID."),l.a.createElement(c["a"],{code:"octokit.pulls.listReviewCommentsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-review-comments-in-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reviews-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-reviews-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reviews for a pull request"),l.a.createElement("p",null,"The list of reviews returns in chronological order."),l.a.createElement(c["a"],{code:"octokit.pulls.listReviews({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-reviews-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"merge-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#merge-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merge a pull request"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.merge({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Title for the automatic commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_message"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Extra detail to append to automatic commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"SHA that pull request head must match to allow merge."))),l.a.createElement("tr",null,l.a.createElement("td",null,"merge_method"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Merge method to use. Possible values are ",l.a.createElement("code",null,"merge"),", ",l.a.createElement("code",null,"squash")," or ",l.a.createElement("code",null,"rebase"),". Default is ",l.a.createElement("code",null,"merge"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#merge-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-requested-reviewers-from-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#remove-requested-reviewers-from-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove requested reviewers from a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.removeRequestedReviewers({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of user ",l.a.createElement("code",null,"login"),"s that will be removed."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of team ",l.a.createElement("code",null,"slug"),"s that will be removed."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"request-reviewers-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#request-reviewers-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Request reviewers for a pull request"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.requestReviewers({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of user ",l.a.createElement("code",null,"login"),"s that will be requested."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of team ",l.a.createElement("code",null,"slug"),"s that will be requested."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#request-reviewers-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"submit-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#submit-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Submit a review for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.submitReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  event,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The body text of the pull request review"))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The review action you want to perform. The review actions include: ",l.a.createElement("code",null,"APPROVE"),", ",l.a.createElement("code",null,"REQUEST_CHANGES"),", or ",l.a.createElement("code",null,"COMMENT"),". When you leave this blank, the API returns ",l.a.createElement("em",null,"HTTP 422 (Unrecognizable entity)")," and sets the review action state to ",l.a.createElement("code",null,"PENDING"),", which means you will need to re-submit the pull request review using a review action."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#update-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a pull request"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request."),l.a.createElement(c["a"],{code:"octokit.pulls.update({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"State of this Pull Request. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"maintainer_can_modify"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/"},"maintainers can modify")," the pull request."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#update-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-pull-request-branch"},l.a.createElement(r["AnchorLink"],{to:"#update-a-pull-request-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a pull request branch"),l.a.createElement("p",null,"Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch."),l.a.createElement(c["a"],{code:"octokit.pulls.updateBranch({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"expected_head_sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a ",l.a.createElement("code",null,"422 Unprocessable Entity"),' status. You can use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"List commits"),"\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#update-a-pull-request-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#update-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a review for a pull request"),l.a.createElement("p",null,"Update the review summary comment with new text."),l.a.createElement(c["a"],{code:"octokit.pulls.updateReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The body text of the pull request review."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#update-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#update-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a review comment for a pull request"),l.a.createElement("p",null,"Enables you to edit a review comment."),l.a.createElement(c["a"],{code:"octokit.pulls.updateReviewComment({\n  owner,\n  repo,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text of the reply to the review comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#update-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),".")))}},"8yz6":function(e,t,a){"use strict";e.exports=function(e,t){if("string"!==typeof e||"string"!==typeof t)throw new TypeError("Expected the arguments to be of type `string`");if(""===t)return[e];var a=e.indexOf(t);return-1===a?[e]:[e.slice(0,a),e.slice(a+t.length)]}},"90hW":function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},"93I0":function(e,t,a){var n=a("VpIT"),l=a("kOOl"),r=n("keys");e.exports=function(e){return r[e]||(r[e]=l(e))}},"94Xl":function(e,t,a){var n=a("JiZb");n("Array")},"9D6x":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("HAuM");n({target:"Map",proto:!0,real:!0,forced:l},{update:function(e,t){var a=r(this),n=arguments.length;c(t);var l=a.has(e);if(!l&&n<3)throw TypeError("Updating absent value");var o=l?a.get(e):c(n>2?arguments[2]:void 0)(e,a);return a.set(e,t(o,e,a)),a}})},"9N29":function(e,t,a){"use strict";var n=a("I+eb"),l=a("1Y/n").right,r=a("pkCn"),c=a("rkAj"),o=r("reduceRight"),i=c("reduce",{1:0});n({target:"Array",proto:!0,forced:!o||!i},{reduceRight:function(e){return l(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"9R94":function(e,t,a){"use strict";var n=!0,l="Invariant failed";function r(e,t){if(!e){if(n)throw new Error(l);throw new Error(l+": "+(t||""))}}t["a"]=r},"9Zrl":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"search-code"},l.a.createElement(r["AnchorLink"],{to:"#search-code","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search code"),l.a.createElement("p",null,"Searches for query terms inside of a file. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for code, you can get text match metadata for the file ",l.a.createElement("strong",null,"content")," and file ",l.a.createElement("strong",null,"path")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find the definition of the ",l.a.createElement("code",null,"addClass")," function inside ",l.a.createElement(r["Link"],{to:"https://github.com/jquery/jquery"},"jQuery")," repository, your query would look something like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=addClass+in:file+language:js+repo:jquery/jquery")),l.a.createElement("p",null,"This query searches for the keyword ",l.a.createElement("code",null,"addClass")," within a file's contents. The query limits the search to files where the language is JavaScript in the ",l.a.createElement("code",null,"jquery/jquery")," repository."),l.a.createElement("h6",{id:"considerations-for-code-search"},l.a.createElement(r["AnchorLink"],{to:"#considerations-for-code-search","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Considerations for code search"),l.a.createElement("p",null,"Due to the complexity of searching code, there are a few restrictions on how searches are performed:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Only the ",l.a.createElement("em",null,"default branch")," is considered. In most cases, this will be the ",l.a.createElement("code",null,"master")," branch."),l.a.createElement("li",null,"Only files smaller than 384 KB are searchable."),l.a.createElement("li",null,"You must always include at least one search term when searching source code. For example, searching for ",l.a.createElement(r["Link"],{to:"https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code"},l.a.createElement("code",null,"language:go"))," is not valid, while ",l.a.createElement(r["Link"],{to:"https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code"},l.a.createElement("code",null,"amazing language:go"))," is.")),l.a.createElement(c["a"],{code:"octokit.search.code({\n  q,\n});\n",lang:"js"}),l.a.createElement("h2",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-code/"},"Searching code"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query. Can only be ",l.a.createElement("code",null,"indexed"),", which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-code"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-commits"},l.a.createElement(r["AnchorLink"],{to:"#search-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search commits"),l.a.createElement("p",null,"Find commits via various criteria on the default branch (usually ",l.a.createElement("code",null,"master"),"). This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for commits, you can get text match metadata for the ",l.a.createElement("strong",null,"message")," field when you provide the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find commits related to CSS in the ",l.a.createElement(r["Link"],{to:"https://github.com/octocat/Spoon-Knife"},"octocat/Spoon-Knife")," repository. Your query would look something like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=repo:octocat/Spoon-Knife+css")),l.a.createElement(c["a"],{code:"octokit.search.commits({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-commits/"},"Searching commits"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by ",l.a.createElement("code",null,"author-date")," or ",l.a.createElement("code",null,"committer-date"),". Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-issues-and-pull-requests"},l.a.createElement(r["AnchorLink"],{to:"#search-issues-and-pull-requests","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search issues and pull requests"),l.a.createElement("p",null,"Find issues by state and keyword. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for issues, you can get text match metadata for the issue ",l.a.createElement("strong",null,"title"),", issue ",l.a.createElement("strong",null,"body"),", and issue ",l.a.createElement("strong",null,"comment body")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this."),l.a.createElement("p",null,l.a.createElement("code",null,"q=windows+label:bug+language:python+state:open&sort=created&order=asc")),l.a.createElement("p",null,"This query searches for the keyword ",l.a.createElement("code",null,"windows"),", within any open issue that is labeled as ",l.a.createElement("code",null,"bug"),". The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," For ",l.a.createElement(r["Link"],{to:"https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests"},"user-to-server")," GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the ",l.a.createElement("code",null,"is:issue")," or ",l.a.createElement("code",null,"is:pull-request")," qualifier will receive an HTTP ",l.a.createElement("code",null,"422 Unprocessable Entity")," response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the ",l.a.createElement("code",null,"is"),' qualifier, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests"},"Searching only issues or pull requests"),'."'),l.a.createElement(c["a"],{code:"octokit.search.issuesAndPullRequests({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-issues-and-pull-requests/"},"Searching issues and pull requests"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by the number of ",l.a.createElement("code",null,"comments"),", ",l.a.createElement("code",null,"reactions"),", ",l.a.createElement("code",null,"reactions-+1"),", ",l.a.createElement("code",null,"reactions--1"),", ",l.a.createElement("code",null,"reactions-smile"),", ",l.a.createElement("code",null,"reactions-thinking_face"),", ",l.a.createElement("code",null,"reactions-heart"),", ",l.a.createElement("code",null,"reactions-tada"),", or ",l.a.createElement("code",null,"interactions"),". You can also sort results by how recently the items were ",l.a.createElement("code",null,"created")," or ",l.a.createElement("code",null,"updated"),", Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-issues-and-pull-requests"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-labels"},l.a.createElement(r["AnchorLink"],{to:"#search-labels","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search labels"),l.a.createElement("p",null,"Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for labels, you can get text match metadata for the label ",l.a.createElement("strong",null,"name")," and ",l.a.createElement("strong",null,"description")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find labels in the ",l.a.createElement("code",null,"linguist")," repository that match ",l.a.createElement("code",null,"bug"),", ",l.a.createElement("code",null,"defect"),", or ",l.a.createElement("code",null,"enhancement"),". Your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=bug+defect+enhancement&repository_id=64778136")),l.a.createElement("p",null,"The labels that best match the query appear first in the search results."),l.a.createElement(c["a"],{code:"octokit.search.labels({\n  repository_id,\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The id of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by when the label was ",l.a.createElement("code",null,"created")," or ",l.a.createElement("code",null,"updated"),". Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-labels"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-repositories"},l.a.createElement(r["AnchorLink"],{to:"#search-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search repositories"),l.a.createElement("p",null,"Find repositories via various criteria. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for repositories, you can get text match metadata for the ",l.a.createElement("strong",null,"name")," and ",l.a.createElement("strong",null,"description")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=tetris+language:assembly&sort=stars&order=desc")),l.a.createElement("p",null,"This query searches for repositories with the word ",l.a.createElement("code",null,"tetris")," in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results."),l.a.createElement("p",null,"When you include the ",l.a.createElement("code",null,"mercy")," preview header, you can also search for multiple topics by adding more ",l.a.createElement("code",null,"topic:")," instances. For example, your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=topic:ruby+topic:rails")),l.a.createElement(c["a"],{code:"octokit.search.repos({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-for-repositories/"},"Searching for repositories"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by number of ",l.a.createElement("code",null,"stars"),", ",l.a.createElement("code",null,"forks"),", or ",l.a.createElement("code",null,"help-wanted-issues")," or how recently the items were ",l.a.createElement("code",null,"updated"),". Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-topics"},l.a.createElement(r["AnchorLink"],{to:"#search-topics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search topics"),l.a.createElement("p",null,"Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-topics/"},"Searching topics"),'" for a detailed list of qualifiers.'),l.a.createElement("p",null,"When searching for topics, you can get text match metadata for the topic's ",l.a.createElement("strong",null,"short_description"),", ",l.a.createElement("strong",null,"description"),", ",l.a.createElement("strong",null,"name"),", or ",l.a.createElement("strong",null,"display_name")," field when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to search for topics related to Ruby that are featured on ",l.a.createElement(r["Link"],{to:"https://github.com/topics"},"https://github.com/topics"),". Your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=ruby+is:featured")),l.a.createElement("p",null,"This query searches for topics with the keyword ",l.a.createElement("code",null,"ruby")," and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results."),l.a.createElement(c["a"],{code:"octokit.search.topics({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-topics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-users"},l.a.createElement(r["AnchorLink"],{to:"#search-users","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search users"),l.a.createElement("p",null,"Find users via various criteria. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for users, you can get text match metadata for the issue ",l.a.createElement("strong",null,"login"),", ",l.a.createElement("strong",null,"email"),", and ",l.a.createElement("strong",null,"name")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about highlighting search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),". For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you're looking for a list of popular users, you might try this query:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=tom+repos:%3E42+followers:%3E1000")),l.a.createElement("p",null,"This query searches for users with the name ",l.a.createElement("code",null,"tom"),". The results are restricted to users with more than 42 repositories and over 1,000 followers."),l.a.createElement(c["a"],{code:"octokit.search.users({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-users/"},"Searching users"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by number of ",l.a.createElement("code",null,"followers")," or ",l.a.createElement("code",null,"repositories"),", or when the person ",l.a.createElement("code",null,"joined")," GitHub. Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-users"},"GitHub Developer Guide documentation"),".")))}},"9d/t":function(e,t,a){var n=a("AO7/"),l=a("xrYK"),r=a("tiKp"),c=r("toStringTag"),o="Arguments"==l(function(){return arguments}()),i=function(e,t){try{return e[t]}catch(a){}};e.exports=n?l:function(e){var t,a,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(a=i(t=Object(e),c))?a:o?l(t):"Object"==(n=l(t))&&"function"==typeof t.callee?"Arguments":n}},A2ZE:function(e,t,a){var n=a("HAuM");e.exports=function(e,t,a){if(n(e),void 0===t)return e;switch(a){case 0:return function(){return e.call(t)};case 1:return function(a){return e.call(t,a)};case 2:return function(a,n){return e.call(t,a,n)};case 3:return function(a,n,l){return e.call(t,a,n,l)}}return function(){return e.apply(t,arguments)}}},AENf:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Many common request errors can be easily remediated by retrying the request. We recommend installing the ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/plugin-retry.js"},l.a.createElement("code",null,"@octokit/plugin-retry")," plugin")," for Automatic retries in these cases"),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\nconst { retry } = require("@octokit/plugin-retry");\nconst MyOctokit = Octokit.plugin(retry);\n\nconst octokit = new MyOctokit();\n\n// all requests sent with the `octokit` instance are now retried up to 3 times for recoverable errors.\n',lang:"js"})))}},"AO7/":function(e,t,a){var n=a("tiKp"),l=n("toStringTag"),r={};r[l]="z",e.exports="[object z]"===String(r)},AVoK:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("Cg3G");n({target:"Set",proto:!0,real:!0,forced:l},{deleteAll:function(){return r.apply(this,arguments)}})},AwgR:function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=l.has,o=l.toKey;n({target:"Reflect",stat:!0},{hasOwnMetadata:function(e,t){var a=arguments.length<3?void 0:o(arguments[2]);return c(e,r(t),a)}})},B6y2:function(e,t,a){var n=a("I+eb"),l=a("b1O7").values;n({target:"Object",stat:!0},{values:function(e){return l(e)}})},BB9S:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"block-a-user-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#block-a-user-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Block a user from an organization"),l.a.createElement(c["a"],{code:"octokit.orgs.blockUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#block-a-user-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"cancel-an-organization-invitation"},l.a.createElement(r["AnchorLink"],{to:"#cancel-an-organization-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Cancel an organization invitation"),l.a.createElement("p",null,"Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),"."),l.a.createElement(c["a"],{code:"octokit.orgs.cancelInvitation({\n  org,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#cancel-an-organization-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-is-blocked-by-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-is-blocked-by-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user is blocked by an organization"),l.a.createElement(c["a"],{code:"octokit.orgs.checkBlockedUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#check-if-a-user-is-blocked-by-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#check-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check organization membership for a user"),l.a.createElement("p",null,"Check if a user is, publicly or privately, a member of the organization."),l.a.createElement(c["a"],{code:"octokit.orgs.checkMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#check-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-public-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#check-public-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check public organization membership for a user"),l.a.createElement(c["a"],{code:"octokit.orgs.checkPublicMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#check-public-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"convert-an-organization-member-to-outside-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#convert-an-organization-member-to-outside-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Convert an organization member to outside collaborator"),l.a.createElement("p",null,"When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/"},"Converting an organization member to an outside collaborator"),'".'),l.a.createElement(c["a"],{code:"octokit.orgs.convertMemberToOutsideCollaborator({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-invitation"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization invitation"),l.a.createElement("p",null,"Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.orgs.createInvitation({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitee_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required unless you provide ",l.a.createElement("code",null,"email")),". GitHub user ID for the person you are inviting."))),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required unless you provide ",l.a.createElement("code",null,"invitee_id")),". Email address of the person you are inviting, which can be an existing GitHub user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify role for new member. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"direct_member")," - Non-owner organization members with ability to see other members and join teams by invitation.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"billing_manager")," - Non-owner organization members with ability to manage the billing settings of your organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify IDs for the teams you want to invite new members to."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#create-an-organization-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization webhook"),l.a.createElement("p",null,"Here's how you can create a hook that posts payloads in JSON format:"),l.a.createElement(c["a"],{code:"octokit.orgs.createWebhook({\n        org,\nname,\nconfig,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,'Must be passed as "web".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#create-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config.password"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#create-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an organization webhook"),l.a.createElement(c["a"],{code:"octokit.orgs.deleteWebhook({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#delete-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization"),l.a.createElement("p",null,"To see many of the organization response values, you need to be an authenticated organization owner with the ",l.a.createElement("code",null,"admin:org")," scope. When the value of ",l.a.createElement("code",null,"two_factor_requirement_enabled")," is ",l.a.createElement("code",null,"true"),", the organization requires all members, billing managers, and outside collaborators to enable ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/"},"two-factor authentication"),"."),l.a.createElement("p",null,"GitHub Apps with the ",l.a.createElement("code",null,"Organization plan")," permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/"},"Authenticating with GitHub Apps"),"\" for details. For an example response, see 'Response with GitHub plan information' below.\""),l.a.createElement(c["a"],{code:"octokit.orgs.get({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#get-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization membership for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.getMembershipForAuthenticatedUser({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get organization membership for a user"),l.a.createElement("p",null,"In order to get a user's membership with an organization, the authenticated user must be an organization member."),l.a.createElement(c["a"],{code:"octokit.orgs.getMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization webhook"),l.a.createElement("p",null,"Returns a webhook configured in an organization. To get only the webhook ",l.a.createElement("code",null,"config"),' properties, see "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#get-a-webhook-configuration-for-an-organization"},"Get a webhook configuration for an organization"),'."'),l.a.createElement(c["a"],{code:"octokit.orgs.getWebhook({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-webhook-configuration-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-a-webhook-configuration-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a webhook configuration for an organization"),l.a.createElement("p",null,"Returns the webhook configuration for an organization. To get more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#get-an-organization-webhook"},"Get an organization webhook "),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"admin:org_hook")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"organization_hooks:read")," permission."),l.a.createElement(c["a"],{code:"octokit.orgs.getWebhookConfigForOrg({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs#get-a-webhook-configuration-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organizations"},l.a.createElement(r["AnchorLink"],{to:"#list-organizations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organizations"),l.a.createElement("p",null,"Lists all organizations, in the order that they were created on GitHub."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Pagination is powered exclusively by the ",l.a.createElement("code",null,"since")," parameter. Use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header"},"Link header")," to get the URL for the next page of organizations."),l.a.createElement(c["a"],{code:"octokit.orgs.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An organization ID. Only return organizations with an ID greater than this ID."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-organizations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-app-installations-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-app-installations-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List app installations for an organization"),l.a.createElement("p",null,"Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with ",l.a.createElement("code",null,"admin:read")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.orgs.listAppInstallations({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-app-installations-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-users-blocked-by-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-users-blocked-by-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List users blocked by an organization"),l.a.createElement("p",null,"List the users blocked by an organization."),l.a.createElement(c["a"],{code:"octokit.orgs.listBlockedUsers({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-users-blocked-by-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-failed-organization-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-failed-organization-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List failed organization invitations"),l.a.createElement("p",null,"The return hash contains ",l.a.createElement("code",null,"failed_at")," and ",l.a.createElement("code",null,"failed_reason")," fields which represent the time at which the invitation failed and the reason for the failure."),l.a.createElement(c["a"],{code:"octokit.orgs.listFailedInvitations({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-failed-organization-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organizations-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organizations-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organizations for the authenticated user"),l.a.createElement("p",null,"List organizations for the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with ",l.a.createElement("code",null,"read:org")," scope, you can publicize your organization membership with ",l.a.createElement("code",null,"user")," scope, etc.). Therefore, this API requires at least ",l.a.createElement("code",null,"user")," or ",l.a.createElement("code",null,"read:org")," scope. OAuth requests with insufficient scope receive a ",l.a.createElement("code",null,"403 Forbidden")," response."),l.a.createElement(c["a"],{code:"octokit.orgs.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-organizations-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organizations-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organizations-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organizations for a user"),l.a.createElement("p",null,"List ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/publicizing-or-concealing-organization-membership"},"public organization memberships")," for the specified user."),l.a.createElement("p",null,"This method only lists ",l.a.createElement("em",null,"public")," memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user"},"List organizations for the authenticated user")," API instead."),l.a.createElement(c["a"],{code:"octokit.orgs.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-organizations-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-invitation-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-invitation-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization invitation teams"),l.a.createElement("p",null,"List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner."),l.a.createElement(c["a"],{code:"octokit.orgs.listInvitationTeams({\n  org,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-invitation-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-members"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-members","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization members"),l.a.createElement("p",null,"List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned."),l.a.createElement(c["a"],{code:"octokit.orgs.listMembers({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter members returned in the list. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"2fa_disabled")," - Members without ",l.a.createElement(r["Link"],{to:"https://github.com/blog/1614-two-factor-authentication"},"two-factor authentication")," enabled. Available for organization owners.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - All members the authenticated user can see."))),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter members returned by their role. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - All members of the organization, regardless of role.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - Organization owners.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - Non-owner organization members."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-members"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-memberships-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-memberships-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization memberships for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.listMembershipsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the memberships to return. Can be either ",l.a.createElement("code",null,"active")," or ",l.a.createElement("code",null,"pending"),". If not specified, the API returns both active and pending memberships."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-outside-collaborators-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-outside-collaborators-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List outside collaborators for an organization"),l.a.createElement("p",null,"List all users who are outside collaborators of an organization."),l.a.createElement(c["a"],{code:"octokit.orgs.listOutsideCollaborators({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter the list of outside collaborators. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"2fa_disabled"),": Outside collaborators without ",l.a.createElement(r["Link"],{to:"https://github.com/blog/1614-two-factor-authentication"},"two-factor authentication")," enabled.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All outside collaborators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-outside-collaborators-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pending-organization-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-pending-organization-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pending organization invitations"),l.a.createElement("p",null,"The return hash contains a ",l.a.createElement("code",null,"role")," field which refers to the Organization Invitation role and will be one of the following values: ",l.a.createElement("code",null,"direct_member"),", ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"billing_manager"),", ",l.a.createElement("code",null,"hiring_manager"),", or ",l.a.createElement("code",null,"reinstate"),". If the invitee is not a GitHub member, the ",l.a.createElement("code",null,"login")," field in the return hash will be ",l.a.createElement("code",null,"null"),"."),l.a.createElement(c["a"],{code:"octokit.orgs.listPendingInvitations({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-pending-organization-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-organization-members"},l.a.createElement(r["AnchorLink"],{to:"#list-public-organization-members","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public organization members"),l.a.createElement("p",null,"Members of an organization can choose to have their membership publicized or not."),l.a.createElement(c["a"],{code:"octokit.orgs.listPublicMembers({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-public-organization-members"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-webhooks"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-webhooks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization webhooks"),l.a.createElement(c["a"],{code:"octokit.orgs.listWebhooks({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-webhooks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"ping-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#ping-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Ping an organization webhook"),l.a.createElement("p",null,"This will trigger a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/#ping-event"},"ping event")," to be sent to the hook."),l.a.createElement(c["a"],{code:"octokit.orgs.pingWebhook({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#ping-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-an-organization-member"},l.a.createElement(r["AnchorLink"],{to:"#remove-an-organization-member","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove an organization member"),l.a.createElement("p",null,"Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories."),l.a.createElement(c["a"],{code:"octokit.orgs.removeMember({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-an-organization-member"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#remove-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove organization membership for a user"),l.a.createElement("p",null,"In order to remove a user's membership with an organization, the authenticated user must be an organization owner."),l.a.createElement("p",null,"If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases."),l.a.createElement(c["a"],{code:"octokit.orgs.removeMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-outside-collaborator-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#remove-outside-collaborator-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove outside collaborator from an organization"),l.a.createElement("p",null,"Removing a user from this list will remove them from all the organization's repositories."),l.a.createElement(c["a"],{code:"octokit.orgs.removeOutsideCollaborator({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-outside-collaborator-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-public-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#remove-public-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove public organization membership for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.removePublicMembershipForAuthenticatedUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#set-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set organization membership for a user"),l.a.createElement("p",null,"Only authenticated organization owners can add a member to the organization or update the member's role."),l.a.createElement("ul",null,l.a.createElement("li",null,"If the authenticated user is ",l.a.createElement("em",null,"adding")," a member to the organization, the invited user will receive an email inviting them to the organization. The user's ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user"},"membership status")," will be ",l.a.createElement("code",null,"pending")," until they accept the invitation."),l.a.createElement("li",null,"Authenticated users can ",l.a.createElement("em",null,"update")," a user's membership by passing the ",l.a.createElement("code",null,"role")," parameter. If the authenticated user changes a member's role to ",l.a.createElement("code",null,"admin"),", the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to ",l.a.createElement("code",null,"member"),", no email will be sent.")),l.a.createElement("p",null,l.a.createElement("strong",null,"Rate limits")),l.a.createElement("p",null,"To prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period."),l.a.createElement(c["a"],{code:"octokit.orgs.setMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The role to give the user in the organization. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - The user will become an owner of the organization.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - The user will become a non-owner member of the organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#set-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-public-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#set-public-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set public organization membership for the authenticated user"),l.a.createElement("p",null,"The user can publicize their own membership. (A user cannot publicize the membership for another user.)"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.orgs.setPublicMembershipForAuthenticatedUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unblock-a-user-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#unblock-a-user-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unblock a user from an organization"),l.a.createElement(c["a"],{code:"octokit.orgs.unblockUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#unblock-a-user-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#update-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an organization"),l.a.createElement("p",null,l.a.createElement("strong",null,"Parameter Deprecation Notice:")," GitHub will replace and discontinue ",l.a.createElement("code",null,"members_allowed_repository_creation_type")," in favor of more granular permissions. The new input parameters are ",l.a.createElement("code",null,"members_can_create_public_repositories"),", ",l.a.createElement("code",null,"members_can_create_private_repositories")," for all organizations and ",l.a.createElement("code",null,"members_can_create_internal_repositories")," for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the ",l.a.createElement(r["Link"],{to:"https://developer.github.com/changes/2019-12-03-internal-visibility-changes"},"blog post"),"."),l.a.createElement("p",null,"Enables an authenticated organization owner with the ",l.a.createElement("code",null,"admin:org")," scope to update the organization's profile and member privileges."),l.a.createElement(c["a"],{code:"octokit.orgs.update({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"billing_email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Billing email address. This address is not publicized."))),l.a.createElement("tr",null,l.a.createElement("td",null,"company"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The company name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The publicly visible email address."))),l.a.createElement("tr",null,l.a.createElement("td",null,"twitter_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The Twitter username of the company."))),l.a.createElement("tr",null,l.a.createElement("td",null,"location"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The location."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The shorthand name of the company."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the company."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_organization_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether an organization can use organization projects."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_repository_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether repositories that belong to the organization can use repository projects."))),l.a.createElement("tr",null,l.a.createElement("td",null,"default_repository_permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Default permission level members have for organization repositories:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"read")," - can pull, but not push to or administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"write")," - can pull and push, but not administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - can pull, push, and administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"none")," - no permissions granted by default."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles the ability of non-admin organization members to create repositories. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," A parameter can override this parameter. See ",l.a.createElement("code",null,"members_allowed_repository_creation_type")," in this table for details. ",l.a.createElement("strong",null,"Note:")," A parameter can override this parameter. See ",l.a.createElement("code",null,"members_allowed_repository_creation_type")," in this table for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_internal_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create internal repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create internal repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization"},"Restricting repository creation in your organization"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_private_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create private repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create private repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization"},"Restricting repository creation in your organization"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_public_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create public repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create public repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization"},"Restricting repository creation in your organization"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_allowed_repository_creation_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies which types of repositories non-admin organization members can create. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - all organization members can create public and private repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"private")," - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"none")," - only admin members can create repositories.",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in ",l.a.createElement("code",null,"members_can_create_repositories"),". See the parameter deprecation notice in the operation description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create GitHub Pages sites. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create GitHub Pages sites.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - no organization members can create GitHub Pages sites. Existing published sites will not be impacted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_public_pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create public GitHub Pages sites. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create public GitHub Pages sites.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - no organization members can create public GitHub Pages sites. Existing published sites will not be impacted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_private_pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create private GitHub Pages sites. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create private GitHub Pages sites.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - no organization members can create private GitHub Pages sites. Existing published sites will not be impacted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"blog"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#update-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#update-an-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an organization membership for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.updateMembershipForAuthenticatedUser({\n  org,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The state that the membership should be in. Only ",l.a.createElement("code",null,'"active"')," will be accepted."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#update-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an organization webhook"),l.a.createElement("p",null,"Updates a webhook configured in an organization. When you update a webhook, the ",l.a.createElement("code",null,"secret")," will be overwritten. If you previously had a ",l.a.createElement("code",null,"secret")," set, you must provide the same ",l.a.createElement("code",null,"secret")," or set a new ",l.a.createElement("code",null,"secret")," or the secret will be removed. If you are only updating individual webhook ",l.a.createElement("code",null,"config"),' properties, use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#update-a-webhook-configuration-for-an-organization"},"Update a webhook configuration for an organization"),'."'),l.a.createElement(c["a"],{code:"octokit.orgs.updateWebhook({\n        org,\nhook_id,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#update-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#update-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-webhook-configuration-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#update-a-webhook-configuration-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a webhook configuration for an organization"),l.a.createElement("p",null,"Updates the webhook configuration for an organization. To update more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#update-an-organization-webhook"},"Update an organization webhook "),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"admin:org_hook")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"organization_hooks:write")," permission."),l.a.createElement(c["a"],{code:"octokit.orgs.updateWebhookConfigForOrg({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs#update-a-webhook-configuration-for-an-organization"},"GitHub Developer Guide documentation"),".")))}},BGb9:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("SEBh"),s=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{union:function(e){var t=c(this),a=new(i(t,r("Set")))(t);return s(e,o(a.add),a),a}})},BIHw:function(e,t,a){"use strict";var n=a("I+eb"),l=a("or9q"),r=a("ewvW"),c=a("UMSQ"),o=a("ppGB"),i=a("ZfDv");n({target:"Array",proto:!0},{flat:function(){var e=arguments.length?arguments[0]:void 0,t=r(this),a=c(t.length),n=i(t,0);return n.length=l(n,t,t,a,0,void 0===e?1:o(e)),n}})},BTho:function(e,t,a){"use strict";var n=a("HAuM"),l=a("hh1v"),r=[].slice,c={},o=function(e,t,a){if(!(t in c)){for(var n=[],l=0;l<t;l++)n[l]="a["+l+"]";c[t]=Function("C,a","return new C("+n.join(",")+")")}return c[t](e,a)};e.exports=Function.bind||function(e){var t=n(this),a=r.call(arguments,1),c=function(){var n=a.concat(r.call(arguments));return this instanceof c?o(t,n.length,n):t.apply(e,n)};return l(t.prototype)&&(c.prototype=t.prototype),c}},"BX/b":function(e,t,a){var n=a("/GqU"),l=a("JBy8").f,r={}.toString,c="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],o=function(e){try{return l(e)}catch(t){return c.slice()}};e.exports.f=function(e){return c&&"[object Window]"==r.call(e)?o(e):l(n(e))}},Bnag:function(e,t){function a(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}e.exports=a},Boz7:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-an-email-address-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#add-an-email-address-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add an email address for the authenticated user"),l.a.createElement("p",null,"This endpoint is accessible with the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.users.addEmailForAuthenticated({\n  emails,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"emails"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds one or more email addresses to your GitHub account. Must contain at least one email address. ",l.a.createElement("strong",null,"Note:")," Alternatively, you can pass a single email address or an ",l.a.createElement("code",null,"array")," of emails addresses directly, but we recommend that you pass an object using the ",l.a.createElement("code",null,"emails")," key."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"block-a-user"},l.a.createElement(r["AnchorLink"],{to:"#block-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Block a user"),l.a.createElement(c["a"],{code:"octokit.users.block({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#block-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-is-blocked-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-is-blocked-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user is blocked by the authenticated user"),l.a.createElement(c["a"],{code:"octokit.users.checkBlocked({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#check-if-a-user-is-blocked-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-follows-another-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-follows-another-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user follows another user"),l.a.createElement(c["a"],{code:"octokit.users.checkFollowingForUser({\n  username,\n  target_user,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"target_user"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#check-if-a-user-follows-another-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-person-is-followed-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-person-is-followed-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a person is followed by the authenticated user"),l.a.createElement(c["a"],{code:"octokit.users.checkPersonIsFollowedByAuthenticated({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-gpg-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#create-a-gpg-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a GPG key for the authenticated user"),l.a.createElement("p",null,"Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least ",l.a.createElement("code",null,"write:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.createGpgKeyForAuthenticated({\n  armored_public_key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"armored_public_key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A GPG key in ASCII-armored format."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#create-a-gpg-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-public-ssh-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#create-a-public-ssh-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a public SSH key for the authenticated user"),l.a.createElement("p",null,"Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least ",l.a.createElement("code",null,"write:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.createPublicSshKeyForAuthenticated({\n  key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A descriptive name for the new key."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The public SSH key to add to your GitHub account."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-email-address-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-email-address-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an email address for the authenticated user"),l.a.createElement("p",null,"This endpoint is accessible with the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.users.deleteEmailForAuthenticated({\n  emails,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"emails"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Email addresses associated with the GitHub user account."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#delete-an-email-address-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-gpg-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-gpg-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a GPG key for the authenticated user"),l.a.createElement("p",null,"Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"admin:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.deleteGpgKeyForAuthenticated({\n  gpg_key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gpg_key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gpg_key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-public-ssh-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-public-ssh-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a public SSH key for the authenticated user"),l.a.createElement("p",null,"Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"admin:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.deletePublicSshKeyForAuthenticated({\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"follow-a-user"},l.a.createElement(r["AnchorLink"],{to:"#follow-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Follow a user"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement("p",null,"Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the ",l.a.createElement("code",null,"user:follow")," scope."),l.a.createElement(c["a"],{code:"octokit.users.follow({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#follow-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the authenticated user"),l.a.createElement("p",null,"If the authenticated user is authenticated through basic authentication or OAuth with the ",l.a.createElement("code",null,"user")," scope, then the response lists public and private profile information."),l.a.createElement("p",null,"If the authenticated user is authenticated through OAuth without the ",l.a.createElement("code",null,"user")," scope, then the response lists only public profile information."),l.a.createElement(c["a"],{code:"octokit.users.getAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#get-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a user"),l.a.createElement("p",null,"Provides publicly available information about someone with a GitHub account."),l.a.createElement("p",null,"GitHub Apps with the ",l.a.createElement("code",null,"Plan")," user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/"},"Identifying and authorizing users for GitHub Apps"),"\" for details about authentication. For an example response, see 'Response with GitHub plan information' below\""),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"email")," key in the following response is the publicly visible email address from your GitHub ",l.a.createElement(r["Link"],{to:"https://github.com/settings/profile"},"profile page"),". When setting up your profile, you can select a primary email address to be \u201cpublic\u201d which provides an email entry for this endpoint. If you do not set a public email address for ",l.a.createElement("code",null,"email"),", then it will have a value of ",l.a.createElement("code",null,"null"),". You only see publicly visible email addresses when authenticated with GitHub. For more information, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication"},"Authentication"),"."),l.a.createElement("p",null,'The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#emails"},"Emails API"),'".'),l.a.createElement(c["a"],{code:"octokit.users.getByUsername({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#get-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-contextual-information-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-contextual-information-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get contextual information for a user"),l.a.createElement("p",null,"Provides hovercard information when authenticated through basic auth or OAuth with the ",l.a.createElement("code",null,"repo")," scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"subject_type")," and ",l.a.createElement("code",null,"subject_id")," parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about ",l.a.createElement("code",null,"octocat")," who owns the ",l.a.createElement("code",null,"Spoon-Knife")," repository via cURL, it would look like this:"),l.a.createElement(c["a"],{code:" curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192\n",lang:"shell"}),l.a.createElement(c["a"],{code:"octokit.users.getContextForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"subject_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Identifies which additional information you'd like to receive about the person's hovercard. Can be ",l.a.createElement("code",null,"organization"),", ",l.a.createElement("code",null,"repository"),", ",l.a.createElement("code",null,"issue"),", ",l.a.createElement("code",null,"pull_request"),". ",l.a.createElement("strong",null,"Required")," when using ",l.a.createElement("code",null,"subject_id"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"subject_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Uses the ID for the ",l.a.createElement("code",null,"subject_type")," you specified. ",l.a.createElement("strong",null,"Required")," when using ",l.a.createElement("code",null,"subject_type"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#get-contextual-information-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gpg-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gpg-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a GPG key for the authenticated user"),l.a.createElement("p",null,"View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.getGpgKeyForAuthenticated({\n  gpg_key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gpg_key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gpg_key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#get-a-gpg-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-public-ssh-key-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-public-ssh-key-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a public SSH key for the authenticated user"),l.a.createElement("p",null,"View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.getPublicSshKeyForAuthenticated({\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-users"},l.a.createElement(r["AnchorLink"],{to:"#list-users","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List users"),l.a.createElement("p",null,"Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts."),l.a.createElement("p",null,"Note: Pagination is powered exclusively by the ",l.a.createElement("code",null,"since")," parameter. Use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header"},"Link header")," to get the URL for the next page of users."),l.a.createElement(c["a"],{code:"octokit.users.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A user ID. Only return users with an ID greater than this ID."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#list-users"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-users-blocked-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-users-blocked-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List users blocked by the authenticated user"),l.a.createElement("p",null,"List the users you've blocked on your personal account."),l.a.createElement(c["a"],{code:"octokit.users.listBlockedByAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-users-blocked-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-email-addresses-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-email-addresses-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List email addresses for the authenticated user"),l.a.createElement("p",null,"Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the ",l.a.createElement("code",null,"user:email")," scope."),l.a.createElement(c["a"],{code:"octokit.users.listEmailsForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-email-addresses-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-the-people-the-authenticated-user-follows"},l.a.createElement(r["AnchorLink"],{to:"#list-the-people-the-authenticated-user-follows","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List the people the authenticated user follows"),l.a.createElement("p",null,"Lists the people who the authenticated user follows."),l.a.createElement(c["a"],{code:"octokit.users.listFollowedByAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-the-people-the-authenticated-user-follows"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-followers-of-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-followers-of-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List followers of the authenticated user"),l.a.createElement("p",null,"Lists the people following the authenticated user."),l.a.createElement(c["a"],{code:"octokit.users.listFollowersForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-followers-of-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-followers-of-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-followers-of-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List followers of a user"),l.a.createElement("p",null,"Lists the people following the specified user."),l.a.createElement(c["a"],{code:"octokit.users.listFollowersForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-followers-of-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-the-people-a-user-follows"},l.a.createElement(r["AnchorLink"],{to:"#list-the-people-a-user-follows","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List the people a user follows"),l.a.createElement("p",null,"Lists the people who the specified user follows."),l.a.createElement(c["a"],{code:"octokit.users.listFollowingForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-the-people-a-user-follows"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gpg-keys-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gpg-keys-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List GPG keys for the authenticated user"),l.a.createElement("p",null,"Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:gpg_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.listGpgKeysForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-gpg-keys-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gpg-keys-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gpg-keys-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List GPG keys for a user"),l.a.createElement("p",null,"Lists the GPG keys for a user. This information is accessible by anyone."),l.a.createElement(c["a"],{code:"octokit.users.listGpgKeysForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-gpg-keys-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-email-addresses-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-email-addresses-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public email addresses for the authenticated user"),l.a.createElement("p",null,"Lists your publicly visible email address, which you can set with the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user"},"Set primary email visibility for the authenticated user")," endpoint. This endpoint is accessible with the ",l.a.createElement("code",null,"user:email")," scope."),l.a.createElement(c["a"],{code:"octokit.users.listPublicEmailsForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-keys-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-keys-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public keys for a user"),l.a.createElement("p",null,"Lists the ",l.a.createElement("em",null,"verified")," public SSH keys for a user. This is accessible by anyone."),l.a.createElement(c["a"],{code:"octokit.users.listPublicKeysForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-public-keys-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-ssh-keys-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-ssh-keys-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public SSH keys for the authenticated user"),l.a.createElement("p",null,"Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least ",l.a.createElement("code",null,"read:public_key")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.users.listPublicSshKeysForAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-primary-email-visibility-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#set-primary-email-visibility-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set primary email visibility for the authenticated user"),l.a.createElement("p",null,"Sets the visibility for your primary email addresses."),l.a.createElement(c["a"],{code:"octokit.users.setPrimaryEmailVisibilityForAuthenticated({\n  email,\n  visibility,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"An email address associated with the GitHub user account to manage."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Denotes whether an email is publically visible."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unblock-a-user"},l.a.createElement(r["AnchorLink"],{to:"#unblock-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unblock a user"),l.a.createElement(c["a"],{code:"octokit.users.unblock({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#unblock-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unfollow-a-user"},l.a.createElement(r["AnchorLink"],{to:"#unfollow-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unfollow a user"),l.a.createElement("p",null,"Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the ",l.a.createElement("code",null,"user:follow")," scope."),l.a.createElement(c["a"],{code:"octokit.users.unfollow({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/users#unfollow-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#update-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update the authenticated user"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," If your email is set to private and you send an ",l.a.createElement("code",null,"email")," parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API."),l.a.createElement(c["a"],{code:"octokit.users.updateAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new name of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The publicly visible email address of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"blog"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new blog URL of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"twitter_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new Twitter username of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"company"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new company of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"location"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new location of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"hireable"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new hiring availability of the user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"bio"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new short biography of the user."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/users/#update-the-authenticated-user"},"GitHub Developer Guide documentation"),".")))}},Bs8V:function(e,t,a){var n=a("g6v/"),l=a("0eef"),r=a("XGwC"),c=a("/GqU"),o=a("wE6v"),i=a("UTVS"),s=a("DPsx"),u=Object.getOwnPropertyDescriptor;t.f=n?u:function(e,t){if(e=c(e),t=o(t,!0),s)try{return u(e,t)}catch(a){}if(i(e,t))return r(!l.f.call(e,t),e[t])}},BsWD:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a("a3WO");function l(e,t){if(e){if("string"===typeof e)return Object(n["a"])(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?Object(n["a"])(e,t):void 0}}},C1JJ:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("HAuM"),o=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{isDisjointFrom:function(e){var t=r(this),a=c(t.has);return!o(e,(function(e){if(!0===a.call(t,e))return o.stop()})).stopped}})},C2L3:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-selected-repository-to-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#add-selected-repository-to-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add selected repository to an organization secret"),l.a.createElement("p",null,"Adds a repository to an organization secret when the ",l.a.createElement("code",null,"visibility")," for repository access is set to ",l.a.createElement("code",null,"selected"),". The visibility is set when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"Create or update an organization secret"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.addSelectedRepoToOrgSecret({\n  org,\n  secret_name,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#add-selected-repository-to-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"cancel-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#cancel-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Cancel a workflow run"),l.a.createElement("p",null,"Cancels a workflow run using its ",l.a.createElement("code",null,"id"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.cancelWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#cancel-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-or-update-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#create-or-update-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create or update an organization secret"),l.a.createElement("p",null,"Creates or updates an organization secret with an encrypted value. Encrypt your secret using",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement("h6",{id:"example-encrypting-a-secret-using-nodejs"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-nodejs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Node.js"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/github/tweetsodium"},"tweetsodium")," library."),l.a.createElement(c["a"],{code:"const sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n",lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-python"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-python","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Python"),l.a.createElement("p",null,"Encrypt your secret using ",l.a.createElement(r["Link"],{to:"https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox"},"pynacl")," with Python 3."),l.a.createElement(c["a"],{code:'from base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  """Encrypt a Unicode string using the public key."""\n  public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))\n  return b64encode(encrypted).decode("utf-8")\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-c"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-c","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using C#"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://www.nuget.org/packages/Sodium.Core/"},"Sodium.Core")," package."),l.a.createElement(c["a"],{code:'var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");\nvar publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-ruby"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-ruby","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Ruby"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/RubyCrypto/rbnacl"},"rbnacl")," gem."),l.a.createElement(c["a"],{code:'require "rbnacl"\nrequire "base64"\n\nkey = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt("my_secret")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n',lang:"ruby"}),l.a.createElement(c["a"],{code:"octokit.actions.createOrUpdateOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"encrypted_value"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Value for your secret, encrypted with ",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium")," using the public key retrieved from the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-organization-public-key"},"Get an organization public key")," endpoint."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"ID of the key you used to encrypt the secret."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Configures the access that repositories have to the organization secret. Can be one of: - ",l.a.createElement("code",null,"all")," - All repositories in an organization can access the secret. - ",l.a.createElement("code",null,"private")," - Private repositories in an organization can access the secret. - ",l.a.createElement("code",null,"selected")," - Only specific repositories can access the secret."))),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the ",l.a.createElement("code",null,"visibility")," is set to ",l.a.createElement("code",null,"selected"),". You can manage the list of selected repositories using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret"},"List selected repositories for an organization secret"),", ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret"},"Set selected repositories for an organization secret"),", and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret"},"Remove selected repository from an organization secret")," endpoints."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-or-update-a-repository-secret"},l.a.createElement(r["AnchorLink"],{to:"#create-or-update-a-repository-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create or update a repository secret"),l.a.createElement("p",null,"Creates or updates a repository secret with an encrypted value. Encrypt your secret using",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement("h6",{id:"example-encrypting-a-secret-using-nodejs-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-nodejs-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Node.js"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/github/tweetsodium"},"tweetsodium")," library."),l.a.createElement(c["a"],{code:"const sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n",lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-python-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-python-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Python"),l.a.createElement("p",null,"Encrypt your secret using ",l.a.createElement(r["Link"],{to:"https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox"},"pynacl")," with Python 3."),l.a.createElement(c["a"],{code:'from base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  """Encrypt a Unicode string using the public key."""\n  public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))\n  return b64encode(encrypted).decode("utf-8")\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-c-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-c-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using C#"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://www.nuget.org/packages/Sodium.Core/"},"Sodium.Core")," package."),l.a.createElement(c["a"],{code:'var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");\nvar publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-ruby-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-ruby-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Ruby"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/RubyCrypto/rbnacl"},"rbnacl")," gem."),l.a.createElement(c["a"],{code:'require "rbnacl"\nrequire "base64"\n\nkey = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt("my_secret")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n',lang:"ruby"}),l.a.createElement(c["a"],{code:"octokit.actions.createOrUpdateRepoSecret({\n  owner,\n  repo,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"encrypted_value"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Value for your secret, encrypted with ",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium")," using the public key retrieved from the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-repository-public-key"},"Get a repository public key")," endpoint."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"ID of the key you used to encrypt the secret."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-a-repository-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-registration-token-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#create-a-registration-token-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a registration token for an organization"),l.a.createElement("p",null,"Returns a token that you can pass to the ",l.a.createElement("code",null,"config")," script. The token expires after one hour."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-registration-token"},l.a.createElement(r["AnchorLink"],{to:"#example-using-registration-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using registration token"),l.a.createElement("p",null,"Configure your self-hosted runner, replacing ",l.a.createElement("code",null,"TOKEN")," with the registration token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh --url https://github.com/octo-org --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRegistrationTokenForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-registration-token-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-registration-token-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#create-a-registration-token-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a registration token for a repository"),l.a.createElement("p",null,"Returns a token that you can pass to the ",l.a.createElement("code",null,"config")," script. The token expires after one hour. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-registration-token-1"},l.a.createElement(r["AnchorLink"],{to:"#example-using-registration-token-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using registration token"),l.a.createElement("p",null,"Configure your self-hosted runner, replacing ",l.a.createElement("code",null,"TOKEN")," with the registration token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRegistrationTokenForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-registration-token-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-remove-token-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#create-a-remove-token-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a remove token for an organization"),l.a.createElement("p",null,"Returns a token that you can pass to the ",l.a.createElement("code",null,"config")," script to remove a self-hosted runner from an organization. The token expires after one hour."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-remove-token"},l.a.createElement(r["AnchorLink"],{to:"#example-using-remove-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using remove token"),l.a.createElement("p",null,"To remove your self-hosted runner from an organization, replace ",l.a.createElement("code",null,"TOKEN")," with the remove token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh remove --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRemoveTokenForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-remove-token-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-remove-token-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#create-a-remove-token-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a remove token for a repository"),l.a.createElement("p",null,"Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-remove-token-1"},l.a.createElement(r["AnchorLink"],{to:"#example-using-remove-token-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using remove token"),l.a.createElement("p",null,"To remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh remove --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRemoveTokenForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-remove-token-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-workflow-dispatch-event"},l.a.createElement(r["AnchorLink"],{to:"#create-a-workflow-dispatch-event","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a workflow dispatch event"),l.a.createElement("p",null,"You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),"."),l.a.createElement("p",null,"You must configure your GitHub Actions workflow to run when the ",l.a.createElement(r["AnchorLink"],{to:"/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch"},l.a.createElement("code",null,"workflow_dispatch")," webhook")," event occurs. The ",l.a.createElement("code",null,"inputs")," are configured in the workflow file. For more information about how to configure the ",l.a.createElement("code",null,"workflow_dispatch"),' event in the workflow file, see "',l.a.createElement(r["AnchorLink"],{to:"/actions/reference/events-that-trigger-workflows#workflow_dispatch"},"Events that trigger workflows"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write"),' permission to use this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line"},"Creating a personal access token for the command line"),'."'),l.a.createElement(c["a"],{code:"octokit.actions.createWorkflowDispatch({\n  owner,\n  repo,\n  workflow_id,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The git reference for the workflow. The reference can be a branch or tag name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"inputs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties configured in the workflow file will be used when ",l.a.createElement("code",null,"inputs")," are omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"inputs.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-workflow-dispatch-event"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-artifact"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-artifact","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an artifact"),l.a.createElement("p",null,"Deletes an artifact for a workflow run. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteArtifact({\n  owner,\n  repo,\n  artifact_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"artifact_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"artifact_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-an-artifact"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an organization secret"),l.a.createElement("p",null,"Deletes a secret in an organization using the secret name. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-secret"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository secret"),l.a.createElement("p",null,"Deletes a secret in a repository using the secret name. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteRepoSecret({\n  owner,\n  repo,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-repository-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-self-hosted-runner-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-self-hosted-runner-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a self-hosted runner from an organization"),l.a.createElement("p",null,"Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteSelfHostedRunnerFromOrg({\n  org,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-self-hosted-runner-from-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-self-hosted-runner-from-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a self-hosted runner from a repository"),l.a.createElement("p",null,"Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo"),"scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteSelfHostedRunnerFromRepo({\n  owner,\n  repo,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a workflow run"),l.a.createElement("p",null,"Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-workflow-run-logs"},l.a.createElement(r["AnchorLink"],{to:"#delete-workflow-run-logs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete workflow run logs"),l.a.createElement("p",null,"Deletes all logs for a workflow run. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteWorkflowRunLogs({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-workflow-run-logs"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-a-selected-repository-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#disable-a-selected-repository-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable a selected repository for GitHub Actions in an organization"),l.a.createElement("p",null,"Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.disableSelectedRepositoryGithubActionsOrganization({\n  org,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#disable-a-selected-repository-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#disable-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable a workflow"),l.a.createElement("p",null,"Disables a workflow and sets the ",l.a.createElement("code",null,"state")," of the workflow to ",l.a.createElement("code",null,"disabled_manually"),". You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),"."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.disableWorkflow({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#disable-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-an-artifact"},l.a.createElement(r["AnchorLink"],{to:"#download-an-artifact","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download an artifact"),l.a.createElement("p",null,"Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for ",l.a.createElement("code",null,"Location:")," in the response header to find the URL for the download. The ",l.a.createElement("code",null,":archive_format")," must be ",l.a.createElement("code",null,"zip"),". Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.downloadArtifact({\n  owner,\n  repo,\n  artifact_id,\n  archive_format,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"artifact_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"artifact_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"archive_format"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#download-an-artifact"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-job-logs-for-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#download-job-logs-for-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download job logs for a workflow run"),l.a.createElement("p",null,"Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look for ",l.a.createElement("code",null,"Location:")," in the response header to find the URL for the download. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.downloadJobLogsForWorkflowRun({\n  owner,\n  repo,\n  job_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"job_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"job_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#download-job-logs-for-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-workflow-run-logs"},l.a.createElement(r["AnchorLink"],{to:"#download-workflow-run-logs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download workflow run logs"),l.a.createElement("p",null,"Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for",l.a.createElement("code",null,"Location:")," in the response header to find the URL for the download. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.downloadWorkflowRunLogs({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#download-workflow-run-logs"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-a-selected-repository-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#enable-a-selected-repository-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable a selected repository for GitHub Actions in an organization"),l.a.createElement("p",null,"Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.enableSelectedRepositoryGithubActionsOrganization({\n  org,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#enable-a-selected-repository-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#enable-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable a workflow"),l.a.createElement("p",null,"Enables a workflow and sets the ",l.a.createElement("code",null,"state")," of the workflow to ",l.a.createElement("code",null,"active"),". You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),"."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.enableWorkflow({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#enable-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-allowed-actions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-allowed-actions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get allowed actions for an organization"),l.a.createElement("p",null,"Gets the selected actions that are allowed in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'.""'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getAllowedActionsOrganization({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-allowed-actions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-allowed-actions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-allowed-actions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get allowed actions for a repository"),l.a.createElement("p",null,"Gets the settings for selected actions that are allowed in a repository. To use this endpoint, the repository policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-a-repository"},"Set GitHub Actions permissions for a repository"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getAllowedActionsRepository({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-allowed-actions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-artifact"},l.a.createElement(r["AnchorLink"],{to:"#get-an-artifact","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an artifact"),l.a.createElement("p",null,"Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getArtifact({\n  owner,\n  repo,\n  artifact_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"artifact_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"artifact_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-artifact"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for an organization"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for repositories and allowed actions in an organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getGithubActionsPermissionsOrganization({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for a repository"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getGithubActionsPermissionsRepository({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-job-for-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#get-a-job-for-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a job for a workflow run"),l.a.createElement("p",null,"Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getJobForWorkflowRun({\n  owner,\n  repo,\n  job_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"job_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"job_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-job-for-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-public-key"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-public-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization public key"),l.a.createElement("p",null,"Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getOrgPublicKey({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-organization-public-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization secret"),l.a.createElement("p",null,"Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-a-repository-1"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-a-repository-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for a repository"),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated:")," This method has been renamed to actions.getGithubActionsPermissionsRepository"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getRepoPermissions({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-public-key"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-public-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository public key"),l.a.createElement("p",null,"Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getRepoPublicKey({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-repository-public-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-secret"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository secret"),l.a.createElement("p",null,"Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getRepoSecret({\n  owner,\n  repo,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-repository-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-self-hosted-runner-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-a-self-hosted-runner-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a self-hosted runner for an organization"),l.a.createElement("p",null,"Gets a specific self-hosted runner configured in an organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getSelfHostedRunnerForOrg({\n  org,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-self-hosted-runner-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-a-self-hosted-runner-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a self-hosted runner for a repository"),l.a.createElement("p",null,"Gets a specific self-hosted runner configured in a repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getSelfHostedRunnerForRepo({\n  owner,\n  repo,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#get-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a workflow"),l.a.createElement("p",null,"Gets a specific workflow. You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),". Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflow({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#get-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a workflow run"),l.a.createElement("p",null,"Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-workflow-run-usage"},l.a.createElement(r["AnchorLink"],{to:"#get-workflow-run-usage","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get workflow run usage"),l.a.createElement("p",null,'Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflowRunUsage({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-workflow-run-usage"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-workflow-usage"},l.a.createElement(r["AnchorLink"],{to:"#get-workflow-usage","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get workflow usage"),l.a.createElement("p",null,'Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),". Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflowUsage({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-39"},l.a.createElement(r["AnchorLink"],{to:"#parameters-39","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-workflow-usage"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-artifacts-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-artifacts-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List artifacts for a repository"),l.a.createElement("p",null,"Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listArtifactsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-40"},l.a.createElement(r["AnchorLink"],{to:"#parameters-40","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-artifacts-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-jobs-for-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#list-jobs-for-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List jobs for a workflow run"),l.a.createElement("p",null,"Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters"},"Parameters"),"."),l.a.createElement(c["a"],{code:"octokit.actions.listJobsForWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-41"},l.a.createElement(r["AnchorLink"],{to:"#parameters-41","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters jobs by their ",l.a.createElement("code",null,"completed_at")," timestamp. Can be one of: * ",l.a.createElement("code",null,"latest"),": Returns jobs from the most recent execution of the workflow run. * ",l.a.createElement("code",null,"all"),": Returns all jobs for a workflow run, including from old executions of the workflow run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-jobs-for-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-secrets"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-secrets","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization secrets"),l.a.createElement("p",null,"Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listOrgSecrets({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-42"},l.a.createElement(r["AnchorLink"],{to:"#parameters-42","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-organization-secrets"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-secrets"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-secrets","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository secrets"),l.a.createElement("p",null,"Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRepoSecrets({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-43"},l.a.createElement(r["AnchorLink"],{to:"#parameters-43","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-repository-secrets"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-workflows"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-workflows","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository workflows"),l.a.createElement("p",null,"Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRepoWorkflows({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-44"},l.a.createElement(r["AnchorLink"],{to:"#parameters-44","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-repository-workflows"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-runner-applications-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-runner-applications-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List runner applications for an organization"),l.a.createElement("p",null,"Lists binaries for the runner application that you can download and run."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRunnerApplicationsForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-45"},l.a.createElement(r["AnchorLink"],{to:"#parameters-45","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-runner-applications-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-runner-applications-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-runner-applications-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List runner applications for a repository"),l.a.createElement("p",null,"Lists binaries for the runner application that you can download and run."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRunnerApplicationsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-46"},l.a.createElement(r["AnchorLink"],{to:"#parameters-46","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-runner-applications-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-selected-repositories-for-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#list-selected-repositories-for-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List selected repositories for an organization secret"),l.a.createElement("p",null,"Lists all repositories that have been selected when the ",l.a.createElement("code",null,"visibility")," for repository access to a secret is set to ",l.a.createElement("code",null,"selected"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listSelectedReposForOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-47"},l.a.createElement(r["AnchorLink"],{to:"#parameters-47","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-selected-repositories-enabled-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-selected-repositories-enabled-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List selected repositories enabled for GitHub Actions in an organization"),l.a.createElement("p",null,"Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.listSelectedRepositoriesEnabledGithubActionsOrganization({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-48"},l.a.createElement(r["AnchorLink"],{to:"#parameters-48","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-selected-repositories-enabled-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-self-hosted-runners-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-self-hosted-runners-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List self-hosted runners for an organization"),l.a.createElement("p",null,"Lists all self-hosted runners configured in an organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listSelfHostedRunnersForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-49"},l.a.createElement(r["AnchorLink"],{to:"#parameters-49","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-self-hosted-runners-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-self-hosted-runners-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List self-hosted runners for a repository"),l.a.createElement("p",null,"Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listSelfHostedRunnersForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-50"},l.a.createElement(r["AnchorLink"],{to:"#parameters-50","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-workflow-run-artifacts"},l.a.createElement(r["AnchorLink"],{to:"#list-workflow-run-artifacts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List workflow run artifacts"),l.a.createElement("p",null,"Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listWorkflowRunArtifacts({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-51"},l.a.createElement(r["AnchorLink"],{to:"#parameters-51","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-workflow-run-artifacts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-workflow-runs"},l.a.createElement(r["AnchorLink"],{to:"#list-workflow-runs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List workflow runs"),l.a.createElement("p",null,"List all workflow runs for a workflow. You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),". You can use parameters to narrow the list of results. For more information about using parameters, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters"},"Parameters"),"."),l.a.createElement("p",null,"Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope."),l.a.createElement(c["a"],{code:"octokit.actions.listWorkflowRuns({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-52"},l.a.createElement(r["AnchorLink"],{to:"#parameters-52","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actor"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns someone's workflow runs. Use the login for the user who created the ",l.a.createElement("code",null,"push")," associated with the check suite or workflow run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with a branch. Use the name of the branch of the ",l.a.createElement("code",null,"push"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow run triggered by the event you specify. For example, ",l.a.createElement("code",null,"push"),", ",l.a.createElement("code",null,"pull_request")," or ",l.a.createElement("code",null,"issue"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows"},"Events that trigger workflows"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with the check run ",l.a.createElement("code",null,"status")," or ",l.a.createElement("code",null,"conclusion")," you specify. For example, a conclusion can be ",l.a.createElement("code",null,"success")," or a status can be ",l.a.createElement("code",null,"completed"),". For more information, see the ",l.a.createElement("code",null,"status")," and ",l.a.createElement("code",null,"conclusion"),' options available in "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-run"},"Create a check run"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-workflow-runs"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-workflow-runs-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-workflow-runs-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List workflow runs for a repository"),l.a.createElement("p",null,"Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters"},"Parameters"),"."),l.a.createElement("p",null,"Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listWorkflowRunsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-53"},l.a.createElement(r["AnchorLink"],{to:"#parameters-53","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"actor"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns someone's workflow runs. Use the login for the user who created the ",l.a.createElement("code",null,"push")," associated with the check suite or workflow run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with a branch. Use the name of the branch of the ",l.a.createElement("code",null,"push"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow run triggered by the event you specify. For example, ",l.a.createElement("code",null,"push"),", ",l.a.createElement("code",null,"pull_request")," or ",l.a.createElement("code",null,"issue"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows"},"Events that trigger workflows"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with the check run ",l.a.createElement("code",null,"status")," or ",l.a.createElement("code",null,"conclusion")," you specify. For example, a conclusion can be ",l.a.createElement("code",null,"success")," or a status can be ",l.a.createElement("code",null,"completed"),". For more information, see the ",l.a.createElement("code",null,"status")," and ",l.a.createElement("code",null,"conclusion"),' options available in "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-run"},"Create a check run"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-workflow-runs-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-selected-repository-from-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#remove-selected-repository-from-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove selected repository from an organization secret"),l.a.createElement("p",null,"Removes a repository from an organization secret when the ",l.a.createElement("code",null,"visibility")," for repository access is set to ",l.a.createElement("code",null,"selected"),". The visibility is set when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"Create or update an organization secret"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.removeSelectedRepoFromOrgSecret({\n  org,\n  secret_name,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-54"},l.a.createElement(r["AnchorLink"],{to:"#parameters-54","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"re-run-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#re-run-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Re-run a workflow"),l.a.createElement("p",null,"Re-runs your workflow run using its ",l.a.createElement("code",null,"id"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.reRunWorkflow({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-55"},l.a.createElement(r["AnchorLink"],{to:"#parameters-55","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#re-run-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-allowed-actions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-allowed-actions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set allowed actions for an organization"),l.a.createElement("p",null,"Sets the actions that are allowed in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"If the organization belongs to an enterprise that has ",l.a.createElement("code",null,"selected")," actions set at the enterprise level, then you cannot override any of the enterprise's allowed actions settings."),l.a.createElement("p",null,"To use the ",l.a.createElement("code",null,"patterns_allowed")," setting for private repositories, the organization must belong to an enterprise. If the organization does not belong to an enterprise, then the ",l.a.createElement("code",null,"patterns_allowed")," setting only applies to public repositories in the organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setAllowedActionsOrganization({\n  org,\n  github_owned_allowed,\n  verified_allowed,\n  patterns_allowed,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-56"},l.a.createElement(r["AnchorLink"],{to:"#parameters-56","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"github_owned_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub-owned actions are allowed. For example, this includes the actions in the ",l.a.createElement("code",null,"actions")," organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"verified_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether actions in GitHub Marketplace from verified creators are allowed. Set to ",l.a.createElement("code",null,"true")," to allow all GitHub Marketplace actions by verified creators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"patterns_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, ",l.a.createElement("code",null,"monalisa/octocat@*"),", ",l.a.createElement("code",null,"monalisa/octocat@v2"),", ",l.a.createElement("code",null,"monalisa/*"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-allowed-actions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-allowed-actions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#set-allowed-actions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set allowed actions for a repository"),l.a.createElement("p",null,"Sets the actions that are allowed in a repository. To use this endpoint, the repository permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-a-repository"},"Set GitHub Actions permissions for a repository"),'."'),l.a.createElement("p",null,"If the repository belongs to an organization or enterprise that has ",l.a.createElement("code",null,"selected")," actions set at the organization or enterprise levels, then you cannot override any of the allowed actions settings."),l.a.createElement("p",null,"To use the ",l.a.createElement("code",null,"patterns_allowed")," setting for private repositories, the repository must belong to an enterprise. If the repository does not belong to an enterprise, then the ",l.a.createElement("code",null,"patterns_allowed")," setting only applies to public repositories."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setAllowedActionsRepository({\n  owner,\n  repo,\n  github_owned_allowed,\n  verified_allowed,\n  patterns_allowed,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-57"},l.a.createElement(r["AnchorLink"],{to:"#parameters-57","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"github_owned_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub-owned actions are allowed. For example, this includes the actions in the ",l.a.createElement("code",null,"actions")," organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"verified_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether actions in GitHub Marketplace from verified creators are allowed. Set to ",l.a.createElement("code",null,"true")," to allow all GitHub Marketplace actions by verified creators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"patterns_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, ",l.a.createElement("code",null,"monalisa/octocat@*"),", ",l.a.createElement("code",null,"monalisa/octocat@v2"),", ",l.a.createElement("code",null,"monalisa/*"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-allowed-actions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-github-actions-permissions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set GitHub Actions permissions for an organization"),l.a.createElement("p",null,"Sets the GitHub Actions permissions policy for repositories and allowed actions in an organization."),l.a.createElement("p",null,"If the organization belongs to an enterprise that has set restrictive permissions at the enterprise level, such as ",l.a.createElement("code",null,"allowed_actions")," to ",l.a.createElement("code",null,"selected")," actions, then you cannot override them for the organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setGithubActionsPermissionsOrganization({\n  org,\n  enabled_repositories,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-58"},l.a.createElement(r["AnchorLink"],{to:"#parameters-58","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"enabled_repositories"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"none"),", or ",l.a.createElement("code",null,"selected"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allowed_actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions policy that controls the actions that are allowed to run. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"local_only"),", or ",l.a.createElement("code",null,"selected"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-github-actions-permissions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set GitHub Actions permissions for a repository"),l.a.createElement("p",null,"Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions in the repository."),l.a.createElement("p",null,"If the repository belongs to an organization or enterprise that has set restrictive permissions at the organization or enterprise levels, such as ",l.a.createElement("code",null,"allowed_actions")," to ",l.a.createElement("code",null,"selected")," actions, then you cannot override them for the repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setGithubActionsPermissionsRepository({\n  owner,\n  repo,\n  enabled,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-59"},l.a.createElement(r["AnchorLink"],{to:"#parameters-59","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"enabled"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub Actions is enabled on the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allowed_actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions policy that controls the actions that are allowed to run. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"local_only"),", or ",l.a.createElement("code",null,"selected"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-selected-repositories-for-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#set-selected-repositories-for-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set selected repositories for an organization secret"),l.a.createElement("p",null,"Replaces all repositories for an organization secret when the ",l.a.createElement("code",null,"visibility")," for repository access is set to ",l.a.createElement("code",null,"selected"),". The visibility is set when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"Create or update an organization secret"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.setSelectedReposForOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-60"},l.a.createElement(r["AnchorLink"],{to:"#parameters-60","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the ",l.a.createElement("code",null,"visibility")," is set to ",l.a.createElement("code",null,"selected"),". You can add and remove individual repositories using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret"},"Set selected repositories for an organization secret")," and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret"},"Remove selected repository from an organization secret")," endpoints."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-selected-repositories-enabled-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-selected-repositories-enabled-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set selected repositories enabled for GitHub Actions in an organization"),l.a.createElement("p",null,"Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setSelectedRepositoriesEnabledGithubActionsOrganization({\n  org,\n  selected_repository_ids,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-61"},l.a.createElement(r["AnchorLink"],{to:"#parameters-61","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_repository_ids"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"List of repository IDs to enable for GitHub Actions."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-enabled-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),".")))}},CQfV:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-a-secret-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#get-a-secret-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a secret scanning alert"),l.a.createElement("p",null,"Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the ",l.a.createElement("code",null,"repo")," scope or ",l.a.createElement("code",null,"security_events")," scope."),l.a.createElement("p",null,"GitHub Apps must have the ",l.a.createElement("code",null,"secret_scanning_alerts")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.secretScanning.getAlert({\n  owner,\n  repo,\n  alert_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The security alert number, found at the end of the security alert's URL."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/secret-scanning#get-a-secret-scanning-alert"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-secret-scanning-alerts-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-secret-scanning-alerts-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List secret scanning alerts for a repository"),l.a.createElement("p",null,"Lists all secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the ",l.a.createElement("code",null,"repo")," scope or ",l.a.createElement("code",null,"security_events")," scope."),l.a.createElement("p",null,"GitHub Apps must have the ",l.a.createElement("code",null,"secret_scanning_alerts")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.secretScanning.listAlertsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"resolved")," to only list secret scanning alerts in a specific state."))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/secret-scanning#list-secret-scanning-alerts-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-secret-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#update-a-secret-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a secret scanning alert"),l.a.createElement("p",null,"Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the ",l.a.createElement("code",null,"repo")," scope or ",l.a.createElement("code",null,"security_events")," scope."),l.a.createElement("p",null,"GitHub Apps must have the ",l.a.createElement("code",null,"secret_scanning_alerts")," write permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.secretScanning.updateAlert({\n  owner,\n  repo,\n  alert_number,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The security alert number, found at the end of the security alert's URL."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Sets the state of the secret scanning alert. Can be either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"resolved"),". You must provide ",l.a.createElement("code",null,"resolution")," when you set the state to ",l.a.createElement("code",null,"resolved"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"resolution"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when the ",l.a.createElement("code",null,"state")," is ",l.a.createElement("code",null,"resolved"),".")," The reason for resolving the alert. Can be one of ",l.a.createElement("code",null,"false_positive"),", ",l.a.createElement("code",null,"wont_fix"),", ",l.a.createElement("code",null,"revoked"),", or ",l.a.createElement("code",null,"used_in_tests"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/secret-scanning#update-a-secret-scanning-alert"},"GitHub Developer Guide documentation"),".")))}},CUyW:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("A2ZE"),s=a("SEBh"),u=a("Sssf"),m=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{mapValues:function(e){var t=c(this),a=u(t),n=i(e,arguments.length>1?arguments[1]:void 0,3),l=new(s(t,r("Map"))),d=o(l.set);return m(a,(function(e,a){d.call(l,e,n(a,e,t))}),void 0,!0,!0),l}})},Cg3G:function(e,t,a){"use strict";var n=a("glrk"),l=a("HAuM");e.exports=function(){for(var e,t=n(this),a=l(t["delete"]),r=!0,c=0,o=arguments.length;c<o;c++)e=a.call(t,arguments[c]),r=r&&e;return!!r}},Co1j:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("HAuM"),o=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{isSupersetOf:function(e){var t=r(this),a=c(t.has);return!o(e,(function(e){if(!1===a.call(t,e))return o.stop()})).stopped}})},CyXQ:function(e,t,a){var n=a("ppGB"),l=a("UMSQ");e.exports=function(e){if(void 0===e)return 0;var t=n(e),a=l(t);if(t!==a)throw RangeError("Wrong length or index");return a}},DEfu:function(e,t,a){var n=a("2oRo"),l=a("1E5z");l(n.JSON,"JSON",!0)},DMt2:function(e,t,a){var n=a("UMSQ"),l=a("EUja"),r=a("HYAF"),c=Math.ceil,o=function(e){return function(t,a,o){var i,s,u=String(r(t)),m=u.length,d=void 0===o?" ":String(o),E=n(a);return E<=m||""==d?u:(i=E-m,s=l.call(d,c(i/d.length)),s.length>i&&(s=s.slice(0,i)),e?u+s:s+u)}};e.exports={start:o(!1),end:o(!0)}},DPsx:function(e,t,a){var n=a("g6v/"),l=a("0Dky"),r=a("zBJ4");e.exports=!n&&!l((function(){return 7!=Object.defineProperty(r("div"),"a",{get:function(){return 7}}).a}))},DTth:function(e,t,a){var n=a("0Dky"),l=a("tiKp"),r=a("xDBR"),c=l("iterator");e.exports=!n((function(){var e=new URL("b?a=1&b=2&c=3","http://a"),t=e.searchParams,a="";return e.pathname="c%20d",t.forEach((function(e,n){t["delete"]("b"),a+=n+e})),r&&!e.toJSON||!t.sort||"http://a/c%20d?a=1&c=3"!==e.href||"3"!==t.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!t[c]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://\u0442\u0435\u0441\u0442").host||"#%D0%B1"!==new URL("http://a#\u0431").hash||"a1c3"!==a||"x"!==new URL("http://x",void 0).host}))},DcLV:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"The simplest way to receive debug information is to set the ",l.a.createElement("code",null,"log")," client option to ",l.a.createElement("code",null,"console"),"."),l.a.createElement(c["a"],{code:'const octokit = require("@octokit/rest")({\n  log: console,\n});\n\noctokit.request("/");\n',lang:"js"}),l.a.createElement("p",null,"This will log"),l.a.createElement(c["a"],{code:"request { method: 'GET',\n  baseUrl: 'https://api.github.com',\n  headers:\n   { accept: 'application/vnd.github.v3+json',\n     'user-agent':\n      'octokit.js/0.0.0-development Node.js/10.15.0 (macOS Mojave; x64)' },\n  request: {},\n  url: '/' }\nGET / - 200 in 514ms\n",lang:"unknown"}),l.a.createElement("p",null,"If you like to support a configurable log level, we recommend using the ",l.a.createElement(r["Link"],{to:"https://github.com/watson/console-log-level"},"console-log-level")," module"),l.a.createElement(c["a"],{code:'const octokit = require("@octokit/rest")({\n  log: require("console-log-level")({ level: "info" }),\n});\n\noctokit.request("/");\n',lang:"js"}),l.a.createElement("p",null,"This will only log"),l.a.createElement(c["a"],{code:"GET / - 200 in 514ms\n",lang:"unknown"})))}},DhMN:function(e,t,a){a("ofBz")},DrvE:function(e,t,a){"use strict";var n=a("I+eb"),l=a("HAuM"),r=a("0GbY"),c=a("8GlL"),o=a("5mdu"),i=a("ImZN"),s="No one promise resolved";n({target:"Promise",stat:!0},{any:function(e){var t=this,a=c.f(t),n=a.resolve,u=a.reject,m=o((function(){var a=l(t.resolve),c=[],o=0,m=1,d=!1;i(e,(function(e){var l=o++,i=!1;c.push(void 0),m++,a.call(t,e).then((function(e){i||d||(d=!0,n(e))}),(function(e){i||d||(i=!0,c[l]=e,--m||u(new(r("AggregateError"))(c,s)))}))})),--m||u(new(r("AggregateError"))(c,s))}));return m.error&&u(m.value),a.promise}})},DsTl:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"You can customize Octokit\u2019s request lifecycle with hooks. Available methods are"),l.a.createElement(c["a"],{code:'octokit.hook.before("request", async (options) => {\n  validate(options);\n});\noctokit.hook.after("request", async (response, options) => {\n  console.log(`${options.method} ${options.url}: ${response.status}`);\n});\noctokit.hook.error("request", async (error, options) => {\n  if (error.status === 304) {\n    return findInCache(error.headers.etag);\n  }\n\n  throw error;\n});\noctokit.hook.wrap("request", async (request, options) => {\n  // add logic before, after, catch errors or replace the request altogether\n  return request(options);\n});\n',lang:"js"}),l.a.createElement("p",null,"See ",l.a.createElement(r["Link"],{to:"https://github.com/gr2m/before-after-hook#hookcollectionapi"},"before-after-hook")," for more details on the 4 methods.")))}},E9XD:function(e,t,a){"use strict";var n=a("I+eb"),l=a("1Y/n").left,r=a("pkCn"),c=a("rkAj"),o=r("reduce"),i=c("reduce",{1:0});n({target:"Array",proto:!0,forced:!o||!i},{reduce:function(e){return l(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"EDT/":function(e,t,a){var n=a("I+eb"),l=a("p5mE"),r=a("0GbY");n({global:!0},{compositeSymbol:function(){return 1===arguments.length&&"string"===typeof arguments[0]?r("Symbol")["for"](arguments[0]):l.apply(null,arguments).get("symbol",r("Symbol"))}})},ENF9:function(e,t,a){"use strict";var n,l=a("2oRo"),r=a("4syw"),c=a("8YOa"),o=a("bWFh"),i=a("rKzb"),s=a("hh1v"),u=a("afO8").enforce,m=a("f5p1"),d=!l.ActiveXObject&&"ActiveXObject"in l,E=Object.isExtensible,p=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},h=e.exports=o("WeakMap",p,i);if(m&&d){n=i.getConstructor(p,"WeakMap",!0),c.REQUIRED=!0;var g=h.prototype,b=g["delete"],f=g.has,y=g.get,k=g.set;r(g,{delete:function(e){if(s(e)&&!E(e)){var t=u(this);return t.frozen||(t.frozen=new n),b.call(this,e)||t.frozen["delete"](e)}return b.call(this,e)},has:function(e){if(s(e)&&!E(e)){var t=u(this);return t.frozen||(t.frozen=new n),f.call(this,e)||t.frozen.has(e)}return f.call(this,e)},get:function(e){if(s(e)&&!E(e)){var t=u(this);return t.frozen||(t.frozen=new n),f.call(this,e)?y.call(this,e):t.frozen.get(e)}return y.call(this,e)},set:function(e,t){if(s(e)&&!E(e)){var a=u(this);a.frozen||(a.frozen=new n),f.call(this,e)?k.call(this,e,t):a.frozen.set(e,t)}else k.call(this,e,t);return this}})}},EUja:function(e,t,a){"use strict";var n=a("ppGB"),l=a("HYAF");e.exports="".repeat||function(e){var t=String(l(this)),a="",r=n(e);if(r<0||r==1/0)throw RangeError("Wrong number of repetitions");for(;r>0;(r>>>=1)&&(t+=t))1&r&&(a+=t);return a}},EW1x:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-a-code-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#get-a-code-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a code scanning alert"),l.a.createElement("p",null,"Gets a single code scanning alert. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," read permission to use this endpoint."),l.a.createElement("p",null,"The security ",l.a.createElement("code",null,"alert_number")," is found at the end of the security alert's URL. For example, the security alert ID for ",l.a.createElement("code",null,"https://github.com/Octo-org/octo-repo/security/code-scanning/88")," is ",l.a.createElement("code",null,"88"),"."),l.a.createElement(c["a"],{code:"octokit.codeScanning.getAlert({\n  owner,\n  repo,\n  alert_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#get-a-code-scanning-alert"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-code-scanning-alerts-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-code-scanning-alerts-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List code scanning alerts for a repository"),l.a.createElement("p",null,"Lists all open code scanning alerts for the default branch (usually ",l.a.createElement("code",null,"main")," or ",l.a.createElement("code",null,"master"),"). You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.listAlertsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"fixed"),", or ",l.a.createElement("code",null,"dismissed")," to list code scanning alerts in a specific state."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set a full Git reference to list alerts for a specific branch. The ",l.a.createElement("code",null,"ref")," must be formatted as ",l.a.createElement("code",null,"refs/heads/<branch name>"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#list-code-scanning-alerts-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-recent-code-scanning-analyses-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-recent-code-scanning-analyses-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List recent code scanning analyses for a repository"),l.a.createElement("p",null,"List the details of recent code scanning analyses for a repository. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.listRecentAnalyses({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set a full Git reference to list alerts for a specific branch. The ",l.a.createElement("code",null,"ref")," must be formatted as ",l.a.createElement("code",null,"refs/heads/<branch name>"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tool_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set a single code scanning tool name to filter alerts by tool."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#list-recent-analyses"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-code-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#update-a-code-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a code scanning alert"),l.a.createElement("p",null,"Updates the status of a single code scanning alert. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," write permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.updateAlert({\n  owner,\n  repo,\n  alert_number,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The security alert number, found at the end of the security alert's URL."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Sets the state of the code scanning alert. Can be one of ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"dismissed"),". You must provide ",l.a.createElement("code",null,"dismissed_reason")," when you set the state to ",l.a.createElement("code",null,"dismissed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissed_reason"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when the state is dismissed.")," The reason for dismissing or closing the alert. Can be one of: ",l.a.createElement("code",null,"false positive"),", ",l.a.createElement("code",null,"won't fix"),", and ",l.a.createElement("code",null,"used in tests"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#upload-a-code-scanning-alert"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"upload-a-sarif-file"},l.a.createElement(r["AnchorLink"],{to:"#upload-a-sarif-file","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Upload a SARIF file"),l.a.createElement("p",null,"Upload a SARIF file containing the results of a code scanning analysis to make the results available in a repository. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," write permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.uploadSarif({\n  owner,\n  repo,\n  commit_sha,\n  ref,\n  sarif,\n  tool_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit SHA of the code scanning analysis file."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The full Git reference of the code scanning analysis file, formatted as ",l.a.createElement("code",null,"refs/heads/<branch name>"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sarif"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using ",l.a.createElement(r["Link"],{to:"http://www.gnu.org/software/gzip/manual/gzip.html"},l.a.createElement("code",null,"gzip"))," and then translate the contents of the file into a Base64 encoding string."))),l.a.createElement("tr",null,l.a.createElement("td",null,"checkout_uri"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The base directory used in the analysis, as it appears in the SARIF file. This property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"started_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time that the analysis run began. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tool_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the tool used to generate the code scanning analysis alert."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#upload-a-sarif-analysis"},"GitHub Developer Guide documentation"),".")))}},EbDI:function(e,t){function a(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}e.exports=a},EnZy:function(e,t,a){"use strict";var n=a("14Sl"),l=a("ROdP"),r=a("glrk"),c=a("HYAF"),o=a("SEBh"),i=a("iqWW"),s=a("UMSQ"),u=a("FMNM"),m=a("kmMV"),d=a("0Dky"),E=[].push,p=Math.min,h=4294967295,g=!d((function(){return!RegExp(h,"y")}));n("split",2,(function(e,t,a){var n;return n="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,a){var n=String(c(this)),r=void 0===a?h:a>>>0;if(0===r)return[];if(void 0===e)return[n];if(!l(e))return t.call(n,e,r);var o,i,s,u=[],d=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),p=0,g=new RegExp(e.source,d+"g");while(o=m.call(g,n)){if(i=g.lastIndex,i>p&&(u.push(n.slice(p,o.index)),o.length>1&&o.index<n.length&&E.apply(u,o.slice(1)),s=o[0].length,p=i,u.length>=r))break;g.lastIndex===o.index&&g.lastIndex++}return p===n.length?!s&&g.test("")||u.push(""):u.push(n.slice(p)),u.length>r?u.slice(0,r):u}:"0".split(void 0,0).length?function(e,a){return void 0===e&&0===a?[]:t.call(this,e,a)}:t,[function(t,a){var l=c(this),r=void 0==t?void 0:t[e];return void 0!==r?r.call(t,l,a):n.call(String(l),t,a)},function(e,l){var c=a(n,e,this,l,n!==t);if(c.done)return c.value;var m=r(e),d=String(this),E=o(m,RegExp),b=m.unicode,f=(m.ignoreCase?"i":"")+(m.multiline?"m":"")+(m.unicode?"u":"")+(g?"y":"g"),y=new E(g?m:"^(?:"+m.source+")",f),k=void 0===l?h:l>>>0;if(0===k)return[];if(0===d.length)return null===u(y,d)?[d]:[];var v=0,w=0,L=[];while(w<d.length){y.lastIndex=g?w:0;var A,x=u(y,g?d:d.slice(w));if(null===x||(A=p(s(y.lastIndex+(g?0:w)),d.length))===v)w=i(d,w,b);else{if(L.push(d.slice(v,w)),L.length===k)return L;for(var _=1;_<=x.length-1;_++)if(L.push(x[_]),L.length===k)return L;w=v=A}}return L.push(d.slice(v)),L}]}),!g)},Ep9I:function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e===1/t:e!=e&&t!=t}},Eqjn:function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("6x0u"),c=a("ewvW"),o=a("HAuM"),i=a("m/L8");l&&n({target:"Object",proto:!0,forced:r},{__defineGetter__:function(e,t){i.f(c(this),e,{get:o(t),enumerable:!0,configurable:!0})}})},"Ew+T":function(e,t,a){var n=a("I+eb"),l=a("2oRo"),r=a("LPSS"),c=!l.setImmediate||!l.clearImmediate;n({global:!0,bind:!0,enumerable:!0,forced:c},{setImmediate:r.set,clearImmediate:r.clear})},"F+kV":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("TN5+");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("br",null),l.a.createElement(c["a"],{type:"info"},"\u6839\u636e ",l.a.createElement(r["Link"],{to:"https://octokit.github.io/rest.js/v18/"},"https://octokit.github.io/rest.js/v18/")," \u81ea\u884c\u7ffb\u8bd1\u800c\u6765\uff0c\u65e8\u5728\u65b9\u4fbf\u67e5\u9605\u548c\u5b66\u4e60\u3002\u7ffb\u8bd1\u5b66\u4e60\u8fdb\u884c\u4e2d\uff0c\u82e5\u6709\u7ffb\u8bd1\u4e0d\u6070\u4e4b\u5904\uff0c\u6b22\u8fce\u6307\u6b63\u3002"),l.a.createElement("h2",{id:"\u6587\u6863\u76ee\u5f55"},l.a.createElement(r["AnchorLink"],{to:"#\u6587\u6863\u76ee\u5f55","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"\u6587\u6863\u76ee\u5f55"),l.a.createElement("p",null,l.a.createElement(l.a.Fragment,{children:a("poL8").default()}))))}},F4QJ:function(e,t,a){"use strict";function n(){var e=r(a("q1tI"));return n=function(){return e},e}function l(){var e=r(a("JjdP"));return l=function(){return e},e}function r(e){return e&&e.__esModule?e:{default:e}}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var s=function(e){var t=[],r=e.match.params.uuid,c=void 0===e.location.query.wrapper,i=l()["default"][r];if(i){var s=o(o({},i.previewerProps),{},{hideActions:(i.previewerProps.hideActions||[]).concat(["EXTERNAL"])});void 0!==e.location.query.capture&&(s.motions=(s.motions||[]).slice(),s.motions.unshift("autoplay"),s.motions.every((function(e){return!e.startsWith("capture")}))&&s.motions.push("capture:[id|=root]")),t=c?[n()["default"].createElement((function(){return a("dEAq").useMotions(s.motions||[],document),n()["default"].createElement("div",{},n()["default"].createElement(i.component))}))]:[s,n()["default"].createElement(i.component)]}return t};t["default"]=s},F8JR:function(e,t,a){"use strict";var n=a("tycR").forEach,l=a("pkCn"),r=a("rkAj"),c=l("forEach"),o=r("forEach");e.exports=c&&o?[].forEach:function(e){return n(this,e,arguments.length>1?arguments[1]:void 0)}},FDcn:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-github-meta-information"},l.a.createElement(r["AnchorLink"],{to:"#get-github-meta-information","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub meta information"),l.a.createElement("p",null,"Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-github-s-ip-addresses/"},"About GitHub's IP addresses"),'."'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The IP addresses shown in the documentation's response are only example values. You must always query the API directly to get the latest list of IP addresses."),l.a.createElement(c["a"],{code:"octokit.meta.get();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/meta/#get-github-meta-information"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-octocat"},l.a.createElement(r["AnchorLink"],{to:"#get-octocat","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get Octocat"),l.a.createElement("p",null,"Get the octocat as ASCII art"),l.a.createElement(c["a"],{code:"octokit.meta.getOctocat();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"s"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The words to show in Octocat's speech bubble"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:""},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-zen-of-github"},l.a.createElement(r["AnchorLink"],{to:"#get-the-zen-of-github","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the Zen of GitHub"),l.a.createElement("p",null,"Get a random sentence from the Zen of GitHub"),l.a.createElement(c["a"],{code:"octokit.meta.getZen();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:""},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"github-api-root"},l.a.createElement(r["AnchorLink"],{to:"#github-api-root","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"GitHub API Root"),l.a.createElement("p",null,"Get Hypermedia links to resources accessible in GitHub's REST API"),l.a.createElement(c["a"],{code:"octokit.meta.root();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:""},"GitHub Developer Guide documentation"),".")))}},FDzp:function(e,t,a){var n=a("dOgj");n("Int32",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},FMNM:function(e,t,a){var n=a("xrYK"),l=a("kmMV");e.exports=function(e,t){var a=e.exec;if("function"===typeof a){var r=a.call(e,t);if("object"!==typeof r)throw TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==n(e))throw TypeError("RegExp#exec called on incompatible receiver");return l.call(e,t)}},FZtP:function(e,t,a){var n=a("2oRo"),l=a("/byt"),r=a("F8JR"),c=a("kRJp");for(var o in l){var i=n[o],s=i&&i.prototype;if(s&&s.forEach!==r)try{c(s,"forEach",r)}catch(u){s.forEach=r}}},Ff2n:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a("zLVn");function l(e,t){if(null==e)return{};var a,l,r=Object(n["a"])(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(l=0;l<c.length;l++)a=c[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}},Fxm0:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"accept-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#accept-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Accept a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.acceptInvitation({\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#accept-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-app-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#add-app-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add app access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Grants the specified apps push access for this branch. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The GitHub Apps that have push access to this branch. Use the app's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.addAppAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  apps,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"apps"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-app-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-a-repository-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#add-a-repository-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add a repository collaborator"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,'For more information the permission levels, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization"},"Repository permission levels for an organization"),'".'),l.a.createElement("p",null,"Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement("p",null,"The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#invitations"},"repository invitations API endpoints"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Rate limits")),l.a.createElement("p",null,"To prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository."),l.a.createElement(c["a"],{code:"octokit.repos.addCollaborator({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant the collaborator. ",l.a.createElement("strong",null,"Only valid on organization-owned repositories.")," Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - can pull, but not push to or administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - can pull and push, but not administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - can pull, push and administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintain")," - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"triage")," - Recommended for contributors who need to proactively manage issues and pull requests without write access."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-a-repository-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#add-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.addStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n  contexts,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-team-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#add-team-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add team access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Grants the specified teams push access for this branch. You can also give push access to child teams."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The teams that can have push access. Use the team's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.addTeamAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  teams,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-team-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-user-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#add-user-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add user access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Grants the specified people push access for this branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Usernames for people who can have push access. ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.addUserAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  users,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-user-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-is-a-repository-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-is-a-repository-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user is a repository collaborator"),l.a.createElement("p",null,"For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners."),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement(c["a"],{code:"octokit.repos.checkCollaborator({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-vulnerability-alerts-are-enabled-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#check-if-vulnerability-alerts-are-enabled-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if vulnerability alerts are enabled for a repository"),l.a.createElement("p",null,'Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies"},"About security alerts for vulnerable dependencies"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.checkVulnerabilityAlerts({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"compare-two-commits"},l.a.createElement(r["AnchorLink"],{to:"#compare-two-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Compare two commits"),l.a.createElement("p",null,"Both ",l.a.createElement("code",null,":base")," and ",l.a.createElement("code",null,":head")," must be branch names in ",l.a.createElement("code",null,":repo"),". To compare branches across other repositories in the same network as ",l.a.createElement("code",null,":repo"),", use the format ",l.a.createElement("code",null,"<USERNAME>:branch"),"."),l.a.createElement("p",null,"The response from the API is equivalent to running the ",l.a.createElement("code",null,"git log base..head")," command; however, commits are returned in chronological order. Pass the appropriate ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," to fetch diff and patch formats."),l.a.createElement("p",null,"The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a ",l.a.createElement("code",null,"renamed")," status have a ",l.a.createElement("code",null,"previous_filename")," field showing the previous filename of the file, and files with a ",l.a.createElement("code",null,"modified")," status have a ",l.a.createElement("code",null,"patch")," field showing the changes made to the file."),l.a.createElement("p",null,l.a.createElement("strong",null,"Working with large comparisons")),l.a.createElement("p",null,"The response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"List commits")," to enumerate all commits in the range."),l.a.createElement("p",null,"For comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.repos.compareCommits({\n  owner,\n  repo,\n  base,\n  head,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#compare-two-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a commit comment"),l.a.createElement("p",null,"Create a comment for a commit using its ",l.a.createElement("code",null,":commit_sha"),"."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.repos.createCommitComment({\n  owner,\n  repo,\n  commit_sha,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Relative path of the file to comment on."))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Line index in the diff to comment on."))),l.a.createElement("tr",null,l.a.createElement("td",null,"line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated"),". Use ",l.a.createElement("strong",null,"position")," parameter instead. Line number in the file to comment on."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-commit-signature-protection"},l.a.createElement(r["AnchorLink"],{to:"#create-commit-signature-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create commit signature protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits."),l.a.createElement(c["a"],{code:"octokit.repos.createCommitSignatureProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-commit-signature-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-commit-status"},l.a.createElement(r["AnchorLink"],{to:"#create-a-commit-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a commit status"),l.a.createElement("p",null,"Users with push access in a repository can create commit statuses for a given SHA."),l.a.createElement("p",null,"Note: there is a limit of 1000 statuses per ",l.a.createElement("code",null,"sha")," and ",l.a.createElement("code",null,"context")," within a repository. Attempts to create more than 1000 statuses will result in a validation error."),l.a.createElement(c["a"],{code:"octokit.repos.createCommitStatus({\n  owner,\n  repo,\n  sha,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the status. Can be one of ",l.a.createElement("code",null,"error"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"pending"),", or ",l.a.createElement("code",null,"success"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.",l.a.createElement("br",null),"For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:",l.a.createElement("br",null),l.a.createElement("code",null,"http://ci.example.com/user/repo/build/sha")))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the status."))),l.a.createElement("tr",null,l.a.createElement("td",null,"context"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A string label to differentiate this status from the status of other systems."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-commit-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-deploy-key"},l.a.createElement(r["AnchorLink"],{to:"#create-a-deploy-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a deploy key"),l.a.createElement("p",null,"You can create a read-only deploy key."),l.a.createElement(c["a"],{code:"octokit.repos.createDeployKey({\n  owner,\n  repo,\n  key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A name for the key."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the key."))),l.a.createElement("tr",null,l.a.createElement("td",null,"read_only"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", the key will only be able to read repository contents. Otherwise, the key will be able to read and write."),l.a.createElement("p",null,'Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/repository-permission-levels-for-an-organization/"},"Repository permission levels for an organization"),'" and "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/permission-levels-for-a-user-account-repository/"},"Permission levels for a user account repository"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deploy-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-deployment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-deployment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a deployment"),l.a.createElement("p",null,"Deployments offer a few configurable parameters with certain defaults."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"ref")," parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"environment")," parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as ",l.a.createElement("code",null,"production"),", ",l.a.createElement("code",null,"staging"),", and ",l.a.createElement("code",null,"qa"),". This parameter makes it easier to track which environments have requested deployments. The default environment is ",l.a.createElement("code",null,"production"),"."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"auto_merge")," parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref ",l.a.createElement("em",null,"is")," behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response."),l.a.createElement("p",null,"By default, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#statuses"},"commit statuses")," for every submitted context must be in a ",l.a.createElement("code",null,"success"),"state. The ",l.a.createElement("code",null,"required_contexts")," parameter allows you to specify a subset of contexts that must be ",l.a.createElement("code",null,"success"),", or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"payload")," parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"task")," parameter is used by the deployment system to allow different execution paths. In the web world this might be ",l.a.createElement("code",null,"deploy:migrations")," to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled."),l.a.createElement("p",null,"Users with ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"repo_deployment")," scopes can create a deployment for a given ref."),l.a.createElement("h6",{id:"merged-branch-response"},l.a.createElement(r["AnchorLink"],{to:"#merged-branch-response","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merged branch response"),l.a.createElement("p",null,"You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating a deployment. This auto-merge happens when:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Auto-merge option is enabled in the repository"),l.a.createElement("li",null,"Topic branch does not include the latest changes on the base branch, which is ",l.a.createElement("code",null,"master")," in the response example"),l.a.createElement("li",null,"There are no merge conflicts")),l.a.createElement("p",null,"If there are no new commits in the base branch, a new request to create a deployment should give a successful response."),l.a.createElement("h4",{id:"merge-conflict-response"},l.a.createElement(r["AnchorLink"],{to:"#merge-conflict-response","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merge conflict response"),l.a.createElement("p",null,"This error happens when the ",l.a.createElement("code",null,"auto_merge")," option is enabled and when the default branch (in this case ",l.a.createElement("code",null,"master"),"), can't be merged into the branch that's being deployed (in this case ",l.a.createElement("code",null,"topic-branch"),"), due to merge conflicts."),l.a.createElement("h4",{id:"failed-commit-status-checks"},l.a.createElement(r["AnchorLink"],{to:"#failed-commit-status-checks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Failed commit status checks"),l.a.createElement("p",null,"This error happens when the ",l.a.createElement("code",null,"required_contexts")," parameter indicates that one or more contexts need to have a ",l.a.createElement("code",null,"success"),"status for the commit to be deployed, but one or more of the required contexts do not have a state of ",l.a.createElement("code",null,"success"),"."),l.a.createElement(c["a"],{code:"octokit.repos.createDeployment({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h2",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ref to deploy. This can be a branch, tag, or SHA."))),l.a.createElement("tr",null,l.a.createElement("td",null,"task"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a task to execute (e.g., ",l.a.createElement("code",null,"deploy")," or ",l.a.createElement("code",null,"deploy:migrations"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_contexts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#statuses"},"status")," contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts."))),l.a.createElement("tr",null,l.a.createElement("td",null,"payload"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Name for the target deployment environment (e.g., ",l.a.createElement("code",null,"production"),", ",l.a.createElement("code",null,"staging"),", ",l.a.createElement("code",null,"qa"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Short description of the deployment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"transient_environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: ",l.a.createElement("code",null,"false"),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"production_environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies if the given environment is one that end-users directly interact with. Default: ",l.a.createElement("code",null,"true")," when ",l.a.createElement("code",null,"environment")," is ",l.a.createElement("code",null,"production")," and ",l.a.createElement("code",null,"false")," otherwise.",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"created_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deployment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-deployment-status"},l.a.createElement(r["AnchorLink"],{to:"#create-a-deployment-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a deployment status"),l.a.createElement("p",null,"Users with ",l.a.createElement("code",null,"push")," access can create deployment statuses for a given deployment."),l.a.createElement("p",null,"GitHub Apps require ",l.a.createElement("code",null,"read & write"),' access to "Deployments" and ',l.a.createElement("code",null,"read-only"),' access to "Repo contents" (for private repos). OAuth Apps require the ',l.a.createElement("code",null,"repo_deployment")," scope."),l.a.createElement(c["a"],{code:"octokit.repos.createDeploymentStatus({\n  owner,\n  repo,\n  deployment_id,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the status. Can be one of ",l.a.createElement("code",null,"error"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"inactive"),", ",l.a.createElement("code",null,"in_progress"),", ",l.a.createElement("code",null,"queued")," ",l.a.createElement("code",null,"pending"),", or ",l.a.createElement("code",null,"success"),". ",l.a.createElement("strong",null,"Note:")," To use the ",l.a.createElement("code",null,"inactive")," state, you must provide the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. To use the ",l.a.createElement("code",null,"in_progress")," and ",l.a.createElement("code",null,"queued")," states, you must provide the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#deployment-statuses"},l.a.createElement("code",null,"application/vnd.github.flash-preview+json"))," custom media type. When you set a transient deployment to ",l.a.createElement("code",null,"inactive"),", the deployment will be shown as ",l.a.createElement("code",null,"destroyed")," in GitHub."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. ",l.a.createElement("strong",null,"Note:")," It's recommended to use the ",l.a.createElement("code",null,"log_url")," parameter, which replaces ",l.a.createElement("code",null,"target_url"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"log_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The full URL of the deployment's output. This parameter replaces ",l.a.createElement("code",null,"target_url"),". We will continue to accept ",l.a.createElement("code",null,"target_url")," to support legacy uses, but we recommend replacing ",l.a.createElement("code",null,"target_url")," with ",l.a.createElement("code",null,"log_url"),". Setting ",l.a.createElement("code",null,"log_url")," will automatically set ",l.a.createElement("code",null,"target_url")," to the same value. Default: ",l.a.createElement("code",null,'""'),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the status. The maximum description length is 140 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Name for the target deployment environment, which can be changed when setting a deploy status. For example, ",l.a.createElement("code",null,"production"),", ",l.a.createElement("code",null,"staging"),", or ",l.a.createElement("code",null,"qa"),". ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#deployment-statuses"},l.a.createElement("code",null,"application/vnd.github.flash-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"environment_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sets the URL for accessing your environment. Default: ",l.a.createElement("code",null,'""'),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_inactive"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds a new ",l.a.createElement("code",null,"inactive")," status to all prior non-transient, non-production environment deployments with the same repository and ",l.a.createElement("code",null,"environment")," name as the created status's deployment. An ",l.a.createElement("code",null,"inactive")," status is only added to deployments that had a ",l.a.createElement("code",null,"success")," state. Default: ",l.a.createElement("code",null,"true"),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," To add an ",l.a.createElement("code",null,"inactive")," status to ",l.a.createElement("code",null,"production")," environments, you must use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#deployment-statuses"},l.a.createElement("code",null,"application/vnd.github.flash-preview+json"))," custom media type.",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deployment-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-dispatch-event"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-dispatch-event","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository dispatch event"),l.a.createElement("p",null,"You can use this endpoint to trigger a webhook event called ",l.a.createElement("code",null,"repository_dispatch")," when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the ",l.a.createElement("code",null,"repository_dispatch")," event occurs. For an example ",l.a.createElement("code",null,"repository_dispatch"),' webhook payload, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#repository_dispatch"},"RepositoryDispatchEvent"),'."'),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"client_payload")," parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the ",l.a.createElement("code",null,"client_payload")," can include a message that a user would like to send using a GitHub Actions workflow. Or the ",l.a.createElement("code",null,"client_payload")," can be used as a test to debug your workflow."),l.a.createElement("p",null,"This endpoint requires write access to the repository by providing either:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Personal access tokens with ",l.a.createElement("code",null,"repo"),' scope. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line"},"Creating a personal access token for the command line"),'" in the GitHub Help documentation.'),l.a.createElement("li",null,"GitHub Apps with both ",l.a.createElement("code",null,"metadata:read")," and ",l.a.createElement("code",null,"contents:read&write")," permissions.")),l.a.createElement("p",null,"This input example shows how you can use the ",l.a.createElement("code",null,"client_payload")," as a test to debug your workflow."),l.a.createElement(c["a"],{code:"octokit.repos.createDispatchEvent({\n  owner,\n  repo,\n  event_type,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"event_type"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A custom webhook event name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"client_payload"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"JSON payload with extra information about the webhook event that your action or worklow may use."))),l.a.createElement("tr",null,l.a.createElement("td",null,"client_payload.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-a-repository-dispatch-event"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository for the authenticated user"),l.a.createElement("p",null,"Creates a new repository for the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"When using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"OAuth"),", authorizations must include:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"public_repo")," scope or ",l.a.createElement("code",null,"repo")," scope to create a public repository"),l.a.createElement("li",null,l.a.createElement("code",null,"repo")," scope to create a private repository")),l.a.createElement(c["a"],{code:"octokit.repos.createForAuthenticatedUser({\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"homepage"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A URL with more information about the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the repository is private or public."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether issues are enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether projects are enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_wiki"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the wiki is enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_init"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the repository is initialized with a minimal README."))),l.a.createElement("tr",null,l.a.createElement("td",null,"gitignore_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The desired language or platform to apply to the .gitignore."))),l.a.createElement("tr",null,l.a.createElement("td",null,"license_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The license keyword of the open source license for this repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_squash_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to allow squash merges for pull requests."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_merge_commit"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to allow merge commits for pull requests."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_rebase_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to allow rebase merges for pull requests."))),l.a.createElement("tr",null,l.a.createElement("td",null,"delete_branch_on_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to delete head branches when pull requests are merged"))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_downloads"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether downloads are enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"is_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether this repository acts as a template that can be used to generate new repositories."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-a-repository-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-fork"},l.a.createElement(r["AnchorLink"],{to:"#create-a-fork","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a fork"),l.a.createElement("p",null,"Create a fork for the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact ",l.a.createElement(r["Link"],{to:"https://support.github.com/contact"},"GitHub Support")," or ",l.a.createElement(r["Link"],{to:"https://premium.githubsupport.com/"},"GitHub Premium Support"),"."),l.a.createElement(c["a"],{code:"octokit.repos.createFork({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"organization"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Optional parameter to specify the organization name if forking into an organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-fork"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-repository"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization repository"),l.a.createElement("p",null,"Creates a new repository in the specified organization. The authenticated user must be a member of the organization."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"When using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"OAuth"),", authorizations must include:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"public_repo")," scope or ",l.a.createElement("code",null,"repo")," scope to create a public repository"),l.a.createElement("li",null,l.a.createElement("code",null,"repo")," scope to create a private repository")),l.a.createElement(c["a"],{code:"octokit.repos.createInOrg({\n  org,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"homepage"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A URL with more information about the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to create a private repository or ",l.a.createElement("code",null,"false")," to create a public one."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be ",l.a.createElement("code",null,"public")," or ",l.a.createElement("code",null,"private"),". If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, ",l.a.createElement("code",null,"visibility")," can also be ",l.a.createElement("code",null,"internal"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories"},"Creating an internal repository"),'" in the GitHub Help documentation.',l.a.createElement("br",null),"The ",l.a.createElement("code",null,"visibility")," parameter overrides the ",l.a.createElement("code",null,"private")," parameter when you use both parameters with the ",l.a.createElement("code",null,"nebula-preview")," preview header."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable issues for this repository or ",l.a.createElement("code",null,"false")," to disable them."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable projects for this repository or ",l.a.createElement("code",null,"false")," to disable them. ",l.a.createElement("strong",null,"Note:")," If you're creating a repository in an organization that has disabled repository projects, the default is ",l.a.createElement("code",null,"false"),", and if you pass ",l.a.createElement("code",null,"true"),", the API returns an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_wiki"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable the wiki for this repository or ",l.a.createElement("code",null,"false")," to disable it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"is_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to make this repo available as a template repository or ",l.a.createElement("code",null,"false")," to prevent it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_init"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Pass ",l.a.createElement("code",null,"true")," to create an initial commit with empty README."))),l.a.createElement("tr",null,l.a.createElement("td",null,"gitignore_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Desired language or platform ",l.a.createElement(r["Link"],{to:"https://github.com/github/gitignore"},".gitignore template"),' to apply. Use the name of the template without the extension. For example, "Haskell".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"license_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Choose an ",l.a.createElement(r["Link"],{to:"https://choosealicense.com/"},"open source license template")," that best suits your needs, and then use the ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type"},"license keyword")," as the ",l.a.createElement("code",null,"license_template"),' string. For example, "mit" or "mpl-2.0".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_squash_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow squash-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent squash-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_merge_commit"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow merging pull requests with a merge commit, or ",l.a.createElement("code",null,"false")," to prevent merging pull requests with merge commits."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_rebase_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow rebase-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent rebase-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"delete_branch_on_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow automatically deleting head branches when pull requests are merged, or ",l.a.createElement("code",null,"false")," to prevent automatic deletion."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-an-organization-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-or-update-file-contents"},l.a.createElement(r["AnchorLink"],{to:"#create-or-update-file-contents","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create or update file contents"),l.a.createElement("p",null,"Creates a new file or replaces an existing file in a repository."),l.a.createElement(c["a"],{code:"octokit.repos.createOrUpdateFileContents({\n        owner,\nrepo,\npath,\nmessage,\ncontent,\ncommitter.name,\ncommitter.email,\nauthor.name,\nauthor.email\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"path+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The new file content, using Base64 encoding."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required if you are updating a file"),". The blob SHA of the file being replaced."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The branch name. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The person that committed the file. Default: the authenticated user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"name")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.email"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"email")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The author of the file. Default: The ",l.a.createElement("code",null,"committer")," or the authenticated user if you omit ",l.a.createElement("code",null,"committer"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"name")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.email"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"email")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-or-update-file-contents"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#create-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a GitHub Pages site"),l.a.createElement("p",null,'Configures a GitHub Pages site. For more information, see "',l.a.createElement(r["Link"],{to:"/github/working-with-github-pages/about-github-pages"},"About GitHub Pages"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.createPagesSite({\n        owner,\nrepo,\nsource,\nsource.branch\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"source"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The source branch and directory used to publish your Pages site."))),l.a.createElement("tr",null,l.a.createElement("td",null,"source.branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The repository branch used to publish your site's source files."))),l.a.createElement("tr",null,l.a.createElement("td",null,"source.path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The repository directory that includes the source files for the Pages site. Allowed paths are ",l.a.createElement("code",null,"/")," or ",l.a.createElement("code",null,"/docs"),". Default: ",l.a.createElement("code",null,"/")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-release"},l.a.createElement(r["AnchorLink"],{to:"#create-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a release"),l.a.createElement("p",null,"Users with push access to the repository can create a release."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.repos.createRelease({\n  owner,\n  repo,\n  tag_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_commitish"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ",l.a.createElement("code",null,"master"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the release."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Text describing the contents of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"draft"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to create a draft (unpublished) release, ",l.a.createElement("code",null,"false")," to create a published one."))),l.a.createElement("tr",null,l.a.createElement("td",null,"prerelease"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to identify the release as a prerelease. ",l.a.createElement("code",null,"false")," to identify the release as a full release."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-using-a-template"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-using-a-template","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository using a template"),l.a.createElement("p",null,"Creates a new repository using a repository template. Use the ",l.a.createElement("code",null,"template_owner")," and ",l.a.createElement("code",null,"template_repo")," route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-repository"},"Get a repository")," endpoint and check that the ",l.a.createElement("code",null,"is_template")," key is ",l.a.createElement("code",null,"true"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"When using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"OAuth"),", authorizations must include:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"public_repo")," scope or ",l.a.createElement("code",null,"repo")," scope to create a public repository"),l.a.createElement("li",null,l.a.createElement("code",null,"repo")," scope to create a private repository")),l.a.createElement(c["a"],{code:"octokit.repos.createUsingTemplate({\n  template_owner,\n  template_repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"template_owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"template_repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the new repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the new repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"include_all_branches"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: ",l.a.createElement("code",null,"false"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to create a new private repository or ",l.a.createElement("code",null,"false")," to create a new public one."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-a-repository-using-a-template"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository webhook"),l.a.createElement("p",null,"Repositories can have multiple webhooks installed. Each webhook should have a unique ",l.a.createElement("code",null,"config"),". Multiple webhooks can share the same ",l.a.createElement("code",null,"config")," as long as those webhooks do not have any ",l.a.createElement("code",null,"events")," that overlap."),l.a.createElement(c["a"],{code:"octokit.repos.createWebhook({\n        owner,\nrepo,\nconfig,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Use ",l.a.createElement("code",null,"web")," to create a webhook. Default: ",l.a.createElement("code",null,"web"),". This parameter only accepts the value ",l.a.createElement("code",null,"web"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config.digest"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"decline-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#decline-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Decline a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.declineInvitation({\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#decline-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository"),l.a.createElement("p",null,"Deleting a repository requires admin access. If OAuth is used, the ",l.a.createElement("code",null,"delete_repo")," scope is required."),l.a.createElement("p",null,"If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, you will get a ",l.a.createElement("code",null,"403 Forbidden")," response."),l.a.createElement(c["a"],{code:"octokit.repos.delete({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#delete-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#delete-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Disables the ability to restrict who can push to this branch."),l.a.createElement(c["a"],{code:"octokit.repos.deleteAccessRestrictions({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-admin-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-admin-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete admin branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.deleteAdminBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-admin-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.deleteBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a commit comment"),l.a.createElement(c["a"],{code:"octokit.repos.deleteCommitComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-commit-signature-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-commit-signature-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete commit signature protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits."),l.a.createElement(c["a"],{code:"octokit.repos.deleteCommitSignatureProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-commit-signature-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-deploy-key"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-deploy-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a deploy key"),l.a.createElement("p",null,"Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead."),l.a.createElement(c["a"],{code:"octokit.repos.deleteDeployKey({\n  owner,\n  repo,\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-deploy-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-deployment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-deployment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a deployment"),l.a.createElement("p",null,"To ensure there can always be an active deployment, you can only delete an ",l.a.createElement("em",null,"inactive")," deployment. Anyone with ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"repo_deployment")," scopes can delete an inactive deployment."),l.a.createElement("p",null,"To set a deployment as inactive, you must:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment."),l.a.createElement("li",null,"Mark the active deployment as inactive by adding any non-successful deployment status.")),l.a.createElement("p",null,'For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos/#create-a-deployment"},"Create a deployment"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deployment-status"},"Create a deployment status"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.deleteDeployment({\n  owner,\n  repo,\n  deployment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-deployment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-file"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-file","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a file"),l.a.createElement("p",null,"Deletes a file in a repository."),l.a.createElement("p",null,"You can provide an additional ",l.a.createElement("code",null,"committer")," parameter, which is an object containing information about the committer. Or, you can provide an ",l.a.createElement("code",null,"author")," parameter, which is an object containing information about the author."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"author")," section is optional and is filled in with the ",l.a.createElement("code",null,"committer")," information if omitted. If the ",l.a.createElement("code",null,"committer")," information is omitted, the authenticated user's information is used."),l.a.createElement("p",null,"You must provide values for both ",l.a.createElement("code",null,"name")," and ",l.a.createElement("code",null,"email"),", whether you choose to use ",l.a.createElement("code",null,"author")," or ",l.a.createElement("code",null,"committer"),". Otherwise, you'll receive a ",l.a.createElement("code",null,"422")," status code."),l.a.createElement(c["a"],{code:"octokit.repos.deleteFile({\n  owner,\n  repo,\n  path,\n  message,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"path+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The blob SHA of the file being replaced."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The branch name. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"object containing information about the committer."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"object containing information about the author."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-file"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.deleteInvitation({\n  owner,\n  repo,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a GitHub Pages site"),l.a.createElement(c["a"],{code:"octokit.repos.deletePagesSite({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-pull-request-review-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-pull-request-review-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete pull request review protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.deletePullRequestReviewProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-pull-request-review-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-release"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a release"),l.a.createElement("p",null,"Users with push access to the repository can delete a release."),l.a.createElement(c["a"],{code:"octokit.repos.deleteRelease({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a release asset"),l.a.createElement(c["a"],{code:"octokit.repos.deleteReleaseAsset({\n  owner,\n  repo,\n  asset_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"asset_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"asset_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-release-asset"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository webhook"),l.a.createElement(c["a"],{code:"octokit.repos.deleteWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-39"},l.a.createElement(r["AnchorLink"],{to:"#parameters-39","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-automated-security-fixes"},l.a.createElement(r["AnchorLink"],{to:"#disable-automated-security-fixes","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable automated security fixes"),l.a.createElement("p",null,'Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/configuring-automated-security-fixes"},"Configuring automated security fixes"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.disableAutomatedSecurityFixes({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-40"},l.a.createElement(r["AnchorLink"],{to:"#parameters-40","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#disable-automated-security-fixes"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-vulnerability-alerts"},l.a.createElement(r["AnchorLink"],{to:"#disable-vulnerability-alerts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable vulnerability alerts"),l.a.createElement("p",null,'Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies"},"About security alerts for vulnerable dependencies"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.disableVulnerabilityAlerts({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-41"},l.a.createElement(r["AnchorLink"],{to:"#parameters-41","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#disable-vulnerability-alerts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-repository-archive-zip"},l.a.createElement(r["AnchorLink"],{to:"#download-a-repository-archive-zip","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a repository archive (zip)"),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated:")," This method has been renamed to repos.downloadZipballArchive"),l.a.createElement("p",null,"Gets a redirect URL to download a zip archive for a repository. If you omit ",l.a.createElement("code",null,":ref"),", the repository\u2019s default branch (usually",l.a.createElement("code",null,"master"),") will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ",l.a.createElement("code",null,"Location")," header to make a second ",l.a.createElement("code",null,"GET")," request.",l.a.createElement("strong",null,"Note"),": For private repositories, these links are temporary and expire after five minutes."),l.a.createElement(c["a"],{code:"octokit.repos.downloadArchive({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-42"},l.a.createElement(r["AnchorLink"],{to:"#parameters-42","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#download-a-repository-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-repository-archive-tar"},l.a.createElement(r["AnchorLink"],{to:"#download-a-repository-archive-tar","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a repository archive (tar)"),l.a.createElement("p",null,"Gets a redirect URL to download a tar archive for a repository. If you omit ",l.a.createElement("code",null,":ref"),", the repository\u2019s default branch (usually",l.a.createElement("code",null,"master"),") will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ",l.a.createElement("code",null,"Location")," header to make a second ",l.a.createElement("code",null,"GET")," request.",l.a.createElement("strong",null,"Note"),": For private repositories, these links are temporary and expire after five minutes."),l.a.createElement(c["a"],{code:"octokit.repos.downloadTarballArchive({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-43"},l.a.createElement(r["AnchorLink"],{to:"#parameters-43","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#download-a-repository-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-repository-archive-zip-1"},l.a.createElement(r["AnchorLink"],{to:"#download-a-repository-archive-zip-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a repository archive (zip)"),l.a.createElement("p",null,"Gets a redirect URL to download a zip archive for a repository. If you omit ",l.a.createElement("code",null,":ref"),", the repository\u2019s default branch (usually",l.a.createElement("code",null,"master"),") will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ",l.a.createElement("code",null,"Location")," header to make a second ",l.a.createElement("code",null,"GET")," request.",l.a.createElement("strong",null,"Note"),": For private repositories, these links are temporary and expire after five minutes."),l.a.createElement(c["a"],{code:"octokit.repos.downloadZipballArchive({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-44"},l.a.createElement(r["AnchorLink"],{to:"#parameters-44","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#download-a-repository-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-automated-security-fixes"},l.a.createElement(r["AnchorLink"],{to:"#enable-automated-security-fixes","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable automated security fixes"),l.a.createElement("p",null,'Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/configuring-automated-security-fixes"},"Configuring automated security fixes"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.enableAutomatedSecurityFixes({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-45"},l.a.createElement(r["AnchorLink"],{to:"#parameters-45","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#enable-automated-security-fixes"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-vulnerability-alerts"},l.a.createElement(r["AnchorLink"],{to:"#enable-vulnerability-alerts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable vulnerability alerts"),l.a.createElement("p",null,'Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies"},"About security alerts for vulnerable dependencies"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.enableVulnerabilityAlerts({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-46"},l.a.createElement(r["AnchorLink"],{to:"#parameters-46","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#enable-vulnerability-alerts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository"),l.a.createElement("p",null,"When you pass the ",l.a.createElement("code",null,"scarlet-witch-preview")," media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"parent")," and ",l.a.createElement("code",null,"source")," objects are present when the repository is a fork. ",l.a.createElement("code",null,"parent")," is the repository this repository was forked from, ",l.a.createElement("code",null,"source")," is the ultimate source for the network."),l.a.createElement(c["a"],{code:"octokit.repos.get({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-47"},l.a.createElement(r["AnchorLink"],{to:"#parameters-47","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#get-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#get-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists who has access to this protected branch."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Users, apps, and teams ",l.a.createElement("code",null,"restrictions")," are only available for organization-owned repositories."),l.a.createElement(c["a"],{code:"octokit.repos.getAccessRestrictions({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-48"},l.a.createElement(r["AnchorLink"],{to:"#parameters-48","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-admin-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-admin-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get admin branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getAdminBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-49"},l.a.createElement(r["AnchorLink"],{to:"#parameters-49","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-admin-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#get-all-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getAllStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-50"},l.a.createElement(r["AnchorLink"],{to:"#parameters-50","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-all-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-repository-topics"},l.a.createElement(r["AnchorLink"],{to:"#get-all-repository-topics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all repository topics"),l.a.createElement(c["a"],{code:"octokit.repos.getAllTopics({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-51"},l.a.createElement(r["AnchorLink"],{to:"#parameters-51","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#get-all-repository-topics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-apps-with-access-to-the-protected-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-apps-with-access-to-the-protected-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get apps with access to the protected branch"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement(c["a"],{code:"octokit.repos.getAppsWithAccessToProtectedBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-52"},l.a.createElement(r["AnchorLink"],{to:"#parameters-52","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-apps-with-access-to-the-protected-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-a-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a branch"),l.a.createElement(c["a"],{code:"octokit.repos.getBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-53"},l.a.createElement(r["AnchorLink"],{to:"#parameters-53","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-54"},l.a.createElement(r["AnchorLink"],{to:"#parameters-54","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-repository-clones"},l.a.createElement(r["AnchorLink"],{to:"#get-repository-clones","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get repository clones"),l.a.createElement("p",null,"Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."),l.a.createElement(c["a"],{code:"octokit.repos.getClones({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-55"},l.a.createElement(r["AnchorLink"],{to:"#parameters-55","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Must be one of: ",l.a.createElement("code",null,"day"),", ",l.a.createElement("code",null,"week"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-clones"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-weekly-commit-activity"},l.a.createElement(r["AnchorLink"],{to:"#get-the-weekly-commit-activity","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the weekly commit activity"),l.a.createElement("p",null,"Returns a weekly aggregate of the number of additions and deletions pushed to a repository."),l.a.createElement(c["a"],{code:"octokit.repos.getCodeFrequencyStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-56"},l.a.createElement(r["AnchorLink"],{to:"#parameters-56","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-weekly-commit-activity"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-repository-permissions-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-repository-permissions-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get repository permissions for a user"),l.a.createElement("p",null,"Checks the repository permission of a collaborator. The possible repository permissions are ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"write"),", ",l.a.createElement("code",null,"read"),", and ",l.a.createElement("code",null,"none"),"."),l.a.createElement(c["a"],{code:"octokit.repos.getCollaboratorPermissionLevel({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-57"},l.a.createElement(r["AnchorLink"],{to:"#parameters-57","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-permissions-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-combined-status-for-a-specific-reference"},l.a.createElement(r["AnchorLink"],{to:"#get-the-combined-status-for-a-specific-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the combined status for a specific reference"),l.a.createElement("p",null,"Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name."),l.a.createElement("p",null,"The most recent status for each context is returned, up to 100. This field ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"paginates")," if there are over 100 contexts."),l.a.createElement("p",null,"Additionally, a combined ",l.a.createElement("code",null,"state")," is returned. The ",l.a.createElement("code",null,"state")," is one of:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"failure")," if any of the contexts report as ",l.a.createElement("code",null,"error")," or ",l.a.createElement("code",null,"failure")),l.a.createElement("li",null,l.a.createElement("strong",null,"pending")," if there are no statuses or a context is ",l.a.createElement("code",null,"pending")),l.a.createElement("li",null,l.a.createElement("strong",null,"success")," if the latest status for all contexts is ",l.a.createElement("code",null,"success"))),l.a.createElement(c["a"],{code:"octokit.repos.getCombinedStatusForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-58"},l.a.createElement(r["AnchorLink"],{to:"#parameters-58","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-combined-status-for-a-specific-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#get-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a commit"),l.a.createElement("p",null,"Returns the contents of a single commit reference. You must have ",l.a.createElement("code",null,"read")," access for the repository to use this endpoint."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing."),l.a.createElement("p",null,"You can pass the appropriate ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," to fetch ",l.a.createElement("code",null,"diff")," and ",l.a.createElement("code",null,"patch")," formats. Diffs with binary data will have no ",l.a.createElement("code",null,"patch")," property."),l.a.createElement("p",null,"To return only the SHA-1 hash of the commit reference, you can provide the ",l.a.createElement("code",null,"sha")," custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," in the ",l.a.createElement("code",null,"Accept")," header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.repos.getCommit({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-59"},l.a.createElement(r["AnchorLink"],{to:"#parameters-59","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-last-year-of-commit-activity"},l.a.createElement(r["AnchorLink"],{to:"#get-the-last-year-of-commit-activity","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the last year of commit activity"),l.a.createElement("p",null,"Returns the last year of commit activity grouped by week. The ",l.a.createElement("code",null,"days")," array is a group of commits per day, starting on ",l.a.createElement("code",null,"Sunday"),"."),l.a.createElement(c["a"],{code:"octokit.repos.getCommitActivityStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-60"},l.a.createElement(r["AnchorLink"],{to:"#parameters-60","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-last-year-of-commit-activity"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a commit comment"),l.a.createElement(c["a"],{code:"octokit.repos.getCommitComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-61"},l.a.createElement(r["AnchorLink"],{to:"#parameters-61","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-commit-signature-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-commit-signature-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get commit signature protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of ",l.a.createElement("code",null,"true")," indicates you must sign commits on this branch. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/signing-commits-with-gpg"},"Signing commits with GPG")," in GitHub Help."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": You must enable branch protection to require signed commits."),l.a.createElement(c["a"],{code:"octokit.repos.getCommitSignatureProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-62"},l.a.createElement(r["AnchorLink"],{to:"#parameters-62","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-commit-signature-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-community-profile-metrics"},l.a.createElement(r["AnchorLink"],{to:"#get-community-profile-metrics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get community profile metrics"),l.a.createElement("p",null,"This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE_TEMPLATE, PULL_REQUEST_TEMPLATE, README, and CONTRIBUTING files."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"health_percentage")," score is defined as a percentage of how many of these four documents are present: README, CONTRIBUTING, LICENSE, and CODE_OF_CONDUCT. For example, if all four documents are present, then the ",l.a.createElement("code",null,"health_percentage")," is ",l.a.createElement("code",null,"100"),". If only one is present, then the",l.a.createElement("code",null,"health_percentage")," is ",l.a.createElement("code",null,"25"),"."),l.a.createElement("p",null,l.a.createElement("code",null,"content_reports_enabled")," is only returned for organization-owned repositories."),l.a.createElement(c["a"],{code:"octokit.repos.getCommunityProfileMetrics({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-63"},l.a.createElement(r["AnchorLink"],{to:"#parameters-63","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-community-profile-metrics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-repository-content"},l.a.createElement(r["AnchorLink"],{to:"#get-repository-content","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get repository content"),l.a.createElement("p",null,"Gets the contents of a file or directory in a repository. Specify the file path or directory in ",l.a.createElement("code",null,":path"),". If you omit",l.a.createElement("code",null,":path"),", you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories."),l.a.createElement("p",null,"Files and symlinks support ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"a custom media type")," for retrieving the raw content or rendered HTML (when supported). All content types support ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"a custom media type")," to ensure the content is returned in a consistent object format."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),":"),l.a.createElement("ul",null,l.a.createElement("li",null,"To get a repository's contents recursively, you can ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#trees"},"recursively get the tree"),"."),l.a.createElement("li",null,"This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-tree"},"Git Trees API"),"."),l.a.createElement("li",null,"This API supports files up to 1 megabyte in size.")),l.a.createElement("h6",{id:"if-the-content-is-a-directory"},l.a.createElement(r["AnchorLink"],{to:"#if-the-content-is-a-directory","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"If the content is a directory"),l.a.createElement("p",null,'The response will be an array of objects, one object for each item in the directory. When listing the contents of a directory, submodules have their "type" specified as "file". Logically, the value',l.a.createElement("em",null,"should"),' be "submodule". This behavior exists in API v3 ',l.a.createElement(r["Link"],{to:"https://git.io/v1YCW"},"for backwards compatibility purposes"),'. In the next major version of the API, the type will be returned as "submodule".'),l.a.createElement("h4",{id:"if-the-content-is-a-symlink"},l.a.createElement(r["AnchorLink"],{to:"#if-the-content-is-a-symlink","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"If the content is a symlink"),l.a.createElement("p",null,"If the requested ",l.a.createElement("code",null,":path")," points to a symlink, and the symlink's target is a normal file in the repository, then the API responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object describing the symlink itself."),l.a.createElement("h4",{id:"if-the-content-is-a-submodule"},l.a.createElement(r["AnchorLink"],{to:"#if-the-content-is-a-submodule","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"If the content is a submodule"),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"submodule_git_url")," identifies the location of the submodule repository, and the ",l.a.createElement("code",null,"sha")," identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit."),l.a.createElement("p",null,"If the submodule repository is not hosted on github.com, the Git URLs (",l.a.createElement("code",null,"git_url")," and ",l.a.createElement("code",null,'_links["git"]'),") and the github.com URLs (",l.a.createElement("code",null,"html_url")," and ",l.a.createElement("code",null,'_links["html"]'),") will have null values."),l.a.createElement(c["a"],{code:"octokit.repos.getContent({\n  owner,\n  repo,\n  path,\n});\n",lang:"js"}),l.a.createElement("h2",{id:"parameters-64"},l.a.createElement(r["AnchorLink"],{to:"#parameters-64","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"path+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the commit/branch/tag. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-content"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-contributor-commit-activity"},l.a.createElement(r["AnchorLink"],{to:"#get-all-contributor-commit-activity","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all contributor commit activity"),l.a.createElement("p",null,"Returns the ",l.a.createElement("code",null,"total")," number of commits authored by the contributor. In addition, the response includes a Weekly Hash (",l.a.createElement("code",null,"weeks")," array) with the following information:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"w")," - Start of the week, given as a ",l.a.createElement(r["Link"],{to:"http://en.wikipedia.org/wiki/Unix_time"},"Unix timestamp"),"."),l.a.createElement("li",null,l.a.createElement("code",null,"a")," - Number of additions"),l.a.createElement("li",null,l.a.createElement("code",null,"d")," - Number of deletions"),l.a.createElement("li",null,l.a.createElement("code",null,"c")," - Number of commits")),l.a.createElement(c["a"],{code:"octokit.repos.getContributorsStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-65"},l.a.createElement(r["AnchorLink"],{to:"#parameters-65","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-all-contributor-commit-activity"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-deploy-key"},l.a.createElement(r["AnchorLink"],{to:"#get-a-deploy-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a deploy key"),l.a.createElement(c["a"],{code:"octokit.repos.getDeployKey({\n  owner,\n  repo,\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-66"},l.a.createElement(r["AnchorLink"],{to:"#parameters-66","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-deploy-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-deployment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-deployment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a deployment"),l.a.createElement(c["a"],{code:"octokit.repos.getDeployment({\n  owner,\n  repo,\n  deployment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-67"},l.a.createElement(r["AnchorLink"],{to:"#parameters-67","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-deployment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-deployment-status"},l.a.createElement(r["AnchorLink"],{to:"#get-a-deployment-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a deployment status"),l.a.createElement("p",null,"Users with pull access can view a deployment status for a deployment:"),l.a.createElement(c["a"],{code:"octokit.repos.getDeploymentStatus({\n  owner,\n  repo,\n  deployment_id,\n  status_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-68"},l.a.createElement(r["AnchorLink"],{to:"#parameters-68","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"status_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-deployment-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-latest-pages-build"},l.a.createElement(r["AnchorLink"],{to:"#get-latest-pages-build","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get latest Pages build"),l.a.createElement(c["a"],{code:"octokit.repos.getLatestPagesBuild({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-69"},l.a.createElement(r["AnchorLink"],{to:"#parameters-69","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-latest-pages-build"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-latest-release"},l.a.createElement(r["AnchorLink"],{to:"#get-the-latest-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the latest release"),l.a.createElement("p",null,"View the latest published full release for the repository."),l.a.createElement("p",null,"The latest release is the most recent non-prerelease, non-draft release, sorted by the ",l.a.createElement("code",null,"created_at")," attribute. The ",l.a.createElement("code",null,"created_at")," attribute is the date of the commit used for the release, and not the date when the release was drafted or published."),l.a.createElement(c["a"],{code:"octokit.repos.getLatestRelease({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-70"},l.a.createElement(r["AnchorLink"],{to:"#parameters-70","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-latest-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#get-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a GitHub Pages site"),l.a.createElement(c["a"],{code:"octokit.repos.getPages({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-71"},l.a.createElement(r["AnchorLink"],{to:"#parameters-71","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-pages-build"},l.a.createElement(r["AnchorLink"],{to:"#get-github-pages-build","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Pages build"),l.a.createElement(c["a"],{code:"octokit.repos.getPagesBuild({\n  owner,\n  repo,\n  build_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-72"},l.a.createElement(r["AnchorLink"],{to:"#parameters-72","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"build_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-github-pages-build"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-weekly-commit-count"},l.a.createElement(r["AnchorLink"],{to:"#get-the-weekly-commit-count","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the weekly commit count"),l.a.createElement("p",null,"Returns the total commit counts for the ",l.a.createElement("code",null,"owner")," and total commit counts in ",l.a.createElement("code",null,"all"),". ",l.a.createElement("code",null,"all")," is everyone combined, including the ",l.a.createElement("code",null,"owner")," in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract ",l.a.createElement("code",null,"owner")," from ",l.a.createElement("code",null,"all"),"."),l.a.createElement("p",null,"The array order is oldest week (index 0) to most recent week."),l.a.createElement(c["a"],{code:"octokit.repos.getParticipationStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-73"},l.a.createElement(r["AnchorLink"],{to:"#parameters-73","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-weekly-commit-count"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-pull-request-review-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-pull-request-review-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get pull request review protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getPullRequestReviewProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-74"},l.a.createElement(r["AnchorLink"],{to:"#parameters-74","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-pull-request-review-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-hourly-commit-count-for-each-day"},l.a.createElement(r["AnchorLink"],{to:"#get-the-hourly-commit-count-for-each-day","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the hourly commit count for each day"),l.a.createElement("p",null,"Each array contains the day number, hour number, and number of commits:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"0-6"),": Sunday - Saturday"),l.a.createElement("li",null,l.a.createElement("code",null,"0-23"),": Hour of day"),l.a.createElement("li",null,"Number of commits")),l.a.createElement("p",null,"For example, ",l.a.createElement("code",null,"[2, 14, 25]")," indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits."),l.a.createElement(c["a"],{code:"octokit.repos.getPunchCardStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-75"},l.a.createElement(r["AnchorLink"],{to:"#parameters-75","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-hourly-commit-count-for-each-day"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-readme"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-readme","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository README"),l.a.createElement("p",null,"Gets the preferred README for a repository."),l.a.createElement("p",null,"READMEs support ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"custom media types")," for retrieving the raw content or rendered HTML."),l.a.createElement(c["a"],{code:"octokit.repos.getReadme({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-76"},l.a.createElement(r["AnchorLink"],{to:"#parameters-76","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the commit/branch/tag. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-repository-readme"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-release"},l.a.createElement(r["AnchorLink"],{to:"#get-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a release"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," This returns an ",l.a.createElement("code",null,"upload_url")," key corresponding to the endpoint for uploading release assets. This key is a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia"},"hypermedia resource"),"."),l.a.createElement(c["a"],{code:"octokit.repos.getRelease({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-77"},l.a.createElement(r["AnchorLink"],{to:"#parameters-77","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#get-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a release asset"),l.a.createElement("p",null,"To download the asset's binary content, set the ",l.a.createElement("code",null,"Accept")," header of the request to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types"},l.a.createElement("code",null,"application/octet-stream")),". The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a ",l.a.createElement("code",null,"200")," or ",l.a.createElement("code",null,"302")," response."),l.a.createElement(c["a"],{code:"octokit.repos.getReleaseAsset({\n  owner,\n  repo,\n  asset_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-78"},l.a.createElement(r["AnchorLink"],{to:"#parameters-78","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"asset_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"asset_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-release-asset"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-release-by-tag-name"},l.a.createElement(r["AnchorLink"],{to:"#get-a-release-by-tag-name","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a release by tag name"),l.a.createElement("p",null,"Get a published release with the specified tag."),l.a.createElement(c["a"],{code:"octokit.repos.getReleaseByTag({\n  owner,\n  repo,\n  tag,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-79"},l.a.createElement(r["AnchorLink"],{to:"#parameters-79","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"tag+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-release-by-tag-name"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-status-checks-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-status-checks-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get status checks protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getStatusChecksProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-80"},l.a.createElement(r["AnchorLink"],{to:"#parameters-80","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-status-checks-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-teams-with-access-to-the-protected-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-teams-with-access-to-the-protected-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get teams with access to the protected branch"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists the teams who have push access to this branch. The list includes child teams."),l.a.createElement(c["a"],{code:"octokit.repos.getTeamsWithAccessToProtectedBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-81"},l.a.createElement(r["AnchorLink"],{to:"#parameters-81","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-teams-with-access-to-the-protected-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-top-referral-paths"},l.a.createElement(r["AnchorLink"],{to:"#get-top-referral-paths","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get top referral paths"),l.a.createElement("p",null,"Get the top 10 popular contents over the last 14 days."),l.a.createElement(c["a"],{code:"octokit.repos.getTopPaths({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-82"},l.a.createElement(r["AnchorLink"],{to:"#parameters-82","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-top-referral-paths"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-top-referral-sources"},l.a.createElement(r["AnchorLink"],{to:"#get-top-referral-sources","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get top referral sources"),l.a.createElement("p",null,"Get the top 10 referrers over the last 14 days."),l.a.createElement(c["a"],{code:"octokit.repos.getTopReferrers({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-83"},l.a.createElement(r["AnchorLink"],{to:"#parameters-83","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-top-referral-sources"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-users-with-access-to-the-protected-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-users-with-access-to-the-protected-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get users with access to the protected branch"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists the people who have push access to this branch."),l.a.createElement(c["a"],{code:"octokit.repos.getUsersWithAccessToProtectedBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-84"},l.a.createElement(r["AnchorLink"],{to:"#parameters-84","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-users-with-access-to-the-protected-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-page-views"},l.a.createElement(r["AnchorLink"],{to:"#get-page-views","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get page views"),l.a.createElement("p",null,"Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."),l.a.createElement(c["a"],{code:"octokit.repos.getViews({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-85"},l.a.createElement(r["AnchorLink"],{to:"#parameters-85","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Must be one of: ",l.a.createElement("code",null,"day"),", ",l.a.createElement("code",null,"week"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-page-views"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository webhook"),l.a.createElement("p",null,"Returns a webhook configured in a repository. To get only the webhook ",l.a.createElement("code",null,"config"),' properties, see "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/repos#get-a-webhook-configuration-for-a-repository"},"Get a webhook configuration for a repository"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.getWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-86"},l.a.createElement(r["AnchorLink"],{to:"#parameters-86","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-webhook-configuration-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-a-webhook-configuration-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a webhook configuration for a repository"),l.a.createElement("p",null,"Returns the webhook configuration for a repository. To get more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#get-a-repository-webhook"},"Get a repository webhook"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"read:repo_hook")," or ",l.a.createElement("code",null,"repo")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"repository_hooks:read")," permission."),l.a.createElement(c["a"],{code:"octokit.repos.getWebhookConfigForRepo({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-87"},l.a.createElement(r["AnchorLink"],{to:"#parameters-87","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos#get-a-webhook-configuration-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-branches"},l.a.createElement(r["AnchorLink"],{to:"#list-branches","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List branches"),l.a.createElement(c["a"],{code:"octokit.repos.listBranches({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-88"},l.a.createElement(r["AnchorLink"],{to:"#parameters-88","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"protected"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Setting to ",l.a.createElement("code",null,"true")," returns only protected branches. When set to ",l.a.createElement("code",null,"false"),", only unprotected branches are returned. Omitting this parameter returns all branches."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-branches"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-branches-for-head-commit"},l.a.createElement(r["AnchorLink"],{to:"#list-branches-for-head-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List branches for HEAD commit"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch."),l.a.createElement(c["a"],{code:"octokit.repos.listBranchesForHeadCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-89"},l.a.createElement(r["AnchorLink"],{to:"#parameters-89","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-branches-for-head-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-collaborators"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-collaborators","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository collaborators"),l.a.createElement("p",null,"For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners."),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement(c["a"],{code:"octokit.repos.listCollaborators({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-90"},l.a.createElement(r["AnchorLink"],{to:"#parameters-90","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"affiliation"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter collaborators returned by their affiliation. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"outside"),": All outside collaborators of an organization-owned repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"direct"),": All collaborators with permissions to an organization-owned repository, regardless of organization membership status.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All collaborators the authenticated user can see."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-collaborators"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commit-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-commit-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commit comments"),l.a.createElement("p",null,"Use the ",l.a.createElement("code",null,":commit_sha")," to specify the commit that will have its comments listed."),l.a.createElement(c["a"],{code:"octokit.repos.listCommentsForCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-91"},l.a.createElement(r["AnchorLink"],{to:"#parameters-91","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commit-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commit-comments-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-commit-comments-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commit comments for a repository"),l.a.createElement("p",null,"Commit Comments use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"these custom media types"),". You can read more about the use of media types in the API ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"here"),"."),l.a.createElement("p",null,"Comments are ordered by ascending ID."),l.a.createElement(c["a"],{code:"octokit.repos.listCommitCommentsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-92"},l.a.createElement(r["AnchorLink"],{to:"#parameters-92","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commit-comments-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commits"},l.a.createElement(r["AnchorLink"],{to:"#list-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commits"),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.repos.listCommits({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-93"},l.a.createElement(r["AnchorLink"],{to:"#parameters-93","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"SHA or branch to start listing commits from. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only commits containing this file path will be returned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"GitHub login or email address by which to filter by commit author."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"until"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only commits before this date will be returned. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commit-statuses-for-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#list-commit-statuses-for-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commit statuses for a reference"),l.a.createElement("p",null,"Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one."),l.a.createElement("p",null,"This resource is also available via a legacy route: ",l.a.createElement("code",null,"GET /repos/:owner/:repo/statuses/:ref"),"."),l.a.createElement(c["a"],{code:"octokit.repos.listCommitStatusesForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-94"},l.a.createElement(r["AnchorLink"],{to:"#parameters-94","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commit-statuses-for-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-contributors"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-contributors","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository contributors"),l.a.createElement("p",null,"Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance."),l.a.createElement("p",null,"GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information."),l.a.createElement(c["a"],{code:"octokit.repos.listContributors({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-95"},l.a.createElement(r["AnchorLink"],{to:"#parameters-95","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"anon"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"1")," or ",l.a.createElement("code",null,"true")," to include anonymous contributors in results."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-contributors"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-deploy-keys"},l.a.createElement(r["AnchorLink"],{to:"#list-deploy-keys","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List deploy keys"),l.a.createElement(c["a"],{code:"octokit.repos.listDeployKeys({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-96"},l.a.createElement(r["AnchorLink"],{to:"#parameters-96","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-deploy-keys"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-deployments"},l.a.createElement(r["AnchorLink"],{to:"#list-deployments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List deployments"),l.a.createElement("p",null,"Simple filtering of deployments is available via query parameters:"),l.a.createElement(c["a"],{code:"octokit.repos.listDeployments({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-97"},l.a.createElement(r["AnchorLink"],{to:"#parameters-97","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA recorded at creation time."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the ref. This can be a branch, tag, or SHA."))),l.a.createElement("tr",null,l.a.createElement("td",null,"task"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the task for the deployment (e.g., ",l.a.createElement("code",null,"deploy")," or ",l.a.createElement("code",null,"deploy:migrations"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the environment that was deployed to (e.g., ",l.a.createElement("code",null,"staging")," or ",l.a.createElement("code",null,"production"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-deployments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-deployment-statuses"},l.a.createElement(r["AnchorLink"],{to:"#list-deployment-statuses","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List deployment statuses"),l.a.createElement("p",null,"Users with pull access can view deployment statuses for a deployment:"),l.a.createElement(c["a"],{code:"octokit.repos.listDeploymentStatuses({\n  owner,\n  repo,\n  deployment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-98"},l.a.createElement(r["AnchorLink"],{to:"#parameters-98","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-deployment-statuses"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories for the authenticated user"),l.a.createElement("p",null,"Lists repositories that the authenticated user has explicit permission (",l.a.createElement("code",null,":read"),", ",l.a.createElement("code",null,":write"),", or ",l.a.createElement("code",null,":admin"),") to access."),l.a.createElement("p",null,"The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."),l.a.createElement(c["a"],{code:"octokit.repos.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-99"},l.a.createElement(r["AnchorLink"],{to:"#parameters-99","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"public"),", or ",l.a.createElement("code",null,"private"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"affiliation"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Comma-separated list of values. Can include:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"owner"),": Repositories that are owned by the authenticated user.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"collaborator"),": Repositories that the user has been added to as a collaborator.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"organization_member"),": Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."))),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"owner"),", ",l.a.createElement("code",null,"public"),", ",l.a.createElement("code",null,"private"),", ",l.a.createElement("code",null,"member"),". Default: ",l.a.createElement("code",null,"all")),l.a.createElement("p",null,"Will cause a ",l.a.createElement("code",null,"422")," error if used in the same request as ",l.a.createElement("strong",null,"visibility")," or ",l.a.createElement("strong",null,"affiliation"),". Will cause a ",l.a.createElement("code",null,"422")," error if used in the same request as ",l.a.createElement("strong",null,"visibility")," or ",l.a.createElement("strong",null,"affiliation"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"pushed"),", ",l.a.createElement("code",null,"full_name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: ",l.a.createElement("code",null,"asc")," when using ",l.a.createElement("code",null,"full_name"),", otherwise ",l.a.createElement("code",null,"desc")))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"before"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated before the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repositories-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-forks"},l.a.createElement(r["AnchorLink"],{to:"#list-forks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List forks"),l.a.createElement(c["a"],{code:"octokit.repos.listForks({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-100"},l.a.createElement(r["AnchorLink"],{to:"#parameters-100","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The sort order. Can be either ",l.a.createElement("code",null,"newest"),", ",l.a.createElement("code",null,"oldest"),", or ",l.a.createElement("code",null,"stargazers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-forks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization repositories"),l.a.createElement("p",null,"Lists repositories for the specified organization."),l.a.createElement(c["a"],{code:"octokit.repos.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-101"},l.a.createElement(r["AnchorLink"],{to:"#parameters-101","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the types of repositories you want returned. Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"public"),", ",l.a.createElement("code",null,"private"),", ",l.a.createElement("code",null,"forks"),", ",l.a.createElement("code",null,"sources"),", ",l.a.createElement("code",null,"member"),", ",l.a.createElement("code",null,"internal"),". Default: ",l.a.createElement("code",null,"all"),". If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, ",l.a.createElement("code",null,"type")," can also be ",l.a.createElement("code",null,"internal"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"pushed"),", ",l.a.createElement("code",null,"full_name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: when using ",l.a.createElement("code",null,"full_name"),": ",l.a.createElement("code",null,"asc"),", otherwise ",l.a.createElement("code",null,"desc")))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-organization-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories for a user"),l.a.createElement("p",null,"Lists public repositories for the specified user."),l.a.createElement(c["a"],{code:"octokit.repos.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-102"},l.a.createElement(r["AnchorLink"],{to:"#parameters-102","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"owner"),", ",l.a.createElement("code",null,"member"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"pushed"),", ",l.a.createElement("code",null,"full_name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: ",l.a.createElement("code",null,"asc")," when using ",l.a.createElement("code",null,"full_name"),", otherwise ",l.a.createElement("code",null,"desc")))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repositories-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository invitations"),l.a.createElement("p",null,"When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations."),l.a.createElement(c["a"],{code:"octokit.repos.listInvitations({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-103"},l.a.createElement(r["AnchorLink"],{to:"#parameters-103","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-invitations-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-invitations-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository invitations for the authenticated user"),l.a.createElement("p",null,"When authenticating as a user, this endpoint will list all currently open repository invitations for that user."),l.a.createElement(c["a"],{code:"octokit.repos.listInvitationsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-104"},l.a.createElement(r["AnchorLink"],{to:"#parameters-104","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-invitations-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-languages"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-languages","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository languages"),l.a.createElement("p",null,"Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language."),l.a.createElement(c["a"],{code:"octokit.repos.listLanguages({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-105"},l.a.createElement(r["AnchorLink"],{to:"#parameters-105","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-languages"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-github-pages-builds"},l.a.createElement(r["AnchorLink"],{to:"#list-github-pages-builds","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List GitHub Pages builds"),l.a.createElement(c["a"],{code:"octokit.repos.listPagesBuilds({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-106"},l.a.createElement(r["AnchorLink"],{to:"#parameters-106","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-github-pages-builds"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public repositories"),l.a.createElement("p",null,"Lists all public repositories in the order that they were created."),l.a.createElement("p",null,"Note: Pagination is powered exclusively by the ",l.a.createElement("code",null,"since")," parameter. Use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header"},"Link header")," to get the URL for the next page of repositories."),l.a.createElement(c["a"],{code:"octokit.repos.listPublic();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-107"},l.a.createElement(r["AnchorLink"],{to:"#parameters-107","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A repository ID. Only return repositories with an ID greater than this ID."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-public-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pull-requests-associated-with-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#list-pull-requests-associated-with-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pull requests associated with a commit"),l.a.createElement("p",null,"Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests")," endpoint."),l.a.createElement(c["a"],{code:"octokit.repos.listPullRequestsAssociatedWithCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-108"},l.a.createElement(r["AnchorLink"],{to:"#parameters-108","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-pull-requests-associated-with-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-release-assets"},l.a.createElement(r["AnchorLink"],{to:"#list-release-assets","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List release assets"),l.a.createElement(c["a"],{code:"octokit.repos.listReleaseAssets({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-109"},l.a.createElement(r["AnchorLink"],{to:"#parameters-109","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-release-assets"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-releases"},l.a.createElement(r["AnchorLink"],{to:"#list-releases","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List releases"),l.a.createElement("p",null,"This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-tags"},"Repository Tags API"),"."),l.a.createElement("p",null,"Information about published releases are available to everyone. Only users with push access will receive listings for draft releases."),l.a.createElement(c["a"],{code:"octokit.repos.listReleases({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-110"},l.a.createElement(r["AnchorLink"],{to:"#parameters-110","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-releases"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-tags"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-tags","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository tags"),l.a.createElement(c["a"],{code:"octokit.repos.listTags({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-111"},l.a.createElement(r["AnchorLink"],{to:"#parameters-111","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-tags"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository teams"),l.a.createElement(c["a"],{code:"octokit.repos.listTeams({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-112"},l.a.createElement(r["AnchorLink"],{to:"#parameters-112","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-webhooks"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-webhooks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository webhooks"),l.a.createElement(c["a"],{code:"octokit.repos.listWebhooks({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-113"},l.a.createElement(r["AnchorLink"],{to:"#parameters-113","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-webhooks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"merge-a-branch"},l.a.createElement(r["AnchorLink"],{to:"#merge-a-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merge a branch"),l.a.createElement(c["a"],{code:"octokit.repos.merge({\n  owner,\n  repo,\n  base,\n  head,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-114"},l.a.createElement(r["AnchorLink"],{to:"#parameters-114","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the base branch that the head will be merged into."))),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The head to merge. This can be a branch name or a commit SHA1."))),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_message"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Commit message to use for the merge commit. If omitted, a default message will be used."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#merge-a-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"ping-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#ping-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Ping a repository webhook"),l.a.createElement("p",null,"This will trigger a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/#ping-event"},"ping event")," to be sent to the hook."),l.a.createElement(c["a"],{code:"octokit.repos.pingWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-115"},l.a.createElement(r["AnchorLink"],{to:"#parameters-115","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#ping-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-app-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#remove-app-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove app access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removes the ability of an app to push to this branch. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The GitHub Apps that have push access to this branch. Use the app's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.removeAppAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  apps,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-116"},l.a.createElement(r["AnchorLink"],{to:"#parameters-116","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"apps"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-app-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-repository-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-repository-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a repository collaborator"),l.a.createElement(c["a"],{code:"octokit.repos.removeCollaborator({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-117"},l.a.createElement(r["AnchorLink"],{to:"#parameters-117","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-a-repository-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#remove-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.removeStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n  contexts,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-118"},l.a.createElement(r["AnchorLink"],{to:"#parameters-118","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-status-check-protection"},l.a.createElement(r["AnchorLink"],{to:"#remove-status-check-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove status check protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.removeStatusCheckProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-119"},l.a.createElement(r["AnchorLink"],{to:"#parameters-119","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-status-check-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-team-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#remove-team-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove team access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removes the ability of a team to push to this branch. You can also remove push access for child teams."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Teams that should no longer have push access. Use the team's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.removeTeamAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  teams,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-120"},l.a.createElement(r["AnchorLink"],{to:"#parameters-120","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-team-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-user-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#remove-user-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove user access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removes the ability of a user to push to this branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Usernames of the people who should no longer have push access. ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.removeUserAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  users,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-121"},l.a.createElement(r["AnchorLink"],{to:"#parameters-121","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-user-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"rename-a-branch"},l.a.createElement(r["AnchorLink"],{to:"#rename-a-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Rename a branch"),l.a.createElement("p",null,"Renames a branch in a repository."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won't be able to push to the old branch name while the rename process is in progress. For more information, see \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/administering-a-repository/renaming-a-branch"},"Renaming a branch"),'".'),l.a.createElement("p",null,"The permissions required to use this endpoint depends on whether you are renaming the default branch."),l.a.createElement("p",null,"To rename a non-default branch:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Users must have push access."),l.a.createElement("li",null,"GitHub Apps must have the ",l.a.createElement("code",null,"contents:write")," repository permission.")),l.a.createElement("p",null,"To rename the default branch:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Users must have admin or owner permissions."),l.a.createElement("li",null,"GitHub Apps must have the ",l.a.createElement("code",null,"administration:write")," repository permission.")),l.a.createElement(c["a"],{code:"octokit.repos.renameBranch({\n  owner,\n  repo,\n  branch,\n  new_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-122"},l.a.createElement(r["AnchorLink"],{to:"#parameters-122","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"new_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The new name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#rename-a-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"replace-all-repository-topics"},l.a.createElement(r["AnchorLink"],{to:"#replace-all-repository-topics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Replace all repository topics"),l.a.createElement(c["a"],{code:"octokit.repos.replaceAllTopics({\n  owner,\n  repo,\n  names,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-123"},l.a.createElement(r["AnchorLink"],{to:"#parameters-123","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"names"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of topics to add to the repository. Pass one or more topics to ",l.a.createElement("em",null,"replace")," the set of existing topics. Send an empty array (",l.a.createElement("code",null,"[]"),") to clear all topics from the repository. ",l.a.createElement("strong",null,"Note:")," Topic ",l.a.createElement("code",null,"names")," cannot contain uppercase letters."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#replace-all-repository-topics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"request-a-github-pages-build"},l.a.createElement(r["AnchorLink"],{to:"#request-a-github-pages-build","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Request a GitHub Pages build"),l.a.createElement("p",null,"You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures."),l.a.createElement("p",null,"Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes."),l.a.createElement(c["a"],{code:"octokit.repos.requestPagesBuild({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-124"},l.a.createElement(r["AnchorLink"],{to:"#parameters-124","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#request-a-github-pages-build"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-admin-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#set-admin-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set admin branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.setAdminBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-125"},l.a.createElement(r["AnchorLink"],{to:"#parameters-125","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-admin-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-app-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#set-app-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set app access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The GitHub Apps that have push access to this branch. Use the app's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.setAppAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  apps,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-126"},l.a.createElement(r["AnchorLink"],{to:"#parameters-126","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"apps"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-app-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#set-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.setStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n  contexts,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-127"},l.a.createElement(r["AnchorLink"],{to:"#parameters-127","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-team-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#set-team-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set team access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The teams that can have push access. Use the team's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.setTeamAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  teams,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-128"},l.a.createElement(r["AnchorLink"],{to:"#parameters-128","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-team-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-user-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#set-user-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set user access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Usernames for people who can have push access. ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.setUserAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  users,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-129"},l.a.createElement(r["AnchorLink"],{to:"#parameters-129","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-user-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"test-the-push-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#test-the-push-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Test the push repository webhook"),l.a.createElement("p",null,"This will trigger the hook with the latest push to the current repository if the hook is subscribed to ",l.a.createElement("code",null,"push")," events. If the hook is not subscribed to ",l.a.createElement("code",null,"push")," events, the server will respond with 204 but no test POST will be generated."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Previously ",l.a.createElement("code",null,"/repos/:owner/:repo/hooks/:hook_id/test")),l.a.createElement(c["a"],{code:"octokit.repos.testPushWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-130"},l.a.createElement(r["AnchorLink"],{to:"#parameters-130","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#test-the-push-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"transfer-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#transfer-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Transfer a repository"),l.a.createElement("p",null,"A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original ",l.a.createElement("code",null,"owner"),", and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-repository-transfers/"},"about repository transfers"),"."),l.a.createElement(c["a"],{code:"octokit.repos.transfer({\n  owner,\n  repo,\n  new_owner,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-131"},l.a.createElement(r["AnchorLink"],{to:"#parameters-131","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"new_owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The username or organization name the repository will be transferred to."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#transfer-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#update-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a repository"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": To edit a repository's topics, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#replace-all-repository-topics"},"Replace all repository topics")," endpoint."),l.a.createElement(c["a"],{code:"octokit.repos.update({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-132"},l.a.createElement(r["AnchorLink"],{to:"#parameters-132","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"homepage"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A URL with more information about the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to make the repository private or ",l.a.createElement("code",null,"false")," to make it public. Default: ",l.a.createElement("code",null,"false"),".",l.a.createElement("br",null),l.a.createElement("strong",null,"Note"),": You will get a ",l.a.createElement("code",null,"422")," error if the organization restricts ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories"},"changing repository visibility")," to organization owners and a non-owner tries to change the value of private. ",l.a.createElement("strong",null,"Note"),": You will get a ",l.a.createElement("code",null,"422")," error if the organization restricts ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories"},"changing repository visibility")," to organization owners and a non-owner tries to change the value of private."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be ",l.a.createElement("code",null,"public")," or ",l.a.createElement("code",null,"private"),". If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, ",l.a.createElement("code",null,"visibility")," can also be ",l.a.createElement("code",null,"internal"),". The ",l.a.createElement("code",null,"visibility")," parameter overrides the ",l.a.createElement("code",null,"private")," parameter when you use both along with the ",l.a.createElement("code",null,"nebula-preview")," preview header."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable issues for this repository or ",l.a.createElement("code",null,"false")," to disable them."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable projects for this repository or ",l.a.createElement("code",null,"false")," to disable them. ",l.a.createElement("strong",null,"Note:")," If you're creating a repository in an organization that has disabled repository projects, the default is ",l.a.createElement("code",null,"false"),", and if you pass ",l.a.createElement("code",null,"true"),", the API returns an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_wiki"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable the wiki for this repository or ",l.a.createElement("code",null,"false")," to disable it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"is_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to make this repo available as a template repository or ",l.a.createElement("code",null,"false")," to prevent it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"default_branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Updates the default branch for this repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_squash_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow squash-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent squash-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_merge_commit"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow merging pull requests with a merge commit, or ",l.a.createElement("code",null,"false")," to prevent merging pull requests with merge commits."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_rebase_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow rebase-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent rebase-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"delete_branch_on_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow automatically deleting head branches when pull requests are merged, or ",l.a.createElement("code",null,"false")," to prevent automatic deletion."))),l.a.createElement("tr",null,l.a.createElement("td",null,"archived"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to archive this repository. ",l.a.createElement("strong",null,"Note"),": You cannot unarchive repositories through the API."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#update-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#update-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Protecting a branch requires admin or owner permissions to the repository."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Passing new arrays of ",l.a.createElement("code",null,"users")," and ",l.a.createElement("code",null,"teams")," replaces their previous values."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items."),l.a.createElement(c["a"],{code:"octokit.repos.updateBranchProtection({\n        owner,\nrepo,\nbranch,\nrequired_status_checks,\nrequired_status_checks.strict,\nrequired_status_checks.contexts,\nenforce_admins,\nrequired_pull_request_reviews,\nrestrictions,\nrestrictions.users,\nrestrictions.teams\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-133"},l.a.createElement(r["AnchorLink"],{to:"#parameters-133","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_status_checks"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Require status checks to pass before merging. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_status_checks.strict"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Require branches to be up to date before merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_status_checks.contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of status checks to require in order to merge into this branch"))),l.a.createElement("tr",null,l.a.createElement("td",null,"enforce_admins"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Enforce all configured restrictions for administrators. Set to ",l.a.createElement("code",null,"true")," to enforce required status checks for repository administrators. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Require at least one approving review on a pull request, before merging. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismissal_restrictions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify which users and teams can dismiss pull request reviews. Pass an empty ",l.a.createElement("code",null,"dismissal_restrictions")," object to disable. User and team ",l.a.createElement("code",null,"dismissal_restrictions")," are only available for organization-owned repositories. Omit this parameter for personal repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismissal_restrictions.users"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of user ",l.a.createElement("code",null,"login"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismissal_restrictions.teams"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of team ",l.a.createElement("code",null,"slug"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismiss_stale_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," if you want to automatically dismiss approving reviews when someone pushes a new commit."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.require_code_owner_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Blocks merging pull requests until ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-code-owners/"},"code owners")," review them."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.required_approving_review_count"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6."))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Restrict who can push to the protected branch. User, app, and team ",l.a.createElement("code",null,"restrictions")," are only available for organization-owned repositories. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions.users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of user ",l.a.createElement("code",null,"login"),"s with push access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions.teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of team ",l.a.createElement("code",null,"slug"),"s with push access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions.apps"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of app ",l.a.createElement("code",null,"slug"),"s with push access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_linear_history"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to ",l.a.createElement("code",null,"true")," to enforce a linear commit history. Set to ",l.a.createElement("code",null,"false")," to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: ",l.a.createElement("code",null,"false"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history"},"Requiring a linear commit history"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_force_pushes"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Permits force pushes to the protected branch by anyone with write access to the repository. Set to ",l.a.createElement("code",null,"true")," to allow force pushes. Set to ",l.a.createElement("code",null,"false")," or ",l.a.createElement("code",null,"null")," to block force pushes. Default: ",l.a.createElement("code",null,"false"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch"},"Enabling force pushes to a protected branch"),'" in the GitHub Help documentation."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_deletions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Allows deletion of the protected branch by anyone with write access to the repository. Set to ",l.a.createElement("code",null,"false")," to prevent deletion of the protected branch. Default: ",l.a.createElement("code",null,"false"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch"},"Enabling force pushes to a protected branch"),'" in the GitHub Help documentation.'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a commit comment"),l.a.createElement(c["a"],{code:"octokit.repos.updateCommitComment({\n  owner,\n  repo,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-134"},l.a.createElement(r["AnchorLink"],{to:"#parameters-134","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-information-about-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#update-information-about-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update information about a GitHub Pages site"),l.a.createElement("p",null,'Updates information for a GitHub Pages site. For more information, see "',l.a.createElement(r["Link"],{to:"/github/working-with-github-pages/about-github-pages"},"About GitHub Pages"),"."),l.a.createElement(c["a"],{code:"octokit.repos.updateInformationAboutPagesSite({\n  owner,\n  repo,\n  source,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-135"},l.a.createElement(r["AnchorLink"],{to:"#parameters-135","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"cname"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify a custom domain for the repository. Sending a ",l.a.createElement("code",null,"null"),' value will remove the custom domain. For more about custom domains, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/using-a-custom-domain-with-github-pages/"},"Using a custom domain with GitHub Pages"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"public"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Configures access controls for the GitHub Pages site. If public is set to ",l.a.createElement("code",null,"true"),", the site is accessible to anyone on the internet. If set to ",l.a.createElement("code",null,"false"),", the site will only be accessible to users who have at least ",l.a.createElement("code",null,"read")," access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to ",l.a.createElement("code",null,"internal")," visibility. This feature is only available to repositories in an organization on an Enterprise plan."))),l.a.createElement("tr",null,l.a.createElement("td",null,"source"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-information-about-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#update-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.updateInvitation({\n  owner,\n  repo,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-136"},l.a.createElement(r["AnchorLink"],{to:"#parameters-136","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions that the associated user will have on the repository. Valid values are ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", ",l.a.createElement("code",null,"maintain"),", ",l.a.createElement("code",null,"triage"),", and ",l.a.createElement("code",null,"admin"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-pull-request-review-protection"},l.a.createElement(r["AnchorLink"],{to:"#update-pull-request-review-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update pull request review protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Passing new arrays of ",l.a.createElement("code",null,"users")," and ",l.a.createElement("code",null,"teams")," replaces their previous values."),l.a.createElement(c["a"],{code:"octokit.repos.updatePullRequestReviewProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-137"},l.a.createElement(r["AnchorLink"],{to:"#parameters-137","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissal_restrictions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify which users and teams can dismiss pull request reviews. Pass an empty ",l.a.createElement("code",null,"dismissal_restrictions")," object to disable. User and team ",l.a.createElement("code",null,"dismissal_restrictions")," are only available for organization-owned repositories. Omit this parameter for personal repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissal_restrictions.users"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of user ",l.a.createElement("code",null,"login"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissal_restrictions.teams"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of team ",l.a.createElement("code",null,"slug"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismiss_stale_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," if you want to automatically dismiss approving reviews when someone pushes a new commit."))),l.a.createElement("tr",null,l.a.createElement("td",null,"require_code_owner_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Blocks merging pull requests until ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-code-owners/"},"code owners")," have reviewed."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_approving_review_count"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-pull-request-review-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-release"},l.a.createElement(r["AnchorLink"],{to:"#update-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a release"),l.a.createElement("p",null,"Users with push access to the repository can edit a release."),l.a.createElement(c["a"],{code:"octokit.repos.updateRelease({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-138"},l.a.createElement(r["AnchorLink"],{to:"#parameters-138","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tag_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_commitish"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ",l.a.createElement("code",null,"master"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the release."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Text describing the contents of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"draft"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," makes the release a draft, and ",l.a.createElement("code",null,"false")," publishes the release."))),l.a.createElement("tr",null,l.a.createElement("td",null,"prerelease"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to identify the release as a prerelease, ",l.a.createElement("code",null,"false")," to identify the release as a full release."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#update-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a release asset"),l.a.createElement("p",null,"Users with push access to the repository can edit a release asset."),l.a.createElement(c["a"],{code:"octokit.repos.updateReleaseAsset({\n  owner,\n  repo,\n  asset_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-139"},l.a.createElement(r["AnchorLink"],{to:"#parameters-139","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"asset_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"asset_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The file name of the asset."))),l.a.createElement("tr",null,l.a.createElement("td",null,"label"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An alternate short description of the asset. Used in place of the filename."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-release-asset"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-status-check-protection"},l.a.createElement(r["AnchorLink"],{to:"#update-status-check-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update status check protection"),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated:")," This method has been renamed to repos.updateStatusCheckProtection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.updateStatusCheckPotection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-140"},l.a.createElement(r["AnchorLink"],{to:"#parameters-140","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"strict"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Require branches to be up to date before merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of status checks to require in order to merge into this branch"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-status-check-potection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-status-check-protection-1"},l.a.createElement(r["AnchorLink"],{to:"#update-status-check-protection-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update status check protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.updateStatusCheckProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-141"},l.a.createElement(r["AnchorLink"],{to:"#parameters-141","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"strict"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Require branches to be up to date before merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of status checks to require in order to merge into this branch"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-status-check-potection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#update-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a repository webhook"),l.a.createElement("p",null,"Updates a webhook configured in a repository. If you previously had a ",l.a.createElement("code",null,"secret")," set, you must provide the same ",l.a.createElement("code",null,"secret")," or set a new ",l.a.createElement("code",null,"secret")," or the secret will be removed. If you are only updating individual webhook ",l.a.createElement("code",null,"config"),' properties, use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/repos#update-a-webhook-configuration-for-a-repository"},"Update a webhook configuration for a repository"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.updateWebhook({\n        owner,\nrepo,\nhook_id,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-142"},l.a.createElement(r["AnchorLink"],{to:"#parameters-142","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.address"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config.room"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for. This replaces the entire array of events."))),l.a.createElement("tr",null,l.a.createElement("td",null,"add_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines a list of events to be added to the list of events that the Hook triggers for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"remove_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines a list of events to be removed from the list of events that the Hook triggers for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-webhook-configuration-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#update-a-webhook-configuration-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a webhook configuration for a repository"),l.a.createElement("p",null,"Updates the webhook configuration for a repository. To update more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#update-a-repository-webhook"},"Update a repository webhook"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"write:repo_hook")," or ",l.a.createElement("code",null,"repo")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"repository_hooks:write")," permission."),l.a.createElement(c["a"],{code:"octokit.repos.updateWebhookConfigForRepo({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-143"},l.a.createElement(r["AnchorLink"],{to:"#parameters-143","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos#update-a-webhook-configuration-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"upload-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#upload-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Upload a release asset"),l.a.createElement("p",null,"This endpoint makes use of ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia"},"a Hypermedia relation")," to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the ",l.a.createElement("code",null,"upload_url")," returned in the response of the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-release"},"Create a release endpoint")," to upload a release asset."),l.a.createElement("p",null,"You need to use an HTTP client which supports ",l.a.createElement(r["Link"],{to:"http://en.wikipedia.org/wiki/Server_Name_Indication"},"SNI")," to make calls to this endpoint."),l.a.createElement("p",null,"Most libraries will set the required ",l.a.createElement("code",null,"Content-Length")," header automatically. Use the required ",l.a.createElement("code",null,"Content-Type")," header to provide the media type of the asset. For a list of media types, see ",l.a.createElement(r["Link"],{to:"https://www.iana.org/assignments/media-types/media-types.xhtml"},"Media Types"),". For example:"),l.a.createElement("p",null,l.a.createElement("code",null,"application/zip")),l.a.createElement("p",null,"GitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset."),l.a.createElement("p",null,"When an upstream failure occurs, you will receive a ",l.a.createElement("code",null,"502 Bad Gateway")," status. This may leave an empty asset with a state of ",l.a.createElement("code",null,"starter"),". It can be safely deleted."),l.a.createElement("p",null,l.a.createElement("strong",null,"Notes:")),l.a.createElement("ul",null,l.a.createElement("li",null,'GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-assets-for-a-release"},"List assets for a release"),'" endpoint lists the renamed filenames. For more information and help, contact ',l.a.createElement(r["Link"],{to:"https://support.github.com/contact"},"GitHub Support"),"."),l.a.createElement("li",null,"If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.")),l.a.createElement(c["a"],{code:"octokit.repos.uploadReleaseAsset({\n  owner,\n  repo,\n  release_id,\n  data,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-144"},l.a.createElement(r["AnchorLink"],{to:"#parameters-144","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"label"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"data"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The raw file data"))),l.a.createElement("tr",null,l.a.createElement("td",null,"origin"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL origin (protocol + host name + port) is included in ",l.a.createElement("code",null,"upload_url"),' returned in the response of the "Create a release" endpoint'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#upload-a-release-asset"},"GitHub Developer Guide documentation"),".")))}},"G+Rx":function(e,t,a){var n=a("0GbY");e.exports=n("document","documentElement")},"G/4h":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"cancel-an-import"},l.a.createElement(r["AnchorLink"],{to:"#cancel-an-import","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Cancel an import"),l.a.createElement("p",null,"Stop an import for a repository."),l.a.createElement(c["a"],{code:"octokit.migrations.cancelImport({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#cancel-an-import"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-user-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-user-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a user migration archive"),l.a.createElement("p",null,"Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-user-migrations"},"List user migrations")," and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-a-user-migration-status"},"Get a user migration status")," endpoints, will continue to be available even after an archive is deleted."),l.a.createElement(c["a"],{code:"octokit.migrations.deleteArchiveForAuthenticatedUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#delete-a-user-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-organization-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-organization-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an organization migration archive"),l.a.createElement("p",null,"Deletes a previous migration archive. Migration archives are automatically deleted after seven days."),l.a.createElement(c["a"],{code:"octokit.migrations.deleteArchiveForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#delete-an-organization-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-an-organization-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#download-an-organization-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download an organization migration archive"),l.a.createElement("p",null,"Fetches the URL to a migration archive."),l.a.createElement(c["a"],{code:"octokit.migrations.downloadArchiveForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#download-an-organization-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-user-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#download-a-user-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a user migration archive"),l.a.createElement("p",null,"Fetches the URL to download the migration archive as a ",l.a.createElement("code",null,"tar.gz")," file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:"),l.a.createElement("ul",null,l.a.createElement("li",null,"attachments"),l.a.createElement("li",null,"bases"),l.a.createElement("li",null,"commit_comments"),l.a.createElement("li",null,"issue_comments"),l.a.createElement("li",null,"issue_events"),l.a.createElement("li",null,"issues"),l.a.createElement("li",null,"milestones"),l.a.createElement("li",null,"organizations"),l.a.createElement("li",null,"projects"),l.a.createElement("li",null,"protected_branches"),l.a.createElement("li",null,"pull_request_reviews"),l.a.createElement("li",null,"pull_requests"),l.a.createElement("li",null,"releases"),l.a.createElement("li",null,"repositories"),l.a.createElement("li",null,"review_comments"),l.a.createElement("li",null,"schema"),l.a.createElement("li",null,"users")),l.a.createElement("p",null,"The archive will also contain an ",l.a.createElement("code",null,"attachments")," directory that includes all attachment files uploaded to GitHub.com and a ",l.a.createElement("code",null,"repositories")," directory that contains the repository's Git data."),l.a.createElement(c["a"],{code:"octokit.migrations.getArchiveForAuthenticatedUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-commit-authors"},l.a.createElement(r["AnchorLink"],{to:"#get-commit-authors","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get commit authors"),l.a.createElement("p",null,"Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username ",l.a.createElement("code",null,"hubot")," into something like ",l.a.createElement("code",null,"hubot <hubot@12341234-abab-fefe-8787-fedcba987654>"),"."),l.a.createElement("p",null,"This endpoint and the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#map-a-commit-author"},"Map a commit author")," endpoint allow you to provide correct Git author information."),l.a.createElement(c["a"],{code:"octokit.migrations.getCommitAuthors({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A user ID. Only return users with an ID greater than this ID."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-commit-authors"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-import-status"},l.a.createElement(r["AnchorLink"],{to:"#get-an-import-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an import status"),l.a.createElement("p",null,"View the progress of an import."),l.a.createElement("p",null,l.a.createElement("strong",null,"Import status")),l.a.createElement("p",null,"This section includes details about the possible values of the ",l.a.createElement("code",null,"status")," field of the Import Progress response."),l.a.createElement("p",null,"An import that does not have errors will progress through these steps:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"detecting"),' - the "detection" step of the import is in progress because the request did not include a ',l.a.createElement("code",null,"vcs")," parameter. The import is identifying the type of source control present at the URL."),l.a.createElement("li",null,l.a.createElement("code",null,"importing"),' - the "raw" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include ',l.a.createElement("code",null,"commit_count")," (the total number of raw commits that will be imported) and ",l.a.createElement("code",null,"percent")," (0 - 100, the current progress through the import)."),l.a.createElement("li",null,l.a.createElement("code",null,"mapping"),' - the "rewrite" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.'),l.a.createElement("li",null,l.a.createElement("code",null,"pushing"),' - the "push" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include ',l.a.createElement("code",null,"push_percent"),", which is the percent value reported by ",l.a.createElement("code",null,"git push"),' when it is "Writing objects".'),l.a.createElement("li",null,l.a.createElement("code",null,"complete")," - the import is complete, and the repository is ready on GitHub.")),l.a.createElement("p",null,"If there are problems, you will see one of these in the ",l.a.createElement("code",null,"status")," field:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"auth_failed")," - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"Update an import")," section."),l.a.createElement("li",null,l.a.createElement("code",null,"error")," - the import encountered an error. The import progress response will include the ",l.a.createElement("code",null,"failed_step")," and an error message. Contact ",l.a.createElement(r["Link"],{to:"https://support.github.com/contact"},"GitHub Support")," or ",l.a.createElement(r["Link"],{to:"https://premium.githubsupport.com/"},"GitHub Premium Support")," for more information."),l.a.createElement("li",null,l.a.createElement("code",null,"detection_needs_auth")," - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"Update an import")," section."),l.a.createElement("li",null,l.a.createElement("code",null,"detection_found_nothing")," - the importer didn't recognize any source control at the URL. To resolve, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#cancel-an-import"},"Cancel the import")," and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-an-import"},"retry")," with the correct URL."),l.a.createElement("li",null,l.a.createElement("code",null,"detection_found_multiple")," - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a ",l.a.createElement("code",null,"project_choices")," field with the possible project choices as values. To update project choice, please see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"Update an import")," section.")),l.a.createElement("p",null,l.a.createElement("strong",null,"The project_choices field")),l.a.createElement("p",null,"When multiple projects are found at the provided URL, the response hash will include a ",l.a.createElement("code",null,"project_choices")," field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type."),l.a.createElement("p",null,l.a.createElement("strong",null,"Git LFS related fields")),l.a.createElement("p",null,"This section includes details about Git LFS related fields that may be present in the Import Progress response."),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"use_lfs")," - describes whether the import has been opted in or out of using Git LFS. The value can be ",l.a.createElement("code",null,"opt_in"),", ",l.a.createElement("code",null,"opt_out"),", or ",l.a.createElement("code",null,"undecided")," if no action has been taken."),l.a.createElement("li",null,l.a.createElement("code",null,"has_large_files")," - the boolean value describing whether files larger than 100MB were found during the ",l.a.createElement("code",null,"importing")," step."),l.a.createElement("li",null,l.a.createElement("code",null,"large_files_size")," - the total size in gigabytes of files larger than 100MB found in the originating repository."),l.a.createElement("li",null,l.a.createElement("code",null,"large_files_count"),' - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a "Get Large Files" request.')),l.a.createElement(c["a"],{code:"octokit.migrations.getImportStatus({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-an-import-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-large-files"},l.a.createElement(r["AnchorLink"],{to:"#get-large-files","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get large files"),l.a.createElement("p",null,"List files larger than 100MB found during the import"),l.a.createElement(c["a"],{code:"octokit.migrations.getLargeFiles({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-large-files"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-user-migration-status"},l.a.createElement(r["AnchorLink"],{to:"#get-a-user-migration-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a user migration status"),l.a.createElement("p",null,"Fetches a single user migration. The response includes the ",l.a.createElement("code",null,"state")," of the migration, which can be one of the following values:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"pending")," - the migration hasn't started yet."),l.a.createElement("li",null,l.a.createElement("code",null,"exporting")," - the migration is in progress."),l.a.createElement("li",null,l.a.createElement("code",null,"exported")," - the migration finished successfully."),l.a.createElement("li",null,l.a.createElement("code",null,"failed")," - the migration failed.")),l.a.createElement("p",null,"Once the migration has been ",l.a.createElement("code",null,"exported")," you can ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive"},"download the migration archive"),"."),l.a.createElement(c["a"],{code:"octokit.migrations.getStatusForAuthenticatedUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-a-user-migration-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-migration-status"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-migration-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization migration status"),l.a.createElement("p",null,"Fetches the status of a migration."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"state")," of a migration can be one of the following values:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"pending"),", which means the migration hasn't started yet."),l.a.createElement("li",null,l.a.createElement("code",null,"exporting"),", which means the migration is in progress."),l.a.createElement("li",null,l.a.createElement("code",null,"exported"),", which means the migration finished successfully."),l.a.createElement("li",null,l.a.createElement("code",null,"failed"),", which means the migration failed.")),l.a.createElement(c["a"],{code:"octokit.migrations.getStatusForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-an-organization-migration-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-user-migrations"},l.a.createElement(r["AnchorLink"],{to:"#list-user-migrations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List user migrations"),l.a.createElement("p",null,"Lists all migrations a user has started."),l.a.createElement(c["a"],{code:"octokit.migrations.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-user-migrations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-migrations"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-migrations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization migrations"),l.a.createElement("p",null,"Lists the most recent migrations."),l.a.createElement(c["a"],{code:"octokit.migrations.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-organization-migrations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-in-an-organization-migration"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-in-an-organization-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories in an organization migration"),l.a.createElement("p",null,"List all the repositories for this organization migration."),l.a.createElement(c["a"],{code:"octokit.migrations.listReposForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-repositories-in-an-organization-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-for-a-user-migration"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-for-a-user-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories for a user migration"),l.a.createElement("p",null,"Lists all the repositories for this user migration."),l.a.createElement(c["a"],{code:"octokit.migrations.listReposForUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-repositories-for-a-user-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"map-a-commit-author"},l.a.createElement(r["AnchorLink"],{to:"#map-a-commit-author","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Map a commit author"),l.a.createElement("p",null,"Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository."),l.a.createElement(c["a"],{code:"octokit.migrations.mapCommitAuthor({\n  owner,\n  repo,\n  author_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"author_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new Git author email."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new Git author name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"remote_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#map-a-commit-author"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-git-lfs-preference"},l.a.createElement(r["AnchorLink"],{to:"#update-git-lfs-preference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update Git LFS preference"),l.a.createElement("p",null,"You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by ",l.a.createElement(r["Link"],{to:"https://git-lfs.github.com/"},"Git LFS"),". You can learn more about our LFS feature and working with large files ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/versioning-large-files/"},"on our help site"),"."),l.a.createElement(c["a"],{code:"octokit.migrations.setLfsPreference({\n  owner,\n  repo,\n  use_lfs,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"use_lfs"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"opt_in")," (large files will be stored using Git LFS) or ",l.a.createElement("code",null,"opt_out")," (large files will be removed during the import)."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-git-lfs-preference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"start-a-user-migration"},l.a.createElement(r["AnchorLink"],{to:"#start-a-user-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Start a user migration"),l.a.createElement("p",null,"Initiates the generation of a user migration archive."),l.a.createElement(c["a"],{code:"octokit.migrations.startForAuthenticatedUser({\n  repositories,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"lock_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Lock the repositories being migrated at the start of the migration"))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude_attachments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Do not include attachments in the migration"))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Exclude attributes from the API response to improve performance"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-a-user-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"start-an-organization-migration"},l.a.createElement(r["AnchorLink"],{to:"#start-an-organization-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Start an organization migration"),l.a.createElement("p",null,"Initiates the generation of a migration archive."),l.a.createElement(c["a"],{code:"octokit.migrations.startForOrg({\n  org,\n  repositories,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of arrays indicating which repositories should be migrated."))),l.a.createElement("tr",null,l.a.createElement("td",null,"lock_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether repositories should be locked (to prevent manipulation) while migrating data."))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude_attachments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether attachments should be excluded from the migration (to reduce migration archive file size)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-an-organization-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"start-an-import"},l.a.createElement(r["AnchorLink"],{to:"#start-an-import","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Start an import"),l.a.createElement("p",null,"Start a source import to a GitHub repository using GitHub Importer."),l.a.createElement(c["a"],{code:"octokit.migrations.startImport({\n  owner,\n  repo,\n  vcs_url,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL of the originating repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The originating VCS type. Can be one of ",l.a.createElement("code",null,"subversion"),", ",l.a.createElement("code",null,"git"),", ",l.a.createElement("code",null,"mercurial"),", or ",l.a.createElement("code",null,"tfvc"),". Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If authentication is required, the username to provide to ",l.a.createElement("code",null,"vcs_url"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_password"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If authentication is required, the password to provide to ",l.a.createElement("code",null,"vcs_url"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tfvc_project"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"For a tfvc import, the name of the project that is being imported."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-an-import"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unlock-a-user-repository"},l.a.createElement(r["AnchorLink"],{to:"#unlock-a-user-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unlock a user repository"),l.a.createElement("p",null,"Unlocks a repository. You can lock repositories when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-a-user-migration"},"start a user migration"),". Once the migration is complete you can unlock each repository to begin using it again or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository"},"delete the repository")," if you no longer need the source data. Returns a status of ",l.a.createElement("code",null,"404 Not Found")," if the repository is not locked."),l.a.createElement(c["a"],{code:"octokit.migrations.unlockRepoForAuthenticatedUser({\n  migration_id,\n  repo_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repo_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"repo_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#unlock-a-user-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unlock-an-organization-repository"},l.a.createElement(r["AnchorLink"],{to:"#unlock-an-organization-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unlock an organization repository"),l.a.createElement("p",null,"Unlocks a repository that was locked for migration. You should unlock each migrated repository and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository"},"delete them")," when the migration is complete and you no longer need the source data."),l.a.createElement(c["a"],{code:"octokit.migrations.unlockRepoForOrg({\n  org,\n  migration_id,\n  repo_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repo_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"repo_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#unlock-an-organization-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-import"},l.a.createElement(r["AnchorLink"],{to:"#update-an-import","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an import"),l.a.createElement("p",null,"An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted."),l.a.createElement(c["a"],{code:"octokit.migrations.updateImport({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The username to provide to the originating repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_password"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The password to provide to the originating repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tfvc_project"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"GitHub Developer Guide documentation"),".")))}},GC2F:function(e,t,a){var n=a("+M1K");e.exports=function(e,t){var a=n(e);if(a%t)throw RangeError("Wrong offset");return a}},GMmF:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Authentication is optional for some REST API endpoints accessing public data, but is required for GraphQL queries. Using authentication also increases your ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"},"API rate limit"),"."),l.a.createElement("p",null,"GitHub supports different authentication strategies:"),l.a.createElement("ol",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Personal access token")," (",l.a.createElement(r["Link"],{to:"https://github.com/settings/tokens/new"},"create"),"). This is the default authentication strategy. Set the ",l.a.createElement("code",null,"options.auth")," option to the token in ",l.a.createElement("code",null,"new Octokit(options)"),". Learn more about the built-in ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-token.js"},l.a.createElement("code",null,"@octokit/auth-token")," authentication strategy"),"."),l.a.createElement("li",null,l.a.createElement("strong",null,"OAuth Apps"),": authenticate using user access token created by an OAuth app, to which you granted selected permissions, or as the OAuth App itself (OAuth using ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret"),"). Learn more about the optional ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-oauth-app.js"},l.a.createElement("code",null,"@octokit/auth-oauth-app")," authentication strategy")),l.a.createElement("li",null,l.a.createElement("strong",null,"GitHub Apps"),": authenticate using an installation access token or as GitHub App itself. Learn more about the optional ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-app.js/"},l.a.createElement("code",null,"@octokit/auth-app")," authentication strategy"),"."),l.a.createElement("li",null,l.a.createElement("strong",null,"GitHub Actions"),": authenticate using the ",l.a.createElement("code",null,"GITHUB_TOKEN")," secret which is provided to GitHub Actions Workflows. Learn more about the optional ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-action.js"},l.a.createElement("code",null,"@octokit/auth-action")," authentication strategy"),".")),l.a.createElement("p",null,"Learn more about all official and community ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth.js#readme"},"authentication strategies"),"."),l.a.createElement("p",null,"By default, ",l.a.createElement("code",null,"@octokit/rest")," authenticates using the ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-token.js"},"token authentication strategy"),". Pass in a token using ",l.a.createElement("code",null,"options.auth"),". It can be a personal access token, an OAuth token, an installation access token or a JSON Web Token for GitHub App authentication. The ",l.a.createElement("code",null,"Authorization")," request header will be set according to the type of token."),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\n\nconst octokit = new Octokit({\n  auth: "mypersonalaccesstoken123",\n});\n\n// sends request with `Authorization: token mypersonalaccesstoken123` header\nconst { data } = await octokit.request("/user");\n',lang:"js"}),l.a.createElement("p",null,"To use a different authentication strategy, set ",l.a.createElement("code",null,"options.authStrategy"),". Here is an example for GitHub App authentication"),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\nconst { createAppAuth } = require("@octokit/auth-app");\n\nconst appOctokit = new Octokit({\n  authStrategy: createAppAuth,\n  auth: {\n    id: 123,\n    privateKey: process.env.PRIVATE_KEY,\n    // optional: this will make appOctokit authenticate as app (JWT)\n    //           or installation (access token), depending on the request URL\n    installationId: 123,\n  },\n});\n\nconst { data } = await appOctokit.request("/app");\n',lang:"js"}),l.a.createElement("p",null,"The ",l.a.createElement("code",null,".auth()")," method returned by the current authentication strategy can be accessed at ",l.a.createElement("code",null,"octokit.auth()"),". Example"),l.a.createElement(c["a"],{code:'const { token } = await appOctokit.auth({\n  type: "installation",\n  // defaults to `options.auth.installationId` set in the constructor\n  installationId: 123,\n});\n',lang:"js"})))}},GPIl:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-all-gitignore-templates"},l.a.createElement(r["AnchorLink"],{to:"#get-all-gitignore-templates","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all gitignore templates"),l.a.createElement("p",null,"List all templates available to pass as an option when ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user"},"creating a repository"),"."),l.a.createElement(c["a"],{code:"octokit.gitignore.getAllTemplates();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gitignore/#get-all-gitignore-templates"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gitignore-template"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gitignore-template","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gitignore template"),l.a.createElement("p",null,"The API also allows fetching the source of a single template. Use the raw ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," to get the raw contents."),l.a.createElement(c["a"],{code:"octokit.gitignore.getTemplate({\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gitignore/#get-a-gitignore-template"},"GitHub Developer Guide documentation"),".")))}},GXvd:function(e,t,a){var n=a("dG/n");n("species")},GarU:function(e,t){e.exports=function(e,t,a){if(!(e instanceof t))throw TypeError("Incorrect "+(a?a+" ":"")+"invocation");return e}},Gqnk:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-all-codes-of-conduct"},l.a.createElement(r["AnchorLink"],{to:"#get-all-codes-of-conduct","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all codes of conduct"),l.a.createElement(c["a"],{code:"octokit.codesOfConduct.getAllCodesOfConduct();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/codes_of_conduct/#get-all-codes-of-conduct"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-code-of-conduct"},l.a.createElement(r["AnchorLink"],{to:"#get-a-code-of-conduct","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a code of conduct"),l.a.createElement(c["a"],{code:"octokit.codesOfConduct.getConductCode({\n  key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/codes_of_conduct/#get-a-code-of-conduct"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-code-of-conduct-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-the-code-of-conduct-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the code of conduct for a repository"),l.a.createElement("p",null,"Returns the contents of the repository's code of conduct file, if one is detected."),l.a.createElement("p",null,"A code of conduct is detected if there is a file named ",l.a.createElement("code",null,"CODE_OF_CONDUCT")," in the root directory of the repository. GitHub detects which code of conduct it is using fuzzy matching."),l.a.createElement(c["a"],{code:"octokit.codesOfConduct.getForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/codes_of_conduct/#get-the-code-of-conduct-for-a-repository"},"GitHub Developer Guide documentation"),".")))}},Gytx:function(e,t){e.exports=function(e,t,a,n){var l=a?a.call(n,e,t):void 0;if(void 0!==l)return!!l;if(e===t)return!0;if("object"!==typeof e||!e||"object"!==typeof t||!t)return!1;var r=Object.keys(e),c=Object.keys(t);if(r.length!==c.length)return!1;for(var o=Object.prototype.hasOwnProperty.bind(t),i=0;i<r.length;i++){var s=r[i];if(!o(s))return!1;var u=e[s],m=t[s];if(l=a?a.call(n,u,m,s):void 0,!1===l||void 0===l&&u!==m)return!1}return!0}},"H+LF":function(e,t,a){"use strict";var n=a("bWFh"),l=a("rKzb");n("WeakSet",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),l)},H6r7:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-a-license"},l.a.createElement(r["AnchorLink"],{to:"#get-a-license","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a license"),l.a.createElement(c["a"],{code:"octokit.licenses.get({\n  license,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"license"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/licenses/#get-a-license"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-commonly-used-licenses"},l.a.createElement(r["AnchorLink"],{to:"#get-all-commonly-used-licenses","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all commonly used licenses"),l.a.createElement(c["a"],{code:"octokit.licenses.getAllCommonlyUsed();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"featured"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/licenses/#get-all-commonly-used-licenses"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-license-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-the-license-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the license for a repository"),l.a.createElement("p",null,"This method returns the contents of the repository's license file, if one is detected."),l.a.createElement("p",null,"Similar to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-content"},"Get repository content"),", this method also supports ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types"},"custom media types")," for retrieving the raw license content or rendered license HTML."),l.a.createElement(c["a"],{code:"octokit.licenses.getForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/licenses/#get-the-license-for-a-repository"},"GitHub Developer Guide documentation"),".")))}},HAuM:function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},HH4o:function(e,t,a){var n=a("tiKp"),l=n("iterator"),r=!1;try{var c=0,o={next:function(){return{done:!!c++}},return:function(){r=!0}};o[l]=function(){return this},Array.from(o,(function(){throw 2}))}catch(i){}e.exports=function(e,t){if(!t&&!r)return!1;var a=!1;try{var n={};n[l]=function(){return{next:function(){return{done:a=!0}}}},e(n)}catch(i){}return a}},HNyW:function(e,t,a){var n=a("NC/Y");e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(n)},HYAF:function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on "+e);return e}},Hd5f:function(e,t,a){var n=a("0Dky"),l=a("tiKp"),r=a("LQDL"),c=l("species");e.exports=function(e){return r>=51||!n((function(){var t=[],a=t.constructor={};return a[c]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},HiXI:function(e,t,a){"use strict";var n=a("I+eb"),l=a("WKiH").end,r=a("yNLB"),c=r("trimEnd"),o=c?function(){return l(this)}:"".trimEnd;n({target:"String",proto:!0,forced:c},{trimEnd:o,trimRight:o})},HsHA:function(e,t){var a=Math.log;e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:a(1+e)}},"I+eb":function(e,t,a){var n=a("2oRo"),l=a("Bs8V").f,r=a("kRJp"),c=a("busE"),o=a("zk60"),i=a("6JNq"),s=a("lMq5");e.exports=function(e,t){var a,u,m,d,E,p,h=e.target,g=e.global,b=e.stat;if(u=g?n:b?n[h]||o(h,{}):(n[h]||{}).prototype,u)for(m in t){if(E=t[m],e.noTargetGet?(p=l(u,m),d=p&&p.value):d=u[m],a=s(g?m:h+(b?".":"#")+m,e.forced),!a&&void 0!==d){if(typeof E===typeof d)continue;i(E,d)}(e.sham||d&&d.sham)&&r(E,"sham",!0),c(u,m,E,e)}}},I1Gw:function(e,t,a){var n=a("dG/n");n("split")},I8vh:function(e,t,a){var n=a("ppGB"),l=Math.max,r=Math.min;e.exports=function(e,t){var a=n(e);return a<0?l(a+t,0):r(a,t)}},I9xj:function(e,t,a){var n=a("1E5z");n(Math,"Math",!0)},"IL/d":function(e,t,a){"use strict";var n=a("iqeF"),l=a("67WC").exportTypedArrayStaticMethod,r=a("oHi+");l("from",r,n)},Ijbi:function(e,t,a){var n=a("WkPL");function l(e){if(Array.isArray(e))return n(e)}e.exports=l},ImZN:function(e,t,a){var n=a("glrk"),l=a("6VoE"),r=a("UMSQ"),c=a("A2ZE"),o=a("NaFW"),i=a("m92n"),s=function(e,t){this.stopped=e,this.result=t},u=e.exports=function(e,t,a,u,m){var d,E,p,h,g,b,f,y=c(t,a,u?2:1);if(m)d=e;else{if(E=o(e),"function"!=typeof E)throw TypeError("Target is not iterable");if(l(E)){for(p=0,h=r(e.length);h>p;p++)if(g=u?y(n(f=e[p])[0],f[1]):y(e[p]),g&&g instanceof s)return g;return new s(!1)}d=E.call(e)}b=d.next;while(!(f=b.call(d)).done)if(g=i(d,y,f.value,u),"object"==typeof g&&g&&g instanceof s)return g;return new s(!1)};u.stop=function(e){return new s(!0,e)}},"IvW+":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"block-a-user-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#block-a-user-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Block a user from an organization"),l.a.createElement(c["a"],{code:"octokit.orgs.blockUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#block-a-user-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"cancel-an-organization-invitation"},l.a.createElement(r["AnchorLink"],{to:"#cancel-an-organization-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Cancel an organization invitation"),l.a.createElement("p",null,"Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),"."),l.a.createElement(c["a"],{code:"octokit.orgs.cancelInvitation({\n  org,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#cancel-an-organization-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-is-blocked-by-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-is-blocked-by-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user is blocked by an organization"),l.a.createElement(c["a"],{code:"octokit.orgs.checkBlockedUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#check-if-a-user-is-blocked-by-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#check-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check organization membership for a user"),l.a.createElement("p",null,"Check if a user is, publicly or privately, a member of the organization."),l.a.createElement(c["a"],{code:"octokit.orgs.checkMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#check-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-public-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#check-public-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check public organization membership for a user"),l.a.createElement(c["a"],{code:"octokit.orgs.checkPublicMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#check-public-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"convert-an-organization-member-to-outside-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#convert-an-organization-member-to-outside-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Convert an organization member to outside collaborator"),l.a.createElement("p",null,"When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/"},"Converting an organization member to an outside collaborator"),'".'),l.a.createElement(c["a"],{code:"octokit.orgs.convertMemberToOutsideCollaborator({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-invitation"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization invitation"),l.a.createElement("p",null,"Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.orgs.createInvitation({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitee_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required unless you provide ",l.a.createElement("code",null,"email")),". GitHub user ID for the person you are inviting."))),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required unless you provide ",l.a.createElement("code",null,"invitee_id")),". Email address of the person you are inviting, which can be an existing GitHub user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify role for new member. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"direct_member")," - Non-owner organization members with ability to see other members and join teams by invitation.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"billing_manager")," - Non-owner organization members with ability to manage the billing settings of your organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify IDs for the teams you want to invite new members to."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#create-an-organization-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization webhook"),l.a.createElement("p",null,"Here's how you can create a hook that posts payloads in JSON format:"),l.a.createElement(c["a"],{code:"octokit.orgs.createWebhook({\n        org,\nname,\nconfig,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,'Must be passed as "web".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#create-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config.password"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#create-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an organization webhook"),l.a.createElement(c["a"],{code:"octokit.orgs.deleteWebhook({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#delete-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization"),l.a.createElement("p",null,"To see many of the organization response values, you need to be an authenticated organization owner with the ",l.a.createElement("code",null,"admin:org")," scope. When the value of ",l.a.createElement("code",null,"two_factor_requirement_enabled")," is ",l.a.createElement("code",null,"true"),", the organization requires all members, billing managers, and outside collaborators to enable ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/"},"two-factor authentication"),"."),l.a.createElement("p",null,"GitHub Apps with the ",l.a.createElement("code",null,"Organization plan")," permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/"},"Authenticating with GitHub Apps"),"\" for details. For an example response, see 'Response with GitHub plan information' below.\""),l.a.createElement(c["a"],{code:"octokit.orgs.get({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#get-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization membership for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.getMembershipForAuthenticatedUser({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get organization membership for a user"),l.a.createElement("p",null,"In order to get a user's membership with an organization, the authenticated user must be an organization member."),l.a.createElement(c["a"],{code:"octokit.orgs.getMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization webhook"),l.a.createElement("p",null,"Returns a webhook configured in an organization. To get only the webhook ",l.a.createElement("code",null,"config"),' properties, see "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#get-a-webhook-configuration-for-an-organization"},"Get a webhook configuration for an organization"),'."'),l.a.createElement(c["a"],{code:"octokit.orgs.getWebhook({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-webhook-configuration-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-a-webhook-configuration-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a webhook configuration for an organization"),l.a.createElement("p",null,"Returns the webhook configuration for an organization. To get more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#get-an-organization-webhook"},"Get an organization webhook "),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"admin:org_hook")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"organization_hooks:read")," permission."),l.a.createElement(c["a"],{code:"octokit.orgs.getWebhookConfigForOrg({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs#get-a-webhook-configuration-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organizations"},l.a.createElement(r["AnchorLink"],{to:"#list-organizations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organizations"),l.a.createElement("p",null,"Lists all organizations, in the order that they were created on GitHub."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Pagination is powered exclusively by the ",l.a.createElement("code",null,"since")," parameter. Use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header"},"Link header")," to get the URL for the next page of organizations."),l.a.createElement(c["a"],{code:"octokit.orgs.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An organization ID. Only return organizations with an ID greater than this ID."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-organizations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-app-installations-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-app-installations-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List app installations for an organization"),l.a.createElement("p",null,"Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with ",l.a.createElement("code",null,"admin:read")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.orgs.listAppInstallations({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-app-installations-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-users-blocked-by-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-users-blocked-by-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List users blocked by an organization"),l.a.createElement("p",null,"List the users blocked by an organization."),l.a.createElement(c["a"],{code:"octokit.orgs.listBlockedUsers({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-users-blocked-by-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-failed-organization-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-failed-organization-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List failed organization invitations"),l.a.createElement("p",null,"The return hash contains ",l.a.createElement("code",null,"failed_at")," and ",l.a.createElement("code",null,"failed_reason")," fields which represent the time at which the invitation failed and the reason for the failure."),l.a.createElement(c["a"],{code:"octokit.orgs.listFailedInvitations({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-failed-organization-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organizations-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organizations-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organizations for the authenticated user"),l.a.createElement("p",null,"List organizations for the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with ",l.a.createElement("code",null,"read:org")," scope, you can publicize your organization membership with ",l.a.createElement("code",null,"user")," scope, etc.). Therefore, this API requires at least ",l.a.createElement("code",null,"user")," or ",l.a.createElement("code",null,"read:org")," scope. OAuth requests with insufficient scope receive a ",l.a.createElement("code",null,"403 Forbidden")," response."),l.a.createElement(c["a"],{code:"octokit.orgs.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-organizations-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organizations-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organizations-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organizations for a user"),l.a.createElement("p",null,"List ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/publicizing-or-concealing-organization-membership"},"public organization memberships")," for the specified user."),l.a.createElement("p",null,"This method only lists ",l.a.createElement("em",null,"public")," memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user"},"List organizations for the authenticated user")," API instead."),l.a.createElement(c["a"],{code:"octokit.orgs.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#list-organizations-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-invitation-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-invitation-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization invitation teams"),l.a.createElement("p",null,"List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner."),l.a.createElement(c["a"],{code:"octokit.orgs.listInvitationTeams({\n  org,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-invitation-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-members"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-members","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization members"),l.a.createElement("p",null,"List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned."),l.a.createElement(c["a"],{code:"octokit.orgs.listMembers({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter members returned in the list. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"2fa_disabled")," - Members without ",l.a.createElement(r["Link"],{to:"https://github.com/blog/1614-two-factor-authentication"},"two-factor authentication")," enabled. Available for organization owners.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - All members the authenticated user can see."))),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter members returned by their role. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - All members of the organization, regardless of role.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - Organization owners.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - Non-owner organization members."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-members"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-memberships-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-memberships-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization memberships for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.listMembershipsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the memberships to return. Can be either ",l.a.createElement("code",null,"active")," or ",l.a.createElement("code",null,"pending"),". If not specified, the API returns both active and pending memberships."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-outside-collaborators-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-outside-collaborators-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List outside collaborators for an organization"),l.a.createElement("p",null,"List all users who are outside collaborators of an organization."),l.a.createElement(c["a"],{code:"octokit.orgs.listOutsideCollaborators({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter the list of outside collaborators. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"2fa_disabled"),": Outside collaborators without ",l.a.createElement(r["Link"],{to:"https://github.com/blog/1614-two-factor-authentication"},"two-factor authentication")," enabled.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All outside collaborators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-outside-collaborators-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pending-organization-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-pending-organization-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pending organization invitations"),l.a.createElement("p",null,"The return hash contains a ",l.a.createElement("code",null,"role")," field which refers to the Organization Invitation role and will be one of the following values: ",l.a.createElement("code",null,"direct_member"),", ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"billing_manager"),", ",l.a.createElement("code",null,"hiring_manager"),", or ",l.a.createElement("code",null,"reinstate"),". If the invitee is not a GitHub member, the ",l.a.createElement("code",null,"login")," field in the return hash will be ",l.a.createElement("code",null,"null"),"."),l.a.createElement(c["a"],{code:"octokit.orgs.listPendingInvitations({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-pending-organization-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-organization-members"},l.a.createElement(r["AnchorLink"],{to:"#list-public-organization-members","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public organization members"),l.a.createElement("p",null,"Members of an organization can choose to have their membership publicized or not."),l.a.createElement(c["a"],{code:"octokit.orgs.listPublicMembers({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-public-organization-members"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-webhooks"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-webhooks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization webhooks"),l.a.createElement(c["a"],{code:"octokit.orgs.listWebhooks({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#list-organization-webhooks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"ping-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#ping-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Ping an organization webhook"),l.a.createElement("p",null,"This will trigger a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/#ping-event"},"ping event")," to be sent to the hook."),l.a.createElement(c["a"],{code:"octokit.orgs.pingWebhook({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#ping-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-an-organization-member"},l.a.createElement(r["AnchorLink"],{to:"#remove-an-organization-member","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove an organization member"),l.a.createElement("p",null,"Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories."),l.a.createElement(c["a"],{code:"octokit.orgs.removeMember({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-an-organization-member"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#remove-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove organization membership for a user"),l.a.createElement("p",null,"In order to remove a user's membership with an organization, the authenticated user must be an organization owner."),l.a.createElement("p",null,"If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases."),l.a.createElement(c["a"],{code:"octokit.orgs.removeMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-outside-collaborator-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#remove-outside-collaborator-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove outside collaborator from an organization"),l.a.createElement("p",null,"Removing a user from this list will remove them from all the organization's repositories."),l.a.createElement(c["a"],{code:"octokit.orgs.removeOutsideCollaborator({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-outside-collaborator-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-public-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#remove-public-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove public organization membership for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.removePublicMembershipForAuthenticatedUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-organization-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#set-organization-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set organization membership for a user"),l.a.createElement("p",null,"Only authenticated organization owners can add a member to the organization or update the member's role."),l.a.createElement("ul",null,l.a.createElement("li",null,"If the authenticated user is ",l.a.createElement("em",null,"adding")," a member to the organization, the invited user will receive an email inviting them to the organization. The user's ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user"},"membership status")," will be ",l.a.createElement("code",null,"pending")," until they accept the invitation."),l.a.createElement("li",null,"Authenticated users can ",l.a.createElement("em",null,"update")," a user's membership by passing the ",l.a.createElement("code",null,"role")," parameter. If the authenticated user changes a member's role to ",l.a.createElement("code",null,"admin"),", the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to ",l.a.createElement("code",null,"member"),", no email will be sent.")),l.a.createElement("p",null,l.a.createElement("strong",null,"Rate limits")),l.a.createElement("p",null,"To prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period."),l.a.createElement(c["a"],{code:"octokit.orgs.setMembershipForUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The role to give the user in the organization. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - The user will become an owner of the organization.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - The user will become a non-owner member of the organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#set-organization-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-public-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#set-public-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set public organization membership for the authenticated user"),l.a.createElement("p",null,"The user can publicize their own membership. (A user cannot publicize the membership for another user.)"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.orgs.setPublicMembershipForAuthenticatedUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unblock-a-user-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#unblock-a-user-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unblock a user from an organization"),l.a.createElement(c["a"],{code:"octokit.orgs.unblockUser({\n  org,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#unblock-a-user-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#update-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an organization"),l.a.createElement("p",null,l.a.createElement("strong",null,"Parameter Deprecation Notice:")," GitHub will replace and discontinue ",l.a.createElement("code",null,"members_allowed_repository_creation_type")," in favor of more granular permissions. The new input parameters are ",l.a.createElement("code",null,"members_can_create_public_repositories"),", ",l.a.createElement("code",null,"members_can_create_private_repositories")," for all organizations and ",l.a.createElement("code",null,"members_can_create_internal_repositories")," for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the ",l.a.createElement(r["Link"],{to:"https://developer.github.com/changes/2019-12-03-internal-visibility-changes"},"blog post"),"."),l.a.createElement("p",null,"Enables an authenticated organization owner with the ",l.a.createElement("code",null,"admin:org")," scope to update the organization's profile and member privileges."),l.a.createElement(c["a"],{code:"octokit.orgs.update({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"billing_email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Billing email address. This address is not publicized."))),l.a.createElement("tr",null,l.a.createElement("td",null,"company"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The company name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The publicly visible email address."))),l.a.createElement("tr",null,l.a.createElement("td",null,"twitter_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The Twitter username of the company."))),l.a.createElement("tr",null,l.a.createElement("td",null,"location"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The location."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The shorthand name of the company."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the company."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_organization_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether an organization can use organization projects."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_repository_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether repositories that belong to the organization can use repository projects."))),l.a.createElement("tr",null,l.a.createElement("td",null,"default_repository_permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Default permission level members have for organization repositories:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"read")," - can pull, but not push to or administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"write")," - can pull and push, but not administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - can pull, push, and administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"none")," - no permissions granted by default."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles the ability of non-admin organization members to create repositories. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," A parameter can override this parameter. See ",l.a.createElement("code",null,"members_allowed_repository_creation_type")," in this table for details. ",l.a.createElement("strong",null,"Note:")," A parameter can override this parameter. See ",l.a.createElement("code",null,"members_allowed_repository_creation_type")," in this table for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_internal_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create internal repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create internal repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization"},"Restricting repository creation in your organization"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_private_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create private repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create private repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization"},"Restricting repository creation in your organization"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_public_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create public repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - only organization owners can create public repositories.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"true"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization"},"Restricting repository creation in your organization"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_allowed_repository_creation_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies which types of repositories non-admin organization members can create. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - all organization members can create public and private repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"private")," - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"none")," - only admin members can create repositories.",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in ",l.a.createElement("code",null,"members_can_create_repositories"),". See the parameter deprecation notice in the operation description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create GitHub Pages sites. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create GitHub Pages sites.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - no organization members can create GitHub Pages sites. Existing published sites will not be impacted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_public_pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create public GitHub Pages sites. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create public GitHub Pages sites.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - no organization members can create public GitHub Pages sites. Existing published sites will not be impacted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"members_can_create_private_pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Toggles whether organization members can create private GitHub Pages sites. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"true")," - all organization members can create private GitHub Pages sites.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"false")," - no organization members can create private GitHub Pages sites. Existing published sites will not be impacted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"blog"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs/#update-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-organization-membership-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#update-an-organization-membership-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an organization membership for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.orgs.updateMembershipForAuthenticatedUser({\n  org,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The state that the membership should be in. Only ",l.a.createElement("code",null,'"active"')," will be accepted."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-organization-webhook"},l.a.createElement(r["AnchorLink"],{to:"#update-an-organization-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an organization webhook"),l.a.createElement("p",null,"Updates a webhook configured in an organization. When you update a webhook, the ",l.a.createElement("code",null,"secret")," will be overwritten. If you previously had a ",l.a.createElement("code",null,"secret")," set, you must provide the same ",l.a.createElement("code",null,"secret")," or set a new ",l.a.createElement("code",null,"secret")," or the secret will be removed. If you are only updating individual webhook ",l.a.createElement("code",null,"config"),' properties, use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#update-a-webhook-configuration-for-an-organization"},"Update a webhook configuration for an organization"),'."'),l.a.createElement(c["a"],{code:"octokit.orgs.updateWebhook({\n        org,\nhook_id,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#update-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/orgs#update-an-organization-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-webhook-configuration-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#update-a-webhook-configuration-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a webhook configuration for an organization"),l.a.createElement("p",null,"Updates the webhook configuration for an organization. To update more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#update-an-organization-webhook"},"Update an organization webhook "),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"admin:org_hook")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"organization_hooks:write")," permission."),l.a.createElement(c["a"],{code:"octokit.orgs.updateWebhookConfigForOrg({\n  org,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/orgs#update-a-webhook-configuration-for-an-organization"},"GitHub Developer Guide documentation"),".")))}},J4zp:function(e,t,a){var n=a("wTVA"),l=a("m0LI"),r=a("ZhPi"),c=a("wkBT");function o(e,t){return n(e)||l(e,t)||r(e,t)||c()}e.exports=o},"J6+M":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"You can customize and extend Octokit\u2019s functionality using plugins"),l.a.createElement(c["a"],{code:'// index.js\nconst Octokit = require("@octokit/rest");\nconst MyOctokit = Octokit.plugin(\n  require("./lib/my-plugin"),\n  require("octokit-plugin-example")\n);\n\n// lib/my-plugin.js\nmodule.exports = (octokit, options = { greeting: "Hello" }) => {\n  // hook into the request lifecycle\n  octokit.hook.wrap("request", async (request, options) => {\n    const time = Date.now();\n    const response = await request(options);\n    octokit.log.info(\n      `${options.method} ${options.url} \u2013 ${response.status} in ${\n        Date.now() - time\n      }ms`\n    );\n    return response;\n  });\n\n  // add a custom method: octokit.helloWorld()\n  return {\n    helloWorld: () => console.log(`${options.greeting}, world!`),\n  };\n};\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,".plugin")," accepts a function or an array of functions."),l.a.createElement("p",null,"We recommend using ",l.a.createElement(r["AnchorLink"],{to:"#logging"},"Octokit\u2019s log methods")," to help users of your plugin with debugging."),l.a.createElement("p",null,"You can add new methods to the ",l.a.createElement("code",null,"octokit")," instance passed as the first argument to the plugin function. The 2nd argument is the options object passed to the constructor when instantiating the ",l.a.createElement("code",null,"octokit")," client."),l.a.createElement(c["a"],{code:'const octokit = new MyOctokit({ greeting: "Hola" });\noctokit.helloWorld();\n// Hola, world!\n',lang:"js"})))}},JBu9:function(e,t,a){"use strict";a.r(t);var n=a("ODXe"),l=a("q1tI"),r=a.n(l),c=a("dEAq"),o=a("MZF8"),i=(a("OxFa"),e=>{var t=e.location,a=Object(l["useContext"])(c["context"]),n=a.base,i=a.locale,s=a.config.locales,u=s.find((e=>{var t=e.name;return t!==i}));function m(e){var a=n.replace("/".concat(i),""),l=t.pathname.replace(n,a)||"/";if(e!==s[0].name){var r="".concat(a,"/").concat(e).replace(/\/\//,"/"),c=t.pathname.replace(n.replace(/^\/$/,"//"),"");return"".concat(r).concat(c).replace(/\/$/,"")}return l}return u?r.a.createElement("div",{className:"__dumi-default-locale-select","data-locale-count":s.length},s.length>2?r.a.createElement("select",{value:i,onChange:e=>o["a"].push(m(e.target.value))},s.map((e=>r.a.createElement("option",{value:e.name,key:e.name},e.label)))):r.a.createElement(c["Link"],{to:m(u.name)},u.label)):null}),s=i,u=(a("jp8u"),e=>{var t=e.onMobileMenuClick,a=e.navPrefix,n=e.location,o=Object(l["useContext"])(c["context"]),i=o.base,u=o.config,m=u.mode,d=u.title,E=u.logo,p=o.nav;return r.a.createElement("div",{className:"__dumi-default-navbar","data-mode":m},r.a.createElement("button",{className:"__dumi-default-navbar-toggle",onClick:t}),r.a.createElement(c["Link"],{className:"__dumi-default-navbar-logo",style:{backgroundImage:E&&"url('".concat(E,"')")},to:i,"data-plaintext":!1===E||void 0},d),r.a.createElement("nav",null,a,p.map((e=>{var t,a=Boolean(null===(t=e.children)||void 0===t?void 0:t.length)&&r.a.createElement("ul",null,e.children.map((e=>r.a.createElement("li",{key:e.path},r.a.createElement(c["NavLink"],{to:e.path},e.title)))));return r.a.createElement("span",{key:e.title||e.path},e.path?r.a.createElement(c["NavLink"],{to:e.path,key:e.path},e.title):e.title,a)})),r.a.createElement(s,{location:n})))}),m=u,d=a("wx14"),E=a("Ff2n"),p=(a("mAF5"),e=>{var t=e.slugs,a=Object(E["a"])(e,["slugs"]);return r.a.createElement("ul",Object(d["a"])({role:"slug-list"},a),t.filter((e=>{var t=e.depth;return t>1&&t<4})).map((e=>r.a.createElement("li",{key:e.heading,title:e.value,"data-depth":e.depth},r.a.createElement(c["AnchorLink"],{to:"#".concat(e.heading)},r.a.createElement("span",null,e.value))))))}),h=p,g=(a("hQjr"),e=>{var t=e.mobileMenuCollapsed,a=e.location,n=Object(l["useContext"])(c["context"]),o=n.config,i=o.logo,u=o.title,m=o.description,d=o.mode,E=o.repository.url,p=n.menu,g=n.nav,b=n.base,f=n.meta,y=Boolean((f.hero||f.features||f.gapless)&&"site"===d)||!1===f.sidemenu||void 0;return r.a.createElement("div",{className:"__dumi-default-menu","data-mode":d,"data-hidden":y,"data-mobile-show":!t||void 0},r.a.createElement("div",{className:"__dumi-default-menu-inner"},r.a.createElement("div",{className:"__dumi-default-menu-header"},r.a.createElement(c["Link"],{to:b,className:"__dumi-default-menu-logo",style:{backgroundImage:i&&"url('".concat(i,"')")}}),r.a.createElement("h1",null,u),r.a.createElement("p",null,m),/github\.com/.test(E)&&"doc"===d&&r.a.createElement("p",null,r.a.createElement("object",{type:"image/svg+xml",data:"https://img.shields.io/github/stars".concat(E.match(/((\/[^\/]+){2})$/)[1],"?style=social")}))),g.length?r.a.createElement("div",{className:"__dumi-default-menu-mobile-area"},r.a.createElement("ul",{className:"__dumi-default-menu-nav-list"},g.map((e=>{var t,a=Boolean(null===(t=e.children)||void 0===t?void 0:t.length)&&r.a.createElement("ul",null,e.children.map((e=>r.a.createElement("li",{key:e.path||e.title},r.a.createElement(c["NavLink"],{to:e.path},e.title)))));return r.a.createElement("li",{key:e.path||e.title},e.path?r.a.createElement(c["NavLink"],{to:e.path},e.title):e.title,a)}))),r.a.createElement(s,{location:a})):r.a.createElement("div",{className:"__dumi-default-menu-doc-locale"},r.a.createElement(s,{location:a})),r.a.createElement("ul",{className:"__dumi-default-menu-list"},!y&&p.map((e=>{var t,n=Boolean(null===(t=f.slugs)||void 0===t?void 0:t.length),l=e.children&&Boolean(e.children.length),o="menu"===f.toc&&!l&&n&&e.path===a.pathname;return r.a.createElement("li",{key:e.path||e.title},r.a.createElement(c["NavLink"],{to:e.path,exact:!(e.children&&e.children.length)},e.title),Boolean(e.children&&e.children.length)&&r.a.createElement("ul",null,e.children.map((e=>r.a.createElement("li",{key:e.path},r.a.createElement(c["NavLink"],{to:e.path,exact:!0},r.a.createElement("span",null,e.title)),Boolean("menu"===f.toc&&"undefined"!==typeof window&&e.path===a.pathname&&n)&&r.a.createElement(h,{slugs:f.slugs}))))),o&&r.a.createElement(h,{slugs:f.slugs}))})))))}),b=g,f=(a("KAdo"),()=>{var e=Object(l["useState"])(""),t=Object(n["a"])(e,2),a=t[0],o=t[1],i=Object(l["useState"])([]),s=Object(n["a"])(i,2),u=s[0],m=s[1],E=Object(l["useRef"])(),p=Object(c["useSearch"])(a);return Object(l["useEffect"])((()=>{Array.isArray(p)?m(p):"function"===typeof p&&p(".".concat(E.current.className))}),[p]),r.a.createElement("div",{className:"__dumi-default-search"},r.a.createElement("input",Object(d["a"])({className:"__dumi-default-search-input",type:"search",ref:E},Array.isArray(p)?{value:a,onChange:e=>o(e.target.value)}:{})),r.a.createElement("ul",null,u.map((e=>{var t;return r.a.createElement("li",{key:e.path,onClick:()=>o("")},r.a.createElement(c["AnchorLink"],{to:e.path},(null===(t=e.parent)||void 0===t?void 0:t.title)&&r.a.createElement("span",null,e.parent.title),e.title))}))))}),y=(a("7ZSp"),e=>r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"__dumi-default-layout-hero"},e.image&&r.a.createElement("img",{src:e.image}),r.a.createElement("h1",null,e.title),r.a.createElement("div",{dangerouslySetInnerHTML:{__html:e.desc}}),e.actions&&e.actions.map((e=>r.a.createElement(c["Link"],{to:e.link,key:e.text},r.a.createElement("button",{type:"button"},e.text))))))),k=e=>r.a.createElement("div",{className:"__dumi-default-layout-features"},e.map((e=>r.a.createElement("dl",{key:e.title,style:{backgroundImage:e.icon?"url(".concat(e.icon,")"):void 0}},e.link?r.a.createElement(c["Link"],{to:e.link},r.a.createElement("dt",null,e.title)):r.a.createElement("dt",null,e.title),r.a.createElement("dd",{dangerouslySetInnerHTML:{__html:e.desc}}))))),v=e=>{var t,a,o=e.children,i=e.location,s=Object(l["useContext"])(c["context"]),u=s.config,d=u.mode,E=u.repository,p=s.meta,g=s.locale,v=E.url,w=E.branch,L=E.platform,A=Object(l["useState"])(!0),x=Object(n["a"])(A,2),_=x[0],G=x[1],P="site"===d,I=P&&p.hero,S=P&&p.features,T=!1!==p.sidemenu&&!I&&!S&&!p.gapless,N=!I&&!S&&Boolean(null===(t=p.slugs)||void 0===t?void 0:t.length)&&("content"===p.toc||void 0===p.toc)&&!p.gapless,j=/^zh|cn$/i.test(g),H=new Date(p.updatedTime).toLocaleString([],{hour12:!1}),q={github:"GitHub",gitlab:"GitLab"}[(null===(a=(v||"").match(/(github|gitlab)/))||void 0===a?void 0:a[1])||"nothing"]||L;return r.a.createElement("div",{className:"__dumi-default-layout","data-route":i.pathname,"data-show-sidemenu":String(T),"data-show-slugs":String(N),"data-site-mode":P,"data-gapless":String(!!p.gapless),onClick:()=>{_||G(!0)}},r.a.createElement(m,{location:i,navPrefix:r.a.createElement(f,null),onMobileMenuClick:e=>{G((e=>!e)),e.stopPropagation()}}),r.a.createElement(b,{mobileMenuCollapsed:_,location:i}),N&&r.a.createElement(h,{slugs:p.slugs,className:"__dumi-default-layout-toc"}),I&&y(p.hero),S&&k(p.features),r.a.createElement("div",{className:"__dumi-default-layout-content"},o,!I&&!S&&p.filePath&&!p.gapless&&r.a.createElement("div",{className:"__dumi-default-layout-footer-meta"},q&&r.a.createElement(c["Link"],{to:"".concat(v,"/edit/").concat(w,"/").concat(p.filePath)},j?"\u5728 ".concat(q," \u4e0a\u7f16\u8f91\u6b64\u9875"):"Edit this doc on ".concat(q)),r.a.createElement("span",{"data-updated-text":j?"\u6700\u540e\u66f4\u65b0\u65f6\u95f4\uff1a":"Last update: "},H)),(I||S)&&p.footer&&r.a.createElement("div",{className:"__dumi-default-layout-footer",dangerouslySetInnerHTML:{__html:p.footer}})))};t["default"]=v},JBy8:function(e,t,a){var n=a("yoRg"),l=a("eDl+"),r=l.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,r)}},JRIQ:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"disable-a-selected-organization-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#disable-a-selected-organization-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable a selected organization for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.disableSelectedOrganizationGithubActionsEnterprise({\n  enterprise,\n  org_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"org_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of an organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#disable-a-selected-organization-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-a-selected-organization-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#enable-a-selected-organization-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable a selected organization for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.enableSelectedOrganizationGithubActionsEnterprise({\n  enterprise,\n  org_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"org_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of an organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#enable-a-selected-organization-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-allowed-actions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#get-allowed-actions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get allowed actions for an enterprise"),l.a.createElement("p",null,"Gets the selected actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.getAllowedActionsEnterprise({\n  enterprise,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#get-allowed-actions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for an enterprise"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.getGithubActionsPermissionsEnterprise({\n  enterprise,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#get-github-actions-permissions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-selected-organizations-enabled-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#list-selected-organizations-enabled-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List selected organizations enabled for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.listSelectedOrganizationsEnabledGithubActionsEnterprise(\n  {\n    enterprise,\n  }\n);\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#list-selected-organizations-enabled-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-allowed-actions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#set-allowed-actions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set allowed actions for an enterprise"),l.a.createElement("p",null,"Sets the actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.setAllowedActionsEnterprise({\n  enterprise,\n  github_owned_allowed,\n  verified_allowed,\n  patterns_allowed,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"github_owned_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub-owned actions are allowed. For example, this includes the actions in the ",l.a.createElement("code",null,"actions")," organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"verified_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether actions in GitHub Marketplace from verified creators are allowed. Set to ",l.a.createElement("code",null,"true")," to allow all GitHub Marketplace actions by verified creators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"patterns_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, ",l.a.createElement("code",null,"monalisa/octocat@*"),", ",l.a.createElement("code",null,"monalisa/octocat@v2"),", ",l.a.createElement("code",null,"monalisa/*"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#set-allowed-actions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-github-actions-permissions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set GitHub Actions permissions for an enterprise"),l.a.createElement("p",null,"Sets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.setGithubActionsPermissionsEnterprise({\n  enterprise,\n  enabled_organizations,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"enabled_organizations"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"none"),", or ",l.a.createElement("code",null,"selected"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allowed_actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions policy that controls the actions that are allowed to run. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"local_only"),", or ",l.a.createElement("code",null,"selected"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#set-github-actions-permissions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-selected-organizations-enabled-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#set-selected-organizations-enabled-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set selected organizations enabled for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.setSelectedOrganizationsEnabledGithubActionsEnterprise({\n  enterprise,\n  selected_organization_ids,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_organization_ids"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"List of organization IDs to enable for GitHub Actions."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#set-selected-organizations-enabled-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),".")))}},JTJg:function(e,t,a){"use strict";var n=a("I+eb"),l=a("WjRb"),r=a("HYAF"),c=a("qxPZ");n({target:"String",proto:!0,forced:!c("includes")},{includes:function(e){return!!~String(r(this)).indexOf(l(e),arguments.length>1?arguments[1]:void 0)}})},JfAA:function(e,t,a){"use strict";var n=a("busE"),l=a("glrk"),r=a("0Dky"),c=a("rW0t"),o="toString",i=RegExp.prototype,s=i[o],u=r((function(){return"/a/b"!=s.call({source:"a",flags:"b"})})),m=s.name!=o;(u||m)&&n(RegExp.prototype,o,(function(){var e=l(this),t=String(e.source),a=e.flags,n=String(void 0===a&&e instanceof RegExp&&!("flags"in i)?c.call(e):a);return"/"+t+"/"+n}),{unsafe:!0})},JiZb:function(e,t,a){"use strict";var n=a("0GbY"),l=a("m/L8"),r=a("tiKp"),c=a("g6v/"),o=r("species");e.exports=function(e){var t=n(e),a=l.f;c&&t&&!t[o]&&a(t,o,{configurable:!0,get:function(){return this}})}},JjdP:function(e,t,a){"use strict";a.r(t),t["default"]={}},Junv:function(e,t,a){"use strict";var n=a("I+eb"),l=a("6LWA"),r=[].reverse,c=[1,2];n({target:"Array",proto:!0,forced:String(c)===String(c.reverse())},{reverse:function(){return l(this)&&(this.length=this.length),r.call(this)}})},JwUS:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("HAuM"),o=a("WGBp"),i=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{reduce:function(e){var t=r(this),a=o(t),n=arguments.length<2,l=n?void 0:arguments[1];if(c(e),i(a,(function(a){n?(n=!1,l=a):l=e(l,a,a,t)}),void 0,!1,!0),n)throw TypeError("Reduce of empty set with no initial value");return l}})},KAdo:function(e,t,a){},KcUY:function(e,t,a){"use strict";function n(e){return n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var l=u(a("q1tI")),r=i(a("RGYn")),c=i(a("bYHP")),o=i(a("nLCz"));function i(e){return e&&e.__esModule?e:{default:e}}function s(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function u(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!==typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var a={},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var c=l?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(a,r,c):a[r]=e[r]}return a["default"]=e,t&&t.set(e,a),a}function m(e,t){return g(e)||h(e,t)||E(e,t)||d()}function d(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function E(e,t){if(e){if("string"===typeof e)return p(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?p(e,t):void 0}}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function h(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function g(e){if(Array.isArray(e))return e}var b=function(e,t){var a=function(){for(var e,t=arguments.length,a=new Array(t),n=0;n<t;n++)a[n]=arguments[n];var l=a[1].replace(/[^^]\/$/,"");return(null===(e=a[0].find((function(e){var t=e.path;return t===l})))||void 0===e?void 0:e.meta)||{}},n=(0,l.useState)(a(e,t)),r=m(n,2),c=r[0],o=r[1];return(0,l.useLayoutEffect)((function(){o(a(e,t))}),[t]),c},f=function(e,t){var a=function(){for(var t,a=arguments.length,n=new Array(a),l=0;l<a;l++)n[l]=arguments[l];return(null===(t=n[0].find((function(e){return n[1].startsWith("/".concat(e.name))})))||void 0===t?void 0:t.name)||e[0].name},n=(0,l.useState)(a(e,t)),r=m(n,2),c=r[0],o=r[1];return(0,l.useLayoutEffect)((function(){o(a(e,t))}),[t]),c},y=function(e,t,a){var n=function(){for(var e,t=arguments.length,a=new Array(t),n=0;n<t;n++)a[n]=arguments[n];for(var l=a[0].navs[a[1]]||[],r="*",c=l.length-1;c>=0;c-=1){var o=l[c],i=[o].concat(o.children).filter(Boolean),s=i.find((function(e){return e.path&&new RegExp("^".concat(e.path.replace(/\.html$/,""),"(/|.|$)")).test(a[2])}));if(s){r=s.path;break}}return(null===(e=a[0].menus[a[1]])||void 0===e?void 0:e[r])||[]},r=(0,l.useState)(n(e,t,a)),c=m(r,2),o=c[0],i=c[1];return(0,l.useLayoutEffect)((function(){i(n(e,t,a))}),[e.navs,e.menus,t,a]),o},k=function(e,t,a){var n=function(){for(var t=arguments.length,n=new Array(t),l=0;l<t;l++)n[l]=arguments[l];return n[0]===n[1][0].name?n[2].path:"".concat(a.path,"/").concat(e).replace(/\/\//,"/")},r=(0,l.useState)(n(e,t,a)),c=m(r,2),o=c[0],i=c[1];return(0,l.useLayoutEffect)((function(){i(n(e,t,a))}),[e]),o},v=function e(t){var a;return null===(a=t.find((function(t){return!!t.__dumiRoot||!!t.routes&&e(t.routes)})))||void 0===a?void 0:a.routes},w=function(e){var t=e.location,a=e.route,n=e.children,i=t.pathname.replace(a.path.replace(/^\/$/,"//"),""),s=v(e.routes)||[],u=b(s,t.pathname),m=f(r["default"].locales,i),d=y(r["default"],m,t.pathname),E=k(m,r["default"].locales,a);return(0,l.useEffect)((function(){t.hash&&c["default"].scrollToAnchor(decodeURIComponent(t.hash.slice(1)))}),[]),l["default"].createElement(o["default"].Provider,{value:{config:r["default"],meta:u,locale:m,nav:r["default"].navs[m]||[],menu:d,base:E,routes:s}},n)},L=w;t["default"]=L},KhsS:function(e,t,a){var n=a("dG/n");n("match")},KrxN:function(e,t,a){var n=a("I+eb"),l=180/Math.PI;n({target:"Math",stat:!0},{degrees:function(e){return e*l}})},Kz25:function(e,t,a){"use strict";a("PKPk");var n,l=a("I+eb"),r=a("g6v/"),c=a("DTth"),o=a("2oRo"),i=a("N+g0"),s=a("busE"),u=a("GarU"),m=a("UTVS"),d=a("YNrV"),E=a("TfTi"),p=a("ZUd8").codeAt,h=a("X7LM"),g=a("1E5z"),b=a("mGGf"),f=a("afO8"),y=o.URL,k=b.URLSearchParams,v=b.getState,w=f.set,L=f.getterFor("URL"),A=Math.floor,x=Math.pow,_="Invalid authority",G="Invalid scheme",P="Invalid host",I="Invalid port",S=/[A-Za-z]/,T=/[\d+-.A-Za-z]/,N=/\d/,j=/^(0x|0X)/,H=/^[0-7]+$/,q=/^\d+$/,D=/^[\dA-Fa-f]+$/,z=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,C=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,O=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,R=/[\u0009\u000A\u000D]/g,F=function(e,t){var a,n,l;if("["==t.charAt(0)){if("]"!=t.charAt(t.length-1))return P;if(a=M(t.slice(1,-1)),!a)return P;e.host=a}else if(J(e)){if(t=h(t),z.test(t))return P;if(a=U(t),null===a)return P;e.host=a}else{if(C.test(t))return P;for(a="",n=E(t),l=0;l<n.length;l++)a+=$(n[l],W);e.host=a}},U=function(e){var t,a,n,l,r,c,o,i=e.split(".");if(i.length&&""==i[i.length-1]&&i.pop(),t=i.length,t>4)return e;for(a=[],n=0;n<t;n++){if(l=i[n],""==l)return e;if(r=10,l.length>1&&"0"==l.charAt(0)&&(r=j.test(l)?16:8,l=l.slice(8==r?1:2)),""===l)c=0;else{if(!(10==r?q:8==r?H:D).test(l))return e;c=parseInt(l,r)}a.push(c)}for(n=0;n<t;n++)if(c=a[n],n==t-1){if(c>=x(256,5-t))return null}else if(c>255)return null;for(o=a.pop(),n=0;n<a.length;n++)o+=a[n]*x(256,3-n);return o},M=function(e){var t,a,n,l,r,c,o,i=[0,0,0,0,0,0,0,0],s=0,u=null,m=0,d=function(){return e.charAt(m)};if(":"==d()){if(":"!=e.charAt(1))return;m+=2,s++,u=s}while(d()){if(8==s)return;if(":"!=d()){t=a=0;while(a<4&&D.test(d()))t=16*t+parseInt(d(),16),m++,a++;if("."==d()){if(0==a)return;if(m-=a,s>6)return;n=0;while(d()){if(l=null,n>0){if(!("."==d()&&n<4))return;m++}if(!N.test(d()))return;while(N.test(d())){if(r=parseInt(d(),10),null===l)l=r;else{if(0==l)return;l=10*l+r}if(l>255)return;m++}i[s]=256*i[s]+l,n++,2!=n&&4!=n||s++}if(4!=n)return;break}if(":"==d()){if(m++,!d())return}else if(d())return;i[s++]=t}else{if(null!==u)return;m++,s++,u=s}}if(null!==u){c=s-u,s=7;while(0!=s&&c>0)o=i[s],i[s--]=i[u+c-1],i[u+--c]=o}else if(8!=s)return;return i},Y=function(e){for(var t=null,a=1,n=null,l=0,r=0;r<8;r++)0!==e[r]?(l>a&&(t=n,a=l),n=null,l=0):(null===n&&(n=r),++l);return l>a&&(t=n,a=l),t},B=function(e){var t,a,n,l;if("number"==typeof e){for(t=[],a=0;a<4;a++)t.unshift(e%256),e=A(e/256);return t.join(".")}if("object"==typeof e){for(t="",n=Y(e),a=0;a<8;a++)l&&0===e[a]||(l&&(l=!1),n===a?(t+=a?":":"::",l=!0):(t+=e[a].toString(16),a<7&&(t+=":")));return"["+t+"]"}return e},W={},K=d({},W,{" ":1,'"':1,"<":1,">":1,"`":1}),V=d({},K,{"#":1,"?":1,"{":1,"}":1}),Z=d({},V,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),$=function(e,t){var a=p(e,0);return a>32&&a<127&&!m(t,e)?e:encodeURIComponent(e)},Q={ftp:21,file:null,http:80,https:443,ws:80,wss:443},J=function(e){return m(Q,e.scheme)},X=function(e){return""!=e.username||""!=e.password},ee=function(e){return!e.host||e.cannotBeABaseURL||"file"==e.scheme},te=function(e,t){var a;return 2==e.length&&S.test(e.charAt(0))&&(":"==(a=e.charAt(1))||!t&&"|"==a)},ae=function(e){var t;return e.length>1&&te(e.slice(0,2))&&(2==e.length||"/"===(t=e.charAt(2))||"\\"===t||"?"===t||"#"===t)},ne=function(e){var t=e.path,a=t.length;!a||"file"==e.scheme&&1==a&&te(t[0],!0)||t.pop()},le=function(e){return"."===e||"%2e"===e.toLowerCase()},re=function(e){return e=e.toLowerCase(),".."===e||"%2e."===e||".%2e"===e||"%2e%2e"===e},ce={},oe={},ie={},se={},ue={},me={},de={},Ee={},pe={},he={},ge={},be={},fe={},ye={},ke={},ve={},we={},Le={},Ae={},xe={},_e={},Ge=function(e,t,a,l){var r,c,o,i,s=a||ce,u=0,d="",p=!1,h=!1,g=!1;a||(e.scheme="",e.username="",e.password="",e.host=null,e.port=null,e.path=[],e.query=null,e.fragment=null,e.cannotBeABaseURL=!1,t=t.replace(O,"")),t=t.replace(R,""),r=E(t);while(u<=r.length){switch(c=r[u],s){case ce:if(!c||!S.test(c)){if(a)return G;s=ie;continue}d+=c.toLowerCase(),s=oe;break;case oe:if(c&&(T.test(c)||"+"==c||"-"==c||"."==c))d+=c.toLowerCase();else{if(":"!=c){if(a)return G;d="",s=ie,u=0;continue}if(a&&(J(e)!=m(Q,d)||"file"==d&&(X(e)||null!==e.port)||"file"==e.scheme&&!e.host))return;if(e.scheme=d,a)return void(J(e)&&Q[e.scheme]==e.port&&(e.port=null));d="","file"==e.scheme?s=ye:J(e)&&l&&l.scheme==e.scheme?s=se:J(e)?s=Ee:"/"==r[u+1]?(s=ue,u++):(e.cannotBeABaseURL=!0,e.path.push(""),s=Ae)}break;case ie:if(!l||l.cannotBeABaseURL&&"#"!=c)return G;if(l.cannotBeABaseURL&&"#"==c){e.scheme=l.scheme,e.path=l.path.slice(),e.query=l.query,e.fragment="",e.cannotBeABaseURL=!0,s=_e;break}s="file"==l.scheme?ye:me;continue;case se:if("/"!=c||"/"!=r[u+1]){s=me;continue}s=pe,u++;break;case ue:if("/"==c){s=he;break}s=Le;continue;case me:if(e.scheme=l.scheme,c==n)e.username=l.username,e.password=l.password,e.host=l.host,e.port=l.port,e.path=l.path.slice(),e.query=l.query;else if("/"==c||"\\"==c&&J(e))s=de;else if("?"==c)e.username=l.username,e.password=l.password,e.host=l.host,e.port=l.port,e.path=l.path.slice(),e.query="",s=xe;else{if("#"!=c){e.username=l.username,e.password=l.password,e.host=l.host,e.port=l.port,e.path=l.path.slice(),e.path.pop(),s=Le;continue}e.username=l.username,e.password=l.password,e.host=l.host,e.port=l.port,e.path=l.path.slice(),e.query=l.query,e.fragment="",s=_e}break;case de:if(!J(e)||"/"!=c&&"\\"!=c){if("/"!=c){e.username=l.username,e.password=l.password,e.host=l.host,e.port=l.port,s=Le;continue}s=he}else s=pe;break;case Ee:if(s=pe,"/"!=c||"/"!=d.charAt(u+1))continue;u++;break;case pe:if("/"!=c&&"\\"!=c){s=he;continue}break;case he:if("@"==c){p&&(d="%40"+d),p=!0,o=E(d);for(var b=0;b<o.length;b++){var f=o[b];if(":"!=f||g){var y=$(f,Z);g?e.password+=y:e.username+=y}else g=!0}d=""}else if(c==n||"/"==c||"?"==c||"#"==c||"\\"==c&&J(e)){if(p&&""==d)return _;u-=E(d).length+1,d="",s=ge}else d+=c;break;case ge:case be:if(a&&"file"==e.scheme){s=ve;continue}if(":"!=c||h){if(c==n||"/"==c||"?"==c||"#"==c||"\\"==c&&J(e)){if(J(e)&&""==d)return P;if(a&&""==d&&(X(e)||null!==e.port))return;if(i=F(e,d),i)return i;if(d="",s=we,a)return;continue}"["==c?h=!0:"]"==c&&(h=!1),d+=c}else{if(""==d)return P;if(i=F(e,d),i)return i;if(d="",s=fe,a==be)return}break;case fe:if(!N.test(c)){if(c==n||"/"==c||"?"==c||"#"==c||"\\"==c&&J(e)||a){if(""!=d){var k=parseInt(d,10);if(k>65535)return I;e.port=J(e)&&k===Q[e.scheme]?null:k,d=""}if(a)return;s=we;continue}return I}d+=c;break;case ye:if(e.scheme="file","/"==c||"\\"==c)s=ke;else{if(!l||"file"!=l.scheme){s=Le;continue}if(c==n)e.host=l.host,e.path=l.path.slice(),e.query=l.query;else if("?"==c)e.host=l.host,e.path=l.path.slice(),e.query="",s=xe;else{if("#"!=c){ae(r.slice(u).join(""))||(e.host=l.host,e.path=l.path.slice(),ne(e)),s=Le;continue}e.host=l.host,e.path=l.path.slice(),e.query=l.query,e.fragment="",s=_e}}break;case ke:if("/"==c||"\\"==c){s=ve;break}l&&"file"==l.scheme&&!ae(r.slice(u).join(""))&&(te(l.path[0],!0)?e.path.push(l.path[0]):e.host=l.host),s=Le;continue;case ve:if(c==n||"/"==c||"\\"==c||"?"==c||"#"==c){if(!a&&te(d))s=Le;else if(""==d){if(e.host="",a)return;s=we}else{if(i=F(e,d),i)return i;if("localhost"==e.host&&(e.host=""),a)return;d="",s=we}continue}d+=c;break;case we:if(J(e)){if(s=Le,"/"!=c&&"\\"!=c)continue}else if(a||"?"!=c)if(a||"#"!=c){if(c!=n&&(s=Le,"/"!=c))continue}else e.fragment="",s=_e;else e.query="",s=xe;break;case Le:if(c==n||"/"==c||"\\"==c&&J(e)||!a&&("?"==c||"#"==c)){if(re(d)?(ne(e),"/"==c||"\\"==c&&J(e)||e.path.push("")):le(d)?"/"==c||"\\"==c&&J(e)||e.path.push(""):("file"==e.scheme&&!e.path.length&&te(d)&&(e.host&&(e.host=""),d=d.charAt(0)+":"),e.path.push(d)),d="","file"==e.scheme&&(c==n||"?"==c||"#"==c))while(e.path.length>1&&""===e.path[0])e.path.shift();"?"==c?(e.query="",s=xe):"#"==c&&(e.fragment="",s=_e)}else d+=$(c,V);break;case Ae:"?"==c?(e.query="",s=xe):"#"==c?(e.fragment="",s=_e):c!=n&&(e.path[0]+=$(c,W));break;case xe:a||"#"!=c?c!=n&&("'"==c&&J(e)?e.query+="%27":e.query+="#"==c?"%23":$(c,W)):(e.fragment="",s=_e);break;case _e:c!=n&&(e.fragment+=$(c,K));break}u++}},Pe=function(e){var t,a,n=u(this,Pe,"URL"),l=arguments.length>1?arguments[1]:void 0,c=String(e),o=w(n,{type:"URL"});if(void 0!==l)if(l instanceof Pe)t=L(l);else if(a=Ge(t={},String(l)),a)throw TypeError(a);if(a=Ge(o,c,null,t),a)throw TypeError(a);var i=o.searchParams=new k,s=v(i);s.updateSearchParams(o.query),s.updateURL=function(){o.query=String(i)||null},r||(n.href=Se.call(n),n.origin=Te.call(n),n.protocol=Ne.call(n),n.username=je.call(n),n.password=He.call(n),n.host=qe.call(n),n.hostname=De.call(n),n.port=ze.call(n),n.pathname=Ce.call(n),n.search=Oe.call(n),n.searchParams=Re.call(n),n.hash=Fe.call(n))},Ie=Pe.prototype,Se=function(){var e=L(this),t=e.scheme,a=e.username,n=e.password,l=e.host,r=e.port,c=e.path,o=e.query,i=e.fragment,s=t+":";return null!==l?(s+="//",X(e)&&(s+=a+(n?":"+n:"")+"@"),s+=B(l),null!==r&&(s+=":"+r)):"file"==t&&(s+="//"),s+=e.cannotBeABaseURL?c[0]:c.length?"/"+c.join("/"):"",null!==o&&(s+="?"+o),null!==i&&(s+="#"+i),s},Te=function(){var e=L(this),t=e.scheme,a=e.port;if("blob"==t)try{return new URL(t.path[0]).origin}catch(n){return"null"}return"file"!=t&&J(e)?t+"://"+B(e.host)+(null!==a?":"+a:""):"null"},Ne=function(){return L(this).scheme+":"},je=function(){return L(this).username},He=function(){return L(this).password},qe=function(){var e=L(this),t=e.host,a=e.port;return null===t?"":null===a?B(t):B(t)+":"+a},De=function(){var e=L(this).host;return null===e?"":B(e)},ze=function(){var e=L(this).port;return null===e?"":String(e)},Ce=function(){var e=L(this),t=e.path;return e.cannotBeABaseURL?t[0]:t.length?"/"+t.join("/"):""},Oe=function(){var e=L(this).query;return e?"?"+e:""},Re=function(){return L(this).searchParams},Fe=function(){var e=L(this).fragment;return e?"#"+e:""},Ue=function(e,t){return{get:e,set:t,configurable:!0,enumerable:!0}};if(r&&i(Ie,{href:Ue(Se,(function(e){var t=L(this),a=String(e),n=Ge(t,a);if(n)throw TypeError(n);v(t.searchParams).updateSearchParams(t.query)})),origin:Ue(Te),protocol:Ue(Ne,(function(e){var t=L(this);Ge(t,String(e)+":",ce)})),username:Ue(je,(function(e){var t=L(this),a=E(String(e));if(!ee(t)){t.username="";for(var n=0;n<a.length;n++)t.username+=$(a[n],Z)}})),password:Ue(He,(function(e){var t=L(this),a=E(String(e));if(!ee(t)){t.password="";for(var n=0;n<a.length;n++)t.password+=$(a[n],Z)}})),host:Ue(qe,(function(e){var t=L(this);t.cannotBeABaseURL||Ge(t,String(e),ge)})),hostname:Ue(De,(function(e){var t=L(this);t.cannotBeABaseURL||Ge(t,String(e),be)})),port:Ue(ze,(function(e){var t=L(this);ee(t)||(e=String(e),""==e?t.port=null:Ge(t,e,fe))})),pathname:Ue(Ce,(function(e){var t=L(this);t.cannotBeABaseURL||(t.path=[],Ge(t,e+"",we))})),search:Ue(Oe,(function(e){var t=L(this);e=String(e),""==e?t.query=null:("?"==e.charAt(0)&&(e=e.slice(1)),t.query="",Ge(t,e,xe)),v(t.searchParams).updateSearchParams(t.query)})),searchParams:Ue(Re),hash:Ue(Fe,(function(e){var t=L(this);e=String(e),""!=e?("#"==e.charAt(0)&&(e=e.slice(1)),t.fragment="",Ge(t,e,_e)):t.fragment=null}))}),s(Ie,"toJSON",(function(){return Se.call(this)}),{enumerable:!0}),s(Ie,"toString",(function(){return Se.call(this)}),{enumerable:!0}),y){var Me=y.createObjectURL,Ye=y.revokeObjectURL;Me&&s(Pe,"createObjectURL",(function(e){return Me.apply(y,arguments)})),Ye&&s(Pe,"revokeObjectURL",(function(e){return Ye.apply(y,arguments)}))}g(Pe,"URL"),l({global:!0,forced:!c,sham:!r},{URL:Pe})},LKBx:function(e,t,a){"use strict";var n=a("I+eb"),l=a("Bs8V").f,r=a("UMSQ"),c=a("WjRb"),o=a("HYAF"),i=a("qxPZ"),s=a("xDBR"),u="".startsWith,m=Math.min,d=i("startsWith"),E=!s&&!d&&!!function(){var e=l(String.prototype,"startsWith");return e&&!e.writable}();n({target:"String",proto:!0,forced:!E&&!d},{startsWith:function(e){var t=String(o(this));c(e);var a=r(m(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return u?u.call(t,n,a):t.slice(a,a+n.length)===n}})},LMrN:function(e,t,a){},LPSS:function(e,t,a){var n,l,r,c=a("2oRo"),o=a("0Dky"),i=a("xrYK"),s=a("A2ZE"),u=a("G+Rx"),m=a("zBJ4"),d=a("HNyW"),E=c.location,p=c.setImmediate,h=c.clearImmediate,g=c.process,b=c.MessageChannel,f=c.Dispatch,y=0,k={},v="onreadystatechange",w=function(e){if(k.hasOwnProperty(e)){var t=k[e];delete k[e],t()}},L=function(e){return function(){w(e)}},A=function(e){w(e.data)},x=function(e){c.postMessage(e+"",E.protocol+"//"+E.host)};p&&h||(p=function(e){var t=[],a=1;while(arguments.length>a)t.push(arguments[a++]);return k[++y]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},n(y),y},h=function(e){delete k[e]},"process"==i(g)?n=function(e){g.nextTick(L(e))}:f&&f.now?n=function(e){f.now(L(e))}:b&&!d?(l=new b,r=l.port2,l.port1.onmessage=A,n=s(r.postMessage,r,1)):!c.addEventListener||"function"!=typeof postMessage||c.importScripts||o(x)||"file:"===E.protocol?n=v in m("script")?function(e){u.appendChild(m("script"))[v]=function(){u.removeChild(this),w(e)}}:function(e){setTimeout(L(e),0)}:(n=x,c.addEventListener("message",A,!1))),e.exports={set:p,clear:h}},LQDL:function(e,t,a){var n,l,r=a("2oRo"),c=a("NC/Y"),o=r.process,i=o&&o.versions,s=i&&i.v8;s?(n=s.split("."),l=n[0]+n[1]):c&&(n=c.match(/Edge\/(\d+)/),(!n||n[1]>=74)&&(n=c.match(/Chrome\/(\d+)/),n&&(l=n[1]))),e.exports=l&&+l},LZsK:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,l.a.createElement("code",null,"Octokit")," has 4 built-in log methods"),l.a.createElement("ol",null,l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.debug(message[, additionalInfo])")),l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.info(message[, additionalInfo])")),l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.warn(message[, additionalInfo])")),l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.error(message[, additionalInfo])"))),l.a.createElement("p",null,"They can be configured using the ",l.a.createElement("code",null,"log")," client option. By default, ",l.a.createElement("code",null,"octokit.log.debug()")," and ",l.a.createElement("code",null,"octokit.log.info()")," are no-ops, while the other two call ",l.a.createElement("code",null,"console.warn()")," and ",l.a.createElement("code",null,"console.error()")," respectively."),l.a.createElement("p",null,"This is useful if you build reusable ",l.a.createElement(r["AnchorLink"],{to:"#plugins"},"plugins"),".")))}},LtsZ:function(e,t,a){"use strict";a.r(t),a.d(t,"Link",(function(){return y})),a.d(t,"MemoryRouter",(function(){return r["a"]})),a.d(t,"NavLink",(function(){return A})),a.d(t,"Prompt",(function(){return r["b"]})),a.d(t,"Redirect",(function(){return r["c"]})),a.d(t,"Route",(function(){return r["d"]})),a.d(t,"Router",(function(){return r["e"]})),a.d(t,"StaticRouter",(function(){return r["f"]})),a.d(t,"Switch",(function(){return r["g"]})),a.d(t,"matchPath",(function(){return r["i"]})),a.d(t,"useHistory",(function(){return r["j"]})),a.d(t,"useLocation",(function(){return r["k"]})),a.d(t,"useParams",(function(){return r["l"]})),a.d(t,"useRouteMatch",(function(){return r["m"]})),a.d(t,"withRouter",(function(){return r["n"]})),a.d(t,"__RouterContext",(function(){return r["h"]})),a.d(t,"createBrowserHistory",(function(){return s["a"]})),a.d(t,"createHashHistory",(function(){return s["b"]})),a.d(t,"createMemoryHistory",(function(){return s["d"]})),a.d(t,"ApplyPluginsType",(function(){return L})),a.d(t,"Plugin",(function(){return B})),a.d(t,"dynamic",(function(){return re}));var n=a("o0o1"),l=a.n(n),r=a("Ty5D"),c=a("dI71"),o=a("q1tI"),i=a.n(o),s=a("YS25"),u=(a("17x9"),a("wx14")),m=a("zLVn"),d=a("9R94");i.a.Component;i.a.Component;var E=function(e,t){return"function"===typeof e?e(t):e},p=function(e,t){return"string"===typeof e?Object(s["c"])(e,null,null,t):e},h=function(e){return e},g=i.a.forwardRef;function b(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}"undefined"===typeof g&&(g=h);var f=g((function(e,t){var a=e.innerRef,n=e.navigate,l=e.onClick,r=Object(m["a"])(e,["innerRef","navigate","onClick"]),c=r.target,o=Object(u["a"])({},r,{onClick:function(e){try{l&&l(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||c&&"_self"!==c||b(e)||(e.preventDefault(),n())}});return o.ref=h!==g&&t||a,i.a.createElement("a",o)}));var y=g((function(e,t){var a=e.component,n=void 0===a?f:a,l=e.replace,c=e.to,o=e.innerRef,s=Object(m["a"])(e,["component","replace","to","innerRef"]);return i.a.createElement(r["h"].Consumer,null,(function(e){e||Object(d["a"])(!1);var a=e.history,r=p(E(c,e.location),e.location),m=r?a.createHref(r):"",b=Object(u["a"])({},s,{href:m,navigate:function(){var t=E(c,e.location),n=l?a.replace:a.push;n(t)}});return h!==g?b.ref=t||o:b.innerRef=o,i.a.createElement(n,b)}))})),k=function(e){return e},v=i.a.forwardRef;function w(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t.filter((function(e){return e})).join(" ")}"undefined"===typeof v&&(v=k);var L,A=v((function(e,t){var a=e["aria-current"],n=void 0===a?"page":a,l=e.activeClassName,c=void 0===l?"active":l,o=e.activeStyle,s=e.className,h=e.exact,g=e.isActive,b=e.location,f=e.sensitive,L=e.strict,A=e.style,x=e.to,_=e.innerRef,G=Object(m["a"])(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return i.a.createElement(r["h"].Consumer,null,(function(e){e||Object(d["a"])(!1);var a=b||e.location,l=p(E(x,a),a),m=l.pathname,P=m&&m.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),I=P?Object(r["i"])(a.pathname,{path:P,exact:h,sensitive:f,strict:L}):null,S=!!(g?g(I,a):I),T=S?w(s,c):s,N=S?Object(u["a"])({},A,{},o):A,j=Object(u["a"])({"aria-current":S&&n||null,className:T,style:N,to:l},G);return k!==v?j.ref=t||_:j.innerRef=_,i.a.createElement(y,j)}))})),x=a("8L3h");function _(e){return _="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function G(e,t,a,n,l,r,c){try{var o=e[r](c),i=o.value}catch(s){return void a(s)}o.done?t(i):Promise.resolve(i).then(n,l)}function P(e){return function(){var t=this,a=arguments;return new Promise((function(n,l){var r=e.apply(t,a);function c(e){G(r,n,l,c,o,"next",e)}function o(e){G(r,n,l,c,o,"throw",e)}c(void 0)}))}}function I(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function S(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function T(e,t,a){return t&&S(e.prototype,t),a&&S(e,a),e}function N(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function j(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function H(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?j(Object(a),!0).forEach((function(t){N(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):j(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function q(e){return D(e)||z(e)||C(e)||R()}function D(e){if(Array.isArray(e))return e}function z(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function C(e,t){if(e){if("string"===typeof e)return O(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?O(e,t):void 0}}function O(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function R(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function F(e,t){var a;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(a=C(e))||t&&e&&"number"===typeof e.length){a&&(e=a);var n=0,l=function(){};return{s:l,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,c=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return c=e.done,e},e:function(e){o=!0,r=e},f:function(){try{c||null==a["return"]||a["return"]()}finally{if(o)throw r}}}}function U(e,t){if(!e)throw new Error(t)}function M(e){var t=e.fns,a=e.args;if(1===t.length)return t[0];var n=t.pop();return t.reduce((function(e,t){return function(){return t(e,a)}}),n)}function Y(e){return!!e&&"object"===_(e)&&"function"===typeof e.then}(function(e){e["compose"]="compose",e["modify"]="modify",e["event"]="event"})(L||(L={}));var B=function(){function e(t){I(this,e),this.hooks={},this.validKeys=(null===t||void 0===t?void 0:t.validKeys)||[]}return T(e,[{key:"register",value:function(e){var t=this;U(!!e.apply,"register failed, plugin.apply must supplied"),U(!!e.path,"register failed, plugin.path must supplied"),Object.keys(e.apply).forEach((function(a){U(t.validKeys.indexOf(a)>-1,"register failed, invalid key ".concat(a," from plugin ").concat(e.path,".")),t.hooks[a]||(t.hooks[a]=[]),t.hooks[a]=t.hooks[a].concat(e.apply[a])}))}},{key:"getHooks",value:function(e){var t=e.split("."),a=q(t),n=a[0],l=a.slice(1),r=this.hooks[n]||[];return l.length&&(r=r.map((function(e){try{var t,a=e,n=F(l);try{for(n.s();!(t=n.n()).done;){var r=t.value;a=a[r]}}catch(c){n.e(c)}finally{n.f()}return a}catch(o){return null}})).filter(Boolean)),r}},{key:"applyPlugins",value:function(e){var t=e.key,a=e.type,n=e.initialValue,r=e.args,c=e.async,o=this.getHooks(t)||[];switch(r&&U("object"===_(r),"applyPlugins failed, args must be plain object."),a){case L.modify:return c?o.reduce(function(){var e=P(l.a.mark((function e(a,n){var c;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(U("function"===typeof n||"object"===_(n)||Y(n),"applyPlugins failed, all hooks for key ".concat(t," must be function, plain object or Promise.")),!Y(a)){e.next=5;break}return e.next=4,a;case 4:a=e.sent;case 5:if("function"!==typeof n){e.next=16;break}if(c=n(a,r),!Y(c)){e.next=13;break}return e.next=10,c;case 10:return e.abrupt("return",e.sent);case 13:return e.abrupt("return",c);case 14:e.next=21;break;case 16:if(!Y(n)){e.next=20;break}return e.next=19,n;case 19:n=e.sent;case 20:return e.abrupt("return",H(H({},a),n));case 21:case"end":return e.stop()}}),e)})));return function(t,a){return e.apply(this,arguments)}}(),Y(n)?n:Promise.resolve(n)):o.reduce((function(e,a){return U("function"===typeof a||"object"===_(a),"applyPlugins failed, all hooks for key ".concat(t," must be function or plain object.")),"function"===typeof a?a(e,r):H(H({},e),a)}),n);case L.event:return o.forEach((function(e){U("function"===typeof e,"applyPlugins failed, all hooks for key ".concat(t," must be function.")),e(r)}));case L.compose:return function(){return M({fns:o.concat(n),args:r})()}}}}]),e}(),W=Object(o["createContext"])(null),K=[],V=[],Z=!1;function $(e){var t=e(),a={loading:!0,loaded:null,error:null};return a.promise=t.then((function(e){return a.loading=!1,a.loaded=e,e}))["catch"]((function(e){throw a.loading=!1,a.error=e,e})),a}function Q(e){var t={loading:!1,loaded:{},error:null},a=[];try{Object.keys(e).forEach((function(n){var l=$(e[n]);l.loading?t.loading=!0:(t.loaded[n]=l.loaded,t.error=l.error),a.push(l.promise),l.promise.then((function(e){t.loaded[n]=e}))["catch"]((function(e){t.error=e}))}))}catch(n){t.error=n}return t.promise=Promise.all(a).then((function(e){return t.loading=!1,e}))["catch"]((function(e){throw t.loading=!1,e})),t}function J(e){return e&&e.__esModule?e["default"]:e}function X(e,t){return Object(o["createElement"])(J(e),t)}function ee(e,t){var a=Object.assign({loader:null,loading:null,delay:200,timeout:null,render:X,webpack:null,modules:null},t),n=null;function l(){if(!n){var t=new te(e,a);n={getCurrentValue:t.getCurrentValue.bind(t),subscribe:t.subscribe.bind(t),retry:t.retry.bind(t),promise:t.promise.bind(t)}}return n.promise()}if("undefined"===typeof window&&K.push(l),!Z&&"undefined"!==typeof window&&"function"===typeof a.webpack){var r=a.webpack();V.push((function(e){var t,a=F(r);try{for(a.s();!(t=a.n()).done;){var n=t.value;if(-1!==e.indexOf(n))return l()}}catch(c){a.e(c)}finally{a.f()}}))}var c=function(e,t){l();var r=Object(o["useContext"])(W),c=Object(x["useSubscription"])(n);return Object(o["useImperativeHandle"])(t,(function(){return{retry:n.retry}})),r&&Array.isArray(a.modules)&&a.modules.forEach((function(e){r(e)})),c.loading||c.error?Object(o["createElement"])(a.loading,{isLoading:c.loading,pastDelay:c.pastDelay,timedOut:c.timedOut,error:c.error,retry:n.retry}):c.loaded?a.render(c.loaded,e):null},i=Object(o["forwardRef"])(c);return i.preload=function(){return l()},i.displayName="LoadableComponent",i}var te=function(){function e(t,a){I(this,e),this._loadFn=t,this._opts=a,this._callbacks=new Set,this._delay=null,this._timeout=null,this.retry()}return T(e,[{key:"promise",value:function(){return this._res.promise}},{key:"retry",value:function(){var e=this;this._clearTimeouts(),this._res=this._loadFn(this._opts.loader),this._state={pastDelay:!1,timedOut:!1};var t=this._res,a=this._opts;t.loading&&("number"===typeof a.delay&&(0===a.delay?this._state.pastDelay=!0:this._delay=setTimeout((function(){e._update({pastDelay:!0})}),a.delay)),"number"===typeof a.timeout&&(this._timeout=setTimeout((function(){e._update({timedOut:!0})}),a.timeout))),this._res.promise.then((function(){e._update(),e._clearTimeouts()}))["catch"]((function(t){e._update(),e._clearTimeouts()})),this._update({})}},{key:"_update",value:function(e){this._state=H(H({},this._state),e),this._callbacks.forEach((function(e){return e()}))}},{key:"_clearTimeouts",value:function(){clearTimeout(this._delay),clearTimeout(this._timeout)}},{key:"getCurrentValue",value:function(){return H(H({},this._state),{},{error:this._res.error,loaded:this._res.loaded,loading:this._res.loading})}},{key:"subscribe",value:function(e){var t=this;return this._callbacks.add(e),function(){t._callbacks["delete"](e)}}}]),e}();function ae(e){return ee($,e)}function ne(e){if("function"!==typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return ee(Q,e)}function le(e,t){var a=[];while(e.length){var n=e.pop();a.push(n(t))}return Promise.all(a).then((function(){if(e.length)return le(e,t)}))}function re(e){var t=ae,a={loading:function(e){e.error,e.isLoading;return Object(o["createElement"])("p",null,"loading...")}};if("function"===typeof e)a.loader=e;else{if("object"!==_(e))throw new Error("Unexpect arguments ".concat(e));a=H(H({},a),e)}return t(a)}ae.Map=ne,ae.preloadAll=function(){return new Promise((function(e,t){le(K).then(e,t)}))},ae.preloadReady=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return new Promise((function(t){var a=function(){return Z=!0,t()};le(V,e).then(a,a)}))},"undefined"!==typeof window&&(window.__NEXT_PRELOADREADY=ae.preloadReady)},MWYE:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"create-reaction-for-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a commit comment"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#comments"},"commit comment"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this commit comment."),l.a.createElement(c["a"],{code:"octokit.reactions.createForCommitComment({\n  owner,\n  repo,\n  comment_id,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the commit comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for an issue"),l.a.createElement("p",null,"Create a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues/"},"issue"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this issue."),l.a.createElement(c["a"],{code:"octokit.reactions.createForIssue({\n  owner,\n  repo,\n  issue_number,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the issue."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for an issue comment"),l.a.createElement("p",null,"Create a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#comments"},"issue comment"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this issue comment."),l.a.createElement(c["a"],{code:"octokit.reactions.createForIssueComment({\n  owner,\n  repo,\n  comment_id,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the issue comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-a-pull-request-review-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-pull-request-review-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a pull request review comment"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#comments"},"pull request review comment"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this pull request review comment."),l.a.createElement(c["a"],{code:"octokit.reactions.createForPullRequestReviewComment({\n  owner,\n  repo,\n  comment_id,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the pull request review comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-a-team-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-team-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a team discussion comment"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments"},"team discussion comment"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this team discussion comment."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.createForTeamDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the team discussion comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-a-team-discussion"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-team-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a team discussion"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this team discussion."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.createForTeamDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the team discussion."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-commit-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-commit-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a commit comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#comments"},"commit comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForCommitComment({\n  owner,\n  repo,\n  comment_id,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-a-commit-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-issue-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-issue-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an issue reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues/"},"issue"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForIssue({\n  owner,\n  repo,\n  issue_number,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-an-issue-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-issue-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-issue-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an issue comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#comments"},"issue comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForIssueComment({\n  owner,\n  repo,\n  comment_id,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-an-issue-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-pull-request-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-pull-request-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a pull request comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.")),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#review-comments"},"pull request review comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForPullRequestComment({\n  owner,\n  repo,\n  comment_id,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-a-pull-request-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-team-discussion-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-team-discussion-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete team discussion reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team or organization with ",l.a.createElement("code",null,"team_id")," and ",l.a.createElement("code",null,"org_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForTeamDiscussion({\n  org,\n  team_slug,\n  discussion_number,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-team-discussion-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-team-discussion-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-team-discussion-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete team discussion comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team or organization with ",l.a.createElement("code",null,"team_id")," and ",l.a.createElement("code",null,"org_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments"},"team discussion comment"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForTeamDiscussionComment({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-team-discussion-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-reaction-legacy"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-reaction-legacy","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a reaction (Legacy)"),l.a.createElement("p",null,l.a.createElement("strong",null,"This method is deprecated.")),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecation Notice:")," This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this ",l.a.createElement(r["Link"],{to:"https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/"},"blog post"),"."),l.a.createElement("p",null,"OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),", when deleting a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion")," or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments"},"team discussion comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteLegacy({\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a commit comment"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#comments"},"commit comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForCommitComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a commit comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for an issue"),l.a.createElement("p",null,"List the reactions to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues"},"issue"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForIssue({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to an issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for an issue comment"),l.a.createElement("p",null,"List the reactions to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#comments"},"issue comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForIssueComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to an issue comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-pull-request-review-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-pull-request-review-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a pull request review comment"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#review-comments"},"pull request review comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForPullRequestReviewComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a pull request review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-team-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-team-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a team discussion comment"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments/"},"team discussion comment"),". OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForTeamDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a team discussion comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-team-discussion"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-team-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a team discussion"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion"),". OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForTeamDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a team discussion."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion"},"GitHub Developer Guide documentation"),".")))}},MZF8:function(e,t,a){"use strict";a.d(t,"a",(function(){return n["b"]}));var n=a("ogwx");a("VCU9"),a("vpkV")},MgzW:function(e,t,a){"use strict";var n=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function c(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function o(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},a=0;a<10;a++)t["_"+String.fromCharCode(a)]=a;var n=Object.getOwnPropertyNames(t).map((function(e){return t[e]}));if("0123456789"!==n.join(""))return!1;var l={};return"abcdefghijklmnopqrst".split("").forEach((function(e){l[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},l)).join("")}catch(r){return!1}}e.exports=o()?Object.assign:function(e,t){for(var a,o,i=c(e),s=1;s<arguments.length;s++){for(var u in a=Object(arguments[s]),a)l.call(a,u)&&(i[u]=a[u]);if(n){o=n(a);for(var m=0;m<o.length;m++)r.call(a,o[m])&&(i[o[m]]=a[o[m]])}}return i}},"N+g0":function(e,t,a){var n=a("g6v/"),l=a("m/L8"),r=a("glrk"),c=a("33Wh");e.exports=n?Object.defineProperties:function(e,t){r(e);var a,n=c(t),o=n.length,i=0;while(o>i)l.f(e,a=n[i++],t[a]);return e}},N34b:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Import the Octokit constructor based on your platform."),l.a.createElement("h2",{id:"browsers"},l.a.createElement(r["AnchorLink"],{to:"#browsers","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Browsers"),l.a.createElement("p",null,"Load ",l.a.createElement("code",null,"@octokit/rest")," directly from ",l.a.createElement(r["Link"],{to:"https://cdn.skypack.dev/"},"cdn.skypack.dev")),l.a.createElement(c["a"],{code:'<script type="module">\n  import { Octokit } from "https://cdn.skypack.dev/@octokit/rest";\n<\/script>\n',lang:"html"}),l.a.createElement("h2",{id:"node"},l.a.createElement(r["AnchorLink"],{to:"#node","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Node"),l.a.createElement("p",null,"Install with ",l.a.createElement("code",null,"npm install @octokit/rest")),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\n// or: import { Octokit } from "@octokit/rest";\n',lang:"js"}),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\n',lang:"js"}),l.a.createElement("p",null,"Now instantiate your octokit API. All options are optional, but authentication is strongly encouraged."),l.a.createElement(c["a"],{code:"const octokit = new Octokit({\n",lang:"js"}),l.a.createElement("p",null,"You can set ",l.a.createElement("code",null,"auth")," to a personal access token string."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#authentication"},"authentication"),"."),l.a.createElement(c["a"],{code:'  auth: "secret123",\n',lang:"js"}),l.a.createElement("p",null,"Setting a user agent ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#user-agent-required"},"is required"),". It defaults to ",l.a.createElement("code",null,"octokit/rest.js v1.2.3")," where ",l.a.createElement("code",null,"v1.2.3")," is the current version of ",l.a.createElement("code",null,"@octokit/rest"),", but you should set it to something that identifies your app or script."),l.a.createElement(c["a"],{code:"  userAgent: 'myApp v1.2.3',\n",lang:"js"}),l.a.createElement("p",null,"API Previews can be enabled globally by setting the ",l.a.createElement("code",null,"previews")," option. They can be set per-request as well."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#previews"},"API Previews"),"."),l.a.createElement(c["a"],{code:"  previews: ['jean-grey', 'symmetra'],\n",lang:"js"}),l.a.createElement("p",null,"A default time zone can be enabled by setting the ",l.a.createElement("code",null,"timeZone")," option."),l.a.createElement(c["a"],{code:"  timeZone: 'Europe/Amsterdam',\n",lang:"js"}),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#timezones"},"using time zones with the GitHub API"),"."),l.a.createElement("p",null,"In order to use Octokit with GitHub Enterprise, set the ",l.a.createElement("code",null,"baseUrl")," option."),l.a.createElement(c["a"],{code:"  baseUrl: 'https://api.github.com',\n",lang:"js"}),l.a.createElement("p",null,"For custom logging, pass an object with ",l.a.createElement("code",null,"debug"),", ",l.a.createElement("code",null,"info"),", ",l.a.createElement("code",null,"warn")," and ",l.a.createElement("code",null,"error")," methods as the ",l.a.createElement("code",null,"log")," option."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#logging"},"logging")," and ",l.a.createElement(r["AnchorLink"],{to:"#debug"},"debugging"),"."),l.a.createElement(c["a"],{code:"  log: {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error\n  },\n",lang:"js"}),l.a.createElement("p",null,"Custom request options can be passed as ",l.a.createElement("code",null,"request.*")," options. See ",l.a.createElement(r["Link"],{to:"https://www.npmjs.com/package/@octokit/request#octokitrequest"},l.a.createElement("code",null,"@octokit/request"))," options. The same options can be passed to each endpoint request method."),l.a.createElement(c["a"],{code:"  request: {\n    agent: undefined,\n    fetch: undefined,\n    timeout: 0\n  }\n})\n",lang:"js"}),l.a.createElement("p",null,"Most of GitHub\u2019s REST API endpoints have matching methods. All endpoint methods are asynchronous, in order to use ",l.a.createElement("code",null,"await")," in the code examples, we wrap them into an anonymous async function."),l.a.createElement(c["a"],{code:"(async () => {\n",lang:"js"}),l.a.createElement("p",null,"For example to retrieve a pull request, use ",l.a.createElement(r["AnchorLink"],{to:"#octokit-routes-pulls-get"},l.a.createElement("code",null,"octokit.pulls.get()")),". We recommend to use the search above to find the endpoint method you are looking for"),l.a.createElement(c["a"],{code:'const { data: pullRequest } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 123,\n});\n',lang:"js"}),l.a.createElement("p",null,"Some API endpoints support alternative response formats, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/media-types"},"Media types"),". For example, to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/media-types/#diff"},"request the above pull request in a diff format"),", pass the ",l.a.createElement("code",null,"mediaType.format")," option."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#request-formats"},"request formats"),"."),l.a.createElement(c["a"],{code:'const { data: diff } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 123,\n  mediaType: {\n    format: "diff",\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"For the API endpoints that do not have a matching method, such as the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#root-endpoint"},"root endpoint")," or legacy endpoints, you can send custom requests."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#custom-requests"},"custom requests"),"."),l.a.createElement(c["a"],{code:'const { data: root } = await octokit.request("GET /");\n',lang:"js"}),l.a.createElement("p",null,"You can also register custom endpoint methods, which is particularly useful if you participate in a private beta."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#custom-endpoint-methods"},"custom endpoint methods"),"."),l.a.createElement(c["a"],{code:'await octokit.registerEndpoints({\n  misc: {\n    getRoot: {\n      method: "GET",\n      url: "/",\n    },\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"Some endpoints return a list which has to be paginated in order to retrieve the complete data set."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#pagination"},"pagination"),"."),l.a.createElement(c["a"],{code:"  octokit.paginate(octokit.issues.listForRepo, {\n    owner: 'octokit',\n    repo: 'rest.js'\n  })\n    .then(issues => {\n      // issues is an array of all issue objects\n    })\n})\n",lang:"js"}),l.a.createElement("p",null,"You can add more functionality with plugins. We recommend the retry and throttling plugins."),l.a.createElement("p",null,"Learn more about ",l.a.createElement(r["AnchorLink"],{to:"#throttling"},"throttling"),", ",l.a.createElement(r["AnchorLink"],{to:"#automatic-retries"},"automatic retries")," and building your own ",l.a.createElement(r["AnchorLink"],{to:"#plugins"},"Plugins"),"."),l.a.createElement(c["a"],{code:'import { retry } from "@octokit/plugin-retry";\nimport { throttling } from "@octokit/plugin-throttling";\n\nconst MyOctokit = Octokit.plugin(retry, throttling);\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,"Octokit.plugin()")," returns a new constructor. The same options can be passed to the constructor. The options are passed on to all plugin functions as the 2nd argument."),l.a.createElement(c["a"],{code:'const myOctokit = new MyOctokit({\n  auth: "secret123",\n  throttle: {\n    onRateLimit: (retryAfter, options) => {\n      myOctokit.log.warn(\n        `Request quota exhausted for request ${options.method} ${options.url}`\n      );\n\n      if (options.request.retryCount === 0) {\n        // only retries once\n        myOctokit.log.info(`Retrying after ${retryAfter} seconds!`);\n        return true;\n      }\n    },\n    onAbuseLimit: (retryAfter, options) => {\n      // does not retry, only logs a warning\n      myOctokit.log.warn(\n        `Abuse detected for request ${options.method} ${options.url}`\n      );\n    },\n  },\n  retry: {\n    doNotRetry: ["429"],\n  },\n});\n',lang:"js"})))}},"NC/Y":function(e,t,a){var n=a("0GbY");e.exports=n("navigator","userAgent")||""},NN28:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-assignees-to-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#add-assignees-to-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add assignees to an issue"),l.a.createElement("p",null,"Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced."),l.a.createElement(c["a"],{code:"octokit.issues.addAssignees({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Usernames of people to assign this issue to. ",l.a.createElement("em",null,"NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#add-assignees-to-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-labels-to-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#add-labels-to-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add labels to an issue"),l.a.createElement(c["a"],{code:"octokit.issues.addLabels({\n  owner,\n  repo,\n  issue_number,\n  labels,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the label to add to the issue. Must contain at least one label. ",l.a.createElement("strong",null,"Note:")," Alternatively, you can pass a single label as a ",l.a.createElement("code",null,"string")," or an ",l.a.createElement("code",null,"array")," of labels directly, but GitHub recommends passing an object with the ",l.a.createElement("code",null,"labels")," key."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#add-labels-to-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-can-be-assigned"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-can-be-assigned","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user can be assigned"),l.a.createElement("p",null,"Checks if a user has permission to be assigned to an issue in this repository."),l.a.createElement("p",null,"If the ",l.a.createElement("code",null,"assignee")," can be assigned to issues in the repository, a ",l.a.createElement("code",null,"204")," header with no content is returned."),l.a.createElement("p",null,"Otherwise a ",l.a.createElement("code",null,"404")," status code is returned."),l.a.createElement(c["a"],{code:"octokit.issues.checkUserCanBeAssigned({\n  owner,\n  repo,\n  assignee,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#check-if-a-user-can-be-assigned"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#create-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an issue"),l.a.createElement("p",null,"Any user with pull access to a repository can create an issue. If ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/disabling-issues/"},"issues are disabled in the repository"),", the API returns a ",l.a.createElement("code",null,"410 Gone")," status."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.issues.create({\n  owner,\n  repo,\n  title,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Login for the user that this issue should be assigned to. ",l.a.createElement("em",null,"NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. ",l.a.createElement("strong",null,"This field is deprecated."))))),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Labels to associate with this issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Logins for Users to assign to this issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#create-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an issue comment"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.issues.createComment({\n  owner,\n  repo,\n  issue_number,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-label"},l.a.createElement(r["AnchorLink"],{to:"#create-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a label"),l.a.createElement(c["a"],{code:"octokit.issues.createLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ",l.a.createElement("code",null,":strawberry:")," will render the emoji ",l.a.createElement("img",{src:"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png",alt:":strawberry:",title:":strawberry:"}),". For a full list of available emoji and codes, see ",l.a.createElement(r["Link"],{to:"http://emoji-cheat-sheet.com/"},"emoji-cheat-sheet.com"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"color"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"http://www.color-hex.com/"},"hexadecimal color code")," for the label, without the leading ",l.a.createElement("code",null,"#"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the label."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#create-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.createMilestone({\n  owner,\n  repo,\n  title,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the milestone. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A description of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"due_on"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The milestone due date. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an issue comment"),l.a.createElement(c["a"],{code:"octokit.issues.deleteComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#delete-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-label"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a label"),l.a.createElement(c["a"],{code:"octokit.issues.deleteLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#delete-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.deleteMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#delete-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#get-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an issue"),l.a.createElement("p",null,"The API returns a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects"},l.a.createElement("code",null,"301 Moved Permanently")," status")," if the issue was",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/transferring-an-issue-to-another-repository/"},"transferred")," to another repository. If the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API returns a ",l.a.createElement("code",null,"404 Not Found")," status. If the issue was deleted from a repository where the authenticated user has read access, the API returns a ",l.a.createElement("code",null,"410 Gone")," status. To receive webhook events for transferred and deleted issues, subscribe to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#issues"},l.a.createElement("code",null,"issues"))," webhook."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.get({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#get-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an issue comment"),l.a.createElement(c["a"],{code:"octokit.issues.getComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-issue-event"},l.a.createElement(r["AnchorLink"],{to:"#get-an-issue-event","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an issue event"),l.a.createElement(c["a"],{code:"octokit.issues.getEvent({\n  owner,\n  repo,\n  event_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"event_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-an-issue-event"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-label"},l.a.createElement(r["AnchorLink"],{to:"#get-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a label"),l.a.createElement(c["a"],{code:"octokit.issues.getLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#get-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.getMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issues-assigned-to-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-issues-assigned-to-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issues assigned to the authenticated user"),l.a.createElement("p",null,"List issues assigned to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories. You can use the ",l.a.createElement("code",null,"filter")," query parameter to fetch issues that are not necessarily assigned to you."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates which sorts of issues to return. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"assigned"),": Issues assigned to you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"created"),": Issues created by you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"mentioned"),": Issues mentioning you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"subscribed"),": Issues you're subscribed to updates for",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All issues the authenticated user can see, regardless of participation or creation"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"collab"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"orgs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"owned"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pulls"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-issues-assigned-to-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-assignees"},l.a.createElement(r["AnchorLink"],{to:"#list-assignees","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List assignees"),l.a.createElement("p",null,"Lists the ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/"},"available assignees")," for issues in a repository."),l.a.createElement(c["a"],{code:"octokit.issues.listAssignees({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-assignees"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue comments"),l.a.createElement("p",null,"Issue Comments are ordered by ascending ID."),l.a.createElement(c["a"],{code:"octokit.issues.listComments({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-comments-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-comments-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue comments for a repository"),l.a.createElement("p",null,"By default, Issue Comments are ordered by ascending ID."),l.a.createElement(c["a"],{code:"octokit.issues.listCommentsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without the ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-events"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue events"),l.a.createElement(c["a"],{code:"octokit.issues.listEvents({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-events-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-events-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue events for a repository"),l.a.createElement(c["a"],{code:"octokit.issues.listEventsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-events-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-timeline-events-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#list-timeline-events-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List timeline events for an issue"),l.a.createElement(c["a"],{code:"octokit.issues.listEventsForTimeline({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-timeline-events-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-user-account-issues-assigned-to-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-user-account-issues-assigned-to-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List user account issues assigned to the authenticated user"),l.a.createElement("p",null,"List issues across owned and member repositories assigned to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates which sorts of issues to return. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"assigned"),": Issues assigned to you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"created"),": Issues created by you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"mentioned"),": Issues mentioning you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"subscribed"),": Issues you're subscribed to updates for",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All issues the authenticated user can see, regardless of participation or creation"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-user-account-issues-assigned-to-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-issues-assigned-to-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-issues-assigned-to-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization issues assigned to the authenticated user"),l.a.createElement("p",null,"List issues in an organization assigned to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates which sorts of issues to return. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"assigned"),": Issues assigned to you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"created"),": Issues created by you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"mentioned"),": Issues mentioning you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"subscribed"),": Issues you're subscribed to updates for",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All issues the authenticated user can see, regardless of participation or creation"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-organization-issues-assigned-to-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-issues"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-issues","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository issues"),l.a.createElement("p",null,"List issues in a repository."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.listForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If an ",l.a.createElement("code",null,"integer")," is passed, it should refer to a milestone by its ",l.a.createElement("code",null,"number")," field. If the string ",l.a.createElement("code",null,"*")," is passed, issues with any milestone are accepted. If the string ",l.a.createElement("code",null,"none")," is passed, issues without milestones are returned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be the name of a user. Pass in ",l.a.createElement("code",null,"none")," for issues with no assigned user, and ",l.a.createElement("code",null,"*")," for issues assigned to any user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"creator"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The user that created the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"mentioned"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A user that's mentioned in the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-repository-issues"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-labels-for-issues-in-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#list-labels-for-issues-in-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List labels for issues in a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.listLabelsForMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-labels-for-issues-in-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-labels-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-labels-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List labels for a repository"),l.a.createElement(c["a"],{code:"octokit.issues.listLabelsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-labels-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-labels-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#list-labels-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List labels for an issue"),l.a.createElement(c["a"],{code:"octokit.issues.listLabelsOnIssue({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-labels-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-milestones"},l.a.createElement(r["AnchorLink"],{to:"#list-milestones","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List milestones"),l.a.createElement(c["a"],{code:"octokit.issues.listMilestones({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the milestone. Either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Either ",l.a.createElement("code",null,"due_on")," or ",l.a.createElement("code",null,"completeness"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The direction of the sort. Either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-milestones"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"lock-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#lock-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Lock an issue"),l.a.createElement("p",null,"Users with push access can lock an issue or pull request's conversation."),l.a.createElement("p",null,"Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.issues.lock({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"lock_reason"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"off-topic"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"too heated"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"resolved"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"spam")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#lock-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-all-labels-from-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#remove-all-labels-from-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove all labels from an issue"),l.a.createElement(c["a"],{code:"octokit.issues.removeAllLabels({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#remove-all-labels-from-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-assignees-from-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#remove-assignees-from-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove assignees from an issue"),l.a.createElement("p",null,"Removes one or more assignees from an issue."),l.a.createElement(c["a"],{code:"octokit.issues.removeAssignees({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Usernames of assignees to remove from an issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#remove-assignees-from-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-label-from-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-label-from-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a label from an issue"),l.a.createElement("p",null,"Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a ",l.a.createElement("code",null,"404 Not Found")," status if the label does not exist."),l.a.createElement(c["a"],{code:"octokit.issues.removeLabel({\n  owner,\n  repo,\n  issue_number,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#remove-a-label-from-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-labels-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#set-labels-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set labels for an issue"),l.a.createElement("p",null,"Removes any previous labels and sets the new labels for an issue."),l.a.createElement(c["a"],{code:"octokit.issues.setLabels({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The names of the labels to add to the issue. You can pass an empty array to remove all labels. ",l.a.createElement("strong",null,"Note:")," Alternatively, you can pass a single label as a ",l.a.createElement("code",null,"string")," or an ",l.a.createElement("code",null,"array")," of labels directly, but GitHub recommends passing an object with the ",l.a.createElement("code",null,"labels")," key."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#set-labels-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unlock-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#unlock-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unlock an issue"),l.a.createElement("p",null,"Users with push access can unlock an issue's conversation."),l.a.createElement(c["a"],{code:"octokit.issues.unlock({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#unlock-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#update-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an issue"),l.a.createElement("p",null,"Issue owners and users with push access can edit an issue."),l.a.createElement(c["a"],{code:"octokit.issues.update({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Login for the user that this issue should be assigned to. ",l.a.createElement("strong",null,"This field is deprecated.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"State of the issue. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Labels to associate with this issue. Pass one or more Labels to ",l.a.createElement("em",null,"replace")," the set of Labels on this Issue. Send an empty array (",l.a.createElement("code",null,"[]"),") to clear all Labels from the Issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Logins for Users to assign to this issue. Pass one or more user logins to ",l.a.createElement("em",null,"replace")," the set of assignees on this Issue. Send an empty array (",l.a.createElement("code",null,"[]"),") to clear all assignees from the Issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#update-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an issue comment"),l.a.createElement(c["a"],{code:"octokit.issues.updateComment({\n  owner,\n  repo,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#update-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-label"},l.a.createElement(r["AnchorLink"],{to:"#update-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a label"),l.a.createElement(c["a"],{code:"octokit.issues.updateLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"new_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ",l.a.createElement("code",null,":strawberry:")," will render the emoji ",l.a.createElement("img",{src:"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png",alt:":strawberry:",title:":strawberry:"}),". For a full list of available emoji and codes, see ",l.a.createElement(r["Link"],{to:"http://emoji-cheat-sheet.com/"},"emoji-cheat-sheet.com"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"color"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"http://www.color-hex.com/"},"hexadecimal color code")," for the label, without the leading ",l.a.createElement("code",null,"#"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the label."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#update-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#update-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.updateMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the milestone. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A description of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"due_on"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The milestone due date. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#update-a-milestone"},"GitHub Developer Guide documentation"),".")))}},NV22:function(e,t,a){var n=a("I+eb"),l=a("glrk"),r=a("4oU/"),c=a("ntOU"),o=a("afO8"),i="Seeded Random",s=i+" Generator",u=o.set,m=o.getterFor(s),d='Math.seededPRNG() argument should have a "seed" field with a finite value.',E=c((function(e){u(this,{type:s,seed:e%2147483647})}),i,(function(){var e=m(this),t=e.seed=(1103515245*e.seed+12345)%2147483647;return{value:(1073741823&t)/1073741823,done:!1}}));n({target:"Math",stat:!0,forced:!0},{seededPRNG:function(e){var t=l(e).seed;if(!r(t))throw TypeError(d);return new E(t)}})},NaFW:function(e,t,a){var n=a("9d/t"),l=a("P4y1"),r=a("tiKp"),c=r("iterator");e.exports=function(e){if(void 0!=e)return e[c]||e["@@iterator"]||l[n(e)]}},NbvT:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-assignees-to-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#add-assignees-to-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add assignees to an issue"),l.a.createElement("p",null,"Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced."),l.a.createElement(c["a"],{code:"octokit.issues.addAssignees({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Usernames of people to assign this issue to. ",l.a.createElement("em",null,"NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#add-assignees-to-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-labels-to-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#add-labels-to-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add labels to an issue"),l.a.createElement(c["a"],{code:"octokit.issues.addLabels({\n  owner,\n  repo,\n  issue_number,\n  labels,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the label to add to the issue. Must contain at least one label. ",l.a.createElement("strong",null,"Note:")," Alternatively, you can pass a single label as a ",l.a.createElement("code",null,"string")," or an ",l.a.createElement("code",null,"array")," of labels directly, but GitHub recommends passing an object with the ",l.a.createElement("code",null,"labels")," key."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#add-labels-to-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-can-be-assigned"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-can-be-assigned","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user can be assigned"),l.a.createElement("p",null,"Checks if a user has permission to be assigned to an issue in this repository."),l.a.createElement("p",null,"If the ",l.a.createElement("code",null,"assignee")," can be assigned to issues in the repository, a ",l.a.createElement("code",null,"204")," header with no content is returned."),l.a.createElement("p",null,"Otherwise a ",l.a.createElement("code",null,"404")," status code is returned."),l.a.createElement(c["a"],{code:"octokit.issues.checkUserCanBeAssigned({\n  owner,\n  repo,\n  assignee,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#check-if-a-user-can-be-assigned"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#create-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an issue"),l.a.createElement("p",null,"Any user with pull access to a repository can create an issue. If ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/disabling-issues/"},"issues are disabled in the repository"),", the API returns a ",l.a.createElement("code",null,"410 Gone")," status."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.issues.create({\n  owner,\n  repo,\n  title,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Login for the user that this issue should be assigned to. ",l.a.createElement("em",null,"NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. ",l.a.createElement("strong",null,"This field is deprecated."))))),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Labels to associate with this issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Logins for Users to assign to this issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#create-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an issue comment"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.issues.createComment({\n  owner,\n  repo,\n  issue_number,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-label"},l.a.createElement(r["AnchorLink"],{to:"#create-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a label"),l.a.createElement(c["a"],{code:"octokit.issues.createLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ",l.a.createElement("code",null,":strawberry:")," will render the emoji ",l.a.createElement("img",{src:"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png",alt:":strawberry:",title:":strawberry:"}),". For a full list of available emoji and codes, see ",l.a.createElement(r["Link"],{to:"http://emoji-cheat-sheet.com/"},"emoji-cheat-sheet.com"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"color"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"http://www.color-hex.com/"},"hexadecimal color code")," for the label, without the leading ",l.a.createElement("code",null,"#"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the label."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#create-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.createMilestone({\n  owner,\n  repo,\n  title,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the milestone. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A description of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"due_on"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The milestone due date. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an issue comment"),l.a.createElement(c["a"],{code:"octokit.issues.deleteComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#delete-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-label"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a label"),l.a.createElement(c["a"],{code:"octokit.issues.deleteLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#delete-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.deleteMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#delete-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#get-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an issue"),l.a.createElement("p",null,"The API returns a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects"},l.a.createElement("code",null,"301 Moved Permanently")," status")," if the issue was",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/transferring-an-issue-to-another-repository/"},"transferred")," to another repository. If the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API returns a ",l.a.createElement("code",null,"404 Not Found")," status. If the issue was deleted from a repository where the authenticated user has read access, the API returns a ",l.a.createElement("code",null,"410 Gone")," status. To receive webhook events for transferred and deleted issues, subscribe to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#issues"},l.a.createElement("code",null,"issues"))," webhook."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.get({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#get-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an issue comment"),l.a.createElement(c["a"],{code:"octokit.issues.getComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-issue-event"},l.a.createElement(r["AnchorLink"],{to:"#get-an-issue-event","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an issue event"),l.a.createElement(c["a"],{code:"octokit.issues.getEvent({\n  owner,\n  repo,\n  event_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"event_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-an-issue-event"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-label"},l.a.createElement(r["AnchorLink"],{to:"#get-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a label"),l.a.createElement(c["a"],{code:"octokit.issues.getLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#get-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.getMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#get-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issues-assigned-to-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-issues-assigned-to-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issues assigned to the authenticated user"),l.a.createElement("p",null,"List issues assigned to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories. You can use the ",l.a.createElement("code",null,"filter")," query parameter to fetch issues that are not necessarily assigned to you."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates which sorts of issues to return. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"assigned"),": Issues assigned to you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"created"),": Issues created by you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"mentioned"),": Issues mentioning you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"subscribed"),": Issues you're subscribed to updates for",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All issues the authenticated user can see, regardless of participation or creation"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"collab"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"orgs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"owned"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pulls"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-issues-assigned-to-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-assignees"},l.a.createElement(r["AnchorLink"],{to:"#list-assignees","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List assignees"),l.a.createElement("p",null,"Lists the ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/"},"available assignees")," for issues in a repository."),l.a.createElement(c["a"],{code:"octokit.issues.listAssignees({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-assignees"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue comments"),l.a.createElement("p",null,"Issue Comments are ordered by ascending ID."),l.a.createElement(c["a"],{code:"octokit.issues.listComments({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-comments-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-comments-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue comments for a repository"),l.a.createElement("p",null,"By default, Issue Comments are ordered by ascending ID."),l.a.createElement(c["a"],{code:"octokit.issues.listCommentsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without the ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-events"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue events"),l.a.createElement(c["a"],{code:"octokit.issues.listEvents({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-issue-events-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-issue-events-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List issue events for a repository"),l.a.createElement(c["a"],{code:"octokit.issues.listEventsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-issue-events-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-timeline-events-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#list-timeline-events-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List timeline events for an issue"),l.a.createElement(c["a"],{code:"octokit.issues.listEventsForTimeline({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-timeline-events-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-user-account-issues-assigned-to-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-user-account-issues-assigned-to-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List user account issues assigned to the authenticated user"),l.a.createElement("p",null,"List issues across owned and member repositories assigned to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates which sorts of issues to return. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"assigned"),": Issues assigned to you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"created"),": Issues created by you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"mentioned"),": Issues mentioning you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"subscribed"),": Issues you're subscribed to updates for",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All issues the authenticated user can see, regardless of participation or creation"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-user-account-issues-assigned-to-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-issues-assigned-to-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-issues-assigned-to-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization issues assigned to the authenticated user"),l.a.createElement("p",null,"List issues in an organization assigned to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates which sorts of issues to return. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"assigned"),": Issues assigned to you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"created"),": Issues created by you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"mentioned"),": Issues mentioning you",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"subscribed"),": Issues you're subscribed to updates for",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All issues the authenticated user can see, regardless of participation or creation"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-organization-issues-assigned-to-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-issues"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-issues","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository issues"),l.a.createElement("p",null,"List issues in a repository."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key. Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.issues.listForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If an ",l.a.createElement("code",null,"integer")," is passed, it should refer to a milestone by its ",l.a.createElement("code",null,"number")," field. If the string ",l.a.createElement("code",null,"*")," is passed, issues with any milestone are accepted. If the string ",l.a.createElement("code",null,"none")," is passed, issues without milestones are returned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the issues to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be the name of a user. Pass in ",l.a.createElement("code",null,"none")," for issues with no assigned user, and ",l.a.createElement("code",null,"*")," for issues assigned to any user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"creator"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The user that created the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"mentioned"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A user that's mentioned in the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of comma separated label names. Example: ",l.a.createElement("code",null,"bug,ui,@high")))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"comments"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#list-repository-issues"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-labels-for-issues-in-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#list-labels-for-issues-in-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List labels for issues in a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.listLabelsForMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-labels-for-issues-in-a-milestone"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-labels-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-labels-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List labels for a repository"),l.a.createElement(c["a"],{code:"octokit.issues.listLabelsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-labels-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-labels-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#list-labels-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List labels for an issue"),l.a.createElement(c["a"],{code:"octokit.issues.listLabelsOnIssue({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-labels-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-milestones"},l.a.createElement(r["AnchorLink"],{to:"#list-milestones","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List milestones"),l.a.createElement(c["a"],{code:"octokit.issues.listMilestones({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the milestone. Either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Either ",l.a.createElement("code",null,"due_on")," or ",l.a.createElement("code",null,"completeness"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The direction of the sort. Either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#list-milestones"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"lock-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#lock-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Lock an issue"),l.a.createElement("p",null,"Users with push access can lock an issue or pull request's conversation."),l.a.createElement("p",null,"Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.issues.lock({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"lock_reason"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"off-topic"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"too heated"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"resolved"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"spam")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#lock-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-all-labels-from-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#remove-all-labels-from-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove all labels from an issue"),l.a.createElement(c["a"],{code:"octokit.issues.removeAllLabels({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#remove-all-labels-from-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-assignees-from-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#remove-assignees-from-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove assignees from an issue"),l.a.createElement("p",null,"Removes one or more assignees from an issue."),l.a.createElement(c["a"],{code:"octokit.issues.removeAssignees({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Usernames of assignees to remove from an issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#remove-assignees-from-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-label-from-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-label-from-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a label from an issue"),l.a.createElement("p",null,"Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a ",l.a.createElement("code",null,"404 Not Found")," status if the label does not exist."),l.a.createElement(c["a"],{code:"octokit.issues.removeLabel({\n  owner,\n  repo,\n  issue_number,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#remove-a-label-from-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-labels-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#set-labels-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set labels for an issue"),l.a.createElement("p",null,"Removes any previous labels and sets the new labels for an issue."),l.a.createElement(c["a"],{code:"octokit.issues.setLabels({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The names of the labels to add to the issue. You can pass an empty array to remove all labels. ",l.a.createElement("strong",null,"Note:")," Alternatively, you can pass a single label as a ",l.a.createElement("code",null,"string")," or an ",l.a.createElement("code",null,"array")," of labels directly, but GitHub recommends passing an object with the ",l.a.createElement("code",null,"labels")," key."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#set-labels-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unlock-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#unlock-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unlock an issue"),l.a.createElement("p",null,"Users with push access can unlock an issue's conversation."),l.a.createElement(c["a"],{code:"octokit.issues.unlock({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#unlock-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#update-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an issue"),l.a.createElement("p",null,"Issue owners and users with push access can edit an issue."),l.a.createElement(c["a"],{code:"octokit.issues.update({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignee"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Login for the user that this issue should be assigned to. ",l.a.createElement("strong",null,"This field is deprecated.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"State of the issue. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"labels"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Labels to associate with this issue. Pass one or more Labels to ",l.a.createElement("em",null,"replace")," the set of Labels on this Issue. Send an empty array (",l.a.createElement("code",null,"[]"),") to clear all Labels from the Issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"assignees"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Logins for Users to assign to this issue. Pass one or more user logins to ",l.a.createElement("em",null,"replace")," the set of assignees on this Issue. Send an empty array (",l.a.createElement("code",null,"[]"),") to clear all assignees from the Issue. ",l.a.createElement("em",null,"NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/issues/#update-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an issue comment"),l.a.createElement(c["a"],{code:"octokit.issues.updateComment({\n  owner,\n  repo,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#update-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-label"},l.a.createElement(r["AnchorLink"],{to:"#update-a-label","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a label"),l.a.createElement(c["a"],{code:"octokit.issues.updateLabel({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"new_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing ",l.a.createElement("code",null,":strawberry:")," will render the emoji ",l.a.createElement("img",{src:"https://github.githubassets.com/images/icons/emoji/unicode/1f353.png",alt:":strawberry:",title:":strawberry:"}),". For a full list of available emoji and codes, see ",l.a.createElement(r["Link"],{to:"http://emoji-cheat-sheet.com/"},"emoji-cheat-sheet.com"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"color"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"http://www.color-hex.com/"},"hexadecimal color code")," for the label, without the leading ",l.a.createElement("code",null,"#"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the label."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#update-a-label"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-milestone"},l.a.createElement(r["AnchorLink"],{to:"#update-a-milestone","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a milestone"),l.a.createElement(c["a"],{code:"octokit.issues.updateMilestone({\n  owner,\n  repo,\n  milestone_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"milestone_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"milestone_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the milestone. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A description of the milestone."))),l.a.createElement("tr",null,l.a.createElement("td",null,"due_on"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The milestone due date. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#update-a-milestone"},"GitHub Developer Guide documentation"),".")))}},NqR8:function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{isubh:function(e,t,a,n){var l=e>>>0,r=t>>>0,c=a>>>0;return r-(n>>>0)-((~l&c|~(l^c)&l-c>>>0)>>>31)|0}})},NuVC:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-interaction-restrictions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-interaction-restrictions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get interaction restrictions for an organization"),l.a.createElement("p",null,"Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no restrictions, you will see an empty response."),l.a.createElement(c["a"],{code:"octokit.interactions.getRestrictionsForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-interaction-restrictions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-interaction-restrictions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get interaction restrictions for a repository"),l.a.createElement("p",null,"Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response."),l.a.createElement(c["a"],{code:"octokit.interactions.getRestrictionsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-interaction-restrictions-for-your-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#get-interaction-restrictions-for-your-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get interaction restrictions for your public repositories"),l.a.createElement("p",null,"Shows which type of GitHub user can interact with your public repositories and when the restriction expires. If there are no restrictions, you will see an empty response."),l.a.createElement(c["a"],{code:"octokit.interactions.getRestrictionsForYourPublicRepos();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-your-public-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-interaction-restrictions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#remove-interaction-restrictions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove interaction restrictions for an organization"),l.a.createElement("p",null,"Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions."),l.a.createElement(c["a"],{code:"octokit.interactions.removeRestrictionsForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-interaction-restrictions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#remove-interaction-restrictions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove interaction restrictions for a repository"),l.a.createElement("p",null,"Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions. If the interaction limit is set for the user or organization that owns this repository, you will receive a ",l.a.createElement("code",null,"409 Conflict")," response and will not be able to use this endpoint to change the interaction limit for a single repository."),l.a.createElement(c["a"],{code:"octokit.interactions.removeRestrictionsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-interaction-restrictions-from-your-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#remove-interaction-restrictions-from-your-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove interaction restrictions from your public repositories"),l.a.createElement("p",null,"Removes any interaction restrictions from your public repositories."),l.a.createElement(c["a"],{code:"octokit.interactions.removeRestrictionsForYourPublicRepos();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-from-your-public-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-interaction-restrictions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-interaction-restrictions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set interaction restrictions for an organization"),l.a.createElement("p",null,"Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. You must be an organization owner to set these restrictions. Setting the interaction limit at the organization level will overwrite any interaction limits that are set for individual repositories owned by the organization."),l.a.createElement(c["a"],{code:"octokit.interactions.setRestrictionsForOrg({\n  org,\n  limit,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"limit"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: ",l.a.createElement("code",null,"existing_users"),", ",l.a.createElement("code",null,"contributors_only"),", ",l.a.createElement("code",null,"collaborators_only"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"expiry"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The duration of the interaction restriction. Can be one of: ",l.a.createElement("code",null,"one_day"),", ",l.a.createElement("code",null,"three_days"),", ",l.a.createElement("code",null,"one_week"),", ",l.a.createElement("code",null,"one_month"),", ",l.a.createElement("code",null,"six_months"),". Default: ",l.a.createElement("code",null,"one_day"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-interaction-restrictions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#set-interaction-restrictions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set interaction restrictions for a repository"),l.a.createElement("p",null,"Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or admin access to set these restrictions. If an interaction limit is set for the user or organization that owns this repository, you will receive a ",l.a.createElement("code",null,"409 Conflict")," response and will not be able to use this endpoint to change the interaction limit for a single repository."),l.a.createElement(c["a"],{code:"octokit.interactions.setRestrictionsForRepo({\n  owner,\n  repo,\n  limit,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"limit"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: ",l.a.createElement("code",null,"existing_users"),", ",l.a.createElement("code",null,"contributors_only"),", ",l.a.createElement("code",null,"collaborators_only"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"expiry"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The duration of the interaction restriction. Can be one of: ",l.a.createElement("code",null,"one_day"),", ",l.a.createElement("code",null,"three_days"),", ",l.a.createElement("code",null,"one_week"),", ",l.a.createElement("code",null,"one_month"),", ",l.a.createElement("code",null,"six_months"),". Default: ",l.a.createElement("code",null,"one_day"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-interaction-restrictions-for-your-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#set-interaction-restrictions-for-your-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set interaction restrictions for your public repositories"),l.a.createElement("p",null,"Temporarily restricts which type of GitHub user can interact with your public repositories. Setting the interaction limit at the user level will overwrite any interaction limits that are set for individual repositories owned by the user."),l.a.createElement(c["a"],{code:"octokit.interactions.setRestrictionsForYourPublicRepos({\n  limit,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"limit"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: ",l.a.createElement("code",null,"existing_users"),", ",l.a.createElement("code",null,"contributors_only"),", ",l.a.createElement("code",null,"collaborators_only"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"expiry"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The duration of the interaction restriction. Can be one of: ",l.a.createElement("code",null,"one_day"),", ",l.a.createElement("code",null,"three_days"),", ",l.a.createElement("code",null,"one_week"),", ",l.a.createElement("code",null,"one_month"),", ",l.a.createElement("code",null,"six_months"),". Default: ",l.a.createElement("code",null,"one_day"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-your-public-repositories"},"GitHub Developer Guide documentation"),".")))}},O741:function(e,t,a){var n=a("hh1v");e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},ODXe:function(e,t,a){"use strict";function n(e){if(Array.isArray(e))return e}function l(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}a.d(t,"a",(function(){return o}));var r=a("BsWD");function c(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(e,t){return n(e)||l(e,t)||Object(r["a"])(e,t)||c()}},OZv6:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"To send custom requests you can use the lower-level ",l.a.createElement("code",null,"octokit.request()")," method"),l.a.createElement(c["a"],{code:'octokit.request("GET /");\n',lang:"js"}),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"baseUrl"),", headers and other defaults are already set. For more information on the ",l.a.createElement("code",null,"octokit.request()")," API see ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/request.js/"},l.a.createElement("code",null,"octokit/request.js"))),l.a.createElement("p",null,"All the endpoint methods such as ",l.a.createElement("code",null,"octokit.repos.get()")," are aliases of ",l.a.createElement("code",null,"octokit.request()")," with pre-bound default options. So you can use the ",l.a.createElement("code",null,"@octokit/request")," API to get the default options or get generic request option to use with your preferred request library."),l.a.createElement(c["a"],{code:'const defaultOptions = octokit.repos.get.endpoint.DEFAULTS;\nconst requestOptions = octokit.repos.get.endpoint({\n  owner: "octokit",\n  repo: "rest.js",\n});\n',lang:"js"}),l.a.createElement("p",null,"Note that authentication is not applied when retrieving request options from the ",l.a.createElement("code",null,"*.endpoint")," APIs.")))}},OxFa:function(e,t,a){},P4y1:function(e,t){e.exports={}},P940:function(e,t,a){"use strict";e.exports=function(){var e=arguments.length,t=new Array(e);while(e--)t[e]=arguments[e];return new this(t)}},PKDs:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-or-update-team-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#add-or-update-team-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add or update team membership for a user"),l.a.createElement("p",null,"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/"},"Synchronizing teams between your identity provider and GitHub"),'."'),l.a.createElement("p",null,'An organization owner can add someone who is not part of the team\'s organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the "pending" state until the person accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team.'),l.a.createElement("p",null,"If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PUT /organizations/","{","org_id","}","/team/","{","team_id","}","/memberships/","{","username","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.addOrUpdateMembershipForUserInOrg({\n  org,\n  team_slug,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The role that this user should have in the team. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - a normal member of the team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintainer")," - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-or-update-team-project-permissions"},l.a.createElement(r["AnchorLink"],{to:"#add-or-update-team-project-permissions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add or update team project permissions"),l.a.createElement("p",null,"Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have ",l.a.createElement("code",null,"admin")," permissions for the project. The project and team must be part of the same organization."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PUT /organizations/","{","org_id","}","/team/","{","team_id","}","/projects/","{","project_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.addOrUpdateProjectPermissionsInOrg({\n  org,\n  team_slug,\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant to the team for this project. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"read")," - team members can read, but not write to or administer this project.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"write")," - team members can read and write, but not administer this project.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can read, write and administer this project.",l.a.createElement("br",null),"Default: the team's ",l.a.createElement("code",null,"permission")," attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#add-or-update-team-project-permissions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-or-update-team-repository-permissions"},l.a.createElement(r["AnchorLink"],{to:"#add-or-update-team-repository-permissions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add or update team repository permissions"),l.a.createElement("p",null,"To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a ",l.a.createElement("code",null,"422 Unprocessable Entity")," status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PUT /organizations/","{","org_id","}","/team/","{","team_id","}","/repos/","{","owner","}","/","{","repo","}"),"."),l.a.createElement("p",null,'For more information about the permission levels, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization"},"Repository permission levels for an organization"),'".'),l.a.createElement(c["a"],{code:"octokit.teams.addOrUpdateRepoPermissionsInOrg({\n  org,\n  team_slug,\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant the team on this repository. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - team members can pull, but not push to or administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - team members can pull and push, but not administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can pull, push and administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintain")," - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"triage")," - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations."),l.a.createElement("p",null,"If no permission is specified, the team's ",l.a.createElement("code",null,"permission")," attribute will be used to determine what permission to grant the team on this repository."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#add-or-update-team-repository-permissions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-team-permissions-for-a-project"},l.a.createElement(r["AnchorLink"],{to:"#check-team-permissions-for-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check team permissions for a project"),l.a.createElement("p",null,"Checks whether a team has ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin")," permissions for an organization project. The response includes projects inherited from a parent team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/projects/","{","project_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.checkPermissionsForProjectInOrg({\n  org,\n  team_slug,\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#check-team-permissions-for-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-team-permissions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#check-team-permissions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check team permissions for a repository"),l.a.createElement("p",null,"Checks whether a team has ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"push"),", ",l.a.createElement("code",null,"maintain"),", ",l.a.createElement("code",null,"triage"),", or ",l.a.createElement("code",null,"pull")," permission for a repository. Repositories inherited through a parent team will also be checked."),l.a.createElement("p",null,"You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"application/vnd.github.v3.repository+json")," accept header."),l.a.createElement("p",null,"If a team doesn't have permission for the repository, you will receive a ",l.a.createElement("code",null,"404 Not Found")," response status."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/repos/","{","owner","}","/","{","repo","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.checkPermissionsForRepoInOrg({\n  org,\n  team_slug,\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#check-team-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-team"},l.a.createElement(r["AnchorLink"],{to:"#create-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a team"),l.a.createElement("p",null,"To create a team, the authenticated user must be a member or owner of ",l.a.createElement("code",null,"{","org","}"),'. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization"},"Setting team creation permissions"),'."'),l.a.createElement("p",null,"When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of ",l.a.createElement("code",null,"maintainers"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams"},"About teams"),'".'),l.a.createElement(c["a"],{code:"octokit.teams.create({\n  org,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"maintainers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"List GitHub IDs for organization members who will become team maintainers."))),l.a.createElement("tr",null,l.a.createElement("td",null,"repo_names"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,'The full name (e.g., "organization-name/repository-name") of repositories to add the team to.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"privacy"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of privacy this team should have. The options are:",l.a.createElement("br",null),l.a.createElement("strong",null,"For a non-nested team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"secret")," - only visible to organization owners and members of this team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"secret"),l.a.createElement("br",null),l.a.createElement("strong",null,"For a parent or child team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization.",l.a.createElement("br",null),"Default for child team: ",l.a.createElement("code",null,"closed")))),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated"),". The permission that new repositories will be added to the team with when none is specified. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - team members can pull, but not push to or administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - team members can pull and push, but not administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can pull, push and administer newly-added repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"parent_team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of a team to set as the parent team."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#create-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a discussion comment"),l.a.createElement("p",null,"Creates a new comment on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments"),"."),l.a.createElement(c["a"],{code:"octokit.teams.createDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion comment's body text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#create-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#create-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a discussion"),l.a.createElement("p",null,"Creates a new discussion post on a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions"),"."),l.a.createElement(c["a"],{code:"octokit.teams.createDiscussionInOrg({\n  org,\n  team_slug,\n  title,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's title."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's body text."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to ",l.a.createElement("code",null,"true")," to create a private post."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#create-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a discussion comment"),l.a.createElement("p",null,"Deletes a comment on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments/","{","comment_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.deleteDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#delete-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a discussion"),l.a.createElement("p",null,"Delete a discussion from a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.deleteDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#delete-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-team"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a team"),l.a.createElement("p",null,"To delete a team, the authenticated user must be an organization owner or team maintainer."),l.a.createElement("p",null,"If you are an organization owner, deleting a parent team will delete all of its child teams as well."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.deleteInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#delete-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-team-by-name"},l.a.createElement(r["AnchorLink"],{to:"#get-a-team-by-name","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a team by name"),l.a.createElement("p",null,"Gets a team using the team's ",l.a.createElement("code",null,"slug"),". GitHub generates the ",l.a.createElement("code",null,"slug")," from the team ",l.a.createElement("code",null,"name"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getByName({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#get-a-team-by-name"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a discussion comment"),l.a.createElement("p",null,"Get a specific comment on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments/","{","comment_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#get-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#get-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a discussion"),l.a.createElement("p",null,"Get a specific discussion on a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#get-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-team-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-team-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get team membership for a user"),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement("p",null,"To get a user's membership with a team, the team must be visible to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/memberships/","{","username","}"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The ",l.a.createElement("code",null,"role")," for organization owners returns as ",l.a.createElement("code",null,"maintainer"),". For more information about ",l.a.createElement("code",null,"maintainer")," roles, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#create-a-team"},"Create a team"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getMembershipForUserInOrg({\n  org,\n  team_slug,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List teams"),l.a.createElement("p",null,"Lists all teams in an organization that are visible to the authenticated user."),l.a.createElement(c["a"],{code:"octokit.teams.list({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-child-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-child-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List child teams"),l.a.createElement("p",null,"Lists the child teams of the team specified by ",l.a.createElement("code",null,"{","team_slug","}"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/teams"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listChildInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-child-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-discussion-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-discussion-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List discussion comments"),l.a.createElement("p",null,"List all comments on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listDiscussionCommentsInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-discussion-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-discussions"},l.a.createElement(r["AnchorLink"],{to:"#list-discussions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List discussions"),l.a.createElement("p",null,"List all discussions on a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listDiscussionsInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-discussions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-teams-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-teams-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List teams for the authenticated user"),l.a.createElement("p",null,"List all of the teams across all of the organizations to which the authenticated user belongs. This method requires ",l.a.createElement("code",null,"user"),", ",l.a.createElement("code",null,"repo"),", or ",l.a.createElement("code",null,"read:org")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope")," when authenticating via ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/"},"OAuth"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-teams-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-team-members"},l.a.createElement(r["AnchorLink"],{to:"#list-team-members","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List team members"),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement("p",null,"To list members in a team, the team must be visible to the authenticated user."),l.a.createElement(c["a"],{code:"octokit.teams.listMembersInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters members returned by their role in the team. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - normal members of the team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintainer")," - team maintainers.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - all members of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-team-members"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pending-team-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-pending-team-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pending team invitations"),l.a.createElement("p",null,"The return hash contains a ",l.a.createElement("code",null,"role")," field which refers to the Organization Invitation role and will be one of the following values: ",l.a.createElement("code",null,"direct_member"),", ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"billing_manager"),", ",l.a.createElement("code",null,"hiring_manager"),", or ",l.a.createElement("code",null,"reinstate"),". If the invitee is not a GitHub member, the ",l.a.createElement("code",null,"login")," field in the return hash will be ",l.a.createElement("code",null,"null"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/invitations"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listPendingInvitationsInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-pending-team-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-team-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-team-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List team projects"),l.a.createElement("p",null,"Lists the organization projects for a team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/projects"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listProjectsInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-team-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-team-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-team-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List team repositories"),l.a.createElement("p",null,"Lists a team's repositories visible to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/repos"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listReposInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-team-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-team-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#remove-team-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove team membership for a user"),l.a.createElement("p",null,"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/"},"Synchronizing teams between your identity provider and GitHub"),'."'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/memberships/","{","username","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.removeMembershipForUserInOrg({\n  org,\n  team_slug,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-project-from-a-team"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-project-from-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a project from a team"),l.a.createElement("p",null,"Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have ",l.a.createElement("code",null,"read")," access to both the team and project, or ",l.a.createElement("code",null,"admin")," access to the team or project. This endpoint removes the project from the team, but does not delete the project."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/projects/","{","project_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.removeProjectInOrg({\n  org,\n  team_slug,\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#remove-a-project-from-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-repository-from-a-team"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-repository-from-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a repository from a team"),l.a.createElement("p",null,"If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/repos/","{","owner","}","/","{","repo","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.removeRepoInOrg({\n  org,\n  team_slug,\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#remove-a-repository-from-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a discussion comment"),l.a.createElement("p",null,"Edits the body text of a discussion comment. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PATCH /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments/","{","comment_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.updateDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion comment's body text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#update-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#update-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a discussion"),l.a.createElement("p",null,"Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PATCH /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.updateDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's title."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's body text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#update-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-team"},l.a.createElement(r["AnchorLink"],{to:"#update-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a team"),l.a.createElement("p",null,"To edit a team, the authenticated user must either be an organization owner or a team maintainer."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PATCH /organizations/","{","org_id","}","/team/","{","team_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.updateInOrg({\n  org,\n  team_slug,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"privacy"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of privacy this team should have. Editing teams without specifying this parameter leaves ",l.a.createElement("code",null,"privacy")," intact. When a team is nested, the ",l.a.createElement("code",null,"privacy")," for parent teams cannot be ",l.a.createElement("code",null,"secret"),". The options are:",l.a.createElement("br",null),l.a.createElement("strong",null,"For a non-nested team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"secret")," - only visible to organization owners and members of this team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization.",l.a.createElement("br",null),l.a.createElement("strong",null,"For a parent or child team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated"),". The permission that new repositories will be added to the team with when none is specified. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - team members can pull, but not push to or administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - team members can pull and push, but not administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can pull, push and administer newly-added repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"parent_team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of a team to set as the parent team."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#update-a-team"},"GitHub Developer Guide documentation"),".")))}},PKPk:function(e,t,a){"use strict";var n=a("ZUd8").charAt,l=a("afO8"),r=a("fdAy"),c="String Iterator",o=l.set,i=l.getterFor(c);r(String,"String",(function(e){o(this,{type:c,string:String(e),index:0})}),(function(){var e,t=i(this),a=t.string,l=t.index;return l>=a.length?{value:void 0,done:!0}:(e=n(a,l),t.index+=e.length,{value:e,done:!1})}))},Q687:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-github-actions-billing-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-billing-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions billing for an organization"),l.a.createElement("p",null,"Gets the summary of the free and paid GitHub Actions minutes used."),l.a.createElement("p",null,'Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"admin:org")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubActionsBillingOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-actions-billing-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-billing-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-billing-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions billing for a user"),l.a.createElement("p",null,"Gets the summary of the free and paid GitHub Actions minutes used."),l.a.createElement("p",null,'Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubActionsBillingUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-actions-billing-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-packages-billing-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-github-packages-billing-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Packages billing for an organization"),l.a.createElement("p",null,"Gets the free and paid storage usued for GitHub Packages in gigabytes."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"admin:org")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubPackagesBillingOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-packages-billing-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-packages-billing-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-github-packages-billing-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Packages billing for a user"),l.a.createElement("p",null,"Gets the free and paid storage used for GitHub Packages in gigabytes."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubPackagesBillingUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-packages-billing-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-shared-storage-billing-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-shared-storage-billing-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get shared storage billing for an organization"),l.a.createElement("p",null,"Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"admin:org")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getSharedStorageBillingOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-shared-storage-billing-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-shared-storage-billing-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-shared-storage-billing-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get shared storage billing for a user"),l.a.createElement("p",null,"Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getSharedStorageBillingUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-shared-storage-billing-for-a-user"},"GitHub Developer Guide documentation"),".")))}},Q7Pz:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("Sssf"),o=a("i4U9"),i=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{includes:function(e){return i(c(r(this)),(function(t,a){if(o(a,e))return i.stop()}),void 0,!0,!0).stopped}})},QCnb:function(e,t,a){"use strict";e.exports=a("+wdc")},QFcT:function(e,t,a){var n=a("I+eb"),l=Math.hypot,r=Math.abs,c=Math.sqrt,o=!!l&&l(1/0,NaN)!==1/0;n({target:"Math",stat:!0,forced:o},{hypot:function(e,t){var a,n,l=0,o=0,i=arguments.length,s=0;while(o<i)a=r(arguments[o++]),s<a?(n=s/a,l=l*n*n+1,s=a):a>0?(n=a/s,l+=n*n):l+=a;return s===1/0?1/0:s*c(l)}})},QGkA:function(e,t,a){var n=a("RNIs");n("flat")},QIpd:function(e,t,a){var n=a("xrYK");e.exports=function(e){if("number"!=typeof e&&"Number"!=n(e))throw TypeError("Incorrect invocation");return+e}},QWBl:function(e,t,a){"use strict";var n=a("I+eb"),l=a("F8JR");n({target:"Array",proto:!0,forced:[].forEach!=l},{forEach:l})},Qo9l:function(e,t,a){var n=a("2oRo");e.exports=n},QoFd:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-rate-limit-status-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-rate-limit-status-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get rate limit status for the authenticated user"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Accessing this endpoint does not count against your REST API rate limit."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The ",l.a.createElement("code",null,"rate")," object is deprecated. If you're writing new API client code or updating existing code, you should use the ",l.a.createElement("code",null,"core")," object instead of the ",l.a.createElement("code",null,"rate")," object. The ",l.a.createElement("code",null,"core")," object contains the same information that is present in the ",l.a.createElement("code",null,"rate")," object."),l.a.createElement(c["a"],{code:"octokit.rateLimit.get();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/rate_limit/#get-rate-limit-status-for-the-authenticated-user"},"GitHub Developer Guide documentation"),".")))}},"R3/m":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("Sssf"),i=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{every:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return!i(a,(function(e,a){if(!n(a,e,t))return i.stop()}),void 0,!0,!0).stopped}})},RGYn:function(e){e.exports=JSON.parse('{"menus":{"en-US":{"*":[{"path":"/en-US","title":"Octokit Rest API","meta":{"order":1}}],"/en-US/api":[{"path":"/en-US/api/actions","title":"actions","meta":{}},{"path":"/en-US/api/activity","title":"activity","meta":{}},{"path":"/en-US/api/apps","title":"apps","meta":{}},{"path":"/en-US/api/billing","title":"billing","meta":{}},{"path":"/en-US/api/checks","title":"checks","meta":{}},{"path":"/en-US/api/code-scanning","title":"codeScanning","meta":{}},{"path":"/en-US/api/codes-of-conduct","title":"codesOfConduct","meta":{}},{"path":"/en-US/api/emojis","title":"emojis","meta":{}},{"path":"/en-US/api/enterprise-admin","title":"enterpriseAdmin","meta":{}},{"path":"/en-US/api/gists","title":"gists","meta":{}},{"path":"/en-US/api/git","title":"git","meta":{}},{"path":"/en-US/api/gitignore","title":"gitignore","meta":{}},{"path":"/en-US/api/interactions","title":"interactions","meta":{}},{"path":"/en-US/api/issues","title":"issues","meta":{}},{"path":"/en-US/api/licenses","title":"licenses","meta":{}},{"path":"/en-US/api/markdown","title":"markdown","meta":{}},{"path":"/en-US/api/meta","title":"meta","meta":{}},{"path":"/en-US/api/migrations","title":"migrations","meta":{}},{"path":"/en-US/api/orgs","title":"orgs","meta":{}},{"path":"/en-US/api/projects","title":"projects","meta":{}},{"path":"/en-US/api/pulls","title":"pulls","meta":{}},{"path":"/en-US/api/rate-limit","title":"rateLimit","meta":{}},{"path":"/en-US/api/reactions","title":"reactions","meta":{}},{"path":"/en-US/api/repos","title":"repos","meta":{}},{"path":"/en-US/api/search","title":"search","meta":{}},{"path":"/en-US/api/secret-scanning","title":"secretScanning","meta":{}},{"path":"/en-US/api/teams","title":"teams","meta":{}},{"path":"/en-US/api/users","title":"users","meta":{}}],"/en-US/guide":[{"path":"/en-US/guide/00_usage","title":"Usage","meta":{}},{"path":"/en-US/guide/01_authentication","title":"Authentication","meta":{}},{"path":"/en-US/guide/02_previews","title":"Previews","meta":{}},{"path":"/en-US/guide/03_request_formats","title":"Request formats & aborts","meta":{}},{"path":"/en-US/guide/04_custom_requests","title":"Custom requests","meta":{}},{"path":"/en-US/guide/05_pagination","title":"Pagination","meta":{}},{"path":"/en-US/guide/06_hooks","title":"Hooks","meta":{}},{"path":"/en-US/guide/07_custom_endpoints","title":"Custom endpoint methods","meta":{}},{"path":"/en-US/guide/08_plugins","title":"Plugins","meta":{}},{"path":"/en-US/guide/09_throttling","title":"Throttling","meta":{}},{"path":"/en-US/guide/10_retries","title":"Automatic retries","meta":{}},{"path":"/en-US/guide/11_logging","title":"Logging","meta":{}},{"path":"/en-US/guide/12_debug","title":"Debug","meta":{}}]},"zh-CN":{"*":[{"path":"/","title":"Octokit Rest API","meta":{"order":1}}],"/api":[{"path":"/api/actions","title":"actions","meta":{}},{"path":"/api/activity","title":"activity","meta":{}},{"path":"/api/apps","title":"apps","meta":{}},{"path":"/api/billing","title":"billing","meta":{}},{"path":"/api/checks","title":"checks","meta":{}},{"path":"/api/code-scanning","title":"codeScanning","meta":{}},{"path":"/api/codes-of-conduct","title":"codesOfConduct","meta":{}},{"path":"/api/emojis","title":"emojis","meta":{}},{"path":"/api/enterprise-admin","title":"enterpriseAdmin","meta":{}},{"path":"/api/gists","title":"gists","meta":{}},{"path":"/api/git","title":"git","meta":{}},{"path":"/api/gitignore","title":"gitignore","meta":{}},{"path":"/api/interactions","title":"interactions","meta":{}},{"path":"/api/issues","title":"issues","meta":{}},{"path":"/api/licenses","title":"licenses","meta":{}},{"path":"/api/markdown","title":"markdown","meta":{}},{"path":"/api/meta","title":"meta","meta":{}},{"path":"/api/migrations","title":"migrations","meta":{}},{"path":"/api/orgs","title":"orgs","meta":{}},{"path":"/api/projects","title":"projects","meta":{}},{"path":"/api/pulls","title":"pulls","meta":{}},{"path":"/api/rate-limit","title":"rateLimit","meta":{}},{"path":"/api/reactions","title":"reactions","meta":{}},{"path":"/api/repos","title":"repos","meta":{}},{"path":"/api/search","title":"search","meta":{}},{"path":"/api/secret-scanning","title":"secretScanning","meta":{}},{"path":"/api/teams","title":"teams","meta":{}},{"path":"/api/users","title":"users","meta":{}}],"/guide":[{"path":"/guide/00_usage","title":"Usage","meta":{}},{"path":"/guide/01_authentication","title":"Authentication","meta":{}},{"path":"/guide/02_previews","title":"Previews","meta":{}},{"path":"/guide/03_request_formats","title":"Request formats & aborts","meta":{}},{"path":"/guide/04_custom_requests","title":"Custom requests","meta":{}},{"path":"/guide/05_pagination","title":"Pagination","meta":{}},{"path":"/guide/06_hooks","title":"Hooks","meta":{}},{"path":"/guide/07_custom_endpoints","title":"Custom endpoint methods","meta":{}},{"path":"/guide/08_plugins","title":"Plugins","meta":{}},{"path":"/guide/09_throttling","title":"Throttling","meta":{}},{"path":"/guide/10_retries","title":"Automatic retries","meta":{}},{"path":"/guide/11_logging","title":"Logging","meta":{}},{"path":"/guide/12_debug","title":"Debug","meta":{}}]}},"locales":[{"name":"zh-CN","label":"\u4e2d\u6587"},{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"Guide","path":"/en-US/guide"},{"title":"API","path":"/en-US/api"},{"title":"GitHub","path":"https://github.com/actions-cool/octokit-rest"}],"zh-CN":[{"title":"\u4ecb \u7ecd","path":"/guide"},{"title":"API","path":"/api"},{"title":"GitHub","path":"https://github.com/actions-cool/octokit-rest"}]},"title":"Octokit Rest API","logo":"https://avatars.githubusercontent.com/u/3430433?s=200&v=4","mode":"site","repository":{"url":"https://github.com/actions-cool/octokit-rest","branch":"main"},"theme":{}}')},RIqP:function(e,t,a){var n=a("Ijbi"),l=a("EbDI"),r=a("ZhPi"),c=a("Bnag");function o(e){return n(e)||l(e)||r(e)||c()}e.exports=o},RK3t:function(e,t,a){var n=a("0Dky"),l=a("xrYK"),r="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==l(e)?r.call(e,""):Object(e)}:Object},RN6c:function(e,t,a){var n=a("2oRo");e.exports=function(e,t){var a=n.console;a&&a.error&&(1===arguments.length?a.error(e):a.error(e,t))}},RNIs:function(e,t,a){var n=a("tiKp"),l=a("fHMY"),r=a("m/L8"),c=n("unscopables"),o=Array.prototype;void 0==o[c]&&r.f(o,c,{configurable:!0,value:l(null)}),e.exports=function(e){o[c][e]=!0}},ROdP:function(e,t,a){var n=a("hh1v"),l=a("xrYK"),r=a("tiKp"),c=r("match");e.exports=function(e){var t;return n(e)&&(void 0!==(t=e[c])?!!t:"RegExp"==l(e))}},Rfxz:function(e,t,a){"use strict";var n=a("I+eb"),l=a("tycR").some,r=a("pkCn"),c=a("rkAj"),o=r("some"),i=c("some");n({target:"Array",proto:!0,forced:!o||!i},{some:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}})},Rm1S:function(e,t,a){"use strict";var n=a("14Sl"),l=a("glrk"),r=a("UMSQ"),c=a("HYAF"),o=a("iqWW"),i=a("FMNM");n("match",1,(function(e,t,a){return[function(t){var a=c(this),n=void 0==t?void 0:t[e];return void 0!==n?n.call(t,a):new RegExp(t)[e](String(a))},function(e){var n=a(t,e,this);if(n.done)return n.value;var c=l(e),s=String(this);if(!c.global)return i(c,s);var u=c.unicode;c.lastIndex=0;var m,d=[],E=0;while(null!==(m=i(c,s))){var p=String(m[0]);d[E]=p,""===p&&(c.lastIndex=o(s,r(c.lastIndex),u)),E++}return 0===E?null:d}]}))},S5Sd:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"render-a-markdown-document"},l.a.createElement(r["AnchorLink"],{to:"#render-a-markdown-document","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Render a Markdown document"),l.a.createElement(c["a"],{code:"octokit.markdown.render({\n  text,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"text"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The Markdown text to render in HTML."))),l.a.createElement("tr",null,l.a.createElement("td",null,"mode"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The rendering mode."))),l.a.createElement("tr",null,l.a.createElement("td",null,"context"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The repository context to use when creating references in ",l.a.createElement("code",null,"gfm")," mode."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/markdown/#render-a-markdown-document"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"render-a-markdown-document-in-raw-mode"},l.a.createElement(r["AnchorLink"],{to:"#render-a-markdown-document-in-raw-mode","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Render a Markdown document in raw mode"),l.a.createElement("p",null,"You must send Markdown as plain text (using a ",l.a.createElement("code",null,"Content-Type")," header of ",l.a.createElement("code",null,"text/plain")," or ",l.a.createElement("code",null,"text/x-markdown"),") to this endpoint, rather than using JSON format. In raw mode, ",l.a.createElement(r["Link"],{to:"https://github.github.com/gfm/"},"GitHub Flavored Markdown")," is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less."),l.a.createElement(c["a"],{code:"octokit.markdown.renderRaw({\n  data,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"data"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"raw markdown text"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode"},"GitHub Developer Guide documentation"),".")))}},S6PD:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"check-if-a-pull-request-has-been-merged"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-pull-request-has-been-merged","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a pull request has been merged"),l.a.createElement(c["a"],{code:"octokit.pulls.checkIfMerged({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#check-if-a-pull-request-has-been-merged"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#create-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a pull request"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request."),l.a.createElement("p",null,"You can create a new pull request."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.create({\n  owner,\n  repo,\n  head,\n  base,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the new pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace ",l.a.createElement("code",null,"head")," with a user like this: ",l.a.createElement("code",null,"username:branch"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"maintainer_can_modify"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/"},"maintainers can modify")," the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"draft"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,'Indicates whether the pull request is a draft. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-pull-requests#draft-pull-requests"},"Draft Pull Requests"),'" in the GitHub Help documentation to learn more.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"issue"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#create-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-reply-for-a-review-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-reply-for-a-review-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a reply for a review comment"),l.a.createElement("p",null,"Creates a reply to a review comment for a pull request. For the ",l.a.createElement("code",null,"comment_id"),", provide the ID of the review comment you are replying to. This must be the ID of a ",l.a.createElement("em",null,"top-level review comment"),", not a reply to that comment. Replies to replies are not supported."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.createReplyForReviewComment({\n  owner,\n  repo,\n  pull_number,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text of the review comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-reply-for-a-review-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#create-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a review for a pull request"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,"Pull request reviews created in the ",l.a.createElement("code",null,"PENDING")," state do not include the ",l.a.createElement("code",null,"submitted_at")," property in the response."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," To comment on a specific line in a file, you need to first determine the ",l.a.createElement("em",null,"position")," of that line in the diff. The GitHub REST API v3 offers the ",l.a.createElement("code",null,"application/vnd.github.v3.diff")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types#commits-commit-comparison-and-pull-requests"},"media type"),". To see a pull request diff, add this media type to the ",l.a.createElement("code",null,"Accept")," header of a call to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-pull-request"},"single pull request")," endpoint."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"position"),' value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.'),l.a.createElement(c["a"],{code:"octokit.pulls.createReview({\n        owner,\nrepo,\npull_number,\ncomments[].path,\ncomments[].body\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the ",l.a.createElement("code",null,"position"),". Defaults to the most recent commit in the pull request when you do not specify a value."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required")," when using ",l.a.createElement("code",null,"REQUEST_CHANGES")," or ",l.a.createElement("code",null,"COMMENT")," for the ",l.a.createElement("code",null,"event")," parameter. The body text of the pull request review."))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The review action you want to perform. The review actions include: ",l.a.createElement("code",null,"APPROVE"),", ",l.a.createElement("code",null,"REQUEST_CHANGES"),", or ",l.a.createElement("code",null,"COMMENT"),". By leaving this blank, you set the review action state to ",l.a.createElement("code",null,"PENDING"),", which means you will need to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request"},"submit the pull request review")," when you are ready."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Use the following table to specify the location, destination, and contents of the draft review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The relative path to the file that necessitates a review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].position"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Text of the review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].start_line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comments[].start_side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#create-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a review comment for a pull request"),l.a.createElement("p",null,'Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#create-an-issue-comment"},"Create an issue comment"),'." We recommend creating a review comment using ',l.a.createElement("code",null,"line"),", ",l.a.createElement("code",null,"side"),", and optionally ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"start_side")," if your comment applies to more than one line in the pull request diff."),l.a.createElement("p",null,"You can still create a review comment using the ",l.a.createElement("code",null,"position")," parameter. When you use ",l.a.createElement("code",null,"position"),", the ",l.a.createElement("code",null,"line"),", ",l.a.createElement("code",null,"side"),", ",l.a.createElement("code",null,"start_line"),", and ",l.a.createElement("code",null,"start_side")," parameters are not required. For more information, see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request-preview-notices"},l.a.createElement("code",null,"comfort-fade")," preview notice"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.'),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.createReviewComment({\n  owner,\n  repo,\n  pull_number,\n  body,\n  path,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text of the review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the ",l.a.createElement("code",null,"position"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The relative path to the file that necessitates a comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required without ",l.a.createElement("code",null,"comfort-fade")," preview"),". The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note above."))),l.a.createElement("tr",null,l.a.createElement("td",null,"side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required with ",l.a.createElement("code",null,"comfort-fade")," preview"),". In a split diff view, the side of the diff that the pull request's changes appear on. Can be ",l.a.createElement("code",null,"LEFT")," or ",l.a.createElement("code",null,"RIGHT"),". Use ",l.a.createElement("code",null,"LEFT")," for deletions that appear in red. Use ",l.a.createElement("code",null,"RIGHT"),' for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-comparing-branches-in-pull-requests#diff-view-options"},"Diff view options"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required with ",l.a.createElement("code",null,"comfort-fade")," preview"),". The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to."))),l.a.createElement("tr",null,l.a.createElement("td",null,"start_line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when using multi-line comments"),". To create multi-line comments, you must use the ",l.a.createElement("code",null,"comfort-fade")," preview header. The ",l.a.createElement("code",null,"start_line"),' is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request"},"Commenting on a pull request"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"start_side"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when using multi-line comments"),". To create multi-line comments, you must use the ",l.a.createElement("code",null,"comfort-fade")," preview header. The ",l.a.createElement("code",null,"start_side")," is the starting side of the diff that the comment applies to. Can be ",l.a.createElement("code",null,"LEFT")," or ",l.a.createElement("code",null,"RIGHT"),'. To learn more about multi-line comments, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request"},"Commenting on a pull request"),'" in the GitHub Help documentation. See ',l.a.createElement("code",null,"side")," in this table for additional context."))),l.a.createElement("tr",null,l.a.createElement("td",null,"in_reply_to"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-pending-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-pending-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a pending review for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.deletePendingReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#delete-a-pending-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a review comment for a pull request"),l.a.createElement("p",null,"Deletes a review comment."),l.a.createElement(c["a"],{code:"octokit.pulls.deleteReviewComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#delete-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"dismiss-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#dismiss-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Dismiss a review for a pull request"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," To dismiss a pull request review on a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#branches"},"protected branch"),", you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews."),l.a.createElement(c["a"],{code:"octokit.pulls.dismissReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  message,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The message for the pull request review dismissal"))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#dismiss-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#get-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a pull request"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists details of a pull request by providing its number."),l.a.createElement("p",null,"When you get, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls/#create-a-pull-request"},"create"),", or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#update-a-pull-request"},"edit")," a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the ",l.a.createElement("code",null,"mergeable"),' key. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"},"Checking mergeability of pull requests"),'".'),l.a.createElement("p",null,"The value of the ",l.a.createElement("code",null,"mergeable")," attribute can be ",l.a.createElement("code",null,"true"),", ",l.a.createElement("code",null,"false"),", or ",l.a.createElement("code",null,"null"),". If the value is ",l.a.createElement("code",null,"null"),", then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-",l.a.createElement("code",null,"null")," value for the ",l.a.createElement("code",null,"mergeable")," attribute in the response. If ",l.a.createElement("code",null,"mergeable")," is ",l.a.createElement("code",null,"true"),", then ",l.a.createElement("code",null,"merge_commit_sha")," will be the SHA of the ",l.a.createElement("em",null,"test")," merge commit."),l.a.createElement("p",null,"The value of the ",l.a.createElement("code",null,"merge_commit_sha")," attribute changes depending on the state of the pull request. Before merging a pull request, the ",l.a.createElement("code",null,"merge_commit_sha")," attribute holds the SHA of the ",l.a.createElement("em",null,"test")," merge commit. After merging a pull request, the ",l.a.createElement("code",null,"merge_commit_sha")," attribute changes depending on how you merged the pull request:"),l.a.createElement("ul",null,l.a.createElement("li",null,"If merged as a ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-merge-methods-on-github/"},"merge commit"),", ",l.a.createElement("code",null,"merge_commit_sha")," represents the SHA of the merge commit."),l.a.createElement("li",null,"If merged via a ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits"},"squash"),", ",l.a.createElement("code",null,"merge_commit_sha")," represents the SHA of the squashed commit on the base branch."),l.a.createElement("li",null,"If ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits"},"rebased"),", ",l.a.createElement("code",null,"merge_commit_sha")," represents the commit that the base branch was updated to.")),l.a.createElement("p",null,"Pass the appropriate ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," to fetch diff and patch formats."),l.a.createElement(c["a"],{code:"octokit.pulls.get({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#get-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#get-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a review for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.getReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#get-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a review comment for a pull request"),l.a.createElement("p",null,"Provides details for a review comment."),l.a.createElement(c["a"],{code:"octokit.pulls.getReviewComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pull-requests"},l.a.createElement(r["AnchorLink"],{to:"#list-pull-requests","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pull requests"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.pulls.list({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all")," to filter by state."))),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter pulls by head user or head organization and branch name in the format of ",l.a.createElement("code",null,"user:ref-name")," or ",l.a.createElement("code",null,"organization:ref-name"),". For example: ",l.a.createElement("code",null,"github:new-script-format")," or ",l.a.createElement("code",null,"octocat:test-branch"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter pulls by base branch name. Example: ",l.a.createElement("code",null,"gh-pages"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"What to sort results by. Can be either ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"popularity")," (comment count) or ",l.a.createElement("code",null,"long-running")," (age, filtering by pulls updated in the last month)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The direction of the sort. Can be either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: ",l.a.createElement("code",null,"desc")," when sort is ",l.a.createElement("code",null,"created")," or sort is not specified, otherwise ",l.a.createElement("code",null,"asc"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#list-pull-requests"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-comments-for-a-pull-request-review"},l.a.createElement(r["AnchorLink"],{to:"#list-comments-for-a-pull-request-review","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List comments for a pull request review"),l.a.createElement("p",null,"List comments for a specific pull request review."),l.a.createElement(c["a"],{code:"octokit.pulls.listCommentsForReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-comments-for-a-pull-request-review"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commits-on-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-commits-on-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commits on a pull request"),l.a.createElement("p",null,"Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"List commits")," endpoint."),l.a.createElement(c["a"],{code:"octokit.pulls.listCommits({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#list-commits-on-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pull-requests-files"},l.a.createElement(r["AnchorLink"],{to:"#list-pull-requests-files","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pull requests files"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default."),l.a.createElement(c["a"],{code:"octokit.pulls.listFiles({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#list-pull-requests-files"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-requested-reviewers-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-requested-reviewers-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List requested reviewers for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.listRequestedReviewers({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-requested-reviewers-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-review-comments-on-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-review-comments-on-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List review comments on a pull request"),l.a.createElement("p",null,"Lists all review comments for a pull request. By default, review comments are in ascending order by ID."),l.a.createElement(c["a"],{code:"octokit.pulls.listReviewComments({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-review-comments-on-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-review-comments-in-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-review-comments-in-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List review comments in a repository"),l.a.createElement("p",null,"Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID."),l.a.createElement(c["a"],{code:"octokit.pulls.listReviewCommentsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be either ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-review-comments-in-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reviews-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#list-reviews-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reviews for a pull request"),l.a.createElement("p",null,"The list of reviews returns in chronological order."),l.a.createElement(c["a"],{code:"octokit.pulls.listReviews({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-reviews-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"merge-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#merge-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merge a pull request"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.merge({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Title for the automatic commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_message"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Extra detail to append to automatic commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"SHA that pull request head must match to allow merge."))),l.a.createElement("tr",null,l.a.createElement("td",null,"merge_method"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Merge method to use. Possible values are ",l.a.createElement("code",null,"merge"),", ",l.a.createElement("code",null,"squash")," or ",l.a.createElement("code",null,"rebase"),". Default is ",l.a.createElement("code",null,"merge"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#merge-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-requested-reviewers-from-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#remove-requested-reviewers-from-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove requested reviewers from a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.removeRequestedReviewers({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of user ",l.a.createElement("code",null,"login"),"s that will be removed."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of team ",l.a.createElement("code",null,"slug"),"s that will be removed."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"request-reviewers-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#request-reviewers-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Request reviewers for a pull request"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.pulls.requestReviewers({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of user ",l.a.createElement("code",null,"login"),"s that will be requested."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_reviewers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of team ",l.a.createElement("code",null,"slug"),"s that will be requested."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#request-reviewers-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"submit-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#submit-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Submit a review for a pull request"),l.a.createElement(c["a"],{code:"octokit.pulls.submitReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  event,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The body text of the pull request review"))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The review action you want to perform. The review actions include: ",l.a.createElement("code",null,"APPROVE"),", ",l.a.createElement("code",null,"REQUEST_CHANGES"),", or ",l.a.createElement("code",null,"COMMENT"),". When you leave this blank, the API returns ",l.a.createElement("em",null,"HTTP 422 (Unrecognizable entity)")," and sets the review action state to ",l.a.createElement("code",null,"PENDING"),", which means you will need to re-submit the pull request review using a review action."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#update-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a pull request"),l.a.createElement("p",null,"Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request."),l.a.createElement(c["a"],{code:"octokit.pulls.update({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the pull request."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"State of this Pull Request. Either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"closed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"maintainer_can_modify"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/"},"maintainers can modify")," the pull request."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#update-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-pull-request-branch"},l.a.createElement(r["AnchorLink"],{to:"#update-a-pull-request-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a pull request branch"),l.a.createElement("p",null,"Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch."),l.a.createElement(c["a"],{code:"octokit.pulls.updateBranch({\n  owner,\n  repo,\n  pull_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"expected_head_sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a ",l.a.createElement("code",null,"422 Unprocessable Entity"),' status. You can use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"List commits"),"\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/pulls/#update-a-pull-request-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-review-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#update-a-review-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a review for a pull request"),l.a.createElement("p",null,"Update the review summary comment with new text."),l.a.createElement(c["a"],{code:"octokit.pulls.updateReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"pull_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"review_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"review_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The body text of the pull request review."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#update-a-review-for-a-pull-request"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-review-comment-for-a-pull-request"},l.a.createElement(r["AnchorLink"],{to:"#update-a-review-comment-for-a-pull-request","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a review comment for a pull request"),l.a.createElement("p",null,"Enables you to edit a review comment."),l.a.createElement(c["a"],{code:"octokit.pulls.updateReviewComment({\n  owner,\n  repo,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text of the reply to the review comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#update-a-review-comment-for-a-pull-request"},"GitHub Developer Guide documentation"),".")))}},SEBh:function(e,t,a){var n=a("glrk"),l=a("HAuM"),r=a("tiKp"),c=r("species");e.exports=function(e,t){var a,r=n(e).constructor;return void 0===r||void 0==(a=n(r)[c])?t:l(a)}},SL6q:function(e,t,a){var n=a("I+eb"),l=a("voyM"),r=a("vo4V");n({target:"Math",stat:!0},{fscale:function(e,t,a,n,c){return r(l(e,t,a,n,c))}})},STAE:function(e,t,a){var n=a("0Dky");e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},SYor:function(e,t,a){"use strict";var n=a("I+eb"),l=a("WKiH").trim,r=a("yNLB");n({target:"String",proto:!0,forced:r("trim")},{trim:function(){return l(this)}})},Si40:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("SEBh"),s=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{symmetricDifference:function(e){var t=c(this),a=new(i(t,r("Set")))(t),n=o(a["delete"]),l=o(a.add);return s(e,(function(e){n.call(a,e)||l.call(a,e)})),a}})},SpvK:function(e,t,a){var n=a("dOgj");n("Float64",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},Sssf:function(e,t,a){var n=a("xDBR"),l=a("mh/w");e.exports=n?l:function(e){return Map.prototype.entries.call(e)}},SuFq:function(e,t,a){var n=a("I+eb"),l=a("0GbY"),r=a("HAuM"),c=a("glrk"),o=a("hh1v"),i=a("fHMY"),s=a("BTho"),u=a("0Dky"),m=l("Reflect","construct"),d=u((function(){function e(){}return!(m((function(){}),[],e)instanceof e)})),E=!u((function(){m((function(){}))})),p=d||E;n({target:"Reflect",stat:!0,forced:p,sham:p},{construct:function(e,t){r(e),c(t);var a=arguments.length<3?e:r(arguments[2]);if(E&&!d)return m(e,t,a);if(e==a){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var n=[null];return n.push.apply(n,t),new(s.apply(e,n))}var l=a.prototype,u=i(o(l)?l:Object.prototype),p=Function.apply.call(e,u,t);return o(p)?p:u}})},Svka:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"All endpoint methods starting with ",l.a.createElement("code",null,".list*")," do not return all results at once but instead return the first 30 items by default, see also ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#pagination"},"GitHub\u2019s REST API pagination documentation"),"."),l.a.createElement("p",null,"To automatically receive all results across all pages, you can use the ",l.a.createElement("code",null,"octokit.paginate()")," method:"),l.a.createElement(c["a"],{code:'octokit\n  .paginate("GET /repos/{owner}/{repo}/issues", {\n    owner: "octokit",\n    repo: "rest.js",\n  })\n  .then((issues) => {\n    // issues is an array of all issue objects. It is not wrapped in a { data, headers, status, url } object\n    // like results from `octokit.request()` or any of the endpoint methods such as `octokit.issues.listForRepo()`\n  });\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,"octokit.paginate()")," accepts the same options as ",l.a.createElement(r["AnchorLink"],{to:"#custom-requests"},l.a.createElement("code",null,"octokit.request()")),". You can optionally pass an additional function to map the results from each response. The map must return a new value, usually an array with mapped data."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," the map function is called with the ",l.a.createElement("code",null,"{"," data, headers, status, url ","}")," response object. The ",l.a.createElement("code",null,"data")," property is guaranteed to be an array of the result items, even for list endpoints that respond with an object instead of an array, such as the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/reference/search/#example"},"search endpoints"),"."),l.a.createElement(c["a"],{code:'octokit\n  .paginate(\n    "GET /repos/{owner}/{repo}/issues",\n    { owner: "octokit", repo: "rest.js" },\n    (response) => response.data.map((issue) => issue.title)\n  )\n  .then((issueTitles) => {\n    // issueTitles is now an array with the titles only\n  });\n',lang:"js"}),l.a.createElement("p",null,"To stop paginating early, you can call the ",l.a.createElement("code",null,"done()")," function passed as 2nd argument to the response map function. Note that you still have to return the value you want to map the response to, otherwise the last response will be mapped to undefined."),l.a.createElement(c["a"],{code:'octokit.paginate("GET /organizations", (response, done) => {\n  if (response.data.find((issues) => issue.body.includes("something"))) {\n    done();\n  }\n  return response.data;\n});\n',lang:"js"}),l.a.createElement("p",null,"To paginate responses for one of the registered endpoint methods such as ",l.a.createElement("code",null,"octokit.issues.listForRepo()")," you can pass the method directly as first argument to ",l.a.createElement("code",null,"octokit.paginate"),":"),l.a.createElement(c["a"],{code:'octokit\n  .paginate(octokit.issues.listForRepo, {\n    owner: "octokit",\n    repo: "rest.js",\n  })\n  .then((issues) => {\n    // issues is an array of all issue objects\n  });\n',lang:"js"}),l.a.createElement("p",null,"If your runtime environment supports async iterators (such as most modern browsers and Node 10+), you can iterate through each response"),l.a.createElement(c["a"],{code:'for await (const response of octokit.paginate.iterator(\n  octokit.issues.listForRepo,\n  {\n    owner: "octokit",\n    repo: "rest.js",\n  }\n)) {\n  // do whatever you want with each response, break out of the loop, etc.\n}\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,"octokit.paginate.iterator()")," accepts the same options as ",l.a.createElement("code",null,"octokit.paginate()"),".")))}},T63A:function(e,t,a){var n=a("I+eb"),l=a("b1O7").entries;n({target:"Object",stat:!0},{entries:function(e){return l(e)}})},T6Xf:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-selected-repository-to-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#add-selected-repository-to-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add selected repository to an organization secret"),l.a.createElement("p",null,"Adds a repository to an organization secret when the ",l.a.createElement("code",null,"visibility")," for repository access is set to ",l.a.createElement("code",null,"selected"),". The visibility is set when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"Create or update an organization secret"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.addSelectedRepoToOrgSecret({\n  org,\n  secret_name,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#add-selected-repository-to-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"cancel-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#cancel-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Cancel a workflow run"),l.a.createElement("p",null,"Cancels a workflow run using its ",l.a.createElement("code",null,"id"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.cancelWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#cancel-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-or-update-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#create-or-update-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create or update an organization secret"),l.a.createElement("p",null,"Creates or updates an organization secret with an encrypted value. Encrypt your secret using",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement("h6",{id:"example-encrypting-a-secret-using-nodejs"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-nodejs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Node.js"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/github/tweetsodium"},"tweetsodium")," library."),l.a.createElement(c["a"],{code:"const sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n",lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-python"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-python","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Python"),l.a.createElement("p",null,"Encrypt your secret using ",l.a.createElement(r["Link"],{to:"https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox"},"pynacl")," with Python 3."),l.a.createElement(c["a"],{code:'from base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  """Encrypt a Unicode string using the public key."""\n  public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))\n  return b64encode(encrypted).decode("utf-8")\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-c"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-c","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using C#"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://www.nuget.org/packages/Sodium.Core/"},"Sodium.Core")," package."),l.a.createElement(c["a"],{code:'var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");\nvar publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-ruby"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-ruby","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Ruby"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/RubyCrypto/rbnacl"},"rbnacl")," gem."),l.a.createElement(c["a"],{code:'require "rbnacl"\nrequire "base64"\n\nkey = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt("my_secret")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n',lang:"ruby"}),l.a.createElement(c["a"],{code:"octokit.actions.createOrUpdateOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"encrypted_value"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Value for your secret, encrypted with ",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium")," using the public key retrieved from the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-organization-public-key"},"Get an organization public key")," endpoint."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"ID of the key you used to encrypt the secret."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Configures the access that repositories have to the organization secret. Can be one of: - ",l.a.createElement("code",null,"all")," - All repositories in an organization can access the secret. - ",l.a.createElement("code",null,"private")," - Private repositories in an organization can access the secret. - ",l.a.createElement("code",null,"selected")," - Only specific repositories can access the secret."))),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the ",l.a.createElement("code",null,"visibility")," is set to ",l.a.createElement("code",null,"selected"),". You can manage the list of selected repositories using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret"},"List selected repositories for an organization secret"),", ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret"},"Set selected repositories for an organization secret"),", and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret"},"Remove selected repository from an organization secret")," endpoints."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-or-update-a-repository-secret"},l.a.createElement(r["AnchorLink"],{to:"#create-or-update-a-repository-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create or update a repository secret"),l.a.createElement("p",null,"Creates or updates a repository secret with an encrypted value. Encrypt your secret using",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement("h6",{id:"example-encrypting-a-secret-using-nodejs-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-nodejs-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Node.js"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/github/tweetsodium"},"tweetsodium")," library."),l.a.createElement(c["a"],{code:"const sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n",lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-python-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-python-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Python"),l.a.createElement("p",null,"Encrypt your secret using ",l.a.createElement(r["Link"],{to:"https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox"},"pynacl")," with Python 3."),l.a.createElement(c["a"],{code:'from base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  """Encrypt a Unicode string using the public key."""\n  public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))\n  return b64encode(encrypted).decode("utf-8")\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-c-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-c-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using C#"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://www.nuget.org/packages/Sodium.Core/"},"Sodium.Core")," package."),l.a.createElement(c["a"],{code:'var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");\nvar publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n',lang:"unknown"}),l.a.createElement("h4",{id:"example-encrypting-a-secret-using-ruby-1"},l.a.createElement(r["AnchorLink"],{to:"#example-encrypting-a-secret-using-ruby-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example encrypting a secret using Ruby"),l.a.createElement("p",null,"Encrypt your secret using the ",l.a.createElement(r["Link"],{to:"https://github.com/RubyCrypto/rbnacl"},"rbnacl")," gem."),l.a.createElement(c["a"],{code:'require "rbnacl"\nrequire "base64"\n\nkey = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt("my_secret")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n',lang:"ruby"}),l.a.createElement(c["a"],{code:"octokit.actions.createOrUpdateRepoSecret({\n  owner,\n  repo,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"encrypted_value"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Value for your secret, encrypted with ",l.a.createElement(r["Link"],{to:"https://libsodium.gitbook.io/doc/bindings_for_other_languages"},"LibSodium")," using the public key retrieved from the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-repository-public-key"},"Get a repository public key")," endpoint."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"ID of the key you used to encrypt the secret."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-a-repository-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-registration-token-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#create-a-registration-token-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a registration token for an organization"),l.a.createElement("p",null,"Returns a token that you can pass to the ",l.a.createElement("code",null,"config")," script. The token expires after one hour."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-registration-token"},l.a.createElement(r["AnchorLink"],{to:"#example-using-registration-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using registration token"),l.a.createElement("p",null,"Configure your self-hosted runner, replacing ",l.a.createElement("code",null,"TOKEN")," with the registration token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh --url https://github.com/octo-org --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRegistrationTokenForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-registration-token-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-registration-token-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#create-a-registration-token-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a registration token for a repository"),l.a.createElement("p",null,"Returns a token that you can pass to the ",l.a.createElement("code",null,"config")," script. The token expires after one hour. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-registration-token-1"},l.a.createElement(r["AnchorLink"],{to:"#example-using-registration-token-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using registration token"),l.a.createElement("p",null,"Configure your self-hosted runner, replacing ",l.a.createElement("code",null,"TOKEN")," with the registration token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRegistrationTokenForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-registration-token-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-remove-token-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#create-a-remove-token-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a remove token for an organization"),l.a.createElement("p",null,"Returns a token that you can pass to the ",l.a.createElement("code",null,"config")," script to remove a self-hosted runner from an organization. The token expires after one hour."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-remove-token"},l.a.createElement(r["AnchorLink"],{to:"#example-using-remove-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using remove token"),l.a.createElement("p",null,"To remove your self-hosted runner from an organization, replace ",l.a.createElement("code",null,"TOKEN")," with the remove token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh remove --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRemoveTokenForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-remove-token-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-remove-token-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#create-a-remove-token-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a remove token for a repository"),l.a.createElement("p",null,"Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement("h6",{id:"example-using-remove-token-1"},l.a.createElement(r["AnchorLink"],{to:"#example-using-remove-token-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Example using remove token"),l.a.createElement("p",null,"To remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint."),l.a.createElement(c["a"],{code:"./config.sh remove --token TOKEN\n",lang:"unknown"}),l.a.createElement(c["a"],{code:"octokit.actions.createRemoveTokenForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-remove-token-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-workflow-dispatch-event"},l.a.createElement(r["AnchorLink"],{to:"#create-a-workflow-dispatch-event","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a workflow dispatch event"),l.a.createElement("p",null,"You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),"."),l.a.createElement("p",null,"You must configure your GitHub Actions workflow to run when the ",l.a.createElement(r["AnchorLink"],{to:"/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch"},l.a.createElement("code",null,"workflow_dispatch")," webhook")," event occurs. The ",l.a.createElement("code",null,"inputs")," are configured in the workflow file. For more information about how to configure the ",l.a.createElement("code",null,"workflow_dispatch"),' event in the workflow file, see "',l.a.createElement(r["AnchorLink"],{to:"/actions/reference/events-that-trigger-workflows#workflow_dispatch"},"Events that trigger workflows"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write"),' permission to use this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line"},"Creating a personal access token for the command line"),'."'),l.a.createElement(c["a"],{code:"octokit.actions.createWorkflowDispatch({\n  owner,\n  repo,\n  workflow_id,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The git reference for the workflow. The reference can be a branch or tag name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"inputs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties configured in the workflow file will be used when ",l.a.createElement("code",null,"inputs")," are omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"inputs.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-a-workflow-dispatch-event"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-artifact"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-artifact","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an artifact"),l.a.createElement("p",null,"Deletes an artifact for a workflow run. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteArtifact({\n  owner,\n  repo,\n  artifact_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"artifact_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"artifact_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-an-artifact"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an organization secret"),l.a.createElement("p",null,"Deletes a secret in an organization using the secret name. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-secret"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository secret"),l.a.createElement("p",null,"Deletes a secret in a repository using the secret name. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteRepoSecret({\n  owner,\n  repo,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-repository-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-self-hosted-runner-from-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-self-hosted-runner-from-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a self-hosted runner from an organization"),l.a.createElement("p",null,"Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteSelfHostedRunnerFromOrg({\n  org,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-self-hosted-runner-from-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-self-hosted-runner-from-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a self-hosted runner from a repository"),l.a.createElement("p",null,"Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo"),"scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteSelfHostedRunnerFromRepo({\n  owner,\n  repo,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a workflow run"),l.a.createElement("p",null,"Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-workflow-run-logs"},l.a.createElement(r["AnchorLink"],{to:"#delete-workflow-run-logs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete workflow run logs"),l.a.createElement("p",null,"Deletes all logs for a workflow run. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.deleteWorkflowRunLogs({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#delete-workflow-run-logs"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-a-selected-repository-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#disable-a-selected-repository-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable a selected repository for GitHub Actions in an organization"),l.a.createElement("p",null,"Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.disableSelectedRepositoryGithubActionsOrganization({\n  org,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#disable-a-selected-repository-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#disable-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable a workflow"),l.a.createElement("p",null,"Disables a workflow and sets the ",l.a.createElement("code",null,"state")," of the workflow to ",l.a.createElement("code",null,"disabled_manually"),". You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),"."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.disableWorkflow({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#disable-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-an-artifact"},l.a.createElement(r["AnchorLink"],{to:"#download-an-artifact","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download an artifact"),l.a.createElement("p",null,"Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for ",l.a.createElement("code",null,"Location:")," in the response header to find the URL for the download. The ",l.a.createElement("code",null,":archive_format")," must be ",l.a.createElement("code",null,"zip"),". Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.downloadArtifact({\n  owner,\n  repo,\n  artifact_id,\n  archive_format,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"artifact_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"artifact_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"archive_format"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#download-an-artifact"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-job-logs-for-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#download-job-logs-for-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download job logs for a workflow run"),l.a.createElement("p",null,"Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look for ",l.a.createElement("code",null,"Location:")," in the response header to find the URL for the download. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.downloadJobLogsForWorkflowRun({\n  owner,\n  repo,\n  job_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"job_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"job_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#download-job-logs-for-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-workflow-run-logs"},l.a.createElement(r["AnchorLink"],{to:"#download-workflow-run-logs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download workflow run logs"),l.a.createElement("p",null,"Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for",l.a.createElement("code",null,"Location:")," in the response header to find the URL for the download. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.downloadWorkflowRunLogs({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#download-workflow-run-logs"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-a-selected-repository-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#enable-a-selected-repository-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable a selected repository for GitHub Actions in an organization"),l.a.createElement("p",null,"Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.enableSelectedRepositoryGithubActionsOrganization({\n  org,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#enable-a-selected-repository-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#enable-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable a workflow"),l.a.createElement("p",null,"Enables a workflow and sets the ",l.a.createElement("code",null,"state")," of the workflow to ",l.a.createElement("code",null,"active"),". You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),"."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.enableWorkflow({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#enable-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-allowed-actions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-allowed-actions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get allowed actions for an organization"),l.a.createElement("p",null,"Gets the selected actions that are allowed in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'.""'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getAllowedActionsOrganization({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-allowed-actions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-allowed-actions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-allowed-actions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get allowed actions for a repository"),l.a.createElement("p",null,"Gets the settings for selected actions that are allowed in a repository. To use this endpoint, the repository policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-a-repository"},"Set GitHub Actions permissions for a repository"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getAllowedActionsRepository({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-allowed-actions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-artifact"},l.a.createElement(r["AnchorLink"],{to:"#get-an-artifact","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an artifact"),l.a.createElement("p",null,"Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getArtifact({\n  owner,\n  repo,\n  artifact_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"artifact_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"artifact_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-artifact"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for an organization"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for repositories and allowed actions in an organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getGithubActionsPermissionsOrganization({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for a repository"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getGithubActionsPermissionsRepository({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-job-for-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#get-a-job-for-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a job for a workflow run"),l.a.createElement("p",null,"Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getJobForWorkflowRun({\n  owner,\n  repo,\n  job_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"job_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"job_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-job-for-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-public-key"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-public-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization public key"),l.a.createElement("p",null,"Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getOrgPublicKey({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-organization-public-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization secret"),l.a.createElement("p",null,"Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-a-repository-1"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-a-repository-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for a repository"),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated:")," This method has been renamed to actions.getGithubActionsPermissionsRepository"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.getRepoPermissions({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-public-key"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-public-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository public key"),l.a.createElement("p",null,"Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getRepoPublicKey({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-repository-public-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-secret"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository secret"),l.a.createElement("p",null,"Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getRepoSecret({\n  owner,\n  repo,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-repository-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-self-hosted-runner-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-a-self-hosted-runner-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a self-hosted runner for an organization"),l.a.createElement("p",null,"Gets a specific self-hosted runner configured in an organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getSelfHostedRunnerForOrg({\n  org,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-self-hosted-runner-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-a-self-hosted-runner-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a self-hosted runner for a repository"),l.a.createElement("p",null,"Gets a specific self-hosted runner configured in a repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getSelfHostedRunnerForRepo({\n  owner,\n  repo,\n  runner_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"runner_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of the self-hosted runner."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#get-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a workflow"),l.a.createElement("p",null,"Gets a specific workflow. You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),". Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflow({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#get-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a workflow run"),l.a.createElement("p",null,"Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-workflow-run-usage"},l.a.createElement(r["AnchorLink"],{to:"#get-workflow-run-usage","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get workflow run usage"),l.a.createElement("p",null,'Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflowRunUsage({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-workflow-run-usage"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-workflow-usage"},l.a.createElement(r["AnchorLink"],{to:"#get-workflow-usage","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get workflow usage"),l.a.createElement("p",null,'Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),". Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.getWorkflowUsage({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-39"},l.a.createElement(r["AnchorLink"],{to:"#parameters-39","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#get-workflow-usage"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-artifacts-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-artifacts-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List artifacts for a repository"),l.a.createElement("p",null,"Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listArtifactsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-40"},l.a.createElement(r["AnchorLink"],{to:"#parameters-40","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-artifacts-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-jobs-for-a-workflow-run"},l.a.createElement(r["AnchorLink"],{to:"#list-jobs-for-a-workflow-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List jobs for a workflow run"),l.a.createElement("p",null,"Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters"},"Parameters"),"."),l.a.createElement(c["a"],{code:"octokit.actions.listJobsForWorkflowRun({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-41"},l.a.createElement(r["AnchorLink"],{to:"#parameters-41","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters jobs by their ",l.a.createElement("code",null,"completed_at")," timestamp. Can be one of: * ",l.a.createElement("code",null,"latest"),": Returns jobs from the most recent execution of the workflow run. * ",l.a.createElement("code",null,"all"),": Returns all jobs for a workflow run, including from old executions of the workflow run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-jobs-for-a-workflow-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-secrets"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-secrets","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization secrets"),l.a.createElement("p",null,"Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listOrgSecrets({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-42"},l.a.createElement(r["AnchorLink"],{to:"#parameters-42","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-organization-secrets"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-secrets"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-secrets","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository secrets"),l.a.createElement("p",null,"Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," repository permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRepoSecrets({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-43"},l.a.createElement(r["AnchorLink"],{to:"#parameters-43","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-repository-secrets"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-workflows"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-workflows","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository workflows"),l.a.createElement("p",null,"Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRepoWorkflows({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-44"},l.a.createElement(r["AnchorLink"],{to:"#parameters-44","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-repository-workflows"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-runner-applications-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-runner-applications-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List runner applications for an organization"),l.a.createElement("p",null,"Lists binaries for the runner application that you can download and run."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRunnerApplicationsForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-45"},l.a.createElement(r["AnchorLink"],{to:"#parameters-45","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-runner-applications-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-runner-applications-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-runner-applications-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List runner applications for a repository"),l.a.createElement("p",null,"Lists binaries for the runner application that you can download and run."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listRunnerApplicationsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-46"},l.a.createElement(r["AnchorLink"],{to:"#parameters-46","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-runner-applications-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-selected-repositories-for-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#list-selected-repositories-for-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List selected repositories for an organization secret"),l.a.createElement("p",null,"Lists all repositories that have been selected when the ",l.a.createElement("code",null,"visibility")," for repository access to a secret is set to ",l.a.createElement("code",null,"selected"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listSelectedReposForOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-47"},l.a.createElement(r["AnchorLink"],{to:"#parameters-47","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-selected-repositories-enabled-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-selected-repositories-enabled-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List selected repositories enabled for GitHub Actions in an organization"),l.a.createElement("p",null,"Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.listSelectedRepositoriesEnabledGithubActionsOrganization({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-48"},l.a.createElement(r["AnchorLink"],{to:"#parameters-48","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-selected-repositories-enabled-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-self-hosted-runners-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#list-self-hosted-runners-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List self-hosted runners for an organization"),l.a.createElement("p",null,"Lists all self-hosted runners configured in an organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listSelfHostedRunnersForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-49"},l.a.createElement(r["AnchorLink"],{to:"#parameters-49","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-self-hosted-runners-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-self-hosted-runners-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List self-hosted runners for a repository"),l.a.createElement("p",null,"Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listSelfHostedRunnersForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-50"},l.a.createElement(r["AnchorLink"],{to:"#parameters-50","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-workflow-run-artifacts"},l.a.createElement(r["AnchorLink"],{to:"#list-workflow-run-artifacts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List workflow run artifacts"),l.a.createElement("p",null,"Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listWorkflowRunArtifacts({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-51"},l.a.createElement(r["AnchorLink"],{to:"#parameters-51","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-workflow-run-artifacts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-workflow-runs"},l.a.createElement(r["AnchorLink"],{to:"#list-workflow-runs","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List workflow runs"),l.a.createElement("p",null,"List all workflow runs for a workflow. You can replace ",l.a.createElement("code",null,"workflow_id")," with the workflow file name. For example, you could use ",l.a.createElement("code",null,"main.yaml"),". You can use parameters to narrow the list of results. For more information about using parameters, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters"},"Parameters"),"."),l.a.createElement("p",null,"Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope."),l.a.createElement(c["a"],{code:"octokit.actions.listWorkflowRuns({\n  owner,\n  repo,\n  workflow_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-52"},l.a.createElement(r["AnchorLink"],{to:"#parameters-52","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"workflow_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the workflow. You can also pass the workflow file name as a string."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actor"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns someone's workflow runs. Use the login for the user who created the ",l.a.createElement("code",null,"push")," associated with the check suite or workflow run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with a branch. Use the name of the branch of the ",l.a.createElement("code",null,"push"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow run triggered by the event you specify. For example, ",l.a.createElement("code",null,"push"),", ",l.a.createElement("code",null,"pull_request")," or ",l.a.createElement("code",null,"issue"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows"},"Events that trigger workflows"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with the check run ",l.a.createElement("code",null,"status")," or ",l.a.createElement("code",null,"conclusion")," you specify. For example, a conclusion can be ",l.a.createElement("code",null,"success")," or a status can be ",l.a.createElement("code",null,"completed"),". For more information, see the ",l.a.createElement("code",null,"status")," and ",l.a.createElement("code",null,"conclusion"),' options available in "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-run"},"Create a check run"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-workflow-runs"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-workflow-runs-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-workflow-runs-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List workflow runs for a repository"),l.a.createElement("p",null,"Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters"},"Parameters"),"."),l.a.createElement("p",null,"Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the ",l.a.createElement("code",null,"repo")," scope. GitHub Apps must have the ",l.a.createElement("code",null,"actions:read")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.listWorkflowRunsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-53"},l.a.createElement(r["AnchorLink"],{to:"#parameters-53","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"actor"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns someone's workflow runs. Use the login for the user who created the ",l.a.createElement("code",null,"push")," associated with the check suite or workflow run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with a branch. Use the name of the branch of the ",l.a.createElement("code",null,"push"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"event"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow run triggered by the event you specify. For example, ",l.a.createElement("code",null,"push"),", ",l.a.createElement("code",null,"pull_request")," or ",l.a.createElement("code",null,"issue"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows"},"Events that trigger workflows"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns workflow runs associated with the check run ",l.a.createElement("code",null,"status")," or ",l.a.createElement("code",null,"conclusion")," you specify. For example, a conclusion can be ",l.a.createElement("code",null,"success")," or a status can be ",l.a.createElement("code",null,"completed"),". For more information, see the ",l.a.createElement("code",null,"status")," and ",l.a.createElement("code",null,"conclusion"),' options available in "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-run"},"Create a check run"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#list-workflow-runs-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-selected-repository-from-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#remove-selected-repository-from-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove selected repository from an organization secret"),l.a.createElement("p",null,"Removes a repository from an organization secret when the ",l.a.createElement("code",null,"visibility")," for repository access is set to ",l.a.createElement("code",null,"selected"),". The visibility is set when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"Create or update an organization secret"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.removeSelectedRepoFromOrgSecret({\n  org,\n  secret_name,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-54"},l.a.createElement(r["AnchorLink"],{to:"#parameters-54","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"re-run-a-workflow"},l.a.createElement(r["AnchorLink"],{to:"#re-run-a-workflow","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Re-run a workflow"),l.a.createElement("p",null,"Re-runs your workflow run using its ",l.a.createElement("code",null,"id"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"actions:write")," permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.reRunWorkflow({\n  owner,\n  repo,\n  run_id,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-55"},l.a.createElement(r["AnchorLink"],{to:"#parameters-55","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#re-run-a-workflow"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-allowed-actions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-allowed-actions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set allowed actions for an organization"),l.a.createElement("p",null,"Sets the actions that are allowed in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"If the organization belongs to an enterprise that has ",l.a.createElement("code",null,"selected")," actions set at the enterprise level, then you cannot override any of the enterprise's allowed actions settings."),l.a.createElement("p",null,"To use the ",l.a.createElement("code",null,"patterns_allowed")," setting for private repositories, the organization must belong to an enterprise. If the organization does not belong to an enterprise, then the ",l.a.createElement("code",null,"patterns_allowed")," setting only applies to public repositories in the organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setAllowedActionsOrganization({\n  org,\n  github_owned_allowed,\n  verified_allowed,\n  patterns_allowed,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-56"},l.a.createElement(r["AnchorLink"],{to:"#parameters-56","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"github_owned_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub-owned actions are allowed. For example, this includes the actions in the ",l.a.createElement("code",null,"actions")," organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"verified_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether actions in GitHub Marketplace from verified creators are allowed. Set to ",l.a.createElement("code",null,"true")," to allow all GitHub Marketplace actions by verified creators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"patterns_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, ",l.a.createElement("code",null,"monalisa/octocat@*"),", ",l.a.createElement("code",null,"monalisa/octocat@v2"),", ",l.a.createElement("code",null,"monalisa/*"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-allowed-actions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-allowed-actions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#set-allowed-actions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set allowed actions for a repository"),l.a.createElement("p",null,"Sets the actions that are allowed in a repository. To use this endpoint, the repository permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-a-repository"},"Set GitHub Actions permissions for a repository"),'."'),l.a.createElement("p",null,"If the repository belongs to an organization or enterprise that has ",l.a.createElement("code",null,"selected")," actions set at the organization or enterprise levels, then you cannot override any of the allowed actions settings."),l.a.createElement("p",null,"To use the ",l.a.createElement("code",null,"patterns_allowed")," setting for private repositories, the repository must belong to an enterprise. If the repository does not belong to an enterprise, then the ",l.a.createElement("code",null,"patterns_allowed")," setting only applies to public repositories."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setAllowedActionsRepository({\n  owner,\n  repo,\n  github_owned_allowed,\n  verified_allowed,\n  patterns_allowed,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-57"},l.a.createElement(r["AnchorLink"],{to:"#parameters-57","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"github_owned_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub-owned actions are allowed. For example, this includes the actions in the ",l.a.createElement("code",null,"actions")," organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"verified_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether actions in GitHub Marketplace from verified creators are allowed. Set to ",l.a.createElement("code",null,"true")," to allow all GitHub Marketplace actions by verified creators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"patterns_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, ",l.a.createElement("code",null,"monalisa/octocat@*"),", ",l.a.createElement("code",null,"monalisa/octocat@v2"),", ",l.a.createElement("code",null,"monalisa/*"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-allowed-actions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-github-actions-permissions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set GitHub Actions permissions for an organization"),l.a.createElement("p",null,"Sets the GitHub Actions permissions policy for repositories and allowed actions in an organization."),l.a.createElement("p",null,"If the organization belongs to an enterprise that has set restrictive permissions at the enterprise level, such as ",l.a.createElement("code",null,"allowed_actions")," to ",l.a.createElement("code",null,"selected")," actions, then you cannot override them for the organization."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setGithubActionsPermissionsOrganization({\n  org,\n  enabled_repositories,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-58"},l.a.createElement(r["AnchorLink"],{to:"#parameters-58","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"enabled_repositories"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"none"),", or ",l.a.createElement("code",null,"selected"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allowed_actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions policy that controls the actions that are allowed to run. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"local_only"),", or ",l.a.createElement("code",null,"selected"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-github-actions-permissions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set GitHub Actions permissions for a repository"),l.a.createElement("p",null,"Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions in the repository."),l.a.createElement("p",null,"If the repository belongs to an organization or enterprise that has set restrictive permissions at the organization or enterprise levels, such as ",l.a.createElement("code",null,"allowed_actions")," to ",l.a.createElement("code",null,"selected")," actions, then you cannot override them for the repository."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"repo")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," repository permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setGithubActionsPermissionsRepository({\n  owner,\n  repo,\n  enabled,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-59"},l.a.createElement(r["AnchorLink"],{to:"#parameters-59","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"enabled"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub Actions is enabled on the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allowed_actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions policy that controls the actions that are allowed to run. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"local_only"),", or ",l.a.createElement("code",null,"selected"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-selected-repositories-for-an-organization-secret"},l.a.createElement(r["AnchorLink"],{to:"#set-selected-repositories-for-an-organization-secret","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set selected repositories for an organization secret"),l.a.createElement("p",null,"Replaces all repositories for an organization secret when the ",l.a.createElement("code",null,"visibility")," for repository access is set to ",l.a.createElement("code",null,"selected"),". The visibility is set when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret"},"Create or update an organization secret"),". You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"secrets")," organization permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.actions.setSelectedReposForOrgSecret({\n  org,\n  secret_name,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-60"},l.a.createElement(r["AnchorLink"],{to:"#parameters-60","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"secret_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"secret_name parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the ",l.a.createElement("code",null,"visibility")," is set to ",l.a.createElement("code",null,"selected"),". You can add and remove individual repositories using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret"},"Set selected repositories for an organization secret")," and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret"},"Remove selected repository from an organization secret")," endpoints."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-selected-repositories-enabled-for-github-actions-in-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-selected-repositories-enabled-for-github-actions-in-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set selected repositories enabled for GitHub Actions in an organization"),l.a.createElement("p",null,"Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for ",l.a.createElement("code",null,"enabled_repositories")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-organization"},"Set GitHub Actions permissions for an organization"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:org")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"administration")," organization permission to use this API."),l.a.createElement(c["a"],{code:"octokit.actions.setSelectedRepositoriesEnabledGithubActionsOrganization({\n  org,\n  selected_repository_ids,\n});\n",lang:"js"}),l.a.createElement("h6",{id:"parameters-61"},l.a.createElement(r["AnchorLink"],{to:"#parameters-61","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_repository_ids"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"List of repository IDs to enable for GitHub Actions."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/actions#set-selected-repositories-enabled-for-github-actions-in-an-organization"},"GitHub Developer Guide documentation"),".")))}},TIsu:function(e,t,a){},TJ79:function(e,t,a){var n=a("I+eb"),l=a("P940");n({target:"WeakMap",stat:!0},{of:l})},"TN5+":function(e,t,a){"use strict";var n=a("wx14"),l=a("q1tI"),r=a.n(l);a("kERV");t["a"]=e=>r.a.createElement("div",Object(n["a"])({className:"__dumi-default-alert"},e))},TOwV:function(e,t,a){"use strict";e.exports=a("qT12")},TSYQ:function(e,t,a){var n,l;(function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var l=typeof n;if("string"===l||"number"===l)e.push(n);else if(Array.isArray(n)&&n.length){var c=r.apply(null,n);c&&e.push(c)}else if("object"===l)for(var o in n)a.call(n,o)&&n[o]&&e.push(o)}}return e.join(" ")}e.exports?(r["default"]=r,e.exports=r):(n=[],l=function(){return r}.apply(t,n),void 0===l||(e.exports=l))})()},TWQb:function(e,t,a){var n=a("/GqU"),l=a("UMSQ"),r=a("I8vh"),c=function(e){return function(t,a,c){var o,i=n(t),s=l(i.length),u=r(c,s);if(e&&a!=a){while(s>u)if(o=i[u++],o!=o)return!0}else for(;s>u;u++)if((e||u in i)&&i[u]===a)return e||u||0;return!e&&-1}};e.exports={includes:c(!0),indexOf:c(!1)}},TZCg:function(e,t,a){"use strict";var n=a("I+eb"),l=a("DMt2").start,r=a("mgyK");n({target:"String",proto:!0,forced:r},{padStart:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}})},TeQF:function(e,t,a){"use strict";var n=a("I+eb"),l=a("tycR").filter,r=a("Hd5f"),c=a("rkAj"),o=r("filter"),i=c("filter");n({target:"Array",proto:!0,forced:!o||!i},{filter:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}})},TfTi:function(e,t,a){"use strict";var n=a("A2ZE"),l=a("ewvW"),r=a("m92n"),c=a("6VoE"),o=a("UMSQ"),i=a("hBjN"),s=a("NaFW");e.exports=function(e){var t,a,u,m,d,E,p=l(e),h="function"==typeof this?this:Array,g=arguments.length,b=g>1?arguments[1]:void 0,f=void 0!==b,y=s(p),k=0;if(f&&(b=n(b,g>2?arguments[2]:void 0,2)),void 0==y||h==Array&&c(y))for(t=o(p.length),a=new h(t);t>k;k++)E=f?b(p[k],k):p[k],i(a,k,E);else for(m=y.call(p),d=m.next,a=new h;!(u=d.call(m)).done;k++)E=f?r(m,b,[u.value,k],!0):u.value,i(a,k,E);return a.length=k,a}},Thag:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("Sssf"),i=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{some:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return i(a,(function(e,a){if(n(a,e,t))return i.stop()}),void 0,!0,!0).stopped}})},ToJy:function(e,t,a){"use strict";var n=a("I+eb"),l=a("HAuM"),r=a("ewvW"),c=a("0Dky"),o=a("pkCn"),i=[],s=i.sort,u=c((function(){i.sort(void 0)})),m=c((function(){i.sort(null)})),d=o("sort"),E=u||!m||!d;n({target:"Array",proto:!0,forced:E},{sort:function(e){return void 0===e?s.call(r(this)):s.call(r(this),l(e))}})},Tskq:function(e,t,a){"use strict";var n=a("bWFh"),l=a("ZWaQ");e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),l)},Ty5D:function(e,t,a){"use strict";a.d(t,"a",(function(){return k})),a.d(t,"b",(function(){return w})),a.d(t,"c",(function(){return P})),a.d(t,"d",(function(){return H})),a.d(t,"e",(function(){return y})),a.d(t,"f",(function(){return F})),a.d(t,"g",(function(){return U})),a.d(t,"h",(function(){return f})),a.d(t,"i",(function(){return j})),a.d(t,"j",(function(){return B})),a.d(t,"k",(function(){return W})),a.d(t,"l",(function(){return K})),a.d(t,"m",(function(){return V})),a.d(t,"n",(function(){return M}));var n=a("dI71"),l=a("q1tI"),r=a.n(l),c=(a("17x9"),a("YS25")),o=a("tEiQ"),i=a("9R94"),s=a("wx14"),u=a("vRGJ"),m=a.n(u),d=(a("TOwV"),a("zLVn")),E=a("2mql"),p=a.n(E),h=function(e){var t=Object(o["a"])();return t.displayName=e,t},g=h("Router-History"),b=function(e){var t=Object(o["a"])();return t.displayName=e,t},f=b("Router"),y=function(e){function t(t){var a;return a=e.call(this,t)||this,a.state={location:t.history.location},a._isMounted=!1,a._pendingLocation=null,t.staticContext||(a.unlisten=t.history.listen((function(e){a._isMounted?a.setState({location:e}):a._pendingLocation=e}))),a}Object(n["a"])(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var a=t.prototype;return a.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},a.componentWillUnmount=function(){this.unlisten&&this.unlisten()},a.render=function(){return r.a.createElement(f.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},r.a.createElement(g.Provider,{children:this.props.children||null,value:this.props.history}))},t}(r.a.Component);var k=function(e){function t(){for(var t,a=arguments.length,n=new Array(a),l=0;l<a;l++)n[l]=arguments[l];return t=e.call.apply(e,[this].concat(n))||this,t.history=Object(c["d"])(t.props),t}Object(n["a"])(t,e);var a=t.prototype;return a.render=function(){return r.a.createElement(y,{history:this.history,children:this.props.children})},t}(r.a.Component);var v=function(e){function t(){return e.apply(this,arguments)||this}Object(n["a"])(t,e);var a=t.prototype;return a.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},a.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},a.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},a.render=function(){return null},t}(r.a.Component);function w(e){var t=e.message,a=e.when,n=void 0===a||a;return r.a.createElement(f.Consumer,null,(function(e){if(e||Object(i["a"])(!1),!n||e.staticContext)return null;var a=e.history.block;return r.a.createElement(v,{onMount:function(e){e.release=a(t)},onUpdate:function(e,n){n.message!==t&&(e.release(),e.release=a(t))},onUnmount:function(e){e.release()},message:t})}))}var L={},A=1e4,x=0;function _(e){if(L[e])return L[e];var t=m.a.compile(e);return x<A&&(L[e]=t,x++),t}function G(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:_(e)(t,{pretty:!0})}function P(e){var t=e.computedMatch,a=e.to,n=e.push,l=void 0!==n&&n;return r.a.createElement(f.Consumer,null,(function(e){e||Object(i["a"])(!1);var n=e.history,o=e.staticContext,u=l?n.push:n.replace,m=Object(c["c"])(t?"string"===typeof a?G(a,t.params):Object(s["a"])({},a,{pathname:G(a.pathname,t.params)}):a);return o?(u(m),null):r.a.createElement(v,{onMount:function(){u(m)},onUpdate:function(e,t){var a=Object(c["c"])(t.to);Object(c["f"])(a,Object(s["a"])({},m,{key:a.key}))||u(m)},to:a})}))}var I={},S=1e4,T=0;function N(e,t){var a=""+t.end+t.strict+t.sensitive,n=I[a]||(I[a]={});if(n[e])return n[e];var l=[],r=m()(e,l,t),c={regexp:r,keys:l};return T<S&&(n[e]=c,T++),c}function j(e,t){void 0===t&&(t={}),("string"===typeof t||Array.isArray(t))&&(t={path:t});var a=t,n=a.path,l=a.exact,r=void 0!==l&&l,c=a.strict,o=void 0!==c&&c,i=a.sensitive,s=void 0!==i&&i,u=[].concat(n);return u.reduce((function(t,a){if(!a&&""!==a)return null;if(t)return t;var n=N(a,{end:r,strict:o,sensitive:s}),l=n.regexp,c=n.keys,i=l.exec(e);if(!i)return null;var u=i[0],m=i.slice(1),d=e===u;return r&&!d?null:{path:a,url:"/"===a&&""===u?"/":u,isExact:d,params:c.reduce((function(e,t,a){return e[t.name]=m[a],e}),{})}}),null)}var H=function(e){function t(){return e.apply(this,arguments)||this}Object(n["a"])(t,e);var a=t.prototype;return a.render=function(){var e=this;return r.a.createElement(f.Consumer,null,(function(t){t||Object(i["a"])(!1);var a=e.props.location||t.location,n=e.props.computedMatch?e.props.computedMatch:e.props.path?j(a.pathname,e.props):t.match,l=Object(s["a"])({},t,{location:a,match:n}),c=e.props,o=c.children,u=c.component,m=c.render;return Array.isArray(o)&&0===o.length&&(o=null),r.a.createElement(f.Provider,{value:l},l.match?o?"function"===typeof o?o(l):o:u?r.a.createElement(u,l):m?m(l):null:"function"===typeof o?o(l):null)}))},t}(r.a.Component);function q(e){return"/"===e.charAt(0)?e:"/"+e}function D(e,t){return e?Object(s["a"])({},t,{pathname:q(e)+t.pathname}):t}function z(e,t){if(!e)return t;var a=q(e);return 0!==t.pathname.indexOf(a)?t:Object(s["a"])({},t,{pathname:t.pathname.substr(a.length)})}function C(e){return"string"===typeof e?e:Object(c["e"])(e)}function O(e){return function(){Object(i["a"])(!1)}}function R(){}var F=function(e){function t(){for(var t,a=arguments.length,n=new Array(a),l=0;l<a;l++)n[l]=arguments[l];return t=e.call.apply(e,[this].concat(n))||this,t.handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return R},t.handleBlock=function(){return R},t}Object(n["a"])(t,e);var a=t.prototype;return a.navigateTo=function(e,t){var a=this.props,n=a.basename,l=void 0===n?"":n,r=a.context,o=void 0===r?{}:r;o.action=t,o.location=D(l,Object(c["c"])(e)),o.url=C(o.location)},a.render=function(){var e=this.props,t=e.basename,a=void 0===t?"":t,n=e.context,l=void 0===n?{}:n,o=e.location,i=void 0===o?"/":o,u=Object(d["a"])(e,["basename","context","location"]),m={createHref:function(e){return q(a+C(e))},action:"POP",location:z(a,Object(c["c"])(i)),push:this.handlePush,replace:this.handleReplace,go:O("go"),goBack:O("goBack"),goForward:O("goForward"),listen:this.handleListen,block:this.handleBlock};return r.a.createElement(y,Object(s["a"])({},u,{history:m,staticContext:l}))},t}(r.a.Component);var U=function(e){function t(){return e.apply(this,arguments)||this}Object(n["a"])(t,e);var a=t.prototype;return a.render=function(){var e=this;return r.a.createElement(f.Consumer,null,(function(t){t||Object(i["a"])(!1);var a,n,l=e.props.location||t.location;return r.a.Children.forEach(e.props.children,(function(e){if(null==n&&r.a.isValidElement(e)){a=e;var c=e.props.path||e.props.from;n=c?j(l.pathname,Object(s["a"])({},e.props,{path:c})):t.match}})),n?r.a.cloneElement(a,{location:l,computedMatch:n}):null}))},t}(r.a.Component);function M(e){var t="withRouter("+(e.displayName||e.name)+")",a=function(t){var a=t.wrappedComponentRef,n=Object(d["a"])(t,["wrappedComponentRef"]);return r.a.createElement(f.Consumer,null,(function(t){return t||Object(i["a"])(!1),r.a.createElement(e,Object(s["a"])({},n,t,{ref:a}))}))};return a.displayName=t,a.WrappedComponent=e,p()(a,e)}var Y=r.a.useContext;function B(){return Y(g)}function W(){return Y(f).location}function K(){var e=Y(f).match;return e?e.params:{}}function V(e){var t=W(),a=Y(f).match;return e?j(t.pathname,e):a}},"U/TZ":function(e,t,a){"use strict";function n(){var e=r(a("q1tI"));return n=function(){return e},e}function l(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var c=n?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(a,r,c):a[r]=e[r]}return a["default"]=e,t&&t.set(e,a),a}function c(e,t){return m(e)||u(e,t)||i(e,t)||o()}function o(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e,t){if(e){if("string"===typeof e)return s(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?s(e,t):void 0}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function u(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function m(e){if(Array.isArray(e))return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var d=function(e,t){var a=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var n={};return Object.keys(t[1]).forEach((function(e){var a=(e.match(/^(.+)\.([^_]+)$/)||[]).slice(1),l=c(a,2),r=l[0],o=l[1];o&&o!==t[0]||(n[r||e]=t[1][e])})),n},l=(0,n().useState)(a(e,t)),r=c(l,2),o=r[0],i=r[1];return(0,n().useEffect)((function(){i(a(e,t))}),[e,t]),o};t["default"]=d},U3f4:function(e,t,a){var n=a("g6v/"),l=a("m/L8"),r=a("rW0t"),c=a("n3/R").UNSUPPORTED_Y;n&&("g"!=/./g.flags||c)&&l.f(RegExp.prototype,"flags",{configurable:!0,get:r})},UMSQ:function(e,t,a){var n=a("ppGB"),l=Math.min;e.exports=function(e){return e>0?l(n(e),9007199254740991):0}},UTVS:function(e,t){var a={}.hasOwnProperty;e.exports=function(e,t){return a.call(e,t)}},UesL:function(e,t,a){"use strict";var n=a("glrk"),l=a("wE6v");e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return l(n(this),"number"!==e)}},UxlC:function(e,t,a){"use strict";var n=a("14Sl"),l=a("glrk"),r=a("ewvW"),c=a("UMSQ"),o=a("ppGB"),i=a("HYAF"),s=a("iqWW"),u=a("FMNM"),m=Math.max,d=Math.min,E=Math.floor,p=/\$([$&'`]|\d\d?|<[^>]*>)/g,h=/\$([$&'`]|\d\d?)/g,g=function(e){return void 0===e?e:String(e)};n("replace",2,(function(e,t,a,n){var b=n.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,f=n.REPLACE_KEEPS_$0,y=b?"$":"$0";return[function(a,n){var l=i(this),r=void 0==a?void 0:a[e];return void 0!==r?r.call(a,l,n):t.call(String(l),a,n)},function(e,n){if(!b&&f||"string"===typeof n&&-1===n.indexOf(y)){var r=a(t,e,this,n);if(r.done)return r.value}var i=l(e),E=String(this),p="function"===typeof n;p||(n=String(n));var h=i.global;if(h){var v=i.unicode;i.lastIndex=0}var w=[];while(1){var L=u(i,E);if(null===L)break;if(w.push(L),!h)break;var A=String(L[0]);""===A&&(i.lastIndex=s(E,c(i.lastIndex),v))}for(var x="",_=0,G=0;G<w.length;G++){L=w[G];for(var P=String(L[0]),I=m(d(o(L.index),E.length),0),S=[],T=1;T<L.length;T++)S.push(g(L[T]));var N=L.groups;if(p){var j=[P].concat(S,I,E);void 0!==N&&j.push(N);var H=String(n.apply(void 0,j))}else H=k(P,E,I,S,N,n);I>=_&&(x+=E.slice(_,I)+H,_=I+P.length)}return x+E.slice(_)}];function k(e,a,n,l,c,o){var i=n+e.length,s=l.length,u=h;return void 0!==c&&(c=r(c),u=p),t.call(o,u,(function(t,r){var o;switch(r.charAt(0)){case"$":return"$";case"&":return e;case"`":return a.slice(0,n);case"'":return a.slice(i);case"<":o=c[r.slice(1,-1)];break;default:var u=+r;if(0===u)return t;if(u>s){var m=E(u/10);return 0===m?t:m<=s?void 0===l[m-1]?r.charAt(1):l[m-1]+r.charAt(1):t}o=l[u-1]}return void 0===o?"":o}))}}))},Uydy:function(e,t,a){var n=a("I+eb"),l=a("HsHA"),r=Math.acosh,c=Math.log,o=Math.sqrt,i=Math.LN2,s=!r||710!=Math.floor(r(Number.MAX_VALUE))||r(1/0)!=1/0;n({target:"Math",stat:!0,forced:s},{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?c(e)+i:l(e-1+o(e-1)*o(e+1))}})},UzNg:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ntOU"),r=a("HYAF"),c=a("afO8"),o=a("ZUd8"),i=o.codeAt,s=o.charAt,u="String Iterator",m=c.set,d=c.getterFor(u),E=l((function(e){m(this,{type:u,string:e,index:0})}),"String",(function(){var e,t=d(this),a=t.string,n=t.index;return n>=a.length?{value:void 0,done:!0}:(e=s(a,n),t.index+=e.length,{value:{codePoint:i(e,0),position:n},done:!1})}));n({target:"String",proto:!0},{codePoints:function(){return new E(String(r(this)))}})},"V/vL":function(e,t,a){"use strict";a.r(t),a.d(t,"matchRoutes",(function(){return o})),a.d(t,"renderRoutes",(function(){return i}));var n=a("Ty5D"),l=a("wx14"),r=a("q1tI"),c=a.n(r);function o(e,t,a){return void 0===a&&(a=[]),e.some((function(e){var l=e.path?Object(n["i"])(t,e):a.length?a[a.length-1].match:n["e"].computeRootMatch(t);return l&&(a.push({route:e,match:l}),e.routes&&o(e.routes,t,a)),l})),a}function i(e,t,a){return void 0===t&&(t={}),void 0===a&&(a={}),e?c.a.createElement(n["g"],a,e.map((function(e,a){return c.a.createElement(n["d"],{key:e.key||a,path:e.path,exact:e.exact,strict:e.strict,render:function(a){return e.render?e.render(Object(l["a"])({},a,{},t,{route:e})):c.a.createElement(e.component,Object(l["a"])({},a,t,{route:e}))}})}))):null}},VCU9:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a("LtsZ"),l=new n["Plugin"]({validKeys:["modifyClientRenderOpts","patchRoutes","rootContainer","render","onRouteChange","ssr"]})},VOz1:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("HAuM"),o=a("Sssf"),i=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{reduce:function(e){var t=r(this),a=o(t),n=arguments.length<2,l=n?void 0:arguments[1];if(c(e),i(a,(function(a,r){n?(n=!1,l=r):l=e(l,r,a,t)}),void 0,!0,!0),n)throw TypeError("Reduce of empty map with no initial value");return l}})},VWci:function(e,t,a){var n=function(e){"use strict";var t,a=Object.prototype,n=a.hasOwnProperty,l="function"===typeof Symbol?Symbol:{},r=l.iterator||"@@iterator",c=l.asyncIterator||"@@asyncIterator",o=l.toStringTag||"@@toStringTag";function i(e,t,a,n){var l=t&&t.prototype instanceof h?t:h,r=Object.create(l.prototype),c=new P(n||[]);return r._invoke=A(e,a,c),r}function s(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(n){return{type:"throw",arg:n}}}e.wrap=i;var u="suspendedStart",m="suspendedYield",d="executing",E="completed",p={};function h(){}function g(){}function b(){}var f={};f[r]=function(){return this};var y=Object.getPrototypeOf,k=y&&y(y(I([])));k&&k!==a&&n.call(k,r)&&(f=k);var v=b.prototype=h.prototype=Object.create(f);function w(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function L(e,t){function a(l,r,c,o){var i=s(e[l],e,r);if("throw"!==i.type){var u=i.arg,m=u.value;return m&&"object"===typeof m&&n.call(m,"__await")?t.resolve(m.__await).then((function(e){a("next",e,c,o)}),(function(e){a("throw",e,c,o)})):t.resolve(m).then((function(e){u.value=e,c(u)}),(function(e){return a("throw",e,c,o)}))}o(i.arg)}var l;function r(e,n){function r(){return new t((function(t,l){a(e,n,t,l)}))}return l=l?l.then(r,r):r()}this._invoke=r}function A(e,t,a){var n=u;return function(l,r){if(n===d)throw new Error("Generator is already running");if(n===E){if("throw"===l)throw r;return S()}a.method=l,a.arg=r;while(1){var c=a.delegate;if(c){var o=x(c,a);if(o){if(o===p)continue;return o}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if(n===u)throw n=E,a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);n=d;var i=s(e,t,a);if("normal"===i.type){if(n=a.done?E:m,i.arg===p)continue;return{value:i.arg,done:a.done}}"throw"===i.type&&(n=E,a.method="throw",a.arg=i.arg)}}}function x(e,a){var n=e.iterator[a.method];if(n===t){if(a.delegate=null,"throw"===a.method){if(e.iterator["return"]&&(a.method="return",a.arg=t,x(e,a),"throw"===a.method))return p;a.method="throw",a.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var l=s(n,e.iterator,a.arg);if("throw"===l.type)return a.method="throw",a.arg=l.arg,a.delegate=null,p;var r=l.arg;return r?r.done?(a[e.resultName]=r.value,a.next=e.nextLoc,"return"!==a.method&&(a.method="next",a.arg=t),a.delegate=null,p):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,p)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function G(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function P(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function I(e){if(e){var a=e[r];if(a)return a.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var l=-1,c=function a(){while(++l<e.length)if(n.call(e,l))return a.value=e[l],a.done=!1,a;return a.value=t,a.done=!0,a};return c.next=c}}return{next:S}}function S(){return{value:t,done:!0}}return g.prototype=v.constructor=b,b.constructor=g,b[o]=g.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,o in e||(e[o]="GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},w(L.prototype),L.prototype[c]=function(){return this},e.AsyncIterator=L,e.async=function(t,a,n,l,r){void 0===r&&(r=Promise);var c=new L(i(t,a,n,l),r);return e.isGeneratorFunction(a)?c:c.next().then((function(e){return e.done?e.value:c.next()}))},w(v),v[o]="Generator",v[r]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var a in e)t.push(a);return t.reverse(),function a(){while(t.length){var n=t.pop();if(n in e)return a.value=n,a.done=!1,a}return a.done=!0,a}},e.values=I,P.prototype={constructor:P,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(G),!e)for(var a in this)"t"===a.charAt(0)&&n.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var a=this;function l(n,l){return o.type="throw",o.arg=e,a.next=n,l&&(a.method="next",a.arg=t),!!l}for(var r=this.tryEntries.length-1;r>=0;--r){var c=this.tryEntries[r],o=c.completion;if("root"===c.tryLoc)return l("end");if(c.tryLoc<=this.prev){var i=n.call(c,"catchLoc"),s=n.call(c,"finallyLoc");if(i&&s){if(this.prev<c.catchLoc)return l(c.catchLoc,!0);if(this.prev<c.finallyLoc)return l(c.finallyLoc)}else if(i){if(this.prev<c.catchLoc)return l(c.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return l(c.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var l=this.tryEntries[a];if(l.tryLoc<=this.prev&&n.call(l,"finallyLoc")&&this.prev<l.finallyLoc){var r=l;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var c=r?r.completion:{};return c.type=e,c.arg=t,r?(this.method="next",this.next=r.finallyLoc,p):this.complete(c)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),G(a),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var n=a.completion;if("throw"===n.type){var l=n.arg;G(a)}return l}}throw new Error("illegal catch attempt")},delegateYield:function(e,a,n){return this.delegate={iterator:I(e),resultName:a,nextLoc:n},"next"===this.method&&(this.arg=t),p}},e}(e.exports);try{regeneratorRuntime=n}catch(l){Function("r","regeneratorRuntime = r")(n)}},Vnov:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("Sssf"),o=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{keyOf:function(e){return o(c(r(this)),(function(t,a){if(a===e)return o.stop(t)}),void 0,!0,!0).result}})},VpIT:function(e,t,a){var n=a("xDBR"),l=a("xs3f");(e.exports=function(e,t){return l[e]||(l[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:n?"pure":"global",copyright:"\xa9 2020 Denis Pushkarev (zloirock.ru)"})},Vu81:function(e,t,a){var n=a("0GbY"),l=a("JBy8"),r=a("dBg+"),c=a("glrk");e.exports=n("Reflect","ownKeys")||function(e){var t=l.f(c(e)),a=r.f;return a?t.concat(a(e)):t}},"W/eh":function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("6x0u"),c=a("ewvW"),o=a("wE6v"),i=a("4WOD"),s=a("Bs8V").f;l&&n({target:"Object",proto:!0,forced:r},{__lookupSetter__:function(e){var t,a=c(this),n=o(e,!0);do{if(t=s(a,n))return t.set}while(a=i(a))}})},WGBp:function(e,t,a){var n=a("xDBR"),l=a("mh/w");e.exports=n?l:function(e){return Set.prototype.values.call(e)}},WJkJ:function(e,t){e.exports="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff"},WKiH:function(e,t,a){var n=a("HYAF"),l=a("WJkJ"),r="["+l+"]",c=RegExp("^"+r+r+"*"),o=RegExp(r+r+"*$"),i=function(e){return function(t){var a=String(n(t));return 1&e&&(a=a.replace(c,"")),2&e&&(a=a.replace(o,"")),a}};e.exports={start:i(1),end:i(2),trim:i(3)}},WPzJ:function(e,t,a){var n=a("I+eb"),l=a("voyM");n({target:"Math",stat:!0},{scale:l})},WWur:function(e,t,a){"use strict";var n=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=t.target,n=void 0===a?document.body:a,l=document.createElement("textarea"),r=document.activeElement;l.value=e,l.setAttribute("readonly",""),l.style.contain="strict",l.style.position="absolute",l.style.left="-9999px",l.style.fontSize="12pt";var c=document.getSelection(),o=!1;c.rangeCount>0&&(o=c.getRangeAt(0)),n.append(l),l.select(),l.selectionStart=0,l.selectionEnd=e.length;var i=!1;try{i=document.execCommand("copy")}catch(s){}return l.remove(),o&&(c.removeAllRanges(),c.addRange(o)),r&&r.focus(),i};e.exports=n,e.exports["default"]=n},WbBG:function(e,t,a){"use strict";var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=n},WjRb:function(e,t,a){var n=a("ROdP");e.exports=function(e){if(n(e))throw TypeError("The method doesn't accept regular expressions");return e}},WkPL:function(e,t){function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}e.exports=a},X7LM:function(e,t,a){"use strict";var n=2147483647,l=36,r=1,c=26,o=38,i=700,s=72,u=128,m="-",d=/[^\0-\u007E]/,E=/[.\u3002\uFF0E\uFF61]/g,p="Overflow: input needs wider integers to process",h=l-r,g=Math.floor,b=String.fromCharCode,f=function(e){var t=[],a=0,n=e.length;while(a<n){var l=e.charCodeAt(a++);if(l>=55296&&l<=56319&&a<n){var r=e.charCodeAt(a++);56320==(64512&r)?t.push(((1023&l)<<10)+(1023&r)+65536):(t.push(l),a--)}else t.push(l)}return t},y=function(e){return e+22+75*(e<26)},k=function(e,t,a){var n=0;for(e=a?g(e/i):e>>1,e+=g(e/t);e>h*c>>1;n+=l)e=g(e/h);return g(n+(h+1)*e/(e+o))},v=function(e){var t=[];e=f(e);var a,o,i=e.length,d=u,E=0,h=s;for(a=0;a<e.length;a++)o=e[a],o<128&&t.push(b(o));var v=t.length,w=v;v&&t.push(m);while(w<i){var L=n;for(a=0;a<e.length;a++)o=e[a],o>=d&&o<L&&(L=o);var A=w+1;if(L-d>g((n-E)/A))throw RangeError(p);for(E+=(L-d)*A,d=L,a=0;a<e.length;a++){if(o=e[a],o<d&&++E>n)throw RangeError(p);if(o==d){for(var x=E,_=l;;_+=l){var G=_<=h?r:_>=h+c?c:_-h;if(x<G)break;var P=x-G,I=l-G;t.push(b(y(G+P%I))),x=g(P/I)}t.push(b(y(x))),h=k(E,A,w==v),E=0,++w}}++E,++d}return t.join("")};e.exports=function(e){var t,a,n=[],l=e.toLowerCase().replace(E,".").split(".");for(t=0;t<l.length;t++)a=l[t],n.push(d.test(a)?"xn--"+v(a):a);return n.join(".")}},XGRi:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"search-code"},l.a.createElement(r["AnchorLink"],{to:"#search-code","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search code"),l.a.createElement("p",null,"Searches for query terms inside of a file. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for code, you can get text match metadata for the file ",l.a.createElement("strong",null,"content")," and file ",l.a.createElement("strong",null,"path")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find the definition of the ",l.a.createElement("code",null,"addClass")," function inside ",l.a.createElement(r["Link"],{to:"https://github.com/jquery/jquery"},"jQuery")," repository, your query would look something like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=addClass+in:file+language:js+repo:jquery/jquery")),l.a.createElement("p",null,"This query searches for the keyword ",l.a.createElement("code",null,"addClass")," within a file's contents. The query limits the search to files where the language is JavaScript in the ",l.a.createElement("code",null,"jquery/jquery")," repository."),l.a.createElement("h6",{id:"considerations-for-code-search"},l.a.createElement(r["AnchorLink"],{to:"#considerations-for-code-search","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Considerations for code search"),l.a.createElement("p",null,"Due to the complexity of searching code, there are a few restrictions on how searches are performed:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Only the ",l.a.createElement("em",null,"default branch")," is considered. In most cases, this will be the ",l.a.createElement("code",null,"master")," branch."),l.a.createElement("li",null,"Only files smaller than 384 KB are searchable."),l.a.createElement("li",null,"You must always include at least one search term when searching source code. For example, searching for ",l.a.createElement(r["Link"],{to:"https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code"},l.a.createElement("code",null,"language:go"))," is not valid, while ",l.a.createElement(r["Link"],{to:"https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code"},l.a.createElement("code",null,"amazing language:go"))," is.")),l.a.createElement(c["a"],{code:"octokit.search.code({\n  q,\n});\n",lang:"js"}),l.a.createElement("h2",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-code/"},"Searching code"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query. Can only be ",l.a.createElement("code",null,"indexed"),", which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-code"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-commits"},l.a.createElement(r["AnchorLink"],{to:"#search-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search commits"),l.a.createElement("p",null,"Find commits via various criteria on the default branch (usually ",l.a.createElement("code",null,"master"),"). This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for commits, you can get text match metadata for the ",l.a.createElement("strong",null,"message")," field when you provide the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find commits related to CSS in the ",l.a.createElement(r["Link"],{to:"https://github.com/octocat/Spoon-Knife"},"octocat/Spoon-Knife")," repository. Your query would look something like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=repo:octocat/Spoon-Knife+css")),l.a.createElement(c["a"],{code:"octokit.search.commits({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-commits/"},"Searching commits"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by ",l.a.createElement("code",null,"author-date")," or ",l.a.createElement("code",null,"committer-date"),". Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-issues-and-pull-requests"},l.a.createElement(r["AnchorLink"],{to:"#search-issues-and-pull-requests","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search issues and pull requests"),l.a.createElement("p",null,"Find issues by state and keyword. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for issues, you can get text match metadata for the issue ",l.a.createElement("strong",null,"title"),", issue ",l.a.createElement("strong",null,"body"),", and issue ",l.a.createElement("strong",null,"comment body")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this."),l.a.createElement("p",null,l.a.createElement("code",null,"q=windows+label:bug+language:python+state:open&sort=created&order=asc")),l.a.createElement("p",null,"This query searches for the keyword ",l.a.createElement("code",null,"windows"),", within any open issue that is labeled as ",l.a.createElement("code",null,"bug"),". The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," For ",l.a.createElement(r["Link"],{to:"https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests"},"user-to-server")," GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the ",l.a.createElement("code",null,"is:issue")," or ",l.a.createElement("code",null,"is:pull-request")," qualifier will receive an HTTP ",l.a.createElement("code",null,"422 Unprocessable Entity")," response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the ",l.a.createElement("code",null,"is"),' qualifier, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests"},"Searching only issues or pull requests"),'."'),l.a.createElement(c["a"],{code:"octokit.search.issuesAndPullRequests({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-issues-and-pull-requests/"},"Searching issues and pull requests"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by the number of ",l.a.createElement("code",null,"comments"),", ",l.a.createElement("code",null,"reactions"),", ",l.a.createElement("code",null,"reactions-+1"),", ",l.a.createElement("code",null,"reactions--1"),", ",l.a.createElement("code",null,"reactions-smile"),", ",l.a.createElement("code",null,"reactions-thinking_face"),", ",l.a.createElement("code",null,"reactions-heart"),", ",l.a.createElement("code",null,"reactions-tada"),", or ",l.a.createElement("code",null,"interactions"),". You can also sort results by how recently the items were ",l.a.createElement("code",null,"created")," or ",l.a.createElement("code",null,"updated"),", Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-issues-and-pull-requests"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-labels"},l.a.createElement(r["AnchorLink"],{to:"#search-labels","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search labels"),l.a.createElement("p",null,"Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for labels, you can get text match metadata for the label ",l.a.createElement("strong",null,"name")," and ",l.a.createElement("strong",null,"description")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to find labels in the ",l.a.createElement("code",null,"linguist")," repository that match ",l.a.createElement("code",null,"bug"),", ",l.a.createElement("code",null,"defect"),", or ",l.a.createElement("code",null,"enhancement"),". Your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=bug+defect+enhancement&repository_id=64778136")),l.a.createElement("p",null,"The labels that best match the query appear first in the search results."),l.a.createElement(c["a"],{code:"octokit.search.labels({\n  repository_id,\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The id of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by when the label was ",l.a.createElement("code",null,"created")," or ",l.a.createElement("code",null,"updated"),". Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-labels"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-repositories"},l.a.createElement(r["AnchorLink"],{to:"#search-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search repositories"),l.a.createElement("p",null,"Find repositories via various criteria. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for repositories, you can get text match metadata for the ",l.a.createElement("strong",null,"name")," and ",l.a.createElement("strong",null,"description")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=tetris+language:assembly&sort=stars&order=desc")),l.a.createElement("p",null,"This query searches for repositories with the word ",l.a.createElement("code",null,"tetris")," in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results."),l.a.createElement("p",null,"When you include the ",l.a.createElement("code",null,"mercy")," preview header, you can also search for multiple topics by adding more ",l.a.createElement("code",null,"topic:")," instances. For example, your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=topic:ruby+topic:rails")),l.a.createElement(c["a"],{code:"octokit.search.repos({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-for-repositories/"},"Searching for repositories"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by number of ",l.a.createElement("code",null,"stars"),", ",l.a.createElement("code",null,"forks"),", or ",l.a.createElement("code",null,"help-wanted-issues")," or how recently the items were ",l.a.createElement("code",null,"updated"),". Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-topics"},l.a.createElement(r["AnchorLink"],{to:"#search-topics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search topics"),l.a.createElement("p",null,"Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-topics/"},"Searching topics"),'" for a detailed list of qualifiers.'),l.a.createElement("p",null,"When searching for topics, you can get text match metadata for the topic's ",l.a.createElement("strong",null,"short_description"),", ",l.a.createElement("strong",null,"description"),", ",l.a.createElement("strong",null,"name"),", or ",l.a.createElement("strong",null,"display_name")," field when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you want to search for topics related to Ruby that are featured on ",l.a.createElement(r["Link"],{to:"https://github.com/topics"},"https://github.com/topics"),". Your query might look like this:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=ruby+is:featured")),l.a.createElement("p",null,"This query searches for topics with the keyword ",l.a.createElement("code",null,"ruby")," and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results."),l.a.createElement(c["a"],{code:"octokit.search.topics({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-topics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"search-users"},l.a.createElement(r["AnchorLink"],{to:"#search-users","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Search users"),l.a.createElement("p",null,"Find users via various criteria. This method returns up to 100 results ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"per page"),"."),l.a.createElement("p",null,"When searching for users, you can get text match metadata for the issue ",l.a.createElement("strong",null,"login"),", ",l.a.createElement("strong",null,"email"),", and ",l.a.createElement("strong",null,"name")," fields when you pass the ",l.a.createElement("code",null,"text-match")," media type. For more details about highlighting search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),". For more details about how to receive highlighted search results, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#text-match-metadata"},"Text match metadata"),"."),l.a.createElement("p",null,"For example, if you're looking for a list of popular users, you might try this query:"),l.a.createElement("p",null,l.a.createElement("code",null,"q=tom+repos:%3E42+followers:%3E1000")),l.a.createElement("p",null,"This query searches for users with the name ",l.a.createElement("code",null,"tom"),". The results are restricted to users with more than 42 repositories and over 1,000 followers."),l.a.createElement(c["a"],{code:"octokit.search.users({\n  q,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"q"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#constructing-a-search-query"},"Constructing a search query"),'. See "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/searching-users/"},"Searching users"),'" for a detailed list of qualifiers.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sorts the results of your query by number of ",l.a.createElement("code",null,"followers")," or ",l.a.createElement("code",null,"repositories"),", or when the person ",l.a.createElement("code",null,"joined")," GitHub. Default: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/search#ranking-search-results"},"best match")))),l.a.createElement("tr",null,l.a.createElement("td",null,"order"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the first search result returned is the highest number of matches (",l.a.createElement("code",null,"desc"),") or lowest number of matches (",l.a.createElement("code",null,"asc"),"). This parameter is ignored unless you provide ",l.a.createElement("code",null,"sort"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/search/#search-users"},"GitHub Developer Guide documentation"),".")))}},XGwC:function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},XMab:function(e,t,a){var n=a("dOgj");n("Uint8",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},XbcX:function(e,t,a){"use strict";var n=a("I+eb"),l=a("or9q"),r=a("ewvW"),c=a("UMSQ"),o=a("HAuM"),i=a("ZfDv");n({target:"Array",proto:!0},{flatMap:function(e){var t,a=r(this),n=c(a.length);return o(e),t=i(a,0),t.length=l(t,a,a,n,0,1,e,arguments.length>1?arguments[1]:void 0),t}})},Y3SK:function(e,t,a){var n=a("ZhPi");function l(e,t){var a;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(a=n(e))||t&&e&&"number"===typeof e.length){a&&(e=a);var l=0,r=function(){};return{s:r,n:function(){return l>=e.length?{done:!0}:{done:!1,value:e[l++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var c,o=!0,i=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return o=e.done,e},e:function(e){i=!0,c=e},f:function(){try{o||null==a["return"]||a["return"]()}finally{if(i)throw c}}}}e.exports=l},Y4C7:function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=l.toKey,o=l.getMap,i=l.store;n({target:"Reflect",stat:!0},{deleteMetadata:function(e,t){var a=arguments.length<3?void 0:c(arguments[2]),n=o(r(t),a,!1);if(void 0===n||!n["delete"](e))return!1;if(n.size)return!0;var l=i.get(t);return l["delete"](a),!!l.size||i["delete"](t)}})},YGK4:function(e,t,a){"use strict";var n=a("bWFh"),l=a("ZWaQ");e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),l)},YNrV:function(e,t,a){"use strict";var n=a("g6v/"),l=a("0Dky"),r=a("33Wh"),c=a("dBg+"),o=a("0eef"),i=a("ewvW"),s=a("RK3t"),u=Object.assign,m=Object.defineProperty;e.exports=!u||l((function(){if(n&&1!==u({b:1},u(m({},"a",{enumerable:!0,get:function(){m(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},a=Symbol(),l="abcdefghijklmnopqrst";return e[a]=7,l.split("").forEach((function(e){t[e]=e})),7!=u({},e)[a]||r(u({},t)).join("")!=l}))?function(e,t){var a=i(e),l=arguments.length,u=1,m=c.f,d=o.f;while(l>u){var E,p=s(arguments[u++]),h=m?r(p).concat(m(p)):r(p),g=h.length,b=0;while(g>b)E=h[b++],n&&!d.call(p,E)||(a[E]=p[E])}return a}:u},YS25:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return R})),a.d(t,"d",(function(){return U})),a.d(t,"c",(function(){return v})),a.d(t,"f",(function(){return w})),a.d(t,"e",(function(){return k}));var n=a("wx14");function l(e){return"/"===e.charAt(0)}function r(e,t){for(var a=t,n=a+1,l=e.length;n<l;a+=1,n+=1)e[a]=e[n];e.pop()}function c(e,t){void 0===t&&(t="");var a,n=e&&e.split("/")||[],c=t&&t.split("/")||[],o=e&&l(e),i=t&&l(t),s=o||i;if(e&&l(e)?c=n:n.length&&(c.pop(),c=c.concat(n)),!c.length)return"/";if(c.length){var u=c[c.length-1];a="."===u||".."===u||""===u}else a=!1;for(var m=0,d=c.length;d>=0;d--){var E=c[d];"."===E?r(c,d):".."===E?(r(c,d),m++):m&&(r(c,d),m--)}if(!s)for(;m--;m)c.unshift("..");!s||""===c[0]||c[0]&&l(c[0])||c.unshift("");var p=c.join("/");return a&&"/"!==p.substr(-1)&&(p+="/"),p}var o=c;function i(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}function s(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(Array.isArray(e))return Array.isArray(t)&&e.length===t.length&&e.every((function(e,a){return s(e,t[a])}));if("object"===typeof e||"object"===typeof t){var a=i(e),n=i(t);return a!==e||n!==t?s(a,n):Object.keys(Object.assign({},e,t)).every((function(a){return s(e[a],t[a])}))}return!1}var u=s,m=a("cr+I"),d=a.n(m),E=a("9R94");function p(e){return"/"===e.charAt(0)?e:"/"+e}function h(e){return"/"===e.charAt(0)?e.substr(1):e}function g(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}function b(e,t){return g(e,t)?e.substr(t.length):e}function f(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function y(e){var t=e||"/",a="",n="",l=t.indexOf("#");-1!==l&&(n=t.substr(l),t=t.substr(0,l));var r=t.indexOf("?");return-1!==r&&(a=t.substr(r),t=t.substr(0,r)),{pathname:t,search:"?"===a?"":a,hash:"#"===n?"":n}}function k(e){var t=e.pathname,a=e.search,n=e.hash,l=t||"/";return a&&"?"!==a&&(l+="?"===a.charAt(0)?a:"?"+a),n&&"#"!==n&&(l+="#"===n.charAt(0)?n:"#"+n),l}function v(e,t,a,l){var r;"string"===typeof e?(r=y(e),r.query=r.search?d.a.parse(r.search):{},r.state=t):(r=Object(n["a"])({},e),void 0===r.pathname&&(r.pathname=""),r.search?("?"!==r.search.charAt(0)&&(r.search="?"+r.search),r.query=d.a.parse(r.search)):(r.search=r.query?d.a.stringify(r.query):"",r.query=r.query||{}),r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==t&&void 0===r.state&&(r.state=t));try{r.pathname=decodeURI(r.pathname)}catch(c){throw c instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):c}return a&&(r.key=a),l?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=o(r.pathname,l.pathname)):r.pathname=l.pathname:r.pathname||(r.pathname="/"),r}function w(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&u(e.state,t.state)}function L(){var e=null;function t(t){return e=t,function(){e===t&&(e=null)}}function a(t,a,n,l){if(null!=e){var r="function"===typeof e?e(t,a):e;"string"===typeof r?"function"===typeof n?n(r,l):l(!0):l(!1!==r)}else l(!0)}var n=[];function l(e){var t=!0;function a(){t&&e.apply(void 0,arguments)}return n.push(a),function(){t=!1,n=n.filter((function(e){return e!==a}))}}function r(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];n.forEach((function(e){return e.apply(void 0,t)}))}return{setPrompt:t,confirmTransitionTo:a,appendListener:l,notifyListeners:r}}var A=!("undefined"===typeof window||!window.document||!window.document.createElement);function x(e,t){t(window.confirm(e))}function _(){var e=window.navigator.userAgent;return(-1===e.indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&(window.history&&"pushState"in window.history)}function G(){return-1===window.navigator.userAgent.indexOf("Trident")}function P(){return-1===window.navigator.userAgent.indexOf("Firefox")}function I(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")}var S="popstate",T="hashchange";function N(){try{return window.history.state||{}}catch(e){return{}}}function j(e){void 0===e&&(e={}),A||Object(E["a"])(!1);var t=window.history,a=_(),l=!G(),r=e,c=r.forceRefresh,o=void 0!==c&&c,i=r.getUserConfirmation,s=void 0===i?x:i,u=r.keyLength,m=void 0===u?6:u,d=e.basename?f(p(e.basename)):"";function h(e){var t=e||{},a=t.key,n=t.state,l=window.location,r=l.pathname,c=l.search,o=l.hash,i=r+c+o;return d&&(i=b(i,d)),v(i,n,a)}function g(){return Math.random().toString(36).substr(2,m)}var y=L();function w(e){Object(n["a"])($,e),$.length=t.length,y.notifyListeners($.location,$.action)}function P(e){I(e)||q(h(e.state))}function j(){q(h(N()))}var H=!1;function q(e){if(H)H=!1,w();else{var t="POP";y.confirmTransitionTo(e,t,s,(function(a){a?w({action:t,location:e}):D(e)}))}}function D(e){var t=$.location,a=C.indexOf(t.key);-1===a&&(a=0);var n=C.indexOf(e.key);-1===n&&(n=0);var l=a-n;l&&(H=!0,U(l))}var z=h(N()),C=[z.key];function O(e){return d+k(e)}function R(e,n){var l="PUSH",r=v(e,n,g(),$.location);y.confirmTransitionTo(r,l,s,(function(e){if(e){var n=O(r),c=r.key,i=r.state;if(a)if(t.pushState({key:c,state:i},null,n),o)window.location.href=n;else{var s=C.indexOf($.location.key),u=C.slice(0,s+1);u.push(r.key),C=u,w({action:l,location:r})}else window.location.href=n}}))}function F(e,n){var l="REPLACE",r=v(e,n,g(),$.location);y.confirmTransitionTo(r,l,s,(function(e){if(e){var n=O(r),c=r.key,i=r.state;if(a)if(t.replaceState({key:c,state:i},null,n),o)window.location.replace(n);else{var s=C.indexOf($.location.key);-1!==s&&(C[s]=r.key),w({action:l,location:r})}else window.location.replace(n)}}))}function U(e){t.go(e)}function M(){U(-1)}function Y(){U(1)}var B=0;function W(e){B+=e,1===B&&1===e?(window.addEventListener(S,P),l&&window.addEventListener(T,j)):0===B&&(window.removeEventListener(S,P),l&&window.removeEventListener(T,j))}var K=!1;function V(e){void 0===e&&(e=!1);var t=y.setPrompt(e);return K||(W(1),K=!0),function(){return K&&(K=!1,W(-1)),t()}}function Z(e){var t=y.appendListener(e);return W(1),function(){W(-1),t()}}var $={length:t.length,action:"POP",location:z,createHref:O,push:R,replace:F,go:U,goBack:M,goForward:Y,block:V,listen:Z};return $}var H="hashchange",q={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+h(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:h,decodePath:p},slash:{encodePath:p,decodePath:p}};function D(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function z(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function C(e){window.location.hash=e}function O(e){window.location.replace(D(window.location.href)+"#"+e)}function R(e){void 0===e&&(e={}),A||Object(E["a"])(!1);var t=window.history,a=(P(),e),l=a.getUserConfirmation,r=void 0===l?x:l,c=a.hashType,o=void 0===c?"slash":c,i=e.basename?f(p(e.basename)):"",s=q[o],u=s.encodePath,m=s.decodePath;function d(){var e=m(z());return i&&(e=b(e,i)),v(e)}var h=L();function g(e){Object(n["a"])(J,e),J.length=t.length,h.notifyListeners(J.location,J.action)}var y=!1,w=null;function _(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash}function G(){var e=z(),t=u(e);if(e!==t)O(t);else{var a=d(),n=J.location;if(!y&&_(n,a))return;if(w===k(a))return;w=null,I(a)}}function I(e){if(y)y=!1,g();else{var t="POP";h.confirmTransitionTo(e,t,r,(function(a){a?g({action:t,location:e}):S(e)}))}}function S(e){var t=J.location,a=R.lastIndexOf(k(t));-1===a&&(a=0);var n=R.lastIndexOf(k(e));-1===n&&(n=0);var l=a-n;l&&(y=!0,Y(l))}var T=z(),N=u(T);T!==N&&O(N);var j=d(),R=[k(j)];function F(e){var t=document.querySelector("base"),a="";return t&&t.getAttribute("href")&&(a=D(window.location.href)),a+"#"+u(i+k(e))}function U(e,t){var a="PUSH",n=v(e,void 0,void 0,J.location);h.confirmTransitionTo(n,a,r,(function(e){if(e){var t=k(n),l=u(i+t),r=z()!==l;if(r){w=t,C(l);var c=R.lastIndexOf(k(J.location)),o=R.slice(0,c+1);o.push(t),R=o,g({action:a,location:n})}else g()}}))}function M(e,t){var a="REPLACE",n=v(e,void 0,void 0,J.location);h.confirmTransitionTo(n,a,r,(function(e){if(e){var t=k(n),l=u(i+t),r=z()!==l;r&&(w=t,O(l));var c=R.indexOf(k(J.location));-1!==c&&(R[c]=t),g({action:a,location:n})}}))}function Y(e){t.go(e)}function B(){Y(-1)}function W(){Y(1)}var K=0;function V(e){K+=e,1===K&&1===e?window.addEventListener(H,G):0===K&&window.removeEventListener(H,G)}var Z=!1;function $(e){void 0===e&&(e=!1);var t=h.setPrompt(e);return Z||(V(1),Z=!0),function(){return Z&&(Z=!1,V(-1)),t()}}function Q(e){var t=h.appendListener(e);return V(1),function(){V(-1),t()}}var J={length:t.length,action:"POP",location:j,createHref:F,push:U,replace:M,go:Y,goBack:B,goForward:W,block:$,listen:Q};return J}function F(e,t,a){return Math.min(Math.max(e,t),a)}function U(e){void 0===e&&(e={});var t=e,a=t.getUserConfirmation,l=t.initialEntries,r=void 0===l?["/"]:l,c=t.initialIndex,o=void 0===c?0:c,i=t.keyLength,s=void 0===i?6:i,u=L();function m(e){Object(n["a"])(G,e),G.length=G.entries.length,u.notifyListeners(G.location,G.action)}function d(){return Math.random().toString(36).substr(2,s)}var E=F(o,0,r.length-1),p=r.map((function(e){return v(e,void 0,"string"===typeof e?d():e.key||d())})),h=k;function g(e,t){var n="PUSH",l=v(e,t,d(),G.location);u.confirmTransitionTo(l,n,a,(function(e){if(e){var t=G.index,a=t+1,r=G.entries.slice(0);r.length>a?r.splice(a,r.length-a,l):r.push(l),m({action:n,location:l,index:a,entries:r})}}))}function b(e,t){var n="REPLACE",l=v(e,t,d(),G.location);u.confirmTransitionTo(l,n,a,(function(e){e&&(G.entries[G.index]=l,m({action:n,location:l}))}))}function f(e){var t=F(G.index+e,0,G.entries.length-1),n="POP",l=G.entries[t];u.confirmTransitionTo(l,n,a,(function(e){e?m({action:n,location:l,index:t}):m()}))}function y(){f(-1)}function w(){f(1)}function A(e){var t=G.index+e;return t>=0&&t<G.entries.length}function x(e){return void 0===e&&(e=!1),u.setPrompt(e)}function _(e){return u.appendListener(e)}var G={length:p.length,action:"POP",location:p[E],index:E,entries:p,createHref:h,push:g,replace:b,go:f,goBack:y,goForward:w,canGo:A,block:x,listen:_};return G}},Yhre:function(e,t,a){"use strict";var n=a("2oRo"),l=a("g6v/"),r=a("qYE9"),c=a("kRJp"),o=a("4syw"),i=a("0Dky"),s=a("GarU"),u=a("ppGB"),m=a("UMSQ"),d=a("CyXQ"),E=a("d6cI"),p=a("4WOD"),h=a("0rvr"),g=a("JBy8").f,b=a("m/L8").f,f=a("gdVl"),y=a("1E5z"),k=a("afO8"),v=k.get,w=k.set,L="ArrayBuffer",A="DataView",x="prototype",_="Wrong length",G="Wrong index",P=n[L],I=P,S=n[A],T=S&&S[x],N=Object.prototype,j=n.RangeError,H=E.pack,q=E.unpack,D=function(e){return[255&e]},z=function(e){return[255&e,e>>8&255]},C=function(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]},O=function(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]},R=function(e){return H(e,23,4)},F=function(e){return H(e,52,8)},U=function(e,t){b(e[x],t,{get:function(){return v(this)[t]}})},M=function(e,t,a,n){var l=d(a),r=v(e);if(l+t>r.byteLength)throw j(G);var c=v(r.buffer).bytes,o=l+r.byteOffset,i=c.slice(o,o+t);return n?i:i.reverse()},Y=function(e,t,a,n,l,r){var c=d(a),o=v(e);if(c+t>o.byteLength)throw j(G);for(var i=v(o.buffer).bytes,s=c+o.byteOffset,u=n(+l),m=0;m<t;m++)i[s+m]=u[r?m:t-m-1]};if(r){if(!i((function(){P(1)}))||!i((function(){new P(-1)}))||i((function(){return new P,new P(1.5),new P(NaN),P.name!=L}))){I=function(e){return s(this,I),new P(d(e))};for(var B,W=I[x]=P[x],K=g(P),V=0;K.length>V;)(B=K[V++])in I||c(I,B,P[B]);W.constructor=I}h&&p(T)!==N&&h(T,N);var Z=new S(new I(2)),$=T.setInt8;Z.setInt8(0,2147483648),Z.setInt8(1,2147483649),!Z.getInt8(0)&&Z.getInt8(1)||o(T,{setInt8:function(e,t){$.call(this,e,t<<24>>24)},setUint8:function(e,t){$.call(this,e,t<<24>>24)}},{unsafe:!0})}else I=function(e){s(this,I,L);var t=d(e);w(this,{bytes:f.call(new Array(t),0),byteLength:t}),l||(this.byteLength=t)},S=function(e,t,a){s(this,S,A),s(e,I,A);var n=v(e).byteLength,r=u(t);if(r<0||r>n)throw j("Wrong offset");if(a=void 0===a?n-r:m(a),r+a>n)throw j(_);w(this,{buffer:e,byteLength:a,byteOffset:r}),l||(this.buffer=e,this.byteLength=a,this.byteOffset=r)},l&&(U(I,"byteLength"),U(S,"buffer"),U(S,"byteLength"),U(S,"byteOffset")),o(S[x],{getInt8:function(e){return M(this,1,e)[0]<<24>>24},getUint8:function(e){return M(this,1,e)[0]},getInt16:function(e){var t=M(this,2,e,arguments.length>1?arguments[1]:void 0);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=M(this,2,e,arguments.length>1?arguments[1]:void 0);return t[1]<<8|t[0]},getInt32:function(e){return O(M(this,4,e,arguments.length>1?arguments[1]:void 0))},getUint32:function(e){return O(M(this,4,e,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(e){return q(M(this,4,e,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(e){return q(M(this,8,e,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(e,t){Y(this,1,e,D,t)},setUint8:function(e,t){Y(this,1,e,D,t)},setInt16:function(e,t){Y(this,2,e,z,t,arguments.length>2?arguments[2]:void 0)},setUint16:function(e,t){Y(this,2,e,z,t,arguments.length>2?arguments[2]:void 0)},setInt32:function(e,t){Y(this,4,e,C,t,arguments.length>2?arguments[2]:void 0)},setUint32:function(e,t){Y(this,4,e,C,t,arguments.length>2?arguments[2]:void 0)},setFloat32:function(e,t){Y(this,4,e,R,t,arguments.length>2?arguments[2]:void 0)},setFloat64:function(e,t){Y(this,8,e,F,t,arguments.length>2?arguments[2]:void 0)}});y(I,L),y(S,A),e.exports={ArrayBuffer:I,DataView:S}},"Z/Fd":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"create-a-blob"},l.a.createElement(r["AnchorLink"],{to:"#create-a-blob","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a blob"),l.a.createElement(c["a"],{code:"octokit.git.createBlob({\n  owner,\n  repo,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The new blob's content."))),l.a.createElement("tr",null,l.a.createElement("td",null,"encoding"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The encoding used for ",l.a.createElement("code",null,"content"),". Currently, ",l.a.createElement("code",null,'"utf-8"')," and ",l.a.createElement("code",null,'"base64"')," are supported."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-blob"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#create-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a commit"),l.a.createElement("p",null,"Creates a new Git ",l.a.createElement(r["Link"],{to:"https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects"},"commit object"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.createCommit({\n  owner,\n  repo,\n  message,\n  tree,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit message"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the tree object this commit points to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"parents"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Information about the author of the commit. By default, the ",l.a.createElement("code",null,"author")," will be the authenticated user and the current date. See the ",l.a.createElement("code",null,"author")," and ",l.a.createElement("code",null,"committer")," object below for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates when this commit was authored (or committed). This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Information about the person who is making the commit. By default, ",l.a.createElement("code",null,"committer")," will use the information set in ",l.a.createElement("code",null,"author"),". See the ",l.a.createElement("code",null,"author")," and ",l.a.createElement("code",null,"committer")," object below for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates when this commit was authored (or committed). This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"signature"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/Pretty_Good_Privacy"},"PGP signature")," of the commit. GitHub adds the signature to the ",l.a.createElement("code",null,"gpgsig")," header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a ",l.a.createElement("code",null,"signature")," parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to ",l.a.createElement(r["Link"],{to:"https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work"},"use the command line")," to create signed commits."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#create-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a reference"),l.a.createElement("p",null,"Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches."),l.a.createElement(c["a"],{code:"octokit.git.createRef({\n  owner,\n  repo,\n  ref,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the fully qualified reference (ie: ",l.a.createElement("code",null,"refs/heads/master"),"). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 value for this reference."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-tag-object"},l.a.createElement(r["AnchorLink"],{to:"#create-a-tag-object","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a tag object"),l.a.createElement("p",null,"Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-reference"},"create")," the ",l.a.createElement("code",null,"refs/tags/[tag]")," reference. If you want to create a lightweight tag, you only have to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-reference"},"create")," the tag reference - this call would be unnecessary."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.createTag({\n  owner,\n  repo,\n  tag,\n  message,\n  object,\n  type,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,'The tag\'s name. This is typically a version (e.g., "v0.0.1").'))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The tag message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"object"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the git object this is tagging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of the object we're tagging. Normally this is a ",l.a.createElement("code",null,"commit")," but it can also be a ",l.a.createElement("code",null,"tree")," or a ",l.a.createElement("code",null,"blob"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An object with information about the individual creating the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author of the tag"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author of the tag"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"When this object was tagged. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-tag-object"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-tree"},l.a.createElement(r["AnchorLink"],{to:"#create-a-tree","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a tree"),l.a.createElement("p",null,"The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure."),l.a.createElement("p",null,'If you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-commit"},"Create a commit"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#update-a-reference"},"Update a reference"),'."'),l.a.createElement(c["a"],{code:"octokit.git.createTree({\n  owner,\n  repo,\n  tree,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tree"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Objects (of ",l.a.createElement("code",null,"path"),", ",l.a.createElement("code",null,"mode"),", ",l.a.createElement("code",null,"type"),", and ",l.a.createElement("code",null,"sha"),") specifying a tree structure."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The file referenced in the tree."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].mode"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The file mode; one of ",l.a.createElement("code",null,"100644")," for file (blob), ",l.a.createElement("code",null,"100755")," for executable (blob), ",l.a.createElement("code",null,"040000")," for subdirectory (tree), ",l.a.createElement("code",null,"160000")," for submodule (commit), or ",l.a.createElement("code",null,"120000")," for a blob that specifies the path of a symlink."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"blob"),", ",l.a.createElement("code",null,"tree"),", or ",l.a.createElement("code",null,"commit"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 checksum ID of the object in the tree. Also called ",l.a.createElement("code",null,"tree.sha"),". If the value is ",l.a.createElement("code",null,"null")," then the file will be deleted."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Use either ",l.a.createElement("code",null,"tree.sha")," or ",l.a.createElement("code",null,"content")," to specify the contents of the entry. Using both ",l.a.createElement("code",null,"tree.sha")," and ",l.a.createElement("code",null,"content")," will return an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or ",l.a.createElement("code",null,"tree.sha"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Use either ",l.a.createElement("code",null,"tree.sha")," or ",l.a.createElement("code",null,"content")," to specify the contents of the entry. Using both ",l.a.createElement("code",null,"tree.sha")," and ",l.a.createElement("code",null,"content")," will return an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base_tree"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by ",l.a.createElement("code",null,"base_tree")," and entries defined in the ",l.a.createElement("code",null,"tree")," parameter. Entries defined in the ",l.a.createElement("code",null,"tree")," parameter will overwrite items from ",l.a.createElement("code",null,"base_tree")," with the same ",l.a.createElement("code",null,"path"),". If you're creating new changes on a branch, then normally you'd set ",l.a.createElement("code",null,"base_tree")," to the SHA1 of the Git tree object of the current latest commit on the branch you're working on. If not provided, GitHub will create a new Git tree object from only the entries defined in the ",l.a.createElement("code",null,"tree")," parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the ",l.a.createElement("code",null,"tree")," parameter will be listed as deleted by the new commit."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-tree"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a reference"),l.a.createElement(c["a"],{code:"octokit.git.deleteRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#delete-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-blob"},l.a.createElement(r["AnchorLink"],{to:"#get-a-blob","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a blob"),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"content")," in the response will always be Base64 encoded."),l.a.createElement("p",null,l.a.createElement("em",null,"Note"),": This API supports blobs up to 100 megabytes in size."),l.a.createElement(c["a"],{code:"octokit.git.getBlob({\n  owner,\n  repo,\n  file_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"file_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-blob"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#get-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a commit"),l.a.createElement("p",null,"Gets a Git ",l.a.createElement(r["Link"],{to:"https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects"},"commit object"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.getCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#get-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a reference"),l.a.createElement("p",null,"Returns a single reference from your Git database. The ",l.a.createElement("code",null,":ref")," in the URL must be formatted as ",l.a.createElement("code",null,"heads/<branch name>")," for branches and ",l.a.createElement("code",null,"tags/<tag name>")," for tags. If the ",l.a.createElement("code",null,":ref")," doesn't match an existing ref, a ",l.a.createElement("code",null,"404")," is returned."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You need to explicitly ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-pull-request"},"request a pull request"),' to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"},"Checking mergeability of pull requests"),'".'),l.a.createElement(c["a"],{code:"octokit.git.getRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-tag"},l.a.createElement(r["AnchorLink"],{to:"#get-a-tag","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a tag"),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.getTag({\n  owner,\n  repo,\n  tag_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-tag"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-tree"},l.a.createElement(r["AnchorLink"],{to:"#get-a-tree","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a tree"),l.a.createElement("p",null,"Returns a single tree using the SHA1 value for that tree."),l.a.createElement("p",null,"If ",l.a.createElement("code",null,"truncated")," is ",l.a.createElement("code",null,"true")," in the response then the number of items in the ",l.a.createElement("code",null,"tree")," array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time."),l.a.createElement(c["a"],{code:"octokit.git.getTree({\n  owner,\n  repo,\n  tree_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tree_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"recursive"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in ",l.a.createElement("code",null,":tree_sha"),". For example, setting ",l.a.createElement("code",null,"recursive")," to any of the following will enable returning objects or subtrees: ",l.a.createElement("code",null,"0"),", ",l.a.createElement("code",null,"1"),", ",l.a.createElement("code",null,'"true"'),", and ",l.a.createElement("code",null,'"false"'),". Omit this parameter to prevent recursively returning objects or subtrees."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-tree"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-matching-references"},l.a.createElement(r["AnchorLink"],{to:"#list-matching-references","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List matching references"),l.a.createElement("p",null,"Returns an array of references from your Git database that match the supplied name. The ",l.a.createElement("code",null,":ref")," in the URL must be formatted as ",l.a.createElement("code",null,"heads/<branch name>")," for branches and ",l.a.createElement("code",null,"tags/<tag name>")," for tags. If the ",l.a.createElement("code",null,":ref")," doesn't exist in the repository, but existing refs start with ",l.a.createElement("code",null,":ref"),", they will be returned as an array."),l.a.createElement("p",null,"When you use this endpoint without providing a ",l.a.createElement("code",null,":ref"),", it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just ",l.a.createElement("code",null,"heads")," and ",l.a.createElement("code",null,"tags"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You need to explicitly ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-pull-request"},"request a pull request"),' to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"},"Checking mergeability of pull requests"),'".'),l.a.createElement("p",null,"If you request matching references for a branch named ",l.a.createElement("code",null,"feature")," but the branch ",l.a.createElement("code",null,"feature")," doesn't exist, the response can still include other matching head refs that start with the word ",l.a.createElement("code",null,"feature"),", such as ",l.a.createElement("code",null,"featureA")," and ",l.a.createElement("code",null,"featureB"),"."),l.a.createElement(c["a"],{code:"octokit.git.listMatchingRefs({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#list-matching-references"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#update-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a reference"),l.a.createElement(c["a"],{code:"octokit.git.updateRef({\n  owner,\n  repo,\n  ref,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 value to set this reference to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"force"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to ",l.a.createElement("code",null,"false")," will make sure you're not overwriting work."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#update-a-reference"},"GitHub Developer Guide documentation"),".")))}},Z4nd:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("fXLg");n({target:"WeakSet",proto:!0,real:!0,forced:l},{addAll:function(){return r.apply(this,arguments)}})},ZFOp:function(e,t,a){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%".concat(e.charCodeAt(0).toString(16).toUpperCase())}))}},ZOpk:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"You can customize Octokit\u2019s request lifecycle with hooks. Available methods are"),l.a.createElement(c["a"],{code:'octokit.hook.before("request", async (options) => {\n  validate(options);\n});\noctokit.hook.after("request", async (response, options) => {\n  console.log(`${options.method} ${options.url}: ${response.status}`);\n});\noctokit.hook.error("request", async (error, options) => {\n  if (error.status === 304) {\n    return findInCache(error.headers.etag);\n  }\n\n  throw error;\n});\noctokit.hook.wrap("request", async (request, options) => {\n  // add logic before, after, catch errors or replace the request altogether\n  return request(options);\n});\n',lang:"js"}),l.a.createElement("p",null,"See ",l.a.createElement(r["Link"],{to:"https://github.com/gr2m/before-after-hook#hookcollectionapi"},"before-after-hook")," for more details on the 4 methods.")))}},ZUd8:function(e,t,a){var n=a("ppGB"),l=a("HYAF"),r=function(e){return function(t,a){var r,c,o=String(l(t)),i=n(a),s=o.length;return i<0||i>=s?e?"":void 0:(r=o.charCodeAt(i),r<55296||r>56319||i+1===s||(c=o.charCodeAt(i+1))<56320||c>57343?e?o.charAt(i):r:e?o.slice(i,i+2):c-56320+(r-55296<<10)+65536)}};e.exports={codeAt:r(!1),charAt:r(!0)}},ZWaQ:function(e,t,a){"use strict";var n=a("m/L8").f,l=a("fHMY"),r=a("4syw"),c=a("A2ZE"),o=a("GarU"),i=a("ImZN"),s=a("fdAy"),u=a("JiZb"),m=a("g6v/"),d=a("8YOa").fastKey,E=a("afO8"),p=E.set,h=E.getterFor;e.exports={getConstructor:function(e,t,a,s){var u=e((function(e,n){o(e,u,t),p(e,{type:t,index:l(null),first:void 0,last:void 0,size:0}),m||(e.size=0),void 0!=n&&i(n,e[s],e,a)})),E=h(t),g=function(e,t,a){var n,l,r=E(e),c=b(e,t);return c?c.value=a:(r.last=c={index:l=d(t,!0),key:t,value:a,previous:n=r.last,next:void 0,removed:!1},r.first||(r.first=c),n&&(n.next=c),m?r.size++:e.size++,"F"!==l&&(r.index[l]=c)),e},b=function(e,t){var a,n=E(e),l=d(t);if("F"!==l)return n.index[l];for(a=n.first;a;a=a.next)if(a.key==t)return a};return r(u.prototype,{clear:function(){var e=this,t=E(e),a=t.index,n=t.first;while(n)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete a[n.index],n=n.next;t.first=t.last=void 0,m?t.size=0:e.size=0},delete:function(e){var t=this,a=E(t),n=b(t,e);if(n){var l=n.next,r=n.previous;delete a.index[n.index],n.removed=!0,r&&(r.next=l),l&&(l.previous=r),a.first==n&&(a.first=l),a.last==n&&(a.last=r),m?a.size--:t.size--}return!!n},forEach:function(e){var t,a=E(this),n=c(e,arguments.length>1?arguments[1]:void 0,3);while(t=t?t.next:a.first){n(t.value,t.key,this);while(t&&t.removed)t=t.previous}},has:function(e){return!!b(this,e)}}),r(u.prototype,a?{get:function(e){var t=b(this,e);return t&&t.value},set:function(e,t){return g(this,0===e?0:e,t)}}:{add:function(e){return g(this,e=0===e?0:e,e)}}),m&&n(u.prototype,"size",{get:function(){return E(this).size}}),u},setStrong:function(e,t,a){var n=t+" Iterator",l=h(t),r=h(n);s(e,t,(function(e,t){p(this,{type:n,target:e,state:l(e),kind:t,last:void 0})}),(function(){var e=r(this),t=e.kind,a=e.last;while(a&&a.removed)a=a.previous;return e.target&&(e.last=a=a?a.next:e.state.first)?"keys"==t?{value:a.key,done:!1}:"values"==t?{value:a.value,done:!1}:{value:[a.key,a.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),a?"entries":"values",!a,!0),u(t)}}},ZY7T:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("SEBh"),s=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{intersection:function(e){var t=c(this),a=new(i(t,r("Set"))),n=o(t.has),l=o(a.add);return s(e,(function(e){n.call(t,e)&&l.call(a,e)})),a}})},ZfDv:function(e,t,a){var n=a("hh1v"),l=a("6LWA"),r=a("tiKp"),c=r("species");e.exports=function(e,t){var a;return l(e)&&(a=e.constructor,"function"!=typeof a||a!==Array&&!l(a.prototype)?n(a)&&(a=a[c],null===a&&(a=void 0)):a=void 0),new(void 0===a?Array:a)(0===t?0:t)}},ZhPi:function(e,t,a){var n=a("WkPL");function l(e,t){if(e){if("string"===typeof e)return n(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?n(e,t):void 0}}e.exports=l},Zl2z:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"create-a-check-run"},l.a.createElement(r["AnchorLink"],{to:"#create-a-check-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a check run"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Creates a new check run for a specific commit in a repository. Your GitHub App must have the ",l.a.createElement("code",null,"checks:write")," permission to create check runs."),l.a.createElement("p",null,"In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs."),l.a.createElement(c["a"],{code:"octokit.checks.create({\n        owner,\nrepo,\nname,\nhead_sha,\noutput.title,\noutput.summary,\noutput.annotations[].path,\noutput.annotations[].start_line,\noutput.annotations[].end_line,\noutput.annotations[].annotation_level,\noutput.annotations[].message,\noutput.images[].alt,\noutput.images[].image_url,\nactions[].label,\nactions[].description,\nactions[].identifier\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,'The name of the check. For example, "code-coverage".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"head_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the commit."))),l.a.createElement("tr",null,l.a.createElement("td",null,"details_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used."))),l.a.createElement("tr",null,l.a.createElement("td",null,"external_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the run on the integrator's system."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The current status. Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"started_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time that the check run began. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"conclusion"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required if you provide ",l.a.createElement("code",null,"completed_at")," or a ",l.a.createElement("code",null,"status")," of ",l.a.createElement("code",null,"completed")),". The final conclusion of the check. Can be one of ",l.a.createElement("code",null,"success"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"neutral"),", ",l.a.createElement("code",null,"cancelled"),", ",l.a.createElement("code",null,"skipped"),", ",l.a.createElement("code",null,"timed_out"),", or ",l.a.createElement("code",null,"action_required"),". When the conclusion is ",l.a.createElement("code",null,"action_required"),", additional details should be provided on the site specified by ",l.a.createElement("code",null,"details_url"),".",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," Providing ",l.a.createElement("code",null,"conclusion")," will automatically set the ",l.a.createElement("code",null,"status")," parameter to ",l.a.createElement("code",null,"completed"),". Only GitHub can change a check run conclusion to ",l.a.createElement("code",null,"stale"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"completed_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time the check completed. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Check runs can accept a variety of data in the ",l.a.createElement("code",null,"output")," object, including a ",l.a.createElement("code",null,"title")," and ",l.a.createElement("code",null,"summary")," and can optionally provide descriptive details about the run. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#output-object"},l.a.createElement("code",null,"output")," object")," description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the check run."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.summary"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The summary of the check run. This parameter supports Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.text"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The details of the check run. This parameter supports Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the ",l.a.createElement("strong",null,"Checks")," and ",l.a.createElement("strong",null,"Files changed")," tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-a-check-run"},"Update a check run"),' endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-status-checks#checks"},"About status checks"),'". See the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#annotations-object"},l.a.createElement("code",null,"annotations")," object")," description for details about how to use this parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The path of the file to add an annotation to. For example, ",l.a.createElement("code",null,"assets/css/main.css"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The start line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The end line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The start column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The end column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].annotation_level"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of the annotation. Can be one of ",l.a.createElement("code",null,"notice"),", ",l.a.createElement("code",null,"warning"),", or ",l.a.createElement("code",null,"failure"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the feedback for these lines of code. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title that represents the annotation. The maximum size is 255 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].raw_details"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Details about this annotation. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds images to the output displayed in the GitHub pull request UI. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#images-object"},l.a.createElement("code",null,"images")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].alt"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The alternative text for the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].image_url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The full URL of the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].caption"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short image description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#check_run"},l.a.createElement("code",null,"check_run.requested_action")," webhook")," to your app. Each action includes a ",l.a.createElement("code",null,"label"),", ",l.a.createElement("code",null,"identifier")," and ",l.a.createElement("code",null,"description"),". A maximum of three actions are accepted. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#actions-object"},l.a.createElement("code",null,"actions")," object"),' description. To learn more about check runs and requested actions, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions"},"Check runs and requested actions"),'." To learn more about check runs and requested actions, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions"},"Check runs and requested actions"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].label"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text to be displayed on a button in the web UI. The maximum size is 20 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].description"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short explanation of what this action would do. The maximum size is 40 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].identifier"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the action on the integrator's system. The maximum size is 20 characters."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#create-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a check suite"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array and a ",l.a.createElement("code",null,"null")," value for ",l.a.createElement("code",null,"head_branch"),"."),l.a.createElement("p",null,"By default, check suites are automatically created when you create a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs"},"check run"),". You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites"},"Update repository preferences for check suites"),'". Your GitHub App must have the ',l.a.createElement("code",null,"checks:write")," permission to create check suites."),l.a.createElement(c["a"],{code:"octokit.checks.createSuite({\n  owner,\n  repo,\n  head_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"head_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The sha of the head commit."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-check-run"},l.a.createElement(r["AnchorLink"],{to:"#get-a-check-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a check run"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Gets a single check run using its ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check runs in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.get({\n  owner,\n  repo,\n  check_run_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_run_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#get-a-check-run"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#get-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a check suite"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array and a ",l.a.createElement("code",null,"null")," value for ",l.a.createElement("code",null,"head_branch"),"."),l.a.createElement("p",null,"Gets a single check suite using its ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check suites in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.getSuite({\n  owner,\n  repo,\n  check_suite_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_suite_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_suite_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#get-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-run-annotations"},l.a.createElement(r["AnchorLink"],{to:"#list-check-run-annotations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check run annotations"),l.a.createElement("p",null,"Lists annotations for a check run using the annotation ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get annotations for a check run in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listAnnotations({\n  owner,\n  repo,\n  check_run_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_run_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-run-annotations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-runs-for-a-git-reference"},l.a.createElement(r["AnchorLink"],{to:"#list-check-runs-for-a-git-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check runs for a Git reference"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Lists check runs for a commit ref. The ",l.a.createElement("code",null,"ref")," can be a SHA, branch name, or a tag name. GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check runs in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"check_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"status"),". Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters check runs by their ",l.a.createElement("code",null,"completed_at")," timestamp. Can be one of ",l.a.createElement("code",null,"latest")," (returning the most recent check runs) or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-runs-for-a-git-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-runs-in-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#list-check-runs-in-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check runs in a check suite"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Lists check runs for a check suite using its ",l.a.createElement("code",null,"id"),". GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check runs in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listForSuite({\n  owner,\n  repo,\n  check_suite_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_suite_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_suite_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"check_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"status"),". Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"filter"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters check runs by their ",l.a.createElement("code",null,"completed_at")," timestamp. Can be one of ",l.a.createElement("code",null,"latest")," (returning the most recent check runs) or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-check-suites-for-a-git-reference"},l.a.createElement(r["AnchorLink"],{to:"#list-check-suites-for-a-git-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List check suites for a Git reference"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array and a ",l.a.createElement("code",null,"null")," value for ",l.a.createElement("code",null,"head_branch"),"."),l.a.createElement("p",null,"Lists check suites for a commit ",l.a.createElement("code",null,"ref"),". The ",l.a.createElement("code",null,"ref")," can be a SHA, branch name, or a tag name. GitHub Apps must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the ",l.a.createElement("code",null,"repo")," scope to get check suites in a private repository."),l.a.createElement(c["a"],{code:"octokit.checks.listSuitesForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"app_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters check suites by GitHub App ",l.a.createElement("code",null,"id"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"check_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns check runs with the specified ",l.a.createElement("code",null,"name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"rerequest-a-check-suite"},l.a.createElement(r["AnchorLink"],{to:"#rerequest-a-check-suite","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Rerequest a check suite"),l.a.createElement("p",null,"Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#check_suite"},l.a.createElement("code",null,"check_suite")," webhook")," event with the action ",l.a.createElement("code",null,"rerequested"),". When a check suite is ",l.a.createElement("code",null,"rerequested"),", its ",l.a.createElement("code",null,"status")," is reset to ",l.a.createElement("code",null,"queued")," and the ",l.a.createElement("code",null,"conclusion")," is cleared."),l.a.createElement("p",null,"To rerequest a check suite, your GitHub App must have the ",l.a.createElement("code",null,"checks:read")," permission on a private repository or pull access to a public repository."),l.a.createElement(c["a"],{code:"octokit.checks.rerequestSuite({\n  owner,\n  repo,\n  check_suite_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_suite_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_suite_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#rerequest-a-check-suite"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-repository-preferences-for-check-suites"},l.a.createElement(r["AnchorLink"],{to:"#update-repository-preferences-for-check-suites","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update repository preferences for check suites"),l.a.createElement("p",null,"Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#create-a-check-suite"},"Create a check suite"),". You must have admin permissions in the repository to set preferences for check suites."),l.a.createElement(c["a"],{code:"octokit.checks.setSuitesPreferences({\n        owner,\nrepo,\nauto_trigger_checks[].app_id,\nauto_trigger_checks[].setting\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_trigger_checks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#auto_trigger_checks-object"},l.a.createElement("code",null,"auto_trigger_checks")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_trigger_checks[].app_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement("code",null,"id")," of the GitHub App."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_trigger_checks[].setting"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," to enable automatic creation of CheckSuite events upon pushes to the repository, or ",l.a.createElement("code",null,"false")," to disable them."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-check-run"},l.a.createElement(r["AnchorLink"],{to:"#update-a-check-run","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a check run"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty ",l.a.createElement("code",null,"pull_requests")," array."),l.a.createElement("p",null,"Updates a check run for a specific commit in a repository. Your GitHub App must have the ",l.a.createElement("code",null,"checks:write")," permission to edit check runs."),l.a.createElement(c["a"],{code:"octokit.checks.update({\n        owner,\nrepo,\ncheck_run_id,\noutput.summary,\noutput.annotations[].path,\noutput.annotations[].start_line,\noutput.annotations[].end_line,\noutput.annotations[].annotation_level,\noutput.annotations[].message,\noutput.images[].alt,\noutput.images[].image_url,\nactions[].label,\nactions[].description,\nactions[].identifier\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"check_run_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"check_run_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,'The name of the check. For example, "code-coverage".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"details_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL of the integrator's site that has the full details of the check."))),l.a.createElement("tr",null,l.a.createElement("td",null,"external_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the run on the integrator's system."))),l.a.createElement("tr",null,l.a.createElement("td",null,"started_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"status"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The current status. Can be one of ",l.a.createElement("code",null,"queued"),", ",l.a.createElement("code",null,"in_progress"),", or ",l.a.createElement("code",null,"completed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"conclusion"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required if you provide ",l.a.createElement("code",null,"completed_at")," or a ",l.a.createElement("code",null,"status")," of ",l.a.createElement("code",null,"completed")),". The final conclusion of the check. Can be one of ",l.a.createElement("code",null,"success"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"neutral"),", ",l.a.createElement("code",null,"cancelled"),", ",l.a.createElement("code",null,"skipped"),", ",l.a.createElement("code",null,"timed_out"),", or ",l.a.createElement("code",null,"action_required"),".",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," Providing ",l.a.createElement("code",null,"conclusion")," will automatically set the ",l.a.createElement("code",null,"status")," parameter to ",l.a.createElement("code",null,"completed"),". Only GitHub can change a check run conclusion to ",l.a.createElement("code",null,"stale"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"completed_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time the check completed. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Check runs can accept a variety of data in the ",l.a.createElement("code",null,"output")," object, including a ",l.a.createElement("code",null,"title")," and ",l.a.createElement("code",null,"summary")," and can optionally provide descriptive details about the run. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#output-object-1"},l.a.createElement("code",null,"output")," object")," description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.summary"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Can contain Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.text"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can contain Markdown."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-a-check-run"},"Update a check run"),' endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-status-checks#checks"},"About status checks"),'". See the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#annotations-object-1"},l.a.createElement("code",null,"annotations")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The path of the file to add an annotation to. For example, ",l.a.createElement("code",null,"assets/css/main.css"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The start line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_line"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The end line of the annotation."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].start_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The start column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].end_column"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The end column of the annotation. Annotations only support ",l.a.createElement("code",null,"start_column")," and ",l.a.createElement("code",null,"end_column")," on the same line. Omit this parameter if ",l.a.createElement("code",null,"start_line")," and ",l.a.createElement("code",null,"end_line")," have different values."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].annotation_level"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of the annotation. Can be one of ",l.a.createElement("code",null,"notice"),", ",l.a.createElement("code",null,"warning"),", or ",l.a.createElement("code",null,"failure"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the feedback for these lines of code. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The title that represents the annotation. The maximum size is 255 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.annotations[].raw_details"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Details about this annotation. The maximum size is 64 KB."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds images to the output displayed in the GitHub pull request UI. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#annotations-object-1"},l.a.createElement("code",null,"images")," object")," description for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].alt"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The alternative text for the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].image_url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The full URL of the image."))),l.a.createElement("tr",null,l.a.createElement("td",null,"output.images[].caption"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short image description."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Possible further actions the integrator can perform, which a user may trigger. Each action includes a ",l.a.createElement("code",null,"label"),", ",l.a.createElement("code",null,"identifier")," and ",l.a.createElement("code",null,"description"),". A maximum of three actions are accepted. See the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#actions-object"},l.a.createElement("code",null,"actions")," object"),' description. To learn more about check runs and requested actions, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions"},"Check runs and requested actions"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].label"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The text to be displayed on a button in the web UI. The maximum size is 20 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].description"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A short explanation of what this action would do. The maximum size is 40 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"actions[].identifier"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A reference for the action on the integrator's system. The maximum size is 20 characters."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/checks#update-a-check-run"},"GitHub Developer Guide documentation"),".")))}},ZpkN:function(e,t,a){"use strict";var n=a("wx14"),l=a("ODXe"),r=a("q1tI"),c=a.n(r),o=function(){var e=0,t={util:{encode:function(e){return e instanceof a?new a(e.type,t.util.encode(e.content),e.alias):"Array"===t.util.type(e)?e.map(t.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},objId:function(t){return t["__id"]||Object.defineProperty(t,"__id",{value:++e}),t["__id"]},clone:function(e,a){var n=t.util.type(e);switch(a=a||{},n){case"Object":if(a[t.util.objId(e)])return a[t.util.objId(e)];r={};for(var l in a[t.util.objId(e)]=r,e)e.hasOwnProperty(l)&&(r[l]=t.util.clone(e[l],a));return r;case"Array":if(a[t.util.objId(e)])return a[t.util.objId(e)];var r=[];return a[t.util.objId(e)]=r,e.forEach((function(e,n){r[n]=t.util.clone(e,a)})),r}return e}},languages:{extend:function(e,a){var n=t.util.clone(t.languages[e]);for(var l in a)n[l]=a[l];return n},insertBefore:function(e,a,n,l){l=l||t.languages;var r=l[e];if(2==arguments.length){for(var c in n=arguments[1],n)n.hasOwnProperty(c)&&(r[c]=n[c]);return r}var o={};for(var i in r)if(r.hasOwnProperty(i)){if(i==a)for(var c in n)n.hasOwnProperty(c)&&(o[c]=n[c]);o[i]=r[i]}return t.languages.DFS(t.languages,(function(t,a){a===l[e]&&t!=e&&(this[t]=o)})),l[e]=o},DFS:function(e,a,n,l){for(var r in l=l||{},e)e.hasOwnProperty(r)&&(a.call(e,r,e[r],n||r),"Object"!==t.util.type(e[r])||l[t.util.objId(e[r])]?"Array"!==t.util.type(e[r])||l[t.util.objId(e[r])]||(l[t.util.objId(e[r])]=!0,t.languages.DFS(e[r],a,r,l)):(l[t.util.objId(e[r])]=!0,t.languages.DFS(e[r],a,null,l)))}},plugins:{},highlight:function(e,n,l){var r={code:e,grammar:n,language:l};return r.tokens=t.tokenize(r.code,r.grammar),a.stringify(t.util.encode(r.tokens),r.language)},matchGrammar:function(e,a,n,l,r,c,o){var i=t.Token;for(var s in n)if(n.hasOwnProperty(s)&&n[s]){if(s==o)return;var u=n[s];u="Array"===t.util.type(u)?u:[u];for(var m=0;m<u.length;++m){var d=u[m],E=d.inside,p=!!d.lookbehind,h=!!d.greedy,g=0,b=d.alias;if(h&&!d.pattern.global){var f=d.pattern.toString().match(/[imuy]*$/)[0];d.pattern=RegExp(d.pattern.source,f+"g")}d=d.pattern||d;for(var y=l,k=r;y<a.length;k+=a[y].length,++y){var v=a[y];if(a.length>e.length)return;if(!(v instanceof i)){if(h&&y!=a.length-1){d.lastIndex=k;var w=d.exec(e);if(!w)break;for(var L=w.index+(p?w[1].length:0),A=w.index+w[0].length,x=y,_=k,G=a.length;x<G&&(_<A||!a[x].type&&!a[x-1].greedy);++x)_+=a[x].length,L>=_&&(++y,k=_);if(a[y]instanceof i)continue;P=x-y,v=e.slice(k,_),w.index-=k}else{d.lastIndex=0;w=d.exec(v);var P=1}if(w){p&&(g=w[1]?w[1].length:0);L=w.index+g,w=w[0].slice(g),A=L+w.length;var I=v.slice(0,L),S=v.slice(A),T=[y,P];I&&(++y,k+=I.length,T.push(I));var N=new i(s,E?t.tokenize(w,E):w,b,w,h);if(T.push(N),S&&T.push(S),Array.prototype.splice.apply(a,T),1!=P&&t.matchGrammar(e,a,n,y,k,!0,s),c)break}else if(c)break}}}}},hooks:{add:function(){}},tokenize:function(e,a,n){var l=[e],r=a.rest;if(r){for(var c in r)a[c]=r[c];delete a.rest}return t.matchGrammar(e,l,a,0,0,!1),l}},a=t.Token=function(e,t,a,n,l){this.type=e,this.content=t,this.alias=a,this.length=0|(n||"").length,this.greedy=!!l};return a.stringify=function(e,n,l){if("string"==typeof e)return e;if("Array"===t.util.type(e))return e.map((function(t){return a.stringify(t,n,e)})).join("");var r={type:e.type,content:a.stringify(e.content,n,l),tag:"span",classes:["token",e.type],attributes:{},language:n,parent:l};if(e.alias){var c="Array"===t.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(r.classes,c)}var o=Object.keys(r.attributes).map((function(e){return e+'="'+(r.attributes[e]||"").replace(/"/g,"&quot;")+'"'})).join(" ");return"<"+r.tag+' class="'+r.classes.join(" ")+'"'+(o?" "+o:"")+">"+r.content+"</"+r.tag+">"},t}();o.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},o.languages.markup["tag"].inside["attr-value"].inside["entity"]=o.languages.markup["entity"],o.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes["title"]=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(o.languages.markup.tag,"addInlined",{value:function(e,t){var a={};a["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:o.languages[t]},a["cdata"]=/^<!\[CDATA\[|\]\]>$/i;var n={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:a}};n["language-"+t]={pattern:/[\s\S]+/,inside:o.languages[t]};var l={};l[e]={pattern:RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g,e),"i"),lookbehind:!0,greedy:!0,inside:n},o.languages.insertBefore("markup","cdata",l)}}),o.languages.xml=o.languages.extend("markup",{}),o.languages.html=o.languages.markup,o.languages.mathml=o.languages.markup,o.languages.svg=o.languages.markup,function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",a={environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b\w+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+?)\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:a},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0},{pattern:/(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/,greedy:!0,inside:a}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:a.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}};for(var n=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],l=a.variable[1].inside,r=0;r<n.length;r++)l[n[r]]=e.languages.bash[n[r]];e.languages.shell=e.languages.bash}(o),o.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},o.languages.c=o.languages.extend("clike",{"class-name":{pattern:/(\b(?:enum|struct)\s+)\w+/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/,number:/(?:\b0x(?:[\da-f]+\.?[\da-f]*|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i}),o.languages.insertBefore("c","string",{macro:{pattern:/(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,alias:"property",inside:{string:{pattern:/(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,lookbehind:!0},directive:{pattern:/(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,lookbehind:!0,alias:"keyword"}}},constant:/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/}),delete o.languages.c["boolean"],o.languages.cpp=o.languages.extend("c",{"class-name":{pattern:/(\b(?:class|enum|struct)\s+)\w+/,lookbehind:!0},keyword:/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i,greedy:!0},operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:true|false)\b/}),o.languages.insertBefore("cpp","string",{"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),function(e){var t=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,inside:{rule:/@[\w-]+/}},url:{pattern:RegExp("url\\((?:"+t.source+"|[^\n\r()]*)\\)","i"),inside:{function:/^url/i,punctuation:/^\(|\)$/}},selector:RegExp("[^{}\\s](?:[^{};\"']|"+t.source+")*?(?=\\s*\\{)"),string:{pattern:t,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:,]/},e.languages.css["atrule"].inside.rest=e.languages.css;var a=e.languages.markup;a&&(a.tag.addInlined("style","css"),e.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:a.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:e.languages.css}},alias:"language-css"}},a.tag))}(o),o.languages.css.selector={pattern:o.languages.css.selector,inside:{"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-:.\w]+/,id:/#[-:.\w]+/,attribute:{pattern:/\[(?:[^[\]"']|("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1)*\]/,greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)[-*\w\xA0-\uFFFF]*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},attribute:{pattern:/^(\s*)[-\w\xA0-\uFFFF]+/,lookbehind:!0},value:[/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,{pattern:/(=\s*)[-\w\xA0-\uFFFF]+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],punctuation:/[()]/}},o.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*/i,lookbehind:!0}}),o.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:/#[\da-f]{3,8}/i,entity:/\\[\da-f]{1,8}/i,unit:{pattern:/(\d)(?:%|[a-z]+)/,lookbehind:!0},number:/-?[\d.]+/}),o.languages.javascript=o.languages.extend("clike",{"class-name":[o.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,function:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),o.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,o.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*($|[\r\n,.;})\]]))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,lookbehind:!0,inside:o.languages.javascript},{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,inside:o.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,lookbehind:!0,inside:o.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,lookbehind:!0,inside:o.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),o.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:o.languages.javascript}},string:/[\s\S]+/}}}),o.languages.markup&&o.languages.markup.tag.addInlined("script","javascript"),o.languages.js=o.languages.javascript,function(e){var t=e.util.clone(e.languages.javascript);e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=/<\/?(?:[\w.:-]+\s*(?:\s+(?:[\w.:-]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s{'">=]+|\{(?:\{(?:\{[^}]*\}|[^{}])*\}|[^{}])+\}))?|\{\.{3}[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\}))*\s*\/?)?>/i,e.languages.jsx.tag.inside["tag"].pattern=/^<\/?[^\s>\/]*/i,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">]+)/i,e.languages.jsx.tag.inside["tag"].inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.insertBefore("inside","attr-name",{spread:{pattern:/\{\.{3}[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\}/,inside:{punctuation:/\.{3}|[{}.]/,"attr-value":/\w+/}}},e.languages.jsx.tag),e.languages.insertBefore("inside","attr-value",{script:{pattern:/=(\{(?:\{(?:\{[^}]*\}|[^}])*\}|[^}])+\})/i,inside:{"script-punctuation":{pattern:/^=(?={)/,alias:"punctuation"},rest:e.languages.jsx},alias:"language-javascript"}},e.languages.jsx.tag);var a=function e(t){return t?"string"===typeof t?t:"string"===typeof t.content?t.content:t.content.map(e).join(""):""},n=function t(n){for(var l=[],r=0;r<n.length;r++){var c=n[r],o=!1;if("string"!==typeof c&&("tag"===c.type&&c.content[0]&&"tag"===c.content[0].type?"</"===c.content[0].content[0].content?l.length>0&&l[l.length-1].tagName===a(c.content[0].content[1])&&l.pop():"/>"===c.content[c.content.length-1].content||l.push({tagName:a(c.content[0].content[1]),openedBraces:0}):l.length>0&&"punctuation"===c.type&&"{"===c.content?l[l.length-1].openedBraces++:l.length>0&&l[l.length-1].openedBraces>0&&"punctuation"===c.type&&"}"===c.content?l[l.length-1].openedBraces--:o=!0),(o||"string"===typeof c)&&l.length>0&&0===l[l.length-1].openedBraces){var i=a(c);r<n.length-1&&("string"===typeof n[r+1]||"plain-text"===n[r+1].type)&&(i+=a(n[r+1]),n.splice(r+1,1)),r>0&&("string"===typeof n[r-1]||"plain-text"===n[r-1].type)&&(i=a(n[r-1])+i,n.splice(r-1,1),r--),n[r]=new e.Token("plain-text",i,null,i)}c.content&&"string"!==typeof c.content&&t(c.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||n(e.tokens)}))}(o),function(e){var t=e.languages.javadoclike={parameter:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*@(?:param|arg|arguments)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};function a(t,a){var n="doc-comment",l=e.languages[t];if(l){var r=l[n];if(!r){var c={};c[n]={pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,alias:"comment"},l=e.languages.insertBefore(t,"comment",c),r=l[n]}if(r instanceof RegExp&&(r=l[n]={pattern:r}),Array.isArray(r))for(var o=0,i=r.length;o<i;o++)r[o]instanceof RegExp&&(r[o]={pattern:r[o]}),a(r[o]);else a(r)}}function n(e,t){"string"===typeof e&&(e=[e]),e.forEach((function(e){a(e,(function(e){e.inside||(e.inside={}),e.inside.rest=t}))}))}Object.defineProperty(t,"addSupport",{value:n}),t.addSupport(["java","javascript","php"],t)}(o),function(e){var t=/\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\b/,a=/\b[A-Z](?:\w*[a-z]\w*)?\b/;e.languages.java=e.languages.extend("clike",{"class-name":[a,/\b[A-Z]\w*(?=\s+\w+\s*[;,=())])/],keyword:t,function:[e.languages.clike["function"],{pattern:/(\:\:)[a-z_]\w*/,lookbehind:!0}],number:/\b0b[01][01_]*L?\b|\b0x[\da-f_]*\.?[\da-f_p+-]+\b|(?:\b\d[\d_]*\.?[\d_]*|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\2|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),e.languages.insertBefore("java","class-name",{annotation:{alias:"punctuation",pattern:/(^|[^.])@\w+/,lookbehind:!0},namespace:{pattern:/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)[a-z]\w*(\.[a-z]\w*)+/,lookbehind:!0,inside:{punctuation:/\./}},generics:{pattern:/<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,inside:{"class-name":a,keyword:t,punctuation:/[<>(),.:]/,operator:/[?&|]/}}})}(o),function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(a,n,l,r){if(a.language===n){var c=a.tokenStack=[];a.code=a.code.replace(l,(function(e){if("function"===typeof r&&!r(e))return e;var l,o=c.length;while(-1!==a.code.indexOf(l=t(n,o)))++o;return c[o]=e,l})),a.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(a,n){if(a.language===n&&a.tokenStack){a.grammar=e.languages[n];var l=0,r=Object.keys(a.tokenStack);c(a.tokens)}function c(o){for(var i=0;i<o.length;i++){if(l>=r.length)break;var s=o[i];if("string"===typeof s||s.content&&"string"===typeof s.content){var u=r[l],m=a.tokenStack[u],d="string"===typeof s?s:s.content,E=t(n,u),p=d.indexOf(E);if(p>-1){++l;var h=d.substring(0,p),g=new e.Token(n,e.tokenize(m,a.grammar),"language-"+n,m),b=d.substring(p+E.length),f=[];h&&f.push.apply(f,c([h])),f.push(g),b&&f.push.apply(f,c([b])),"string"===typeof s?o.splice.apply(o,[i,1].concat(f)):s.content=f}}else s.content&&c(s.content)}return o}}}})}(o),function(e){e.languages.php=e.languages.extend("clike",{keyword:/\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i,boolean:{pattern:/\b(?:false|true)\b/i,alias:"constant"},constant:[/\b[A-Z_][A-Z0-9_]*\b/,/\b(?:null)\b/i],comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0}}),e.languages.insertBefore("php","string",{"shell-comment":{pattern:/(^|[^\\])#.*/,lookbehind:!0,alias:"comment"}}),e.languages.insertBefore("php","comment",{delimiter:{pattern:/\?>$|^<\?(?:php(?=\s)|=)?/i,alias:"important"}}),e.languages.insertBefore("php","keyword",{variable:/\$+(?:\w+\b|(?={))/i,package:{pattern:/(\\|namespace\s+|use\s+)[\w\\]+/,lookbehind:!0,inside:{punctuation:/\\/}}}),e.languages.insertBefore("php","operator",{property:{pattern:/(->)[\w]+/,lookbehind:!0}});var t={pattern:/{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/,lookbehind:!0,inside:{rest:e.languages.php}};e.languages.insertBefore("php","string",{"nowdoc-string":{pattern:/<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,greedy:!0,alias:"string",inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<'?|[';]$/}}}},"heredoc-string":{pattern:/<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i,greedy:!0,alias:"string",inside:{delimiter:{pattern:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<"?|[";]$/}},interpolation:t}},"single-quoted-string":{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0,alias:"string"},"double-quoted-string":{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,alias:"string",inside:{interpolation:t}}}),delete e.languages.php["string"],e.hooks.add("before-tokenize",(function(t){if(/<\?/.test(t.code)){var a=/<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#)(?:[^?\n\r]|\?(?!>))*|\/\*[\s\S]*?(?:\*\/|$))*?(?:\?>|$)/gi;e.languages["markup-templating"].buildPlaceholders(t,"php",a)}})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"php")}))}(o),function(e){var t=e.languages.javascript,a=/{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source,n="(@(?:param|arg|argument|property)\\s+(?:"+a+"\\s+)?)";e.languages.jsdoc=e.languages.extend("javadoclike",{parameter:{pattern:RegExp(n+/[$\w\xA0-\uFFFF.]+(?=\s|$)/.source),lookbehind:!0,inside:{punctuation:/\./}}}),e.languages.insertBefore("jsdoc","keyword",{"optional-parameter":{pattern:RegExp(n+/\[[$\w\xA0-\uFFFF.]+(?:=[^[\]]+)?\](?=\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\[)[$\w\xA0-\uFFFF\.]+/,lookbehind:!0,inside:{punctuation:/\./}},code:{pattern:/(=)[\s\S]*(?=\]$)/,lookbehind:!0,inside:t,alias:"language-javascript"},punctuation:/[=[\]]/}},"class-name":[{pattern:RegExp("(@[a-z]+\\s+)"+a),lookbehind:!0,inside:{punctuation:/[.,:?=<>|{}()[\]]/}},{pattern:/(@(?:augments|extends|class|interface|memberof!?|this)\s+)[A-Z]\w*(?:\.[A-Z]\w*)*/,lookbehind:!0,inside:{punctuation:/\./}}],example:{pattern:/(@example\s+)[^@]+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,lookbehind:!0,inside:{code:{pattern:/^(\s*(?:\*\s*)?).+$/m,lookbehind:!0,inside:t,alias:"language-javascript"}}}}),e.languages.javadoclike.addSupport("javascript",e.languages.jsdoc)}(o),o.languages.actionscript=o.languages.extend("javascript",{keyword:/\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\b/,operator:/\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),o.languages.actionscript["class-name"].alias="function",o.languages.markup&&o.languages.insertBefore("actionscript","string",{xml:{pattern:/(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,lookbehind:!0,inside:{rest:o.languages.markup}}}),function(e){var t=/#(?!\{).+/,a={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:t,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:a}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:t,interpolation:a}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},rest:e.languages.javascript}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:a}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(o),function(e){e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function"].source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.javascript["keyword"].unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:/(\.\s*)#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*/,lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var t=["function","function-variable","method","method-variable","property-access"],a=0;a<t.length;a++){var n=t[a],l=e.languages.javascript[n];"RegExp"===e.util.type(l)&&(l=e.languages.javascript[n]={pattern:l});var r=l.inside||{};l.inside=r,r["maybe-class-name"]=/^[A-Z][\s\S]*/}}(o),function(e){e.languages.flow=e.languages.extend("javascript",{}),e.languages.insertBefore("flow","keyword",{type:[{pattern:/\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\b/,alias:"tag"}]}),e.languages.flow["function-variable"].pattern=/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,delete e.languages.flow["parameter"],e.languages.insertBefore("flow","operator",{"flow-punctuation":{pattern:/\{\||\|\}/,alias:"punctuation"}}),Array.isArray(e.languages.flow.keyword)||(e.languages.flow.keyword=[e.languages.flow.keyword]),e.languages.flow.keyword.unshift({pattern:/(^|[^$]\b)(?:type|opaque|declare|Class)\b(?!\$)/,lookbehind:!0},{pattern:/(^|[^$]\B)\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\b(?!\$)/,lookbehind:!0})}(o),o.languages.n4js=o.languages.extend("javascript",{keyword:/\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/}),o.languages.insertBefore("n4js","constant",{annotation:{pattern:/@+\w+/,alias:"operator"}}),o.languages.n4jsd=o.languages.n4js,o.languages.typescript=o.languages.extend("javascript",{keyword:/\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\b/,builtin:/\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/}),o.languages.ts=o.languages.typescript,function(e){var t=e.languages.javascript["template-string"],a=t.pattern.source,n=t.inside["interpolation"],l=n.inside["interpolation-punctuation"],r=n.pattern.source;function c(t,n){if(e.languages[t])return{pattern:RegExp("((?:"+n+")\\s*)"+a),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:t}}}}function o(e,t){return"___"+t.toUpperCase()+"_"+e+"___"}function i(t,a,n){var l={code:t,grammar:a,language:n};return e.hooks.run("before-tokenize",l),l.tokens=e.tokenize(l.code,l.grammar),e.hooks.run("after-tokenize",l),l.tokens}function s(t){var a={};a["interpolation-punctuation"]=l;var r=e.tokenize(t,a);if(3===r.length){var c=[1,1];c.push.apply(c,i(r[1],e.languages.javascript,"javascript")),r.splice.apply(r,c)}return new e.Token("interpolation",r,n.alias,t)}function u(t,a,n){var l=e.tokenize(t,{interpolation:{pattern:RegExp(r),lookbehind:!0}}),c=0,u={},m=l.map((function(e){if("string"===typeof e)return e;var a,l=e.content;while(-1!==t.indexOf(a=o(c++,n)));return u[a]=l,a})).join(""),d=i(m,a,n),E=Object.keys(u);function p(e){for(var t=0;t<e.length;t++){if(c>=E.length)return;var a=e[t];if("string"===typeof a||"string"===typeof a.content){var n=E[c],l="string"===typeof a?a:a.content,r=l.indexOf(n);if(-1!==r){++c;var o=l.substring(0,r),i=s(u[n]),m=l.substring(r+n.length),d=[];if(o&&d.push(o),d.push(i),m){var h=[m];p(h),d.push.apply(d,h)}"string"===typeof a?(e.splice.apply(e,[t,1].concat(d)),t+=d.length-1):a.content=d}}else{var g=a.content;Array.isArray(g)?p(g):p([g])}}}return c=0,p(d),new e.Token(n,d,"language-"+n,t)}e.languages.javascript["template-string"]=[c("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),c("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),c("svg",/\bsvg/.source),c("markdown",/\b(?:md|markdown)/.source),c("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),t].filter(Boolean);var m={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function d(e){return"string"===typeof e?e:Array.isArray(e)?e.map(d).join(""):d(e.content)}e.hooks.add("after-tokenize",(function(t){function a(t){for(var n=0,l=t.length;n<l;n++){var r=t[n];if("string"!==typeof r){var c=r.content;if(Array.isArray(c))if("template-string"===r.type){var o=c[1];if(3===c.length&&"string"!==typeof o&&"embedded-code"===o.type){var i=d(o),s=o.alias,m=Array.isArray(s)?s[0]:s,E=e.languages[m];if(!E)continue;c[1]=u(i,E,m)}}else a(c);else"string"!==typeof c&&a([c])}}}t.language in m&&a(t.tokens)}))}(o),o.languages.graphql={comment:/#.*/,string:{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:true|false)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+)[a-zA-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\b/,operator:/[!=|]|\.{3}/,punctuation:/[!(){}\[\]:=,]/,constant:/\b(?!ID\b)[A-Z][A-Z_\d]*\b/},function(e){var t=/(?:\\.|[^\\\n\r]|(?:\r?\n|\r)(?!\r?\n|\r))/.source;function a(e,a){return e=e.replace(/<inner>/g,t),a&&(e=e+"|"+e.replace(/_/g,"\\*")),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var n=/(?:\\.|``.+?``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,l=/\|?__(?:\|__)+\|?(?:(?:\r?\n|\r)|$)/.source.replace(/__/g,n),r=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\r?\n|\r)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+l+r+"(?:"+l+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+l+r+")(?:"+l+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(n),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+l+")"+r+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+l+"$"),inside:{"table-header":{pattern:RegExp(n),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/(^[ \t]*(?:\r?\n|\r))(?: {4}|\t).+(?:(?:\r?\n|\r)(?: {4}|\t).+)*/m,lookbehind:!0,alias:"keyword"},{pattern:/``.+?``|`[^`\r\n]+`/,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\r?\n|\r))[\s\S]+?(?=(?:\r?\n|\r)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\r?\n|\r)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#+.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:a(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source,!0),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:a(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source,!0),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:a(/(~~?)(?:(?!~)<inner>)+?\2/.source,!1),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},url:{pattern:a(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[(?:(?!\])<inner>)+\])/.source,!1),lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(\[)[^\]]+(?=\]$)/,lookbehind:!0},content:{pattern:/(^!?\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},string:{pattern:/"(?:\\.|[^"\\])*"(?=\)$)/}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike"].forEach((function(a){t!==a&&(e.languages.markdown[t].inside.content.inside[a]=e.languages.markdown[a])}))})),e.hooks.add("after-tokenize",(function(e){function t(e){if(e&&"string"!==typeof e)for(var a=0,n=e.length;a<n;a++){var l=e[a];if("code"===l.type){var r=l.content[1],c=l.content[3];if(r&&c&&"code-language"===r.type&&"code-block"===c.type&&"string"===typeof r.content){var o="language-"+r.content.trim().split(/\s+/)[0].toLowerCase();c.alias?"string"===typeof c.alias?c.alias=[c.alias,o]:c.alias.push(o):c.alias=[o]}}else t(l.content)}}"markdown"!==e.language&&"md"!==e.language||t(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var a="",n=0,l=t.classes.length;n<l;n++){var r=t.classes[n],c=/language-(.+)/.exec(r);if(c){a=c[1];break}}var o=e.languages[a];if(o){var i=t.content.replace(/&lt;/g,"<").replace(/&amp;/g,"&");t.content=e.highlight(i,o,a)}else if(a&&"none"!==a&&e.plugins.autoloader){var s="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes["id"]=s,e.plugins.autoloader.loadLanguages(a,(function(){var t=document.getElementById(s);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[a],a))}))}}})),e.languages.md=e.languages.markdown}(o),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d+.*$/m]};var t={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(t).forEach((function(a){var n=t[a],l=[];/^\w+$/.test(a)||l.push(/\w+/.exec(a)[0]),"diff"===a&&l.push("bold"),e.languages.diff[a]={pattern:RegExp("^(?:["+n+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:l}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:t})}(o),o.languages.git={comment:/^#.*/m,deleted:/^[-\u2013].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/m}},coord:/^@@.*@@$/m,commit_sha1:/^commit \w{40}$/m},o.languages.go=o.languages.extend("clike",{keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,builtin:/\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/,boolean:/\b(?:_|iota|nil|true|false)\b/,operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,number:/(?:\b0x[a-f\d]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[-+]?\d+)?)i?/i,string:{pattern:/(["'`])(\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0}}),delete o.languages.go["class-name"],function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/i,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:true|false)\b/,block:{pattern:/^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(t){var a=/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;e.languages["markup-templating"].buildPlaceholders(t,"handlebars",a)})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"handlebars")}))}(o),o.languages.json={property:{pattern:/"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,greedy:!0},string:{pattern:/"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,greedy:!0},comment:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,number:/-?\d+\.?\d*(e[+-]?\d+)?/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},o.languages.less=o.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-]+?(?:\([^{}]+\)|[^(){};])*?(?=\s*\{)/i,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\([^{}]*\)|[^{};@])*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i,operator:/[+\-*\/]/}),o.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/,lookbehind:!0,alias:"function"}}),o.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},builtin:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,symbol:{pattern:/^[^:=\r\n]+(?=\s*:(?!=))/m,inside:{variable:/\$+(?:[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:[/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,{pattern:/(\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},o.languages.objectivec=o.languages.extend("c",{keyword:/\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,string:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|@"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete o.languages.objectivec["class-name"],o.languages.ocaml={comment:/\(\*[\s\S]*?\*\)/,string:[{pattern:/"(?:\\.|[^\\\r\n"])*"/,greedy:!0},{pattern:/(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,greedy:!0}],number:/\b(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*\.?[\d_]*(?:e[+-]?[\d_]+)?)/i,type:{pattern:/\B['`]\w*/,alias:"variable"},directive:{pattern:/\B#\w+/,alias:"function"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\b/,boolean:/\b(?:false|true)\b/,operator:/:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\b/,punctuation:/[(){}\[\]|_.,:;]/},o.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"string-interpolation":{pattern:/(?:f|rf|fr)(?:("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|rb|br)?("""|''')[\s\S]+?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^\s*)@\w+(?:\.\w+)*/i,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},o.languages.python["string-interpolation"].inside["interpolation"].inside.rest=o.languages.python,o.languages.py=o.languages.python,o.languages.reason=o.languages.extend("clike",{comment:{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:mod|land|lor|lxor|lsl|lsr|asr)\b/}),o.languages.insertBefore("reason","class-name",{character:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,alias:"string"},constructor:{pattern:/\b[A-Z]\w*\b(?!\s*\.)/,alias:"variable"},label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete o.languages.reason["function"],function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m,lookbehind:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,inside:{atrule:/(?:@[\w-]+|[+=])/m}}}),delete e.languages.sass.atrule;var t=/\$[-\w]+|#\{\$[-\w]+\}/,a=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/,{pattern:/(\s+)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,inside:{punctuation:/:/,variable:t,operator:a}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:t,operator:a,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/,lookbehind:!0}})}(o),o.languages.scss=o.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()]|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),o.languages.insertBefore("scss","atrule",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),o.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),o.languages.insertBefore("scss","function",{placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,lookbehind:!0}}),o.languages.scss["atrule"].inside.rest=o.languages.scss,o.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:TRUE|FALSE|NULL)\b/i,number:/\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var t={url:/url\((["']?).*?\1\)/i,string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:if|else|for|return|unless)(?=\s+|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,number:/\b\d+(?:\.\d+)?%?/,boolean:/\b(?:true|false)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.+|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],punctuation:/[{}()\[\];:,]/};t["interpolation"]={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^{|}$/,alias:"punctuation"},rest:t}},t["func"]={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:t}},e.languages.stylus={comment:{pattern:/(^|[^\\])(\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},"atrule-declaration":{pattern:/(^\s*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:t}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:(?:\{[^}]*\}|.+)|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:t}},statement:{pattern:/(^[ \t]*)(?:if|else|for|return|unless)[ \t]+.+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:t}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)[^{\r\n]*(?:;|[^{\r\n,](?=$)(?!(\r?\n|\r)(?:\{|\2[ \t]+)))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:t.interpolation}},rest:t}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t]+)))/m,lookbehind:!0,inside:{interpolation:t.interpolation,punctuation:/[{},]/}},func:t.func,string:t.string,interpolation:t.interpolation,punctuation:/[{}()\[\];:.]/}}(o);var i=o.util.clone(o.languages.typescript);o.languages.tsx=o.languages.extend("jsx",i),o.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^_`|~]+/i,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/},o.languages.yaml={scalar:{pattern:/([\-:]\s*(?:![^\s]+)?[ \t]*[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)[^\r\n]+(?:\2[^\r\n]+)*)/,lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:/(\s*(?:^|[:\-,[{\r\n?])[ \t]*(?:![^\s]+)?[ \t]*)[^\r\n{[\]},#\s]+?(?=\s*:\s)/,lookbehind:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?)?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?)(?=[ \t]*(?:$|,|]|}))/m,lookbehind:!0,alias:"number"},boolean:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:true|false)[ \t]*(?=$|,|]|})/im,lookbehind:!0,alias:"important"},null:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:null|~)[ \t]*(?=$|,|]|})/im,lookbehind:!0,alias:"important"},string:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)("|')(?:(?!\2)[^\\\r\n]|\\.)*\2(?=[ \t]*(?:$|,|]|}|\s*#))/m,lookbehind:!0,greedy:!0},number:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+\.?\d*|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)[ \t]*(?=$|,|]|})/im,lookbehind:!0},tag:/![^\s]+/,important:/[&*][\w]+/,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},o.languages.yml=o.languages.yaml;var s=o,u={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]},m=u,d={Prism:s,theme:m};function E(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(){return p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},p.apply(this,arguments)}var h=/\r\n|\r|\n/,g=function(e){0===e.length?e.push({types:["plain"],content:"",empty:!0}):1===e.length&&""===e[0].content&&(e[0].empty=!0)},b=function(e,t){var a=e.length;return a>0&&e[a-1]===t?e:e.concat(t)},f=function(e){var t=[[]],a=[e],n=[0],l=[e.length],r=0,c=0,o=[],i=[o];while(c>-1){while((r=n[c]++)<l[c]){var s=void 0,u=t[c],m=a[c],d=m[r];if("string"===typeof d?(u=c>0?u:["plain"],s=d):(u=b(u,d.type),d.alias&&(u=b(u,d.alias)),s=d.content),"string"===typeof s){var E=s.split(h),p=E.length;o.push({types:u,content:E[0]});for(var f=1;f<p;f++)g(o),i.push(o=[]),o.push({types:u,content:E[f]})}else c++,t.push(u),a.push(s),n.push(0),l.push(s.length)}c--,t.pop(),a.pop(),n.pop(),l.pop()}return g(o),i},y=function(e,t){var a=e.plain,n=Object.create(null),l=e.styles.reduce((function(e,a){var n=a.languages,l=a.style;return n&&!n.includes(t)||a.types.forEach((function(t){var a=p({},e[t],l);e[t]=a})),e}),n);return l.root=a,l.plain=p({},a,{backgroundColor:null}),l};function k(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}var v=function(e){function t(){var t=this,a=[],n=arguments.length;while(n--)a[n]=arguments[n];e.apply(this,a),E(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var a=e.theme?y(e.theme,e.language):void 0;return t.themeDict=a})),E(this,"getLineProps",(function(e){var a=e.key,n=e.className,l=e.style,r=k(e,["key","className","style","line"]),c=r,o=p({},c,{className:"token-line",style:void 0,key:void 0}),i=t.getThemeDict(t.props);return void 0!==i&&(o.style=i.plain),void 0!==l&&(o.style=void 0!==o.style?p({},o.style,l):l),void 0!==a&&(o.key=a),n&&(o.className+=" "+n),o})),E(this,"getStyleForToken",(function(e){var a=e.types,n=e.empty,l=a.length,r=t.getThemeDict(t.props);if(void 0!==r){if(1===l&&"plain"===a[0])return n?{display:"inline-block"}:void 0;if(1===l&&!n)return r[a[0]];var c=n?{display:"inline-block"}:{},o=a.map((function(e){return r[e]}));return Object.assign.apply(Object,[c].concat(o))}})),E(this,"getTokenProps",(function(e){var a=e.key,n=e.className,l=e.style,r=e.token,c=k(e,["key","className","style","token"]),o=c,i=p({},o,{className:"token "+r.types.join(" "),children:r.content,style:t.getStyleForToken(r),key:void 0});return void 0!==l&&(i.style=void 0!==i.style?p({},i.style,l):l),void 0!==a&&(i.key=a),n&&(i.className+=" "+n),i}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,a=e.language,n=e.code,l=e.children,r=this.getThemeDict(this.props),c=t.languages[a],o=void 0!==c?t.tokenize(n,c,a):[n],i=f(o);return l({tokens:i,className:"prism-code language-"+a,style:void 0!==r?r.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(r["Component"]),w=v,L=a("dEAq");a("qHiR"),a("LMrN"),t["a"]=e=>{var t=e.code,a=e.lang,r=e.showCopy,o=void 0===r||r,i=Object(L["useCopy"])(),s=Object(l["a"])(i,2),u=s[0],m=s[1];return c.a.createElement("div",{className:"__dumi-default-code-block"},c.a.createElement(w,Object(n["a"])({},d,{code:t,language:a,theme:void 0}),(e=>{var a=e.className,n=e.style,l=e.tokens,r=e.getLineProps,i=e.getTokenProps;return c.a.createElement("pre",{className:a,style:n},o&&c.a.createElement("button",{className:"__dumi-default-icon __dumi-default-code-block-copy-btn","data-status":m,onClick:()=>u(t)}),l.map(((e,t)=>c.a.createElement("div",r({line:e,key:t}),e.map(((e,t)=>c.a.createElement("span",i({token:e,key:t}))))))))})))}},Zs1V:function(e){e.exports=JSON.parse("{}")},ZsH6:function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=a("4WOD"),o=l.has,i=l.get,s=l.toKey,u=function(e,t,a){var n=o(e,t,a);if(n)return i(e,t,a);var l=c(t);return null!==l?u(e,l,a):void 0};n({target:"Reflect",stat:!0},{getMetadata:function(e,t){var a=arguments.length<3?void 0:s(arguments[2]);return u(e,r(t),a)}})},a3WO:function(e,t,a){"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}a.d(t,"a",(function(){return n}))},"a5/B":function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{umulh:function(e,t){var a=65535,n=+e,l=+t,r=n&a,c=l&a,o=n>>>16,i=l>>>16,s=(o*c>>>0)+(r*c>>>16);return o*i+(s>>>16)+((r*i>>>0)+(s&a)>>>16)}})},a57n:function(e,t,a){var n=a("dG/n");n("search")},aQ6p:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": ",l.a.createElement("code",null,"octokit.registerEndpoints()")," has been deprecated."),l.a.createElement("p",null,"Instead of"),l.a.createElement(c["a"],{code:'await octokit.registerEndpoints({\n  misc: {\n    getRoot: {\n      method: "GET",\n      url: "/",\n    },\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"do"),l.a.createElement(c["a"],{code:'Object.assign(octokit.misc, {\n  getRoot: octokit.request.defaults({\n    method: "GET",\n    url: "/",\n  }),\n});\n',lang:"js"}),l.a.createElement("p",null,"If you use ",l.a.createElement("code",null,"octokit.registerEndpoints()")," in a plugin, return an object instead:"),l.a.createElement(c["a"],{code:'function myPlugin(octokit, options) {\n  return {\n    misc: {\n      octokit.request.defaults({ method: "GET", url: "/" })\n    }\n  }\n}\n',lang:"js"}),l.a.createElement("hr",null),l.a.createElement("p",null,"You can register custom endpoint methods such as ",l.a.createElement("code",null,"octokit.repos.get()")," using the ",l.a.createElement("code",null,"octokit.registerEndpoints(routes)")," method"),l.a.createElement(c["a"],{code:'octokit.registerEndpoints({\n  foo: {\n    bar: {\n      method: "PATCH",\n      url: "/repos/{owner}/{repo}/foo",\n      headers: {\n        accept: "application/vnd.github.foo-bar-preview+json",\n      },\n      params: {\n        owner: {\n          required: true,\n          type: "string",\n        },\n        repo: {\n          required: true,\n          type: "string",\n        },\n        baz: {\n          required: true,\n          type: "string",\n          enum: ["qux", "quux", "quuz"],\n        },\n      },\n    },\n  },\n});\n\noctokit.foo.bar({\n  owner: "octokit",\n  repo: "rest.js",\n  baz: "quz",\n});\n',lang:"js"}),l.a.createElement("p",null,"This is useful when you participate in private beta features and prefer the convenience of methods for the new endpoints instead of using ",l.a.createElement(r["AnchorLink"],{to:"#custom-requests"},l.a.createElement("code",null,"octokit.request()")),".")))}},afO8:function(e,t,a){var n,l,r,c=a("f5p1"),o=a("2oRo"),i=a("hh1v"),s=a("kRJp"),u=a("UTVS"),m=a("93I0"),d=a("0BK2"),E=o.WeakMap,p=function(e){return r(e)?l(e):n(e,{})},h=function(e){return function(t){var a;if(!i(t)||(a=l(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return a}};if(c){var g=new E,b=g.get,f=g.has,y=g.set;n=function(e,t){return y.call(g,e,t),t},l=function(e){return b.call(g,e)||{}},r=function(e){return f.call(g,e)}}else{var k=m("state");d[k]=!0,n=function(e,t){return s(e,k,t),t},l=function(e){return u(e,k)?e[k]:{}},r=function(e){return u(e,k)}}e.exports={set:n,get:l,has:r,enforce:p,getterFor:h}},apDx:function(e,t,a){var n=a("dG/n");n("dispose")},b1O7:function(e,t,a){var n=a("g6v/"),l=a("33Wh"),r=a("/GqU"),c=a("0eef").f,o=function(e){return function(t){var a,o=r(t),i=l(o),s=i.length,u=0,m=[];while(s>u)a=i[u++],n&&!c.call(o,a)||m.push(e?[a,o[a]]:o[a]);return m}};e.exports={entries:o(!0),values:o(!1)}},bFeb:function(e,t,a){var n=a("I+eb"),l=a("2oRo");n({global:!0},{globalThis:l})},bWFh:function(e,t,a){"use strict";var n=a("I+eb"),l=a("2oRo"),r=a("lMq5"),c=a("busE"),o=a("8YOa"),i=a("ImZN"),s=a("GarU"),u=a("hh1v"),m=a("0Dky"),d=a("HH4o"),E=a("1E5z"),p=a("cVYH");e.exports=function(e,t,a){var h=-1!==e.indexOf("Map"),g=-1!==e.indexOf("Weak"),b=h?"set":"add",f=l[e],y=f&&f.prototype,k=f,v={},w=function(e){var t=y[e];c(y,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(g&&!u(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!u(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(g&&!u(e))&&t.call(this,0===e?0:e)}:function(e,a){return t.call(this,0===e?0:e,a),this})};if(r(e,"function"!=typeof f||!(g||y.forEach&&!m((function(){(new f).entries().next()})))))k=a.getConstructor(t,e,h,b),o.REQUIRED=!0;else if(r(e,!0)){var L=new k,A=L[b](g?{}:-0,1)!=L,x=m((function(){L.has(1)})),_=d((function(e){new f(e)})),G=!g&&m((function(){var e=new f,t=5;while(t--)e[b](t,t);return!e.has(-0)}));_||(k=t((function(t,a){s(t,k,e);var n=p(new f,t,k);return void 0!=a&&i(a,n[b],n,h),n})),k.prototype=y,y.constructor=k),(x||G)&&(w("delete"),w("has"),h&&w("get")),(G||A)&&w(b),g&&y.clear&&delete y.clear}return v[e]=k,n({global:!0,forced:k!=f},v),E(k,e),g||a.setStrong(k,e,h),k}},bYHP:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var n=r(a("q1tI")),l=a("LtsZ");function r(e){return e&&e.__esModule?e:{default:e}}function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},c.apply(this,arguments)}function o(e){return e.offsetTop+(e.offsetParent?o(e.offsetParent):0)}var i=function e(t){var a,r=(null===(a=t.to.match(/(#.+)$/))||void 0===a?void 0:a[1])||"";return n["default"].createElement(l.NavLink,c({},t,{onClick:function(){return e.scrollToAnchor(r.substring(1))},isActive:function(e,t){return r&&decodeURIComponent(t.hash)===r}}))};i.scrollToAnchor=function(e){window.requestAnimationFrame((function(){var t=document.getElementById(decodeURIComponent(e));t&&window.scrollTo(0,o(t)-100)}))};var s=i;t["default"]=s},bdeN:function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=a("4WOD"),o=l.has,i=l.toKey,s=function(e,t,a){var n=o(e,t,a);if(n)return!0;var l=c(t);return null!==l&&s(e,l,a)};n({target:"Reflect",stat:!0},{hasMetadata:function(e,t){var a=arguments.length<3?void 0:i(arguments[2]);return s(e,r(t),a)}})},bdgK:function(e,t,a){"use strict";(function(e){var a=function(){if("undefined"!==typeof Map)return Map;function e(e,t){var a=-1;return e.some((function(e,n){return e[0]===t&&(a=n,!0)})),a}return function(){function t(){this.__entries__=[]}return Object.defineProperty(t.prototype,"size",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),t.prototype.get=function(t){var a=e(this.__entries__,t),n=this.__entries__[a];return n&&n[1]},t.prototype.set=function(t,a){var n=e(this.__entries__,t);~n?this.__entries__[n][1]=a:this.__entries__.push([t,a])},t.prototype["delete"]=function(t){var a=this.__entries__,n=e(a,t);~n&&a.splice(n,1)},t.prototype.has=function(t){return!!~e(this.__entries__,t)},t.prototype.clear=function(){this.__entries__.splice(0)},t.prototype.forEach=function(e,t){void 0===t&&(t=null);for(var a=0,n=this.__entries__;a<n.length;a++){var l=n[a];e.call(t,l[1],l[0])}},t}()}(),n="undefined"!==typeof window&&"undefined"!==typeof document&&window.document===document,l=function(){return"undefined"!==typeof e&&e.Math===Math?e:"undefined"!==typeof self&&self.Math===Math?self:"undefined"!==typeof window&&window.Math===Math?window:Function("return this")()}(),r=function(){return"function"===typeof requestAnimationFrame?requestAnimationFrame.bind(l):function(e){return setTimeout((function(){return e(Date.now())}),1e3/60)}}(),c=2;function o(e,t){var a=!1,n=!1,l=0;function o(){a&&(a=!1,e()),n&&s()}function i(){r(o)}function s(){var e=Date.now();if(a){if(e-l<c)return;n=!0}else a=!0,n=!1,setTimeout(i,t);l=e}return s}var i=20,s=["top","right","bottom","left","width","height","size","weight"],u="undefined"!==typeof MutationObserver,m=function(){function e(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=o(this.refresh.bind(this),i)}return e.prototype.addObserver=function(e){~this.observers_.indexOf(e)||this.observers_.push(e),this.connected_||this.connect_()},e.prototype.removeObserver=function(e){var t=this.observers_,a=t.indexOf(e);~a&&t.splice(a,1),!t.length&&this.connected_&&this.disconnect_()},e.prototype.refresh=function(){var e=this.updateObservers_();e&&this.refresh()},e.prototype.updateObservers_=function(){var e=this.observers_.filter((function(e){return e.gatherActive(),e.hasActive()}));return e.forEach((function(e){return e.broadcastActive()})),e.length>0},e.prototype.connect_=function(){n&&!this.connected_&&(document.addEventListener("transitionend",this.onTransitionEnd_),window.addEventListener("resize",this.refresh),u?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener("DOMSubtreeModified",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},e.prototype.disconnect_=function(){n&&this.connected_&&(document.removeEventListener("transitionend",this.onTransitionEnd_),window.removeEventListener("resize",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener("DOMSubtreeModified",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},e.prototype.onTransitionEnd_=function(e){var t=e.propertyName,a=void 0===t?"":t,n=s.some((function(e){return!!~a.indexOf(e)}));n&&this.refresh()},e.getInstance=function(){return this.instance_||(this.instance_=new e),this.instance_},e.instance_=null,e}(),d=function(e,t){for(var a=0,n=Object.keys(t);a<n.length;a++){var l=n[a];Object.defineProperty(e,l,{value:t[l],enumerable:!1,writable:!1,configurable:!0})}return e},E=function(e){var t=e&&e.ownerDocument&&e.ownerDocument.defaultView;return t||l},p=A(0,0,0,0);function h(e){return parseFloat(e)||0}function g(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];return t.reduce((function(t,a){var n=e["border-"+a+"-width"];return t+h(n)}),0)}function b(e){for(var t=["top","right","bottom","left"],a={},n=0,l=t;n<l.length;n++){var r=l[n],c=e["padding-"+r];a[r]=h(c)}return a}function f(e){var t=e.getBBox();return A(0,0,t.width,t.height)}function y(e){var t=e.clientWidth,a=e.clientHeight;if(!t&&!a)return p;var n=E(e).getComputedStyle(e),l=b(n),r=l.left+l.right,c=l.top+l.bottom,o=h(n.width),i=h(n.height);if("border-box"===n.boxSizing&&(Math.round(o+r)!==t&&(o-=g(n,"left","right")+r),Math.round(i+c)!==a&&(i-=g(n,"top","bottom")+c)),!v(e)){var s=Math.round(o+r)-t,u=Math.round(i+c)-a;1!==Math.abs(s)&&(o-=s),1!==Math.abs(u)&&(i-=u)}return A(l.left,l.top,o,i)}var k=function(){return"undefined"!==typeof SVGGraphicsElement?function(e){return e instanceof E(e).SVGGraphicsElement}:function(e){return e instanceof E(e).SVGElement&&"function"===typeof e.getBBox}}();function v(e){return e===E(e).document.documentElement}function w(e){return n?k(e)?f(e):y(e):p}function L(e){var t=e.x,a=e.y,n=e.width,l=e.height,r="undefined"!==typeof DOMRectReadOnly?DOMRectReadOnly:Object,c=Object.create(r.prototype);return d(c,{x:t,y:a,width:n,height:l,top:a,right:t+n,bottom:l+a,left:t}),c}function A(e,t,a,n){return{x:e,y:t,width:a,height:n}}var x=function(){function e(e){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=A(0,0,0,0),this.target=e}return e.prototype.isActive=function(){var e=w(this.target);return this.contentRect_=e,e.width!==this.broadcastWidth||e.height!==this.broadcastHeight},e.prototype.broadcastRect=function(){var e=this.contentRect_;return this.broadcastWidth=e.width,this.broadcastHeight=e.height,e},e}(),_=function(){function e(e,t){var a=L(t);d(this,{target:e,contentRect:a})}return e}(),G=function(){function e(e,t,n){if(this.activeObservations_=[],this.observations_=new a,"function"!==typeof e)throw new TypeError("The callback provided as parameter 1 is not a function.");this.callback_=e,this.controller_=t,this.callbackCtx_=n}return e.prototype.observe=function(e){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!==typeof Element&&Element instanceof Object){if(!(e instanceof E(e).Element))throw new TypeError('parameter 1 is not of type "Element".');var t=this.observations_;t.has(e)||(t.set(e,new x(e)),this.controller_.addObserver(this),this.controller_.refresh())}},e.prototype.unobserve=function(e){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!==typeof Element&&Element instanceof Object){if(!(e instanceof E(e).Element))throw new TypeError('parameter 1 is not of type "Element".');var t=this.observations_;t.has(e)&&(t["delete"](e),t.size||this.controller_.removeObserver(this))}},e.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},e.prototype.gatherActive=function(){var e=this;this.clearActive(),this.observations_.forEach((function(t){t.isActive()&&e.activeObservations_.push(t)}))},e.prototype.broadcastActive=function(){if(this.hasActive()){var e=this.callbackCtx_,t=this.activeObservations_.map((function(e){return new _(e.target,e.broadcastRect())}));this.callback_.call(e,t,e),this.clearActive()}},e.prototype.clearActive=function(){this.activeObservations_.splice(0)},e.prototype.hasActive=function(){return this.activeObservations_.length>0},e}(),P="undefined"!==typeof WeakMap?new WeakMap:new a,I=function(){function e(t){if(!(this instanceof e))throw new TypeError("Cannot call a class as a function.");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var a=m.getInstance(),n=new G(t,a,this);P.set(this,n)}return e}();["observe","unobserve","disconnect"].forEach((function(e){I.prototype[e]=function(){var t;return(t=P.get(this))[e].apply(t,arguments)}}));var S=function(){return"undefined"!==typeof l.ResizeObserver?l.ResizeObserver:I}();t["a"]=S}).call(this,a("yLpj"))},beRK:function(e,t,a){"use strict";function n(){var e=r(a("q1tI"));return n=function(){return e},e}function l(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var c=n?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(a,r,c):a[r]=e[r]}return a["default"]=e,t&&t.set(e,a),a}function c(e,t){return m(e)||u(e,t)||i(e,t)||o()}function o(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e,t){if(e){if("string"===typeof e)return s(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?s(e,t):void 0}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function u(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function m(e){if(Array.isArray(e))return e}function d(){return"BASEMENT"===Object({NODE_ENV:"production"}).PLATFORM_TYPE}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=t.getDemoUrl=t.getDemoRouteName=void 0;var E=function(){return d()?"_demos":"~demos"};t.getDemoRouteName=E;var p=function(e){var t,a=window,n=a.location,l=n.href,r=n.origin,o=l.split(/#\//),i=c(o,2),s=i[0],u=i[1],m="string"===typeof u;return[m?"".concat(s,"#"):r,"".concat((null===(t=window)||void 0===t?void 0:t.routerBase)||"","/").replace(/\/\/$/,"/"),E(),"/",e,d()?"/index.html":""].join("")};t.getDemoUrl=p;var h=function(e){var t=(0,n().useState)(""),a=c(t,2),l=a[0],r=a[1];return(0,n().useEffect)((function(){r(p(e))}),[e]),l};t["default"]=h},bian:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-github-meta-information"},l.a.createElement(r["AnchorLink"],{to:"#get-github-meta-information","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub meta information"),l.a.createElement("p",null,"Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-github-s-ip-addresses/"},"About GitHub's IP addresses"),'."'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The IP addresses shown in the documentation's response are only example values. You must always query the API directly to get the latest list of IP addresses."),l.a.createElement(c["a"],{code:"octokit.meta.get();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/meta/#get-github-meta-information"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-octocat"},l.a.createElement(r["AnchorLink"],{to:"#get-octocat","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get Octocat"),l.a.createElement("p",null,"Get the octocat as ASCII art"),l.a.createElement(c["a"],{code:"octokit.meta.getOctocat();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"s"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The words to show in Octocat's speech bubble"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:""},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-zen-of-github"},l.a.createElement(r["AnchorLink"],{to:"#get-the-zen-of-github","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the Zen of GitHub"),l.a.createElement("p",null,"Get a random sentence from the Zen of GitHub"),l.a.createElement(c["a"],{code:"octokit.meta.getZen();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:""},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"github-api-root"},l.a.createElement(r["AnchorLink"],{to:"#github-api-root","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"GitHub API Root"),l.a.createElement("p",null,"Get Hypermedia links to resources accessible in GitHub's REST API"),l.a.createElement(c["a"],{code:"octokit.meta.root();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:""},"GitHub Developer Guide documentation"),".")))}},bnzS:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Some API endpoints support alternative response formats, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/reference/media/"},"Media types"),"."),l.a.createElement("p",null,"For example, to request a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/reference/media/#diff"},"pull request as diff format"),", set the ",l.a.createElement("code",null,"mediaType.format")," option"),l.a.createElement(c["a"],{code:'const { data: prDiff } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 1278,\n  mediaType: {\n    format: "diff",\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://developer.mozilla.org/en-US/docs/Web/API/AbortController"},"AbortController")," interface can be used to abort one or more requests as and when desired. When the request is initiated, an ",l.a.createElement(r["Link"],{to:"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal"},"AbortSignal")," instance can be passed as an option inside the request's options object. For usage in Node, the ",l.a.createElement(r["Link"],{to:"https://github.com/mysticatea/abort-controller"},l.a.createElement("code",null,"abort-controller"))," package can be used."),l.a.createElement(c["a"],{code:'const controller = new AbortController();\nconst { data: prDiff } = await octokit.pulls.get({\n  owner: "octokit",\n  repo: "rest.js",\n  pull_number: 1278,\n  request: {\n    signal: controller.signal,\n  },\n});\n',lang:"js"}),l.a.createElement("p",null,"Use ",l.a.createElement("code",null,"controller.abort()")," to abort the request when desired.")))}},busE:function(e,t,a){var n=a("2oRo"),l=a("kRJp"),r=a("UTVS"),c=a("zk60"),o=a("iSVu"),i=a("afO8"),s=i.get,u=i.enforce,m=String(String).split("String");(e.exports=function(e,t,a,o){var i=!!o&&!!o.unsafe,s=!!o&&!!o.enumerable,d=!!o&&!!o.noTargetGet;"function"==typeof a&&("string"!=typeof t||r(a,"name")||l(a,"name",t),u(a).source=m.join("string"==typeof t?t:"")),e!==n?(i?!d&&e[t]&&(s=!0):delete e[t],s?e[t]=a:l(e,t,a)):s?e[t]=a:c(t,a)})(Function.prototype,"toString",(function(){return"function"==typeof this&&s(this).source||o(this)}))},"c+NL":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"create-reaction-for-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a commit comment"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#comments"},"commit comment"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this commit comment."),l.a.createElement(c["a"],{code:"octokit.reactions.createForCommitComment({\n  owner,\n  repo,\n  comment_id,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the commit comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for an issue"),l.a.createElement("p",null,"Create a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues/"},"issue"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this issue."),l.a.createElement(c["a"],{code:"octokit.reactions.createForIssue({\n  owner,\n  repo,\n  issue_number,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the issue."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for an issue comment"),l.a.createElement("p",null,"Create a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#comments"},"issue comment"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this issue comment."),l.a.createElement(c["a"],{code:"octokit.reactions.createForIssueComment({\n  owner,\n  repo,\n  comment_id,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the issue comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-a-pull-request-review-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-pull-request-review-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a pull request review comment"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#comments"},"pull request review comment"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this pull request review comment."),l.a.createElement(c["a"],{code:"octokit.reactions.createForPullRequestReviewComment({\n  owner,\n  repo,\n  comment_id,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the pull request review comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-a-team-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-team-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a team discussion comment"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments"},"team discussion comment"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this team discussion comment."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.createForTeamDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the team discussion comment."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-reaction-for-a-team-discussion"},l.a.createElement(r["AnchorLink"],{to:"#create-reaction-for-a-team-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create reaction for a team discussion"),l.a.createElement("p",null,"Create a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),". A response with a ",l.a.createElement("code",null,"Status: 200 OK")," means that you already added the reaction type to this team discussion."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.createForTeamDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type")," to add to the team discussion."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-commit-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-commit-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a commit comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#comments"},"commit comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForCommitComment({\n  owner,\n  repo,\n  comment_id,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-a-commit-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-issue-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-issue-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an issue reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues/"},"issue"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForIssue({\n  owner,\n  repo,\n  issue_number,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-an-issue-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-issue-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-issue-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an issue comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#comments"},"issue comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForIssueComment({\n  owner,\n  repo,\n  comment_id,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-an-issue-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-pull-request-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-pull-request-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a pull request comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a repository by ",l.a.createElement("code",null,"repository_id")," using the route ",l.a.createElement("code",null,"DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.")),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#review-comments"},"pull request review comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForPullRequestComment({\n  owner,\n  repo,\n  comment_id,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-a-pull-request-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-team-discussion-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-team-discussion-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete team discussion reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team or organization with ",l.a.createElement("code",null,"team_id")," and ",l.a.createElement("code",null,"org_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForTeamDiscussion({\n  org,\n  team_slug,\n  discussion_number,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-team-discussion-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-team-discussion-comment-reaction"},l.a.createElement(r["AnchorLink"],{to:"#delete-team-discussion-comment-reaction","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete team discussion comment reaction"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team or organization with ",l.a.createElement("code",null,"team_id")," and ",l.a.createElement("code",null,"org_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id"),"."),l.a.createElement("p",null,"Delete a reaction to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments"},"team discussion comment"),". OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteForTeamDiscussionComment({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-team-discussion-comment-reaction"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-reaction-legacy"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-reaction-legacy","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a reaction (Legacy)"),l.a.createElement("p",null,l.a.createElement("strong",null,"This method is deprecated.")),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecation Notice:")," This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this ",l.a.createElement(r["Link"],{to:"https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/"},"blog post"),"."),l.a.createElement("p",null,"OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),", when deleting a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion")," or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments"},"team discussion comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.deleteLegacy({\n  reaction_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"reaction_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a commit comment"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#comments"},"commit comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForCommitComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a commit comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-an-issue"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-an-issue","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for an issue"),l.a.createElement("p",null,"List the reactions to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues"},"issue"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForIssue({\n  owner,\n  repo,\n  issue_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"issue_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"issue_number parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to an issue."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-an-issue"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-an-issue-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-an-issue-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for an issue comment"),l.a.createElement("p",null,"List the reactions to an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/issues#comments"},"issue comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForIssueComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to an issue comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-an-issue-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-pull-request-review-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-pull-request-review-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a pull request review comment"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#review-comments"},"pull request review comment"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForPullRequestReviewComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a pull request review comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-team-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-team-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a team discussion comment"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussion-comments/"},"team discussion comment"),". OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForTeamDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a team discussion comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-reactions-for-a-team-discussion"},l.a.createElement(r["AnchorLink"],{to:"#list-reactions-for-a-team-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List reactions for a team discussion"),l.a.createElement("p",null,"List the reactions to a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#discussions"},"team discussion"),". OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions"),"."),l.a.createElement(c["a"],{code:"octokit.reactions.listForTeamDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Returns a single ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/reactions#reaction-types"},"reaction type"),". Omit this parameter to list all reactions to a team discussion."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion"},"GitHub Developer Guide documentation"),".")))}},c9m3:function(e,t,a){var n=a("RNIs");n("flatMap")},cOPa:function(e,t,a){var n=a("I+eb"),l=Math.min,r=Math.max;n({target:"Math",stat:!0},{clamp:function(e,t,a){return l(a,r(t,e))}})},cVYH:function(e,t,a){var n=a("hh1v"),l=a("0rvr");e.exports=function(e,t,a){var r,c;return l&&"function"==typeof(r=t.constructor)&&r!==a&&n(c=r.prototype)&&c!==a.prototype&&l(e,c),e}},cfiF:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("Cg3G");n({target:"WeakMap",proto:!0,real:!0,forced:l},{deleteAll:function(){return r.apply(this,arguments)}})},"cr+I":function(e,t,a){"use strict";var n=a("J4zp"),l=a("Y3SK"),r=a("RIqP"),c=a("ZFOp"),o=a("8jRI"),i=a("8yz6"),s=function(e){return null===e||void 0===e};function u(e){switch(e.arrayFormat){case"index":return function(t){return function(a,n){var l=a.length;return void 0===n||e.skipNull&&null===n||e.skipEmptyString&&""===n?a:[].concat(r(a),null===n?[[E(t,e),"[",l,"]"].join("")]:[[E(t,e),"[",E(l,e),"]=",E(n,e)].join("")])}};case"bracket":return function(t){return function(a,n){return void 0===n||e.skipNull&&null===n||e.skipEmptyString&&""===n?a:[].concat(r(a),null===n?[[E(t,e),"[]"].join("")]:[[E(t,e),"[]=",E(n,e)].join("")])}};case"comma":case"separator":return function(t){return function(a,n){return null===n||void 0===n||0===n.length?a:0===a.length?[[E(t,e),"=",E(n,e)].join("")]:[[a,E(n,e)].join(e.arrayFormatSeparator)]}};default:return function(t){return function(a,n){return void 0===n||e.skipNull&&null===n||e.skipEmptyString&&""===n?a:[].concat(r(a),null===n?[E(t,e)]:[[E(t,e),"=",E(n,e)].join("")])}}}}function m(e){var t;switch(e.arrayFormat){case"index":return function(e,a,n){t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===n[e]&&(n[e]={}),n[e][t[1]]=a):n[e]=a};case"bracket":return function(e,a,n){t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==n[e]?n[e]=[].concat(n[e],a):n[e]=[a]:n[e]=a};case"comma":case"separator":return function(t,a,n){var l="string"===typeof a&&a.includes(e.arrayFormatSeparator),r="string"===typeof a&&!l&&p(a,e).includes(e.arrayFormatSeparator);a=r?p(a,e):a;var c=l||r?a.split(e.arrayFormatSeparator).map((function(t){return p(t,e)})):null===a?a:p(a,e);n[t]=c};default:return function(e,t,a){void 0!==a[e]?a[e]=[].concat(a[e],t):a[e]=t}}}function d(e){if("string"!==typeof e||1!==e.length)throw new TypeError("arrayFormatSeparator must be single character string")}function E(e,t){return t.encode?t.strict?c(e):encodeURIComponent(e):e}function p(e,t){return t.decode?o(e):e}function h(e){return Array.isArray(e)?e.sort():"object"===typeof e?h(Object.keys(e)).sort((function(e,t){return Number(e)-Number(t)})).map((function(t){return e[t]})):e}function g(e){var t=e.indexOf("#");return-1!==t&&(e=e.slice(0,t)),e}function b(e){var t="",a=e.indexOf("#");return-1!==a&&(t=e.slice(a)),t}function f(e){e=g(e);var t=e.indexOf("?");return-1===t?"":e.slice(t+1)}function y(e,t){return t.parseNumbers&&!Number.isNaN(Number(e))&&"string"===typeof e&&""!==e.trim()?e=Number(e):!t.parseBooleans||null===e||"true"!==e.toLowerCase()&&"false"!==e.toLowerCase()||(e="true"===e.toLowerCase()),e}function k(e,t){t=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},t),d(t.arrayFormatSeparator);var a=m(t),r=Object.create(null);if("string"!==typeof e)return r;if(e=e.trim().replace(/^[?#&]/,""),!e)return r;var c,o=l(e.split("&"));try{for(o.s();!(c=o.n()).done;){var s=c.value,u=i(t.decode?s.replace(/\+/g," "):s,"="),E=n(u,2),g=E[0],b=E[1];b=void 0===b?null:["comma","separator"].includes(t.arrayFormat)?b:p(b,t),a(p(g,t),b,r)}}catch(_){o.e(_)}finally{o.f()}for(var f=0,k=Object.keys(r);f<k.length;f++){var v=k[f],w=r[v];if("object"===typeof w&&null!==w)for(var L=0,A=Object.keys(w);L<A.length;L++){var x=A[L];w[x]=y(w[x],t)}else r[v]=y(w,t)}return!1===t.sort?r:(!0===t.sort?Object.keys(r).sort():Object.keys(r).sort(t.sort)).reduce((function(e,t){var a=r[t];return Boolean(a)&&"object"===typeof a&&!Array.isArray(a)?e[t]=h(a):e[t]=a,e}),Object.create(null))}t.extract=f,t.parse=k,t.stringify=function(e,t){if(!e)return"";t=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},t),d(t.arrayFormatSeparator);for(var a=function(a){return t.skipNull&&s(e[a])||t.skipEmptyString&&""===e[a]},n=u(t),l={},r=0,c=Object.keys(e);r<c.length;r++){var o=c[r];a(o)||(l[o]=e[o])}var i=Object.keys(l);return!1!==t.sort&&i.sort(t.sort),i.map((function(a){var l=e[a];return void 0===l?"":null===l?E(a,t):Array.isArray(l)?l.reduce(n(a),[]).join("&"):E(a,t)+"="+E(l,t)})).filter((function(e){return e.length>0})).join("&")},t.parseUrl=function(e,t){t=Object.assign({decode:!0},t);var a=i(e,"#"),l=n(a,2),r=l[0],c=l[1];return Object.assign({url:r.split("?")[0]||"",query:k(f(e),t)},t&&t.parseFragmentIdentifier&&c?{fragmentIdentifier:p(c,t)}:{})},t.stringifyUrl=function(e,a){a=Object.assign({encode:!0,strict:!0},a);var n=g(e.url).split("?")[0]||"",l=t.extract(e.url),r=t.parse(l,{sort:!1}),c=Object.assign(r,e.query),o=t.stringify(c,a);o&&(o="?".concat(o));var i=b(e.url);return e.fragmentIdentifier&&(i="#".concat(E(e.fragmentIdentifier,a))),"".concat(n).concat(o).concat(i)}},ct3h:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-or-update-team-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#add-or-update-team-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add or update team membership for a user"),l.a.createElement("p",null,"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/"},"Synchronizing teams between your identity provider and GitHub"),'."'),l.a.createElement("p",null,'An organization owner can add someone who is not part of the team\'s organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the "pending" state until the person accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team.'),l.a.createElement("p",null,"If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PUT /organizations/","{","org_id","}","/team/","{","team_id","}","/memberships/","{","username","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.addOrUpdateMembershipForUserInOrg({\n  org,\n  team_slug,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The role that this user should have in the team. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - a normal member of the team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintainer")," - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-or-update-team-project-permissions"},l.a.createElement(r["AnchorLink"],{to:"#add-or-update-team-project-permissions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add or update team project permissions"),l.a.createElement("p",null,"Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have ",l.a.createElement("code",null,"admin")," permissions for the project. The project and team must be part of the same organization."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PUT /organizations/","{","org_id","}","/team/","{","team_id","}","/projects/","{","project_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.addOrUpdateProjectPermissionsInOrg({\n  org,\n  team_slug,\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant to the team for this project. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"read")," - team members can read, but not write to or administer this project.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"write")," - team members can read and write, but not administer this project.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can read, write and administer this project.",l.a.createElement("br",null),"Default: the team's ",l.a.createElement("code",null,"permission")," attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#add-or-update-team-project-permissions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-or-update-team-repository-permissions"},l.a.createElement(r["AnchorLink"],{to:"#add-or-update-team-repository-permissions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add or update team repository permissions"),l.a.createElement("p",null,"To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a ",l.a.createElement("code",null,"422 Unprocessable Entity")," status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PUT /organizations/","{","org_id","}","/team/","{","team_id","}","/repos/","{","owner","}","/","{","repo","}"),"."),l.a.createElement("p",null,'For more information about the permission levels, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization"},"Repository permission levels for an organization"),'".'),l.a.createElement(c["a"],{code:"octokit.teams.addOrUpdateRepoPermissionsInOrg({\n  org,\n  team_slug,\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant the team on this repository. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - team members can pull, but not push to or administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - team members can pull and push, but not administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can pull, push and administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintain")," - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"triage")," - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations."),l.a.createElement("p",null,"If no permission is specified, the team's ",l.a.createElement("code",null,"permission")," attribute will be used to determine what permission to grant the team on this repository."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#add-or-update-team-repository-permissions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-team-permissions-for-a-project"},l.a.createElement(r["AnchorLink"],{to:"#check-team-permissions-for-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check team permissions for a project"),l.a.createElement("p",null,"Checks whether a team has ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin")," permissions for an organization project. The response includes projects inherited from a parent team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/projects/","{","project_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.checkPermissionsForProjectInOrg({\n  org,\n  team_slug,\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#check-team-permissions-for-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-team-permissions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#check-team-permissions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check team permissions for a repository"),l.a.createElement("p",null,"Checks whether a team has ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"push"),", ",l.a.createElement("code",null,"maintain"),", ",l.a.createElement("code",null,"triage"),", or ",l.a.createElement("code",null,"pull")," permission for a repository. Repositories inherited through a parent team will also be checked."),l.a.createElement("p",null,"You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"application/vnd.github.v3.repository+json")," accept header."),l.a.createElement("p",null,"If a team doesn't have permission for the repository, you will receive a ",l.a.createElement("code",null,"404 Not Found")," response status."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/repos/","{","owner","}","/","{","repo","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.checkPermissionsForRepoInOrg({\n  org,\n  team_slug,\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#check-team-permissions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-team"},l.a.createElement(r["AnchorLink"],{to:"#create-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a team"),l.a.createElement("p",null,"To create a team, the authenticated user must be a member or owner of ",l.a.createElement("code",null,"{","org","}"),'. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization"},"Setting team creation permissions"),'."'),l.a.createElement("p",null,"When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of ",l.a.createElement("code",null,"maintainers"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams"},"About teams"),'".'),l.a.createElement(c["a"],{code:"octokit.teams.create({\n  org,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"maintainers"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"List GitHub IDs for organization members who will become team maintainers."))),l.a.createElement("tr",null,l.a.createElement("td",null,"repo_names"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,'The full name (e.g., "organization-name/repository-name") of repositories to add the team to.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"privacy"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of privacy this team should have. The options are:",l.a.createElement("br",null),l.a.createElement("strong",null,"For a non-nested team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"secret")," - only visible to organization owners and members of this team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization.",l.a.createElement("br",null),"Default: ",l.a.createElement("code",null,"secret"),l.a.createElement("br",null),l.a.createElement("strong",null,"For a parent or child team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization.",l.a.createElement("br",null),"Default for child team: ",l.a.createElement("code",null,"closed")))),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated"),". The permission that new repositories will be added to the team with when none is specified. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - team members can pull, but not push to or administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - team members can pull and push, but not administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can pull, push and administer newly-added repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"parent_team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of a team to set as the parent team."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#create-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a discussion comment"),l.a.createElement("p",null,"Creates a new comment on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments"),"."),l.a.createElement(c["a"],{code:"octokit.teams.createDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion comment's body text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#create-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#create-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a discussion"),l.a.createElement("p",null,"Creates a new discussion post on a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"POST /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions"),"."),l.a.createElement(c["a"],{code:"octokit.teams.createDiscussionInOrg({\n  org,\n  team_slug,\n  title,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's title."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's body text."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to ",l.a.createElement("code",null,"true")," to create a private post."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#create-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a discussion comment"),l.a.createElement("p",null,"Deletes a comment on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments/","{","comment_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.deleteDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#delete-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a discussion"),l.a.createElement("p",null,"Delete a discussion from a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.deleteDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#delete-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-team"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a team"),l.a.createElement("p",null,"To delete a team, the authenticated user must be an organization owner or team maintainer."),l.a.createElement("p",null,"If you are an organization owner, deleting a parent team will delete all of its child teams as well."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.deleteInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#delete-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-team-by-name"},l.a.createElement(r["AnchorLink"],{to:"#get-a-team-by-name","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a team by name"),l.a.createElement("p",null,"Gets a team using the team's ",l.a.createElement("code",null,"slug"),". GitHub generates the ",l.a.createElement("code",null,"slug")," from the team ",l.a.createElement("code",null,"name"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getByName({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#get-a-team-by-name"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a discussion comment"),l.a.createElement("p",null,"Get a specific comment on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments/","{","comment_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#get-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#get-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a discussion"),l.a.createElement("p",null,"Get a specific discussion on a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#get-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-team-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-team-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get team membership for a user"),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement("p",null,"To get a user's membership with a team, the team must be visible to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/memberships/","{","username","}"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," The ",l.a.createElement("code",null,"role")," for organization owners returns as ",l.a.createElement("code",null,"maintainer"),". For more information about ",l.a.createElement("code",null,"maintainer")," roles, see ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#create-a-team"},"Create a team"),"."),l.a.createElement(c["a"],{code:"octokit.teams.getMembershipForUserInOrg({\n  org,\n  team_slug,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List teams"),l.a.createElement("p",null,"Lists all teams in an organization that are visible to the authenticated user."),l.a.createElement(c["a"],{code:"octokit.teams.list({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-child-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-child-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List child teams"),l.a.createElement("p",null,"Lists the child teams of the team specified by ",l.a.createElement("code",null,"{","team_slug","}"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/teams"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listChildInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-child-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-discussion-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-discussion-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List discussion comments"),l.a.createElement("p",null,"List all comments on a team discussion. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listDiscussionCommentsInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-discussion-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-discussions"},l.a.createElement(r["AnchorLink"],{to:"#list-discussions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List discussions"),l.a.createElement("p",null,"List all discussions on a team's page. OAuth access tokens require the ",l.a.createElement("code",null,"read:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listDiscussionsInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-discussions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-teams-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-teams-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List teams for the authenticated user"),l.a.createElement("p",null,"List all of the teams across all of the organizations to which the authenticated user belongs. This method requires ",l.a.createElement("code",null,"user"),", ",l.a.createElement("code",null,"repo"),", or ",l.a.createElement("code",null,"read:org")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope")," when authenticating via ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/"},"OAuth"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-teams-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-team-members"},l.a.createElement(r["AnchorLink"],{to:"#list-team-members","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List team members"),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement("p",null,"To list members in a team, the team must be visible to the authenticated user."),l.a.createElement(c["a"],{code:"octokit.teams.listMembersInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"role"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters members returned by their role in the team. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"member")," - normal members of the team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintainer")," - team maintainers.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all")," - all members of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-team-members"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pending-team-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-pending-team-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pending team invitations"),l.a.createElement("p",null,"The return hash contains a ",l.a.createElement("code",null,"role")," field which refers to the Organization Invitation role and will be one of the following values: ",l.a.createElement("code",null,"direct_member"),", ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"billing_manager"),", ",l.a.createElement("code",null,"hiring_manager"),", or ",l.a.createElement("code",null,"reinstate"),". If the invitee is not a GitHub member, the ",l.a.createElement("code",null,"login")," field in the return hash will be ",l.a.createElement("code",null,"null"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/invitations"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listPendingInvitationsInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#list-pending-team-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-team-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-team-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List team projects"),l.a.createElement("p",null,"Lists the organization projects for a team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/projects"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listProjectsInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-team-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-team-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-team-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List team repositories"),l.a.createElement("p",null,"Lists a team's repositories visible to the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"GET /organizations/","{","org_id","}","/team/","{","team_id","}","/repos"),"."),l.a.createElement(c["a"],{code:"octokit.teams.listReposInOrg({\n  org,\n  team_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#list-team-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-team-membership-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#remove-team-membership-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove team membership for a user"),l.a.createElement("p",null,"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/"},"Synchronizing teams between your identity provider and GitHub"),'."'),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/memberships/","{","username","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.removeMembershipForUserInOrg({\n  org,\n  team_slug,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-project-from-a-team"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-project-from-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a project from a team"),l.a.createElement("p",null,"Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have ",l.a.createElement("code",null,"read")," access to both the team and project, or ",l.a.createElement("code",null,"admin")," access to the team or project. This endpoint removes the project from the team, but does not delete the project."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/projects/","{","project_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.removeProjectInOrg({\n  org,\n  team_slug,\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#remove-a-project-from-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-repository-from-a-team"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-repository-from-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a repository from a team"),l.a.createElement("p",null,"If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"DELETE /organizations/","{","org_id","}","/team/","{","team_id","}","/repos/","{","owner","}","/","{","repo","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.removeRepoInOrg({\n  org,\n  team_slug,\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#remove-a-repository-from-a-team"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-discussion-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-a-discussion-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a discussion comment"),l.a.createElement("p",null,"Edits the body text of a discussion comment. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PATCH /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}","/comments/","{","comment_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.updateDiscussionCommentInOrg({\n  org,\n  team_slug,\n  discussion_number,\n  comment_number,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion comment's body text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#update-a-discussion-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-discussion"},l.a.createElement(r["AnchorLink"],{to:"#update-a-discussion","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a discussion"),l.a.createElement("p",null,"Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the ",l.a.createElement("code",null,"write:discussion")," ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"scope"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PATCH /organizations/","{","org_id","}","/team/","{","team_id","}","/discussions/","{","discussion_number","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.updateDiscussionInOrg({\n  org,\n  team_slug,\n  discussion_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"discussion_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's title."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The discussion post's body text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/teams#update-a-discussion"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-team"},l.a.createElement(r["AnchorLink"],{to:"#update-a-team","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a team"),l.a.createElement("p",null,"To edit a team, the authenticated user must either be an organization owner or a team maintainer."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You can also specify a team by ",l.a.createElement("code",null,"org_id")," and ",l.a.createElement("code",null,"team_id")," using the route ",l.a.createElement("code",null,"PATCH /organizations/","{","org_id","}","/team/","{","team_id","}"),"."),l.a.createElement(c["a"],{code:"octokit.teams.updateInOrg({\n  org,\n  team_slug,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"team_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"team_slug parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the team."))),l.a.createElement("tr",null,l.a.createElement("td",null,"privacy"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of privacy this team should have. Editing teams without specifying this parameter leaves ",l.a.createElement("code",null,"privacy")," intact. When a team is nested, the ",l.a.createElement("code",null,"privacy")," for parent teams cannot be ",l.a.createElement("code",null,"secret"),". The options are:",l.a.createElement("br",null),l.a.createElement("strong",null,"For a non-nested team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"secret")," - only visible to organization owners and members of this team.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization.",l.a.createElement("br",null),l.a.createElement("strong",null,"For a parent or child team:"),l.a.createElement("br",null),"* ",l.a.createElement("code",null,"closed")," - visible to all members of this organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated"),". The permission that new repositories will be added to the team with when none is specified. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - team members can pull, but not push to or administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - team members can pull and push, but not administer newly-added repositories.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - team members can pull, push and administer newly-added repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"parent_team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of a team to set as the parent team."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/teams/#update-a-team"},"GitHub Developer Guide documentation"),".")))}},ctDJ:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("A2ZE"),s=a("SEBh"),u=a("WGBp"),m=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{map:function(e){var t=c(this),a=u(t),n=i(e,arguments.length>1?arguments[1]:void 0,3),l=new(s(t,r("Set"))),d=o(l.add);return m(a,(function(e){d.call(l,n(e,e,t))}),void 0,!1,!0),l}})},cuJx:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-all-gitignore-templates"},l.a.createElement(r["AnchorLink"],{to:"#get-all-gitignore-templates","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all gitignore templates"),l.a.createElement("p",null,"List all templates available to pass as an option when ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user"},"creating a repository"),"."),l.a.createElement(c["a"],{code:"octokit.gitignore.getAllTemplates();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gitignore/#get-all-gitignore-templates"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gitignore-template"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gitignore-template","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gitignore template"),l.a.createElement("p",null,"The API also allows fetching the source of a single template. Use the raw ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," to get the raw contents."),l.a.createElement(c["a"],{code:"octokit.gitignore.getTemplate({\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gitignore/#get-a-gitignore-template"},"GitHub Developer Guide documentation"),".")))}},cvf0:function(e,t,a){"use strict";var n=a("67WC").exportTypedArrayMethod,l=a("0Dky"),r=a("2oRo"),c=r.Uint8Array,o=c&&c.prototype||{},i=[].toString,s=[].join;l((function(){i.call({})}))&&(i=function(){return s.call(this)});var u=o.toString!=i;n("toString",i,u)},d6cI:function(e,t){var a=1/0,n=Math.abs,l=Math.pow,r=Math.floor,c=Math.log,o=Math.LN2,i=function(e,t,i){var s,u,m,d=new Array(i),E=8*i-t-1,p=(1<<E)-1,h=p>>1,g=23===t?l(2,-24)-l(2,-77):0,b=e<0||0===e&&1/e<0?1:0,f=0;for(e=n(e),e!=e||e===a?(u=e!=e?1:0,s=p):(s=r(c(e)/o),e*(m=l(2,-s))<1&&(s--,m*=2),e+=s+h>=1?g/m:g*l(2,1-h),e*m>=2&&(s++,m/=2),s+h>=p?(u=0,s=p):s+h>=1?(u=(e*m-1)*l(2,t),s+=h):(u=e*l(2,h-1)*l(2,t),s=0));t>=8;d[f++]=255&u,u/=256,t-=8);for(s=s<<t|u,E+=t;E>0;d[f++]=255&s,s/=256,E-=8);return d[--f]|=128*b,d},s=function(e,t){var n,r=e.length,c=8*r-t-1,o=(1<<c)-1,i=o>>1,s=c-7,u=r-1,m=e[u--],d=127&m;for(m>>=7;s>0;d=256*d+e[u],u--,s-=8);for(n=d&(1<<-s)-1,d>>=-s,s+=t;s>0;n=256*n+e[u],u--,s-=8);if(0===d)d=1-i;else{if(d===o)return n?NaN:m?-a:a;n+=l(2,t),d-=i}return(m?-1:1)*n*l(2,d-t)};e.exports={pack:i,unpack:s}},"dBg+":function(e,t){t.f=Object.getOwnPropertySymbols},dEAq:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"context",{enumerable:!0,get:function(){return n["default"]}}),Object.defineProperty(t,"Link",{enumerable:!0,get:function(){return l["default"]}}),Object.defineProperty(t,"NavLink",{enumerable:!0,get:function(){return r["default"]}}),Object.defineProperty(t,"AnchorLink",{enumerable:!0,get:function(){return c["default"]}}),Object.defineProperty(t,"useSearch",{enumerable:!0,get:function(){return o["default"]}}),Object.defineProperty(t,"useCopy",{enumerable:!0,get:function(){return i["default"]}}),Object.defineProperty(t,"useRiddle",{enumerable:!0,get:function(){return s["default"]}}),Object.defineProperty(t,"useMotions",{enumerable:!0,get:function(){return u["default"]}}),Object.defineProperty(t,"useCodeSandbox",{enumerable:!0,get:function(){return m["default"]}}),Object.defineProperty(t,"useLocaleProps",{enumerable:!0,get:function(){return d["default"]}}),Object.defineProperty(t,"useDemoUrl",{enumerable:!0,get:function(){return E["default"]}}),Object.defineProperty(t,"useApiData",{enumerable:!0,get:function(){return p["default"]}}),Object.defineProperty(t,"useTSPlaygroundUrl",{enumerable:!0,get:function(){return h["default"]}});var n=g(a("nLCz")),l=g(a("zqmC")),r=g(a("6asN")),c=g(a("bYHP")),o=g(a("t/kZ")),i=g(a("dfPH")),s=g(a("o0kM")),u=g(a("zYLY")),m=g(a("r1Q5")),d=g(a("U/TZ")),E=g(a("beRK")),p=g(a("3QDa")),h=g(a("7sf/"));function g(e){return e&&e.__esModule?e:{default:e}}},"dG/n":function(e,t,a){var n=a("Qo9l"),l=a("UTVS"),r=a("5Tg+"),c=a("m/L8").f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});l(t,e)||c(t,e,{value:r.f(e)})}},dI71:function(e,t,a){"use strict";function n(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}a.d(t,"a",(function(){return n}))},dNT4:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("WGBp"),i=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{every:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return!i(a,(function(e){if(!n(e,e,t))return i.stop()}),void 0,!1,!0).stopped}})},dOgj:function(e,t,a){"use strict";var n=a("I+eb"),l=a("2oRo"),r=a("g6v/"),c=a("iqeF"),o=a("67WC"),i=a("Yhre"),s=a("GarU"),u=a("XGwC"),m=a("kRJp"),d=a("UMSQ"),E=a("CyXQ"),p=a("GC2F"),h=a("wE6v"),g=a("UTVS"),b=a("9d/t"),f=a("hh1v"),y=a("fHMY"),k=a("0rvr"),v=a("JBy8").f,w=a("oHi+"),L=a("tycR").forEach,A=a("JiZb"),x=a("m/L8"),_=a("Bs8V"),G=a("afO8"),P=a("cVYH"),I=G.get,S=G.set,T=x.f,N=_.f,j=Math.round,H=l.RangeError,q=i.ArrayBuffer,D=i.DataView,z=o.NATIVE_ARRAY_BUFFER_VIEWS,C=o.TYPED_ARRAY_TAG,O=o.TypedArray,R=o.TypedArrayPrototype,F=o.aTypedArrayConstructor,U=o.isTypedArray,M="BYTES_PER_ELEMENT",Y="Wrong length",B=function(e,t){var a=0,n=t.length,l=new(F(e))(n);while(n>a)l[a]=t[a++];return l},W=function(e,t){T(e,t,{get:function(){return I(this)[t]}})},K=function(e){var t;return e instanceof q||"ArrayBuffer"==(t=b(e))||"SharedArrayBuffer"==t},V=function(e,t){return U(e)&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Z=function(e,t){return V(e,t=h(t,!0))?u(2,e[t]):N(e,t)},$=function(e,t,a){return!(V(e,t=h(t,!0))&&f(a)&&g(a,"value"))||g(a,"get")||g(a,"set")||a.configurable||g(a,"writable")&&!a.writable||g(a,"enumerable")&&!a.enumerable?T(e,t,a):(e[t]=a.value,e)};r?(z||(_.f=Z,x.f=$,W(R,"buffer"),W(R,"byteOffset"),W(R,"byteLength"),W(R,"length")),n({target:"Object",stat:!0,forced:!z},{getOwnPropertyDescriptor:Z,defineProperty:$}),e.exports=function(e,t,a){var r=e.match(/\d+$/)[0]/8,o=e+(a?"Clamped":"")+"Array",i="get"+e,u="set"+e,h=l[o],g=h,b=g&&g.prototype,x={},_=function(e,t){var a=I(e);return a.view[i](t*r+a.byteOffset,!0)},G=function(e,t,n){var l=I(e);a&&(n=(n=j(n))<0?0:n>255?255:255&n),l.view[u](t*r+l.byteOffset,n,!0)},N=function(e,t){T(e,t,{get:function(){return _(this,t)},set:function(e){return G(this,t,e)},enumerable:!0})};z?c&&(g=t((function(e,t,a,n){return s(e,g,o),P(function(){return f(t)?K(t)?void 0!==n?new h(t,p(a,r),n):void 0!==a?new h(t,p(a,r)):new h(t):U(t)?B(g,t):w.call(g,t):new h(E(t))}(),e,g)})),k&&k(g,O),L(v(h),(function(e){e in g||m(g,e,h[e])})),g.prototype=b):(g=t((function(e,t,a,n){s(e,g,o);var l,c,i,u=0,m=0;if(f(t)){if(!K(t))return U(t)?B(g,t):w.call(g,t);l=t,m=p(a,r);var h=t.byteLength;if(void 0===n){if(h%r)throw H(Y);if(c=h-m,c<0)throw H(Y)}else if(c=d(n)*r,c+m>h)throw H(Y);i=c/r}else i=E(t),c=i*r,l=new q(c);S(e,{buffer:l,byteOffset:m,byteLength:c,length:i,view:new D(l)});while(u<i)N(e,u++)})),k&&k(g,O),b=g.prototype=y(R)),b.constructor!==g&&m(b,"constructor",g),C&&m(b,C,o),x[o]=g,n({global:!0,forced:g!=h,sham:!z},x),M in g||m(g,M,r),M in b||m(b,M,r),A(o)}):e.exports=function(){}},dfPH:function(e,t,a){"use strict";function n(){var e=o(a("q1tI"));return n=function(){return e},e}function l(){var e=r(a("WWur"));return l=function(){return e},e}function r(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if(Object.prototype.hasOwnProperty.call(e,l)){var r=n?Object.getOwnPropertyDescriptor(e,l):null;r&&(r.get||r.set)?Object.defineProperty(a,l,r):a[l]=e[l]}return a["default"]=e,t&&t.set(e,a),a}function i(e,t){return E(e)||d(e,t)||u(e,t)||s()}function s(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(e,t){if(e){if("string"===typeof e)return m(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?m(e,t):void 0}}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function d(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function E(e){if(Array.isArray(e))return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var p=function(){var e=(0,n().useState)(),t=i(e,2),a=t[0],r=t[1],c=(0,n().useState)("ready"),o=i(c,2),s=o[0],u=o[1],m=(0,n().useCallback)((function(e){(0,l()["default"])(e),u("copied"),clearTimeout(a),r(setTimeout((function(){u("ready")}),2e3))}),[]);return[m,s]};t["default"]=p},"eDl+":function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},eDxR:function(e,t,a){var n=a("Tskq"),l=a("ENF9"),r=a("VpIT"),c=r("metadata"),o=c.store||(c.store=new l),i=function(e,t,a){var l=o.get(e);if(!l){if(!a)return;o.set(e,l=new n)}var r=l.get(t);if(!r){if(!a)return;l.set(t,r=new n)}return r},s=function(e,t,a){var n=i(t,a,!1);return void 0!==n&&n.has(e)},u=function(e,t,a){var n=i(t,a,!1);return void 0===n?void 0:n.get(e)},m=function(e,t,a,n){i(a,n,!0).set(e,t)},d=function(e,t){var a=i(e,t,!1),n=[];return a&&a.forEach((function(e,t){n.push(t)})),n},E=function(e){return void 0===e||"symbol"==typeof e?e:String(e)};e.exports={store:o,getMap:i,has:s,get:u,set:m,keys:d,toKey:E}},"eK+M":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"render-a-markdown-document"},l.a.createElement(r["AnchorLink"],{to:"#render-a-markdown-document","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Render a Markdown document"),l.a.createElement(c["a"],{code:"octokit.markdown.render({\n  text,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"text"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The Markdown text to render in HTML."))),l.a.createElement("tr",null,l.a.createElement("td",null,"mode"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The rendering mode."))),l.a.createElement("tr",null,l.a.createElement("td",null,"context"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The repository context to use when creating references in ",l.a.createElement("code",null,"gfm")," mode."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/markdown/#render-a-markdown-document"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"render-a-markdown-document-in-raw-mode"},l.a.createElement(r["AnchorLink"],{to:"#render-a-markdown-document-in-raw-mode","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Render a Markdown document in raw mode"),l.a.createElement("p",null,"You must send Markdown as plain text (using a ",l.a.createElement("code",null,"Content-Type")," header of ",l.a.createElement("code",null,"text/plain")," or ",l.a.createElement("code",null,"text/x-markdown"),") to this endpoint, rather than using JSON format. In raw mode, ",l.a.createElement(r["Link"],{to:"https://github.github.com/gfm/"},"GitHub Flavored Markdown")," is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less."),l.a.createElement(c["a"],{code:"octokit.markdown.renderRaw({\n  data,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"data"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"raw markdown text"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode"},"GitHub Developer Guide documentation"),".")))}},eO0o:function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{imulh:function(e,t){var a=65535,n=+e,l=+t,r=n&a,c=l&a,o=n>>16,i=l>>16,s=(o*c>>>0)+(r*c>>>16);return o*i+(s>>16)+((r*i>>>0)+(s&a)>>16)}})},ewvW:function(e,t,a){var n=a("HYAF");e.exports=function(e){return Object(n(e))}},"f/k9":function(e,t,a){"use strict";var n=a("MgzW"),l=a("q1tI");t.useSubscription=function(e){var t=e.getCurrentValue,a=e.subscribe,r=l.useState((function(){return{getCurrentValue:t,subscribe:a,value:t()}}));e=r[0];var c=r[1];return r=e.value,e.getCurrentValue===t&&e.subscribe===a||(r=t(),c({getCurrentValue:t,subscribe:a,value:r})),l.useDebugValue(r),l.useEffect((function(){function e(){if(!l){var e=t();c((function(l){return l.getCurrentValue!==t||l.subscribe!==a||l.value===e?l:n({},l,{value:e})}))}}var l=!1,r=a(e);return e(),function(){l=!0,r()}}),[t,a]),r}},f5p1:function(e,t,a){var n=a("2oRo"),l=a("iSVu"),r=n.WeakMap;e.exports="function"===typeof r&&/native code/.test(l(r))},fHMY:function(e,t,a){var n,l=a("glrk"),r=a("N+g0"),c=a("eDl+"),o=a("0BK2"),i=a("G+Rx"),s=a("zBJ4"),u=a("93I0"),m=">",d="<",E="prototype",p="script",h=u("IE_PROTO"),g=function(){},b=function(e){return d+p+m+e+d+"/"+p+m},f=function(e){e.write(b("")),e.close();var t=e.parentWindow.Object;return e=null,t},y=function(){var e,t=s("iframe"),a="java"+p+":";return t.style.display="none",i.appendChild(t),t.src=String(a),e=t.contentWindow.document,e.open(),e.write(b("document.F=Object")),e.close(),e.F},k=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(t){}k=n?f(n):y();var e=c.length;while(e--)delete k[E][c[e]];return k()};o[h]=!0,e.exports=Object.create||function(e,t){var a;return null!==e?(g[E]=l(e),a=new g,g[E]=null,a[h]=e):a=k(),void 0===t?a:r(a,t)}},fN96:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ZUd8").charAt;n({target:"String",proto:!0},{at:function(e){return l(this,e)}})},fXLg:function(e,t,a){"use strict";var n=a("glrk"),l=a("HAuM");e.exports=function(){for(var e=n(this),t=l(e.add),a=0,r=arguments.length;a<r;a++)t.call(e,arguments[a]);return e}},fdAy:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ntOU"),r=a("4WOD"),c=a("0rvr"),o=a("1E5z"),i=a("kRJp"),s=a("busE"),u=a("tiKp"),m=a("xDBR"),d=a("P4y1"),E=a("rpNk"),p=E.IteratorPrototype,h=E.BUGGY_SAFARI_ITERATORS,g=u("iterator"),b="keys",f="values",y="entries",k=function(){return this};e.exports=function(e,t,a,u,E,v,w){l(a,t,u);var L,A,x,_=function(e){if(e===E&&T)return T;if(!h&&e in I)return I[e];switch(e){case b:return function(){return new a(this,e)};case f:return function(){return new a(this,e)};case y:return function(){return new a(this,e)}}return function(){return new a(this)}},G=t+" Iterator",P=!1,I=e.prototype,S=I[g]||I["@@iterator"]||E&&I[E],T=!h&&S||_(E),N="Array"==t&&I.entries||S;if(N&&(L=r(N.call(new e)),p!==Object.prototype&&L.next&&(m||r(L)===p||(c?c(L,p):"function"!=typeof L[g]&&i(L,g,k)),o(L,G,!0,!0),m&&(d[G]=k))),E==f&&S&&S.name!==f&&(P=!0,T=function(){return S.call(this)}),m&&!w||I[g]===T||i(I,g,T),d[t]=T,E)if(A={values:_(f),keys:v?T:_(b),entries:_(y)},w)for(x in A)(h||P||!(x in I))&&s(I,x,A[x]);else n({target:t,proto:!0,forced:h||P},A);return A}},fhKU:function(e,t,a){var n=a("2oRo"),l=a("WKiH").trim,r=a("WJkJ"),c=n.parseFloat,o=1/c(r+"-0")!==-1/0;e.exports=o?function(e){var t=l(String(e)),a=c(t);return 0===a&&"-"==t.charAt(0)?-0:a}:c},fnfB:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"When you send too many requests in too little time you will likely hit errors due to rate and/or abuse limits."),l.a.createElement("p",null,"In order to automatically throttle requests as recommended in ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/guides/best-practices-for-integrators"},"GitHub\u2019s best practices for integrators"),", we recommend you install the ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/plugin-throttling.js"},l.a.createElement("code",null,"@octokit/plugin-throttling")," plugin"),"."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"throttle.onAbuseLimit")," and ",l.a.createElement("code",null,"throttle.onRateLimit")," options are required."),l.a.createElement("p",null,"Return ",l.a.createElement("code",null,"true")," from these functions to automatically retry the request after ",l.a.createElement("code",null,"retryAfter")," seconds. Return ",l.a.createElement("code",null,"false")," or ",l.a.createElement("code",null,"undefined")," to skip retry and throw the error. For rate limit errors, ",l.a.createElement("code",null,"retryAfter")," defaults to seconds until ",l.a.createElement("code",null,"X-RateLimit-Reset"),". For abuse errors, ",l.a.createElement("code",null,"retryAfter")," defaults to the ",l.a.createElement("code",null,"retry-after")," header but is a minimum of five seconds."),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\nconst { throttling } = require("@octokit/plugin-throttling");\nconst MyOctokit = Octokit.plugin(throttling);\n\nconst octokit = new MyOctokit({\n  auth: "token " + process.env.TOKEN,\n  throttle: {\n    onRateLimit: (retryAfter, options) => {\n      octokit.log.warn(\n        `Request quota exhausted for request ${options.method} ${options.url}`\n      );\n\n      // Retry twice after hitting a rate limit error, then give up\n      if (options.request.retryCount <= 2) {\n        console.log(`Retrying after ${retryAfter} seconds!`);\n        return true;\n      }\n    },\n    onAbuseLimit: (retryAfter, options) => {\n      // does not retry, only logs a warning\n      octokit.log.warn(\n        `Abuse detected for request ${options.method} ${options.url}`\n      );\n    },\n  },\n});\n',lang:"js"})))}},"fp/E":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-a-repository-to-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#add-a-repository-to-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add a repository to an app installation"),l.a.createElement("p",null,"Add a single repository to an installation. The authenticated user must have admin access to the repository."),l.a.createElement("p",null,"You must use a personal access token (which you can create via the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token"},"command line")," or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication"),") to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.addRepoToInstallation({\n  installation_id,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#add-a-repository-to-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-a-token"},l.a.createElement(r["AnchorLink"],{to:"#check-a-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check a token"),l.a.createElement("p",null,"OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," to use this endpoint, where the username is the OAuth application ",l.a.createElement("code",null,"client_id")," and the password is its ",l.a.createElement("code",null,"client_secret"),". Invalid tokens will return ",l.a.createElement("code",null,"404 NOT FOUND"),"."),l.a.createElement(c["a"],{code:"octokit.apps.checkToken({\n  client_id,\n  access_token,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The access_token of the OAuth application."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#check-a-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-content-attachment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-content-attachment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a content attachment"),l.a.createElement("p",null,"Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the ",l.a.createElement("code",null,"id")," of the content reference from the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#content_reference"},l.a.createElement("code",null,"content_reference")," event")," to create an attachment."),l.a.createElement("p",null,'The app must create a content attachment within six hours of the content reference URL being posted. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/using-content-attachments/"},"Using content attachments"),'" for details about content attachments.'),l.a.createElement("p",null,"You must use an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.createContentAttachment({\n  content_reference_id,\n  title,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"content_reference_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The title of the attachment"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The body of the attachment"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#create-a-content-attachment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-github-app-from-a-manifest"},l.a.createElement(r["AnchorLink"],{to:"#create-a-github-app-from-a-manifest","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a GitHub App from a manifest"),l.a.createElement("p",null,"Use this endpoint to complete the handshake necessary when implementing the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/"},"GitHub App Manifest flow"),". When you create a GitHub App with the manifest flow, you receive a temporary ",l.a.createElement("code",null,"code")," used to retrieve the GitHub App's ",l.a.createElement("code",null,"id"),", ",l.a.createElement("code",null,"pem")," (private key), and ",l.a.createElement("code",null,"webhook_secret"),"."),l.a.createElement(c["a"],{code:"octokit.apps.createFromManifest({\n  code,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"code"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#create-a-github-app-from-a-manifest"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-installation-access-token-for-an-app"},l.a.createElement(r["AnchorLink"],{to:"#create-an-installation-access-token-for-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an installation access token for an app"),l.a.createElement("p",null,"Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of ",l.a.createElement("code",null,"401 - Unauthorized"),", and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the ",l.a.createElement("code",null,"repository_ids")," when creating the token. When you omit ",l.a.createElement("code",null,"repository_ids"),", the response does not contain the ",l.a.createElement("code",null,"repositories")," key."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.createInstallationAccessToken({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"List of repository names that the token should have access to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"List of repository IDs that the token should have access to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions granted to the user-to-server access token."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.checks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for checks on code. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.content_references"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.contents"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.deployments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for deployments and deployment statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.environments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for managing repository environments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.metadata"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.packages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pull_requests"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secret_scanning_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.security_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.single_file"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage just a single file. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.statuses"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for commit statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.vulnerability_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.workflows"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.members"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for organization teams and members. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage access to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_plan"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for viewing an organization's plan. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_self_hosted_runners"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_user_blocking"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.team_discussions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage team discussions and related comments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#create-an-installation-access-token-for-an-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-app-authorization"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-app-authorization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an app authorization"),l.a.createElement("p",null,"OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password. You must also provide a valid OAuth ",l.a.createElement("code",null,"access_token")," as an input parameter and the grant for the token's owner will be deleted. Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on ",l.a.createElement(r["Link"],{to:"https://github.com/settings/applications#authorized"},"the application authorizations settings screen within GitHub"),"."),l.a.createElement(c["a"],{code:"octokit.apps.deleteAuthorization({\n  client_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The OAuth access token used to authenticate to the GitHub API."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#delete-an-app-authorization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an installation for the authenticated app"),l.a.createElement("p",null,"Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#suspend-an-app-installation"},"Suspend an app installation"),'" endpoint.'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.deleteInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#delete-an-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-app-token"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-app-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an app token"),l.a.createElement("p",null,"OAuth application owners can revoke a single token for an OAuth application. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password."),l.a.createElement(c["a"],{code:"octokit.apps.deleteToken({\n  client_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The OAuth access token used to authenticate to the GitHub API."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#delete-an-app-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the authenticated app"),l.a.createElement("p",null,"Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the ",l.a.createElement("code",null,"installations_count")," in the response. For more details about your app's installations, see the \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app"},"List installations for the authenticated app"),'" endpoint.'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getAuthenticated();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-app"},l.a.createElement(r["AnchorLink"],{to:"#get-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an app"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": The ",l.a.createElement("code",null,":app_slug")," is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., ",l.a.createElement("code",null,"https://github.com/settings/apps/:app_slug"),")."),l.a.createElement("p",null,"If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/"},"personal access token")," or an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getBySlug({\n  app_slug,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"app_slug"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-an-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-an-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (",l.a.createElement("code",null,"target_type"),") will be either an organization or a user account, depending which account the repository belongs to."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-an-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find the organization's installation information."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getOrgInstallation({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-an-organization-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getRepoInstallation({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-a-repository-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-subscription-plan-for-an-account"},l.a.createElement(r["AnchorLink"],{to:"#get-a-subscription-plan-for-an-account","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a subscription plan for an account"),l.a.createElement("p",null,"Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getSubscriptionPlanForAccount({\n  account_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"account_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"account_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-subscription-plan-for-an-account-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#get-a-subscription-plan-for-an-account-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a subscription plan for an account (stubbed)"),l.a.createElement("p",null,"Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getSubscriptionPlanForAccountStubbed({\n  account_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"account_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"account_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-user-installation-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#get-a-user-installation-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a user installation for the authenticated app"),l.a.createElement("p",null,"Enables an authenticated GitHub App to find the user\u2019s installation information."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getUserInstallation({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#get-a-user-installation-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-webhook-configuration-for-an-app"},l.a.createElement(r["AnchorLink"],{to:"#get-a-webhook-configuration-for-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a webhook configuration for an app"),l.a.createElement("p",null,'Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "',l.a.createElement(r["Link"],{to:"/developers/apps/creating-a-github-app"},"Creating a GitHub App"),'."'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.getWebhookConfigForApp();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps#get-a-webhook-configuration-for-an-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-accounts-for-a-plan"},l.a.createElement(r["AnchorLink"],{to:"#list-accounts-for-a-plan","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List accounts for a plan"),l.a.createElement("p",null,"Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listAccountsForPlan({\n  plan_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"plan_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"plan_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"To return the oldest accounts first, set to ",l.a.createElement("code",null,"asc"),". Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without the ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-accounts-for-a-plan-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#list-accounts-for-a-plan-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List accounts for a plan (stubbed)"),l.a.createElement("p",null,"Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listAccountsForPlanStubbed({\n  plan_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"plan_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"plan_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"To return the oldest accounts first, set to ",l.a.createElement("code",null,"asc"),". Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Ignored without the ",l.a.createElement("code",null,"sort")," parameter."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-accessible-to-the-user-access-token"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-accessible-to-the-user-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories accessible to the user access token"),l.a.createElement("p",null,"List repositories that the authenticated user has explicit permission (",l.a.createElement("code",null,":read"),", ",l.a.createElement("code",null,":write"),", or ",l.a.createElement("code",null,":admin"),") to access for an installation."),l.a.createElement("p",null,"The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint."),l.a.createElement("p",null,"The access the user has to each repository is included in the hash under the ",l.a.createElement("code",null,"permissions")," key."),l.a.createElement(c["a"],{code:"octokit.apps.listInstallationReposForAuthenticatedUser({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-user-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-installations-for-the-authenticated-app"},l.a.createElement(r["AnchorLink"],{to:"#list-installations-for-the-authenticated-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List installations for the authenticated app"),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement("p",null,"The permissions the installation has are included under the ",l.a.createElement("code",null,"permissions")," key."),l.a.createElement(c["a"],{code:"octokit.apps.listInstallations();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"outdated"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#list-installations-for-the-authenticated-app"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-app-installations-accessible-to-the-user-access-token"},l.a.createElement(r["AnchorLink"],{to:"#list-app-installations-accessible-to-the-user-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List app installations accessible to the user access token"),l.a.createElement("p",null,"Lists installations of your GitHub App that the authenticated user has explicit permission (",l.a.createElement("code",null,":read"),", ",l.a.createElement("code",null,":write"),", or ",l.a.createElement("code",null,":admin"),") to access."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint."),l.a.createElement("p",null,"The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."),l.a.createElement("p",null,"You can find the permissions for the installation under the ",l.a.createElement("code",null,"permissions")," key."),l.a.createElement(c["a"],{code:"octokit.apps.listInstallationsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-plans"},l.a.createElement(r["AnchorLink"],{to:"#list-plans","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List plans"),l.a.createElement("p",null,"Lists all plans that are part of your GitHub Marketplace listing."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listPlans();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-plans"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-plans-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#list-plans-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List plans (stubbed)"),l.a.createElement("p",null,"Lists all plans that are part of your GitHub Marketplace listing."),l.a.createElement("p",null,"GitHub Apps must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint. OAuth Apps must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"basic authentication")," with their client ID and client secret to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listPlansStubbed();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-plans-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-accessible-to-the-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-accessible-to-the-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories accessible to the app installation"),l.a.createElement("p",null,"List repositories that an app installation can access."),l.a.createElement("p",null,"You must use an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.listReposAccessibleToInstallation();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-subscriptions-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-subscriptions-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List subscriptions for the authenticated user"),l.a.createElement("p",null,"Lists the active subscriptions for the authenticated user. You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/"},"OAuth token"),"."),l.a.createElement(c["a"],{code:"octokit.apps.listSubscriptionsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-subscriptions-for-the-authenticated-user-stubbed"},l.a.createElement(r["AnchorLink"],{to:"#list-subscriptions-for-the-authenticated-user-stubbed","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List subscriptions for the authenticated user (stubbed)"),l.a.createElement("p",null,"Lists the active subscriptions for the authenticated user. You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site"},"user-to-server OAuth access token"),", created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/"},"OAuth token"),"."),l.a.createElement(c["a"],{code:"octokit.apps.listSubscriptionsForAuthenticatedUserStubbed();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user-stubbed"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-repository-from-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-repository-from-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a repository from an app installation"),l.a.createElement("p",null,"Remove a single repository from an installation. The authenticated user must have admin access to the repository."),l.a.createElement("p",null,"You must use a personal access token (which you can create via the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token"},"command line")," or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication"),") to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.removeRepoFromInstallation({\n  installation_id,\n  repository_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#remove-a-repository-from-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"reset-a-token"},l.a.createElement(r["AnchorLink"],{to:"#reset-a-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Reset a token"),l.a.createElement("p",null,'OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password. Invalid tokens will return ",l.a.createElement("code",null,"404 NOT FOUND"),"."),l.a.createElement(c["a"],{code:"octokit.apps.resetToken({\n  client_id,\n  access_token,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The access_token of the OAuth application."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#reset-a-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"revoke-an-installation-access-token"},l.a.createElement(r["AnchorLink"],{to:"#revoke-an-installation-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Revoke an installation access token"),l.a.createElement("p",null,"Revokes the installation token you're using to authenticate as an installation and access this endpoint."),l.a.createElement("p",null,'Once an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#create-an-installation-access-token-for-an-app"},"Create an installation access token for an app"),'" endpoint.'),l.a.createElement("p",null,"You must use an ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation"},"installation access token")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.revokeInstallationAccessToken();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#revoke-an-installation-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-scoped-access-token"},l.a.createElement(r["AnchorLink"],{to:"#create-a-scoped-access-token","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a scoped access token"),l.a.createElement("p",null,"Exchanges a non-repository scoped user-to-server OAuth access token for a repository scoped user-to-server OAuth access token. You can specify which repositories the token can access and which permissions are granted to the token. You must use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"Basic Authentication")," when accessing this endpoint, using the OAuth application's ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret")," as the username and password. Invalid tokens will return ",l.a.createElement("code",null,"404 NOT FOUND"),"."),l.a.createElement(c["a"],{code:"octokit.apps.scopeToken({\n  client_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"client_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The client ID of your GitHub app."))),l.a.createElement("tr",null,l.a.createElement("td",null,"access_token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required.")," The OAuth access token used to authenticate to the GitHub API."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the user or organization to scope the user-to-server access token to. ",l.a.createElement("strong",null,"Required")," unless ",l.a.createElement("code",null,"target_id")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ID of the user or organization to scope the user-to-server access token to. ",l.a.createElement("strong",null,"Required")," unless ",l.a.createElement("code",null,"target")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of repository IDs to scope the user-to-server access token to. ",l.a.createElement("code",null,"repositories")," may not be specified if ",l.a.createElement("code",null,"repository_ids")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"repository_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of repository names to scope the user-to-server access token to. ",l.a.createElement("code",null,"repository_ids")," may not be specified if ",l.a.createElement("code",null,"repositories")," is specified."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions granted to the user-to-server access token."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.checks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for checks on code. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.content_references"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.contents"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.deployments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for deployments and deployment statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.environments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for managing repository environments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.metadata"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.packages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pages"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.pull_requests"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.repository_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secret_scanning_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage repository secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.security_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.single_file"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage just a single file. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.statuses"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for commit statuses. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.vulnerability_alerts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.workflows"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.members"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for organization teams and members. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_administration"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage access to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_hooks"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_plan"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token for viewing an organization's plan. Can be one of: ",l.a.createElement("code",null,"read"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", or ",l.a.createElement("code",null,"admin"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_secrets"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage organization secrets. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_self_hosted_runners"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.organization_user_blocking"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions.team_discussions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The level of permission to grant the access token to manage team discussions and related comments. Can be one of: ",l.a.createElement("code",null,"read")," or ",l.a.createElement("code",null,"write"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/apps#create-a-scoped-access-token"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"suspend-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#suspend-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Suspend an app installation"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/"},"Suspending a GitHub App installation"),'."'),l.a.createElement("p",null,"Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.suspendInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#suspend-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unsuspend-an-app-installation"},l.a.createElement(r["AnchorLink"],{to:"#unsuspend-an-app-installation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unsuspend an app installation"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/"},"Suspending a GitHub App installation"),'."'),l.a.createElement("p",null,"Removes a GitHub App installation suspension."),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.unsuspendInstallation({\n  installation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"installation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"installation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps/#unsuspend-an-app-installation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-webhook-configuration-for-an-app"},l.a.createElement(r["AnchorLink"],{to:"#update-a-webhook-configuration-for-an-app","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a webhook configuration for an app"),l.a.createElement("p",null,'Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "',l.a.createElement(r["Link"],{to:"/developers/apps/creating-a-github-app"},"Creating a GitHub App"),'."'),l.a.createElement("p",null,"You must use a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app"},"JWT")," to access this endpoint."),l.a.createElement(c["a"],{code:"octokit.apps.updateWebhookConfigForApp();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/apps#update-a-webhook-configuration-for-an-app"},"GitHub Developer Guide documentation"),".")))}},ftMj:function(e,t,a){var n=a("I+eb"),l=a("glrk"),r=a("hh1v"),c=a("UTVS"),o=a("0Dky"),i=a("m/L8"),s=a("Bs8V"),u=a("4WOD"),m=a("XGwC");function d(e,t,a){var n,o,E=arguments.length<4?e:arguments[3],p=s.f(l(e),t);if(!p){if(r(o=u(e)))return d(o,t,a,E);p=m(0)}if(c(p,"value")){if(!1===p.writable||!r(E))return!1;if(n=s.f(E,t)){if(n.get||n.set||!1===n.writable)return!1;n.value=a,i.f(E,t,n)}else i.f(E,t,m(0,a));return!0}return void 0!==p.set&&(p.set.call(E,a),!0)}var E=o((function(){var e=i.f({},"a",{configurable:!0});return!1!==Reflect.set(u(e),"a",1,e)}));n({target:"Reflect",stat:!0,forced:E},{set:d})},"g6v/":function(e,t,a){var n=a("0Dky");e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},gGGJ:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"To enable any of ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/api-previews/"},"GitHub\u2019s API Previews"),", pass the ",l.a.createElement("code",null,"previews")," option to the GitHub constructor"),l.a.createElement(c["a"],{code:'const octokit = new Octokit({\n  previews: ["mercy-preview"],\n});\n',lang:"js"}),l.a.createElement("p",null,"Previews can also be enabled for a single request by passing the ",l.a.createElement("code",null,"mediaType.preview")," option"),l.a.createElement(c["a"],{code:'const {\n  data: { topics },\n} = await octokit.repos.get({\n  owner: "octokit",\n  repo: "rest.js",\n  mediaType: {\n    previews: ["symmetra"],\n  },\n});\n',lang:"js"})))}},gOCb:function(e,t,a){var n=a("dG/n");n("replace")},gXIK:function(e,t,a){var n=a("dG/n");n("toPrimitive")},gYJb:function(e,t,a){var n=a("I+eb"),l=a("p5mE"),r=a("0GbY"),c=a("fHMY"),o=function(){var e=r("Object","freeze");return e?e(c(null)):c(null)};n({global:!0},{compositeKey:function(){return l.apply(Object,arguments).get("object",o)}})},gdVl:function(e,t,a){"use strict";var n=a("ewvW"),l=a("I8vh"),r=a("UMSQ");e.exports=function(e){var t=n(this),a=r(t.length),c=arguments.length,o=l(c>1?arguments[1]:void 0,a),i=c>2?arguments[2]:void 0,s=void 0===i?a:l(i,a);while(s>o)t[o++]=e;return t}},gg6r:function(e,t,a){"use strict";var n=a("I+eb"),l=a("HAuM"),r=a("8GlL"),c=a("5mdu"),o=a("ImZN");n({target:"Promise",stat:!0},{allSettled:function(e){var t=this,a=r.f(t),n=a.resolve,i=a.reject,s=c((function(){var a=l(t.resolve),r=[],c=0,i=1;o(e,(function(e){var l=c++,o=!1;r.push(void 0),i++,a.call(t,e).then((function(e){o||(o=!0,r[l]={status:"fulfilled",value:e},--i||n(r))}),(function(e){o||(o=!0,r[l]={status:"rejected",reason:e},--i||n(r))}))})),--i||n(r)}));return s.error&&i(s.value),a.promise}})},glrk:function(e,t,a){var n=a("hh1v");e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},gvgV:function(e,t,a){"use strict";var n=a("67WC"),l=a("TWQb").includes,r=n.aTypedArray,c=n.exportTypedArrayMethod;c("includes",(function(e){return l(r(this),e,arguments.length>1?arguments[1]:void 0)}))},hBjN:function(e,t,a){"use strict";var n=a("wE6v"),l=a("m/L8"),r=a("XGwC");e.exports=function(e,t,a){var c=n(t);c in e?l.f(e,c,r(0,a)):e[c]=a}},hByQ:function(e,t,a){"use strict";var n=a("14Sl"),l=a("glrk"),r=a("HYAF"),c=a("Ep9I"),o=a("FMNM");n("search",1,(function(e,t,a){return[function(t){var a=r(this),n=void 0==t?void 0:t[e];return void 0!==n?n.call(t,a):new RegExp(t)[e](String(a))},function(e){var n=a(t,e,this);if(n.done)return n.value;var r=l(e),i=String(this),s=r.lastIndex;c(s,0)||(r.lastIndex=0);var u=o(r,i);return c(r.lastIndex,s)||(r.lastIndex=s),null===u?-1:u.index}]}))},hDyC:function(e,t,a){"use strict";var n=a("I+eb"),l=a("DMt2").end,r=a("mgyK");n({target:"String",proto:!0,forced:r},{padEnd:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}})},hIOp:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"You can customize and extend Octokit\u2019s functionality using plugins"),l.a.createElement(c["a"],{code:'// index.js\nconst Octokit = require("@octokit/rest");\nconst MyOctokit = Octokit.plugin(\n  require("./lib/my-plugin"),\n  require("octokit-plugin-example")\n);\n\n// lib/my-plugin.js\nmodule.exports = (octokit, options = { greeting: "Hello" }) => {\n  // hook into the request lifecycle\n  octokit.hook.wrap("request", async (request, options) => {\n    const time = Date.now();\n    const response = await request(options);\n    octokit.log.info(\n      `${options.method} ${options.url} \u2013 ${response.status} in ${\n        Date.now() - time\n      }ms`\n    );\n    return response;\n  });\n\n  // add a custom method: octokit.helloWorld()\n  return {\n    helloWorld: () => console.log(`${options.greeting}, world!`),\n  };\n};\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,".plugin")," accepts a function or an array of functions."),l.a.createElement("p",null,"We recommend using ",l.a.createElement(r["AnchorLink"],{to:"#logging"},"Octokit\u2019s log methods")," to help users of your plugin with debugging."),l.a.createElement("p",null,"You can add new methods to the ",l.a.createElement("code",null,"octokit")," instance passed as the first argument to the plugin function. The 2nd argument is the options object passed to the constructor when instantiating the ",l.a.createElement("code",null,"octokit")," client."),l.a.createElement(c["a"],{code:'const octokit = new MyOctokit({ greeting: "Hola" });\noctokit.helloWorld();\n// Hola, world!\n',lang:"js"})))}},hMMk:function(e,t,a){var n=a("dOgj");n("Uint16",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},hQjr:function(e,t,a){},hcok:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("SEBh"),s=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{difference:function(e){var t=c(this),a=new(i(t,r("Set")))(t),n=o(a["delete"]);return s(e,(function(e){n.call(a,e)})),a}})},hh1v:function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},i4U9:function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},i8i4:function(e,t,a){"use strict";function n(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}}n(),e.exports=a("yl30")},iIM6:function(e,t,a){"use strict";var n=a("g6v/"),l=a("RNIs"),r=a("ewvW"),c=a("UMSQ"),o=a("m/L8").f;n&&!("lastIndex"in[])&&(o(Array.prototype,"lastIndex",{configurable:!0,get:function(){var e=r(this),t=c(e.length);return 0==t?0:t-1}}),l("lastIndex"))},iSVu:function(e,t,a){var n=a("xs3f"),l=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return l.call(e)}),e.exports=n.inspectSource},ihrJ:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ImZN"),r=a("HAuM");n({target:"Map",stat:!0},{groupBy:function(e,t){var a=new this;r(t);var n=r(a.has),c=r(a.get),o=r(a.set);return l(e,(function(e){var l=t(e);n.call(a,l)?c.call(a,l).push(e):o.call(a,l,[e])})),a}})},ilnZ:function(e,t,a){var n=a("dOgj");n("Uint8",(function(e){return function(t,a,n){return e(this,t,a,n)}}),!0)},inlA:function(e,t,a){"use strict";var n=a("I+eb"),l=a("Bs8V").f,r=a("UMSQ"),c=a("WjRb"),o=a("HYAF"),i=a("qxPZ"),s=a("xDBR"),u="".endsWith,m=Math.min,d=i("endsWith"),E=!s&&!d&&!!function(){var e=l(String.prototype,"endsWith");return e&&!e.writable}();n({target:"String",proto:!0,forced:!E&&!d},{endsWith:function(e){var t=String(o(this));c(e);var a=arguments.length>1?arguments[1]:void 0,n=r(t.length),l=void 0===a?n:m(r(a),n),i=String(e);return u?u.call(t,i,l):t.slice(l-i.length,l)===i}})},iqWW:function(e,t,a){"use strict";var n=a("ZUd8").charAt;e.exports=function(e,t,a){return t+(a?n(e,t).length:1)}},iqeF:function(e,t,a){var n=a("2oRo"),l=a("0Dky"),r=a("HH4o"),c=a("67WC").NATIVE_ARRAY_BUFFER_VIEWS,o=n.ArrayBuffer,i=n.Int8Array;e.exports=!c||!l((function(){i(1)}))||!l((function(){new i(-1)}))||!r((function(e){new i,new i(null),new i(1.5),new i(e)}),!0)||l((function(){return 1!==new i(new o(2),1,void 0).length}))},iwkZ:function(e,t,a){var n=a("dOgj");n("Int16",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},"j+VE":function(e,t,a){a("bFeb")},jp8u:function(e,t,a){},jzWn:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"All endpoint methods starting with ",l.a.createElement("code",null,".list*")," do not return all results at once but instead return the first 30 items by default, see also ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#pagination"},"GitHub\u2019s REST API pagination documentation"),"."),l.a.createElement("p",null,"To automatically receive all results across all pages, you can use the ",l.a.createElement("code",null,"octokit.paginate()")," method:"),l.a.createElement(c["a"],{code:'octokit\n  .paginate("GET /repos/{owner}/{repo}/issues", {\n    owner: "octokit",\n    repo: "rest.js",\n  })\n  .then((issues) => {\n    // issues is an array of all issue objects. It is not wrapped in a { data, headers, status, url } object\n    // like results from `octokit.request()` or any of the endpoint methods such as `octokit.issues.listForRepo()`\n  });\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,"octokit.paginate()")," accepts the same options as ",l.a.createElement(r["AnchorLink"],{to:"#custom-requests"},l.a.createElement("code",null,"octokit.request()")),". You can optionally pass an additional function to map the results from each response. The map must return a new value, usually an array with mapped data."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," the map function is called with the ",l.a.createElement("code",null,"{"," data, headers, status, url ","}")," response object. The ",l.a.createElement("code",null,"data")," property is guaranteed to be an array of the result items, even for list endpoints that respond with an object instead of an array, such as the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/reference/search/#example"},"search endpoints"),"."),l.a.createElement(c["a"],{code:'octokit\n  .paginate(\n    "GET /repos/{owner}/{repo}/issues",\n    { owner: "octokit", repo: "rest.js" },\n    (response) => response.data.map((issue) => issue.title)\n  )\n  .then((issueTitles) => {\n    // issueTitles is now an array with the titles only\n  });\n',lang:"js"}),l.a.createElement("p",null,"To stop paginating early, you can call the ",l.a.createElement("code",null,"done()")," function passed as 2nd argument to the response map function. Note that you still have to return the value you want to map the response to, otherwise the last response will be mapped to undefined."),l.a.createElement(c["a"],{code:'octokit.paginate("GET /organizations", (response, done) => {\n  if (response.data.find((issues) => issue.body.includes("something"))) {\n    done();\n  }\n  return response.data;\n});\n',lang:"js"}),l.a.createElement("p",null,"To paginate responses for one of the registered endpoint methods such as ",l.a.createElement("code",null,"octokit.issues.listForRepo()")," you can pass the method directly as first argument to ",l.a.createElement("code",null,"octokit.paginate"),":"),l.a.createElement(c["a"],{code:'octokit\n  .paginate(octokit.issues.listForRepo, {\n    owner: "octokit",\n    repo: "rest.js",\n  })\n  .then((issues) => {\n    // issues is an array of all issue objects\n  });\n',lang:"js"}),l.a.createElement("p",null,"If your runtime environment supports async iterators (such as most modern browsers and Node 10+), you can iterate through each response"),l.a.createElement(c["a"],{code:'for await (const response of octokit.paginate.iterator(\n  octokit.issues.listForRepo,\n  {\n    owner: "octokit",\n    repo: "rest.js",\n  }\n)) {\n  // do whatever you want with each response, break out of the loop, etc.\n}\n',lang:"js"}),l.a.createElement("p",null,l.a.createElement("code",null,"octokit.paginate.iterator()")," accepts the same options as ",l.a.createElement("code",null,"octokit.paginate()"),".")))}},k4lj:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"create-a-blob"},l.a.createElement(r["AnchorLink"],{to:"#create-a-blob","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a blob"),l.a.createElement(c["a"],{code:"octokit.git.createBlob({\n  owner,\n  repo,\n  content,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The new blob's content."))),l.a.createElement("tr",null,l.a.createElement("td",null,"encoding"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The encoding used for ",l.a.createElement("code",null,"content"),". Currently, ",l.a.createElement("code",null,'"utf-8"')," and ",l.a.createElement("code",null,'"base64"')," are supported."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-blob"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#create-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a commit"),l.a.createElement("p",null,"Creates a new Git ",l.a.createElement(r["Link"],{to:"https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects"},"commit object"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.createCommit({\n  owner,\n  repo,\n  message,\n  tree,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit message"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the tree object this commit points to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"parents"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Information about the author of the commit. By default, the ",l.a.createElement("code",null,"author")," will be the authenticated user and the current date. See the ",l.a.createElement("code",null,"author")," and ",l.a.createElement("code",null,"committer")," object below for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates when this commit was authored (or committed). This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Information about the person who is making the commit. By default, ",l.a.createElement("code",null,"committer")," will use the information set in ",l.a.createElement("code",null,"author"),". See the ",l.a.createElement("code",null,"author")," and ",l.a.createElement("code",null,"committer")," object below for details."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates when this commit was authored (or committed). This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"signature"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/Pretty_Good_Privacy"},"PGP signature")," of the commit. GitHub adds the signature to the ",l.a.createElement("code",null,"gpgsig")," header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a ",l.a.createElement("code",null,"signature")," parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to ",l.a.createElement(r["Link"],{to:"https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work"},"use the command line")," to create signed commits."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#create-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a reference"),l.a.createElement("p",null,"Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches."),l.a.createElement(c["a"],{code:"octokit.git.createRef({\n  owner,\n  repo,\n  ref,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the fully qualified reference (ie: ",l.a.createElement("code",null,"refs/heads/master"),"). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 value for this reference."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-tag-object"},l.a.createElement(r["AnchorLink"],{to:"#create-a-tag-object","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a tag object"),l.a.createElement("p",null,"Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-reference"},"create")," the ",l.a.createElement("code",null,"refs/tags/[tag]")," reference. If you want to create a lightweight tag, you only have to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-reference"},"create")," the tag reference - this call would be unnecessary."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.createTag({\n  owner,\n  repo,\n  tag,\n  message,\n  object,\n  type,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,'The tag\'s name. This is typically a version (e.g., "v0.0.1").'))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The tag message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"object"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA of the git object this is tagging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of the object we're tagging. Normally this is a ",l.a.createElement("code",null,"commit")," but it can also be a ",l.a.createElement("code",null,"tree")," or a ",l.a.createElement("code",null,"blob"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An object with information about the individual creating the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author of the tag"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author of the tag"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tagger.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"When this object was tagged. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-tag-object"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-tree"},l.a.createElement(r["AnchorLink"],{to:"#create-a-tree","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a tree"),l.a.createElement("p",null,"The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure."),l.a.createElement("p",null,'If you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-commit"},"Create a commit"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#update-a-reference"},"Update a reference"),'."'),l.a.createElement(c["a"],{code:"octokit.git.createTree({\n  owner,\n  repo,\n  tree,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tree"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Objects (of ",l.a.createElement("code",null,"path"),", ",l.a.createElement("code",null,"mode"),", ",l.a.createElement("code",null,"type"),", and ",l.a.createElement("code",null,"sha"),") specifying a tree structure."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The file referenced in the tree."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].mode"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The file mode; one of ",l.a.createElement("code",null,"100644")," for file (blob), ",l.a.createElement("code",null,"100755")," for executable (blob), ",l.a.createElement("code",null,"040000")," for subdirectory (tree), ",l.a.createElement("code",null,"160000")," for submodule (commit), or ",l.a.createElement("code",null,"120000")," for a blob that specifies the path of a symlink."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"blob"),", ",l.a.createElement("code",null,"tree"),", or ",l.a.createElement("code",null,"commit"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 checksum ID of the object in the tree. Also called ",l.a.createElement("code",null,"tree.sha"),". If the value is ",l.a.createElement("code",null,"null")," then the file will be deleted."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Use either ",l.a.createElement("code",null,"tree.sha")," or ",l.a.createElement("code",null,"content")," to specify the contents of the entry. Using both ",l.a.createElement("code",null,"tree.sha")," and ",l.a.createElement("code",null,"content")," will return an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tree[].content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or ",l.a.createElement("code",null,"tree.sha"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Use either ",l.a.createElement("code",null,"tree.sha")," or ",l.a.createElement("code",null,"content")," to specify the contents of the entry. Using both ",l.a.createElement("code",null,"tree.sha")," and ",l.a.createElement("code",null,"content")," will return an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"base_tree"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by ",l.a.createElement("code",null,"base_tree")," and entries defined in the ",l.a.createElement("code",null,"tree")," parameter. Entries defined in the ",l.a.createElement("code",null,"tree")," parameter will overwrite items from ",l.a.createElement("code",null,"base_tree")," with the same ",l.a.createElement("code",null,"path"),". If you're creating new changes on a branch, then normally you'd set ",l.a.createElement("code",null,"base_tree")," to the SHA1 of the Git tree object of the current latest commit on the branch you're working on. If not provided, GitHub will create a new Git tree object from only the entries defined in the ",l.a.createElement("code",null,"tree")," parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the ",l.a.createElement("code",null,"tree")," parameter will be listed as deleted by the new commit."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#create-a-tree"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a reference"),l.a.createElement(c["a"],{code:"octokit.git.deleteRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#delete-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-blob"},l.a.createElement(r["AnchorLink"],{to:"#get-a-blob","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a blob"),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"content")," in the response will always be Base64 encoded."),l.a.createElement("p",null,l.a.createElement("em",null,"Note"),": This API supports blobs up to 100 megabytes in size."),l.a.createElement(c["a"],{code:"octokit.git.getBlob({\n  owner,\n  repo,\n  file_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"file_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-blob"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#get-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a commit"),l.a.createElement("p",null,"Gets a Git ",l.a.createElement(r["Link"],{to:"https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects"},"commit object"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.getCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#get-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a reference"),l.a.createElement("p",null,"Returns a single reference from your Git database. The ",l.a.createElement("code",null,":ref")," in the URL must be formatted as ",l.a.createElement("code",null,"heads/<branch name>")," for branches and ",l.a.createElement("code",null,"tags/<tag name>")," for tags. If the ",l.a.createElement("code",null,":ref")," doesn't match an existing ref, a ",l.a.createElement("code",null,"404")," is returned."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You need to explicitly ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-pull-request"},"request a pull request"),' to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"},"Checking mergeability of pull requests"),'".'),l.a.createElement(c["a"],{code:"octokit.git.getRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-tag"},l.a.createElement(r["AnchorLink"],{to:"#get-a-tag","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a tag"),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.git.getTag({\n  owner,\n  repo,\n  tag_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-tag"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-tree"},l.a.createElement(r["AnchorLink"],{to:"#get-a-tree","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a tree"),l.a.createElement("p",null,"Returns a single tree using the SHA1 value for that tree."),l.a.createElement("p",null,"If ",l.a.createElement("code",null,"truncated")," is ",l.a.createElement("code",null,"true")," in the response then the number of items in the ",l.a.createElement("code",null,"tree")," array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time."),l.a.createElement(c["a"],{code:"octokit.git.getTree({\n  owner,\n  repo,\n  tree_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tree_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"recursive"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in ",l.a.createElement("code",null,":tree_sha"),". For example, setting ",l.a.createElement("code",null,"recursive")," to any of the following will enable returning objects or subtrees: ",l.a.createElement("code",null,"0"),", ",l.a.createElement("code",null,"1"),", ",l.a.createElement("code",null,'"true"'),", and ",l.a.createElement("code",null,'"false"'),". Omit this parameter to prevent recursively returning objects or subtrees."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-tree"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-matching-references"},l.a.createElement(r["AnchorLink"],{to:"#list-matching-references","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List matching references"),l.a.createElement("p",null,"Returns an array of references from your Git database that match the supplied name. The ",l.a.createElement("code",null,":ref")," in the URL must be formatted as ",l.a.createElement("code",null,"heads/<branch name>")," for branches and ",l.a.createElement("code",null,"tags/<tag name>")," for tags. If the ",l.a.createElement("code",null,":ref")," doesn't exist in the repository, but existing refs start with ",l.a.createElement("code",null,":ref"),", they will be returned as an array."),l.a.createElement("p",null,"When you use this endpoint without providing a ",l.a.createElement("code",null,":ref"),", it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just ",l.a.createElement("code",null,"heads")," and ",l.a.createElement("code",null,"tags"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," You need to explicitly ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#get-a-pull-request"},"request a pull request"),' to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"},"Checking mergeability of pull requests"),'".'),l.a.createElement("p",null,"If you request matching references for a branch named ",l.a.createElement("code",null,"feature")," but the branch ",l.a.createElement("code",null,"feature")," doesn't exist, the response can still include other matching head refs that start with the word ",l.a.createElement("code",null,"feature"),", such as ",l.a.createElement("code",null,"featureA")," and ",l.a.createElement("code",null,"featureB"),"."),l.a.createElement(c["a"],{code:"octokit.git.listMatchingRefs({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#list-matching-references"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#update-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a reference"),l.a.createElement(c["a"],{code:"octokit.git.updateRef({\n  owner,\n  repo,\n  ref,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA1 value to set this reference to"))),l.a.createElement("tr",null,l.a.createElement("td",null,"force"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to ",l.a.createElement("code",null,"false")," will make sure you're not overwriting work."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#update-a-reference"},"GitHub Developer Guide documentation"),".")))}},kCkZ:function(e,t,a){"use strict";var n=a("I+eb"),l=a("8GlL"),r=a("5mdu");n({target:"Promise",stat:!0},{try:function(e){var t=l.f(this),a=r(e);return(a.error?t.reject:t.resolve)(a.value),t.promise}})},kERV:function(e,t,a){},kOOl:function(e,t){var a=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++a+n).toString(36)}},kRJp:function(e,t,a){var n=a("g6v/"),l=a("m/L8"),r=a("XGwC");e.exports=n?function(e,t,a){return l.f(e,t,r(1,a))}:function(e,t,a){return e[t]=a,e}},kiDB:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"To send custom requests you can use the lower-level ",l.a.createElement("code",null,"octokit.request()")," method"),l.a.createElement(c["a"],{code:'octokit.request("GET /");\n',lang:"js"}),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"baseUrl"),", headers and other defaults are already set. For more information on the ",l.a.createElement("code",null,"octokit.request()")," API see ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/request.js/"},l.a.createElement("code",null,"octokit/request.js"))),l.a.createElement("p",null,"All the endpoint methods such as ",l.a.createElement("code",null,"octokit.repos.get()")," are aliases of ",l.a.createElement("code",null,"octokit.request()")," with pre-bound default options. So you can use the ",l.a.createElement("code",null,"@octokit/request")," API to get the default options or get generic request option to use with your preferred request library."),l.a.createElement(c["a"],{code:'const defaultOptions = octokit.repos.get.endpoint.DEFAULTS;\nconst requestOptions = octokit.repos.get.endpoint({\n  owner: "octokit",\n  repo: "rest.js",\n});\n',lang:"js"}),l.a.createElement("p",null,"Note that authentication is not applied when retrieving request options from the ",l.a.createElement("code",null,"*.endpoint")," APIs.")))}},kmMV:function(e,t,a){"use strict";var n=a("rW0t"),l=a("n3/R"),r=RegExp.prototype.exec,c=String.prototype.replace,o=r,i=function(){var e=/a/,t=/b*/g;return r.call(e,"a"),r.call(t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),s=l.UNSUPPORTED_Y||l.BROKEN_CARET,u=void 0!==/()??/.exec("")[1],m=i||u||s;m&&(o=function(e){var t,a,l,o,m=this,d=s&&m.sticky,E=n.call(m),p=m.source,h=0,g=e;return d&&(E=E.replace("y",""),-1===E.indexOf("g")&&(E+="g"),g=String(e).slice(m.lastIndex),m.lastIndex>0&&(!m.multiline||m.multiline&&"\n"!==e[m.lastIndex-1])&&(p="(?: "+p+")",g=" "+g,h++),a=new RegExp("^(?:"+p+")",E)),u&&(a=new RegExp("^"+p+"$(?!\\s)",E)),i&&(t=m.lastIndex),l=r.call(d?a:m,g),d?l?(l.input=l.input.slice(h),l[0]=l[0].slice(h),l.index=m.lastIndex,m.lastIndex+=l[0].length):m.lastIndex=0:i&&l&&(m.lastIndex=m.global?l.index+l[0].length:t),u&&l&&l.length>1&&c.call(l[0],a,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(l[o]=void 0)})),l}),e.exports=o},"l/vG":function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("A2ZE"),s=a("SEBh"),u=a("Sssf"),m=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{filter:function(e){var t=c(this),a=u(t),n=i(e,arguments.length>1?arguments[1]:void 0,3),l=new(s(t,r("Map"))),d=o(l.set);return m(a,(function(e,a){n(a,e,t)&&d.call(l,e,a)}),void 0,!0,!0),l}})},lEou:function(e,t,a){var n=a("dG/n");n("toStringTag")},lMq5:function(e,t,a){var n=a("0Dky"),l=/#|\.prototype\./,r=function(e,t){var a=o[c(e)];return a==s||a!=i&&("function"==typeof t?n(t):!!t)},c=r.normalize=function(e){return String(e).replace(l,".").toLowerCase()},o=r.data={},i=r.NATIVE="N",s=r.POLYFILL="P";e.exports=r},lehK:function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{iaddh:function(e,t,a,n){var l=e>>>0,r=t>>>0,c=a>>>0;return r+(n>>>0)+((l&c|(l|c)&~(l+c>>>0))>>>31)|0}})},lmH4:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("mh/w"),s=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{isSubsetOf:function(e){var t=i(this),a=c(e),n=a.has;return"function"!=typeof n&&(a=new(r("Set"))(e),n=o(a.has)),!s(t,(function(e){if(!1===n.call(a,e))return s.stop()}),void 0,!1,!0).stopped}})},"m/L8":function(e,t,a){var n=a("g6v/"),l=a("DPsx"),r=a("glrk"),c=a("wE6v"),o=Object.defineProperty;t.f=n?o:function(e,t,a){if(r(e),t=c(t,!0),r(a),l)try{return o(e,t,a)}catch(n){}if("get"in a||"set"in a)throw TypeError("Accessors not supported");return"value"in a&&(e[t]=a.value),e}},m0LI:function(e,t){function a(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}e.exports=a},m92n:function(e,t,a){var n=a("glrk");e.exports=function(e,t,a,l){try{return l?t(n(a)[0],a[1]):t(a)}catch(c){var r=e["return"];throw void 0!==r&&n(r.call(e)),c}}},mAF5:function(e,t,a){},mEd0:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"To enable any of ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/api-previews/"},"GitHub\u2019s API Previews"),", pass the ",l.a.createElement("code",null,"previews")," option to the GitHub constructor"),l.a.createElement(c["a"],{code:'const octokit = new Octokit({\n  previews: ["mercy-preview"],\n});\n',lang:"js"}),l.a.createElement("p",null,"Previews can also be enabled for a single request by passing the ",l.a.createElement("code",null,"mediaType.preview")," option"),l.a.createElement(c["a"],{code:'const {\n  data: { topics },\n} = await octokit.repos.get({\n  owner: "octokit",\n  repo: "rest.js",\n  mediaType: {\n    previews: ["symmetra"],\n  },\n});\n',lang:"js"})))}},mGGf:function(e,t,a){"use strict";a("4mDm");var n=a("I+eb"),l=a("0GbY"),r=a("DTth"),c=a("busE"),o=a("4syw"),i=a("1E5z"),s=a("ntOU"),u=a("afO8"),m=a("GarU"),d=a("UTVS"),E=a("A2ZE"),p=a("9d/t"),h=a("glrk"),g=a("hh1v"),b=a("fHMY"),f=a("XGwC"),y=a("mh/w"),k=a("NaFW"),v=a("tiKp"),w=l("fetch"),L=l("Headers"),A=v("iterator"),x="URLSearchParams",_=x+"Iterator",G=u.set,P=u.getterFor(x),I=u.getterFor(_),S=/\+/g,T=Array(4),N=function(e){return T[e-1]||(T[e-1]=RegExp("((?:%[\\da-f]{2}){"+e+"})","gi"))},j=function(e){try{return decodeURIComponent(e)}catch(t){return e}},H=function(e){var t=e.replace(S," "),a=4;try{return decodeURIComponent(t)}catch(n){while(a)t=t.replace(N(a--),j);return t}},q=/[!'()~]|%20/g,D={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},z=function(e){return D[e]},C=function(e){return encodeURIComponent(e).replace(q,z)},O=function(e,t){if(t){var a,n,l=t.split("&"),r=0;while(r<l.length)a=l[r++],a.length&&(n=a.split("="),e.push({key:H(n.shift()),value:H(n.join("="))}))}},R=function(e){this.entries.length=0,O(this.entries,e)},F=function(e,t){if(e<t)throw TypeError("Not enough arguments")},U=s((function(e,t){G(this,{type:_,iterator:y(P(e).entries),kind:t})}),"Iterator",(function(){var e=I(this),t=e.kind,a=e.iterator.next(),n=a.value;return a.done||(a.value="keys"===t?n.key:"values"===t?n.value:[n.key,n.value]),a})),M=function(){m(this,M,x);var e,t,a,n,l,r,c,o,i,s=arguments.length>0?arguments[0]:void 0,u=this,E=[];if(G(u,{type:x,entries:E,updateURL:function(){},updateSearchParams:R}),void 0!==s)if(g(s))if(e=k(s),"function"===typeof e){t=e.call(s),a=t.next;while(!(n=a.call(t)).done){if(l=y(h(n.value)),r=l.next,(c=r.call(l)).done||(o=r.call(l)).done||!r.call(l).done)throw TypeError("Expected sequence with length 2");E.push({key:c.value+"",value:o.value+""})}}else for(i in s)d(s,i)&&E.push({key:i,value:s[i]+""});else O(E,"string"===typeof s?"?"===s.charAt(0)?s.slice(1):s:s+"")},Y=M.prototype;o(Y,{append:function(e,t){F(arguments.length,2);var a=P(this);a.entries.push({key:e+"",value:t+""}),a.updateURL()},delete:function(e){F(arguments.length,1);var t=P(this),a=t.entries,n=e+"",l=0;while(l<a.length)a[l].key===n?a.splice(l,1):l++;t.updateURL()},get:function(e){F(arguments.length,1);for(var t=P(this).entries,a=e+"",n=0;n<t.length;n++)if(t[n].key===a)return t[n].value;return null},getAll:function(e){F(arguments.length,1);for(var t=P(this).entries,a=e+"",n=[],l=0;l<t.length;l++)t[l].key===a&&n.push(t[l].value);return n},has:function(e){F(arguments.length,1);var t=P(this).entries,a=e+"",n=0;while(n<t.length)if(t[n++].key===a)return!0;return!1},set:function(e,t){F(arguments.length,1);for(var a,n=P(this),l=n.entries,r=!1,c=e+"",o=t+"",i=0;i<l.length;i++)a=l[i],a.key===c&&(r?l.splice(i--,1):(r=!0,a.value=o));r||l.push({key:c,value:o}),n.updateURL()},sort:function(){var e,t,a,n=P(this),l=n.entries,r=l.slice();for(l.length=0,a=0;a<r.length;a++){for(e=r[a],t=0;t<a;t++)if(l[t].key>e.key){l.splice(t,0,e);break}t===a&&l.push(e)}n.updateURL()},forEach:function(e){var t,a=P(this).entries,n=E(e,arguments.length>1?arguments[1]:void 0,3),l=0;while(l<a.length)t=a[l++],n(t.value,t.key,this)},keys:function(){return new U(this,"keys")},values:function(){return new U(this,"values")},entries:function(){return new U(this,"entries")}},{enumerable:!0}),c(Y,A,Y.entries),c(Y,"toString",(function(){var e,t=P(this).entries,a=[],n=0;while(n<t.length)e=t[n++],a.push(C(e.key)+"="+C(e.value));return a.join("&")}),{enumerable:!0}),i(M,x),n({global:!0,forced:!r},{URLSearchParams:M}),r||"function"!=typeof w||"function"!=typeof L||n({global:!0,enumerable:!0,forced:!0},{fetch:function(e){var t,a,n,l=[e];return arguments.length>1&&(t=arguments[1],g(t)&&(a=t.body,p(a)===x&&(n=t.headers?new L(t.headers):new L,n.has("content-type")||n.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),t=b(t,{body:f(0,String(a)),headers:f(0,n)}))),l.push(t)),w.apply(this,l)}}),e.exports={URLSearchParams:M,getState:P}},ma9I:function(e,t,a){"use strict";var n=a("I+eb"),l=a("0Dky"),r=a("6LWA"),c=a("hh1v"),o=a("ewvW"),i=a("UMSQ"),s=a("hBjN"),u=a("ZfDv"),m=a("Hd5f"),d=a("tiKp"),E=a("LQDL"),p=d("isConcatSpreadable"),h=9007199254740991,g="Maximum allowed index exceeded",b=E>=51||!l((function(){var e=[];return e[p]=!1,e.concat()[0]!==e})),f=m("concat"),y=function(e){if(!c(e))return!1;var t=e[p];return void 0!==t?!!t:r(e)},k=!b||!f;n({target:"Array",proto:!0,forced:k},{concat:function(e){var t,a,n,l,r,c=o(this),m=u(c,0),d=0;for(t=-1,n=arguments.length;t<n;t++)if(r=-1===t?c:arguments[t],y(r)){if(l=i(r.length),d+l>h)throw TypeError(g);for(a=0;a<l;a++,d++)a in r&&s(m,d,r[a])}else{if(d>=h)throw TypeError(g);s(m,d++,r)}return m.length=d,m}})},mgyK:function(e,t,a){var n=a("NC/Y");e.exports=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(n)},"mh/w":function(e,t,a){var n=a("glrk"),l=a("NaFW");e.exports=function(e){var t=l(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},"n3/R":function(e,t,a){"use strict";var n=a("0Dky");function l(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=n((function(){var e=l("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=n((function(){var e=l("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},n5b4:function(e,t,a){var n=a("I+eb"),l=a("2oRo"),r=a("tXUg"),c=a("xrYK"),o=l.process,i="process"==c(o);n({global:!0,enumerable:!0,noTargetGet:!0},{queueMicrotask:function(e){var t=i&&o.domain;r(t?t.bind(e):e)}})},n5pg:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("Sssf"),i=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{findKey:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return i(a,(function(e,a){if(n(a,e,t))return i.stop(e)}),void 0,!0,!0).result}})},nIe3:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("0GbY"),c=a("glrk"),o=a("HAuM"),i=a("A2ZE"),s=a("SEBh"),u=a("Sssf"),m=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{mapKeys:function(e){var t=c(this),a=u(t),n=i(e,arguments.length>1?arguments[1]:void 0,3),l=new(s(t,r("Map"))),d=o(l.set);return m(a,(function(e,a){d.call(l,n(a,e,t),a)}),void 0,!0,!0),l}})},nLCz:function(e,t,a){"use strict";function n(){var e=l(a("q1tI"));return n=function(){return e},e}function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var r=n()["default"].createContext({config:{mode:"doc",title:"",navs:{},menus:{},locales:[],repository:{branch:"master"},theme:{}},meta:{title:""},menu:[],nav:[],base:"",routes:[]});t["default"]=r},nWog:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("TN5+");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("br",null),l.a.createElement(c["a"],{type:"info"},"Synchronize: ",l.a.createElement(r["Link"],{to:"https://octokit.github.io/rest.js/v18/"},"https://octokit.github.io/rest.js/v18/"),". At the same time, the catalog has been adjusted for easy reference."),l.a.createElement("h2",{id:"document-directory"},l.a.createElement(r["AnchorLink"],{to:"#document-directory","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Document directory"),l.a.createElement("p",null,l.a.createElement(l.a.Fragment,{children:a("8Cms").default()}))))}},ntOU:function(e,t,a){"use strict";var n=a("rpNk").IteratorPrototype,l=a("fHMY"),r=a("XGwC"),c=a("1E5z"),o=a("P4y1"),i=function(){return this};e.exports=function(e,t,a){var s=t+" Iterator";return e.prototype=l(n,{next:r(1,a)}),c(e,s,!1,!0),o[s]=i,e}},ny8l:function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{signbit:function(e){return(e=+e)==e&&0==e?1/e==-1/0:e<0}})},o0kM:function(e,t,a){"use strict";var n=a("J4zp");function l(){var e=c(a("q1tI"));return l=function(){return e},e}function r(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}function c(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if(Object.prototype.hasOwnProperty.call(e,l)){var c=n?Object.getOwnPropertyDescriptor(e,l):null;c&&(c.get||c.set)?Object.defineProperty(a,l,c):a[l]=e[l]}return a["default"]=e,t&&t.set(e,a),a}function o(e,t){return d(e)||m(e,t)||s(e,t)||i()}function i(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){if(e){if("string"===typeof e)return u(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function m(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function d(e){if(Array.isArray(e))return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var E,p="https://riddle.alibaba-inc.com/riddles/define",h=function(){var e=(0,l().useState)(Boolean(E)),t=o(e,2),a=t[0],n=t[1];return(0,l().useEffect)((function(){if(void 0===E){var e=document.createElement("img");setTimeout((function(){e.src="",e.remove()}),200),e.onload=function(){E=!0,n(!0),e.remove()},e.src="https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/rmsportal/RKuAiriJqrUhyqW.png"}}),[]),a};function g(e){var t,a=e.dependencies,n=e.sources._.tsx||e.sources._.jsx;return n=n.replace(/^/,"import ReactDOM from 'react-dom@".concat((null===(t=a.react)||void 0===t?void 0:t.version)||"latest","';\n")).replace("export default","const DumiDemo =").concat("\nReactDOM.render(<DumiDemo />, mountNode);"),n=n.replace(/(from ')((?:@[^/'"]+)?[^/'"]+)/g,(function(e,t,n){var l="".concat(t).concat(n);return a[n]&&(l+="@".concat(a[n].version)),l})),n}var b=function(e){var t=(0,l().useState)(),a=o(t,2),r=a[0],c=a[1],i=h();return(0,l().useEffect)((function(){if(e&&i&&1===Object.keys(e.sources).length){var t=document.createElement("form"),a=document.createElement("input");return t.method="POST",t.target="_blank",t.style.display="none",t.action=p,t.appendChild(a),t.setAttribute("data-demo",e.title||""),a.name="data",a.value=JSON.stringify({title:e.titlle,js:g(e),css:Object.entries(e.dependencies).filter((function(e){var t=n(e,2),a=t[1];return a.css})).map((function(e){var t=n(e,2),a=t[0],l=t[1],r=l.version,c=l.css;return"@import '~".concat(c.replace(new RegExp("^(".concat(a,")")),"$1@".concat(r)),"';")})).join("\n")}),document.body.appendChild(t),c((function(){return function(){return t.submit()}})),function(){return t.remove()}}}),[e,i]),r};t["default"]=b},o0o1:function(e,t,a){e.exports=a("VWci")},"oHi+":function(e,t,a){var n=a("ewvW"),l=a("UMSQ"),r=a("NaFW"),c=a("6VoE"),o=a("A2ZE"),i=a("67WC").aTypedArrayConstructor;e.exports=function(e){var t,a,s,u,m,d,E=n(e),p=arguments.length,h=p>1?arguments[1]:void 0,g=void 0!==h,b=r(E);if(void 0!=b&&!c(b)){m=b.call(E),d=m.next,E=[];while(!(u=d.call(m)).done)E.push(u.value)}for(g&&p>2&&(h=o(h,arguments[2],2)),a=l(E.length),s=new(i(this))(a),t=0;a>t;t++)s[t]=g?h(E[t],t):E[t];return s}},ofBz:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ntOU"),r=a("HYAF"),c=a("UMSQ"),o=a("HAuM"),i=a("glrk"),s=a("xrYK"),u=a("ROdP"),m=a("rW0t"),d=a("kRJp"),E=a("0Dky"),p=a("tiKp"),h=a("SEBh"),g=a("iqWW"),b=a("afO8"),f=a("xDBR"),y=p("matchAll"),k="RegExp String",v=k+" Iterator",w=b.set,L=b.getterFor(v),A=RegExp.prototype,x=A.exec,_="".matchAll,G=!!_&&!E((function(){"a".matchAll(/./)})),P=function(e,t){var a,n=e.exec;if("function"==typeof n){if(a=n.call(e,t),"object"!=typeof a)throw TypeError("Incorrect exec result");return a}return x.call(e,t)},I=l((function(e,t,a,n){w(this,{type:v,regexp:e,string:t,global:a,unicode:n,done:!1})}),k,(function(){var e=L(this);if(e.done)return{value:void 0,done:!0};var t=e.regexp,a=e.string,n=P(t,a);return null===n?{value:void 0,done:e.done=!0}:e.global?(""==String(n[0])&&(t.lastIndex=g(a,c(t.lastIndex),e.unicode)),{value:n,done:!1}):(e.done=!0,{value:n,done:!1})})),S=function(e){var t,a,n,l,r,o,s=i(this),u=String(e);return t=h(s,RegExp),a=s.flags,void 0===a&&s instanceof RegExp&&!("flags"in A)&&(a=m.call(s)),n=void 0===a?"":String(a),l=new t(t===RegExp?s.source:s,n),r=!!~n.indexOf("g"),o=!!~n.indexOf("u"),l.lastIndex=c(s.lastIndex),new I(l,u,r,o)};n({target:"String",proto:!0,forced:G},{matchAll:function(e){var t,a,n,l,c=r(this);if(null!=e){if(u(e)&&(t=String(r("flags"in A?e.flags:m.call(e))),!~t.indexOf("g")))throw TypeError("`.matchAll` does not allow non-global regexes");if(G)return _.apply(c,arguments);if(n=e[y],void 0===n&&f&&"RegExp"==s(e)&&(n=S),null!=n)return o(n).call(e,c)}else if(G)return _.apply(c,arguments);return a=String(c),l=new RegExp(e,"g"),f?S.call(l,a):l[y](a)}}),f||y in A||d(A,y,S)},ogwx:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return r}));var n=a("YS25"),l={basename:"/octokit-rest/"};window.routerBase&&(l.basename=window.routerBase);var r=Object(n["a"])(l),c=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return e||(r=Object(n["a"])(l)),r}},or9q:function(e,t,a){"use strict";var n=a("6LWA"),l=a("UMSQ"),r=a("A2ZE"),c=function(e,t,a,o,i,s,u,m){var d,E=i,p=0,h=!!u&&r(u,m,3);while(p<o){if(p in a){if(d=h?h(a[p],p,t):a[p],s>0&&n(d))E=c(e,t,d,l(d.length),E,s-1)-1;else{if(E>=9007199254740991)throw TypeError("Exceed the acceptable array length");e[E]=d}E++}p++}return E};e.exports=c},p532:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("/qmn"),c=a("0Dky"),o=a("0GbY"),i=a("SEBh"),s=a("zfnd"),u=a("busE"),m=!!r&&c((function(){r.prototype["finally"].call({then:function(){}},(function(){}))}));n({target:"Promise",proto:!0,real:!0,forced:m},{finally:function(e){var t=i(this,o("Promise")),a="function"==typeof e;return this.then(a?function(a){return s(t,e()).then((function(){return a}))}:e,a?function(a){return s(t,e()).then((function(){throw a}))}:e)}}),l||"function"!=typeof r||r.prototype["finally"]||u(r.prototype,"finally",o("Promise").prototype["finally"])},p5mE:function(e,t,a){var n=a("Tskq"),l=a("ENF9"),r=a("fHMY"),c=a("hh1v"),o=function(){this.object=null,this.symbol=null,this.primitives=null,this.objectsByIndex=r(null)};o.prototype.get=function(e,t){return this[e]||(this[e]=t())},o.prototype.next=function(e,t,a){var r=a?this.objectsByIndex[e]||(this.objectsByIndex[e]=new l):this.primitives||(this.primitives=new n),c=r.get(t);return c||r.set(t,c=new o),c};var i=new o;e.exports=function(){var e,t,a=i,n=arguments.length;for(e=0;e<n;e++)c(t=arguments[e])&&(a=a.next(e,t,!0));if(this===Object&&a===i)throw TypeError("Composite keys must contain a non-primitive component");for(e=0;e<n;e++)c(t=arguments[e])||(a=a.next(e,t,!1));return a}},pDQq:function(e,t,a){"use strict";var n=a("I+eb"),l=a("I8vh"),r=a("ppGB"),c=a("UMSQ"),o=a("ewvW"),i=a("ZfDv"),s=a("hBjN"),u=a("Hd5f"),m=a("rkAj"),d=u("splice"),E=m("splice",{ACCESSORS:!0,0:0,1:2}),p=Math.max,h=Math.min,g=9007199254740991,b="Maximum allowed length exceeded";n({target:"Array",proto:!0,forced:!d||!E},{splice:function(e,t){var a,n,u,m,d,E,f=o(this),y=c(f.length),k=l(e,y),v=arguments.length;if(0===v?a=n=0:1===v?(a=0,n=y-k):(a=v-2,n=h(p(r(t),0),y-k)),y+a-n>g)throw TypeError(b);for(u=i(f,n),m=0;m<n;m++)d=k+m,d in f&&s(u,m,f[d]);if(u.length=n,a<n){for(m=k;m<y-n;m++)d=m+n,E=m+a,d in f?f[E]=f[d]:delete f[E];for(m=y;m>y-n+a;m--)delete f[m-1]}else if(a>n)for(m=y-n;m>k;m--)d=m+n-1,E=m+a-1,d in f?f[E]=f[d]:delete f[E];for(m=0;m<a;m++)f[m+k]=arguments[m+2];return f.length=y-n+a,u}})},pNMO:function(e,t,a){"use strict";var n=a("I+eb"),l=a("2oRo"),r=a("0GbY"),c=a("xDBR"),o=a("g6v/"),i=a("STAE"),s=a("/b8u"),u=a("0Dky"),m=a("UTVS"),d=a("6LWA"),E=a("hh1v"),p=a("glrk"),h=a("ewvW"),g=a("/GqU"),b=a("wE6v"),f=a("XGwC"),y=a("fHMY"),k=a("33Wh"),v=a("JBy8"),w=a("BX/b"),L=a("dBg+"),A=a("Bs8V"),x=a("m/L8"),_=a("0eef"),G=a("kRJp"),P=a("busE"),I=a("VpIT"),S=a("93I0"),T=a("0BK2"),N=a("kOOl"),j=a("tiKp"),H=a("5Tg+"),q=a("dG/n"),D=a("1E5z"),z=a("afO8"),C=a("tycR").forEach,O=S("hidden"),R="Symbol",F="prototype",U=j("toPrimitive"),M=z.set,Y=z.getterFor(R),B=Object[F],W=l.Symbol,K=r("JSON","stringify"),V=A.f,Z=x.f,$=w.f,Q=_.f,J=I("symbols"),X=I("op-symbols"),ee=I("string-to-symbol-registry"),te=I("symbol-to-string-registry"),ae=I("wks"),ne=l.QObject,le=!ne||!ne[F]||!ne[F].findChild,re=o&&u((function(){return 7!=y(Z({},"a",{get:function(){return Z(this,"a",{value:7}).a}})).a}))?function(e,t,a){var n=V(B,t);n&&delete B[t],Z(e,t,a),n&&e!==B&&Z(B,t,n)}:Z,ce=function(e,t){var a=J[e]=y(W[F]);return M(a,{type:R,tag:e,description:t}),o||(a.description=t),a},oe=s?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof W},ie=function(e,t,a){e===B&&ie(X,t,a),p(e);var n=b(t,!0);return p(a),m(J,n)?(a.enumerable?(m(e,O)&&e[O][n]&&(e[O][n]=!1),a=y(a,{enumerable:f(0,!1)})):(m(e,O)||Z(e,O,f(1,{})),e[O][n]=!0),re(e,n,a)):Z(e,n,a)},se=function(e,t){p(e);var a=g(t),n=k(a).concat(pe(a));return C(n,(function(t){o&&!me.call(a,t)||ie(e,t,a[t])})),e},ue=function(e,t){return void 0===t?y(e):se(y(e),t)},me=function(e){var t=b(e,!0),a=Q.call(this,t);return!(this===B&&m(J,t)&&!m(X,t))&&(!(a||!m(this,t)||!m(J,t)||m(this,O)&&this[O][t])||a)},de=function(e,t){var a=g(e),n=b(t,!0);if(a!==B||!m(J,n)||m(X,n)){var l=V(a,n);return!l||!m(J,n)||m(a,O)&&a[O][n]||(l.enumerable=!0),l}},Ee=function(e){var t=$(g(e)),a=[];return C(t,(function(e){m(J,e)||m(T,e)||a.push(e)})),a},pe=function(e){var t=e===B,a=$(t?X:g(e)),n=[];return C(a,(function(e){!m(J,e)||t&&!m(B,e)||n.push(J[e])})),n};if(i||(W=function(){if(this instanceof W)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=N(e),a=function(e){this===B&&a.call(X,e),m(this,O)&&m(this[O],t)&&(this[O][t]=!1),re(this,t,f(1,e))};return o&&le&&re(B,t,{configurable:!0,set:a}),ce(t,e)},P(W[F],"toString",(function(){return Y(this).tag})),P(W,"withoutSetter",(function(e){return ce(N(e),e)})),_.f=me,x.f=ie,A.f=de,v.f=w.f=Ee,L.f=pe,H.f=function(e){return ce(j(e),e)},o&&(Z(W[F],"description",{configurable:!0,get:function(){return Y(this).description}}),c||P(B,"propertyIsEnumerable",me,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!i,sham:!i},{Symbol:W}),C(k(ae),(function(e){q(e)})),n({target:R,stat:!0,forced:!i},{for:function(e){var t=String(e);if(m(ee,t))return ee[t];var a=W(t);return ee[t]=a,te[a]=t,a},keyFor:function(e){if(!oe(e))throw TypeError(e+" is not a symbol");if(m(te,e))return te[e]},useSetter:function(){le=!0},useSimple:function(){le=!1}}),n({target:"Object",stat:!0,forced:!i,sham:!o},{create:ue,defineProperty:ie,defineProperties:se,getOwnPropertyDescriptor:de}),n({target:"Object",stat:!0,forced:!i},{getOwnPropertyNames:Ee,getOwnPropertySymbols:pe}),n({target:"Object",stat:!0,forced:u((function(){L.f(1)}))},{getOwnPropertySymbols:function(e){return L.f(h(e))}}),K){var he=!i||u((function(){var e=W();return"[null]"!=K([e])||"{}"!=K({a:e})||"{}"!=K(Object(e))}));n({target:"JSON",stat:!0,forced:he},{stringify:function(e,t,a){var n,l=[e],r=1;while(arguments.length>r)l.push(arguments[r++]);if(n=t,(E(t)||void 0!==e)&&!oe(e))return d(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!oe(t))return t}),l[1]=t,K.apply(null,l)}})}W[F][U]||G(W[F],U,W[F].valueOf),D(W,R),T[O]=!0},pevA:function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("JiZb"),c=a("HAuM"),o=a("glrk"),i=a("hh1v"),s=a("GarU"),u=a("m/L8").f,m=a("kRJp"),d=a("4syw"),E=a("mh/w"),p=a("ImZN"),h=a("RN6c"),g=a("tiKp"),b=a("afO8"),f=g("observable"),y=b.get,k=b.set,v=function(e){return null==e?void 0:c(e)},w=function(e){var t=e.cleanup;if(t){e.cleanup=void 0;try{t()}catch(a){h(a)}}},L=function(e){return void 0===e.observer},A=function(e,t){if(!l){e.closed=!0;var a=t.subscriptionObserver;a&&(a.closed=!0)}t.observer=void 0},x=function(e,t){var a,n=k(this,{cleanup:void 0,observer:o(e),subscriptionObserver:void 0});l||(this.closed=!1);try{(a=v(e.start))&&a.call(e,this)}catch(u){h(u)}if(!L(n)){var r=n.subscriptionObserver=new _(this);try{var i=t(r),s=i;null!=i&&(n.cleanup="function"===typeof i.unsubscribe?function(){s.unsubscribe()}:c(i))}catch(u){return void r.error(u)}L(n)&&w(n)}};x.prototype=d({},{unsubscribe:function(){var e=y(this);L(e)||(A(this,e),w(e))}}),l&&u(x.prototype,"closed",{configurable:!0,get:function(){return L(y(this))}});var _=function(e){k(this,{subscription:e}),l||(this.closed=!1)};_.prototype=d({},{next:function(e){var t=y(y(this).subscription);if(!L(t)){var a=t.observer;try{var n=v(a.next);n&&n.call(a,e)}catch(l){h(l)}}},error:function(e){var t=y(this).subscription,a=y(t);if(!L(a)){var n=a.observer;A(t,a);try{var l=v(n.error);l?l.call(n,e):h(e)}catch(r){h(r)}w(a)}},complete:function(){var e=y(this).subscription,t=y(e);if(!L(t)){var a=t.observer;A(e,t);try{var n=v(a.complete);n&&n.call(a)}catch(l){h(l)}w(t)}}}),l&&u(_.prototype,"closed",{configurable:!0,get:function(){return L(y(y(this).subscription))}});var G=function(e){s(this,G,"Observable"),k(this,{subscriber:c(e)})};d(G.prototype,{subscribe:function(e){var t=arguments.length;return new x("function"===typeof e?{next:e,error:t>1?arguments[1]:void 0,complete:t>2?arguments[2]:void 0}:i(e)?e:{},y(this).subscriber)}}),d(G,{from:function(e){var t="function"===typeof this?this:G,a=v(o(e)[f]);if(a){var n=o(a.call(e));return n.constructor===t?n:new t((function(e){return n.subscribe(e)}))}var l=E(e);return new t((function(e){p(l,(function(t){if(e.next(t),e.closed)return p.stop()}),void 0,!1,!0),e.complete()}))},of:function(){var e="function"===typeof this?this:G,t=arguments.length,a=new Array(t),n=0;while(n<t)a[n]=arguments[n++];return new e((function(e){for(var n=0;n<t;n++)if(e.next(a[n]),e.closed)return;e.complete()}))}}),m(G.prototype,f,(function(){return this})),n({global:!0},{Observable:G}),r("Observable")},piMb:function(e,t,a){"use strict";var n=a("I+eb"),l=a("tycR").every,r=a("pkCn"),c=a("rkAj"),o=r("every"),i=c("every");n({target:"Array",proto:!0,forced:!o||!i},{every:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}})},pjDv:function(e,t,a){var n=a("I+eb"),l=a("TfTi"),r=a("HH4o"),c=!r((function(e){Array.from(e)}));n({target:"Array",stat:!0,forced:c},{from:l})},pkCn:function(e,t,a){"use strict";var n=a("0Dky");e.exports=function(e,t){var a=[][e];return!!a&&n((function(){a.call(null,t||function(){throw 1},1)}))}},pm8L:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"cancel-an-import"},l.a.createElement(r["AnchorLink"],{to:"#cancel-an-import","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Cancel an import"),l.a.createElement("p",null,"Stop an import for a repository."),l.a.createElement(c["a"],{code:"octokit.migrations.cancelImport({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#cancel-an-import"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-user-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-user-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a user migration archive"),l.a.createElement("p",null,"Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-user-migrations"},"List user migrations")," and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-a-user-migration-status"},"Get a user migration status")," endpoints, will continue to be available even after an archive is deleted."),l.a.createElement(c["a"],{code:"octokit.migrations.deleteArchiveForAuthenticatedUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#delete-a-user-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-an-organization-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#delete-an-organization-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete an organization migration archive"),l.a.createElement("p",null,"Deletes a previous migration archive. Migration archives are automatically deleted after seven days."),l.a.createElement(c["a"],{code:"octokit.migrations.deleteArchiveForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#delete-an-organization-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-an-organization-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#download-an-organization-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download an organization migration archive"),l.a.createElement("p",null,"Fetches the URL to a migration archive."),l.a.createElement(c["a"],{code:"octokit.migrations.downloadArchiveForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#download-an-organization-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-user-migration-archive"},l.a.createElement(r["AnchorLink"],{to:"#download-a-user-migration-archive","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a user migration archive"),l.a.createElement("p",null,"Fetches the URL to download the migration archive as a ",l.a.createElement("code",null,"tar.gz")," file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:"),l.a.createElement("ul",null,l.a.createElement("li",null,"attachments"),l.a.createElement("li",null,"bases"),l.a.createElement("li",null,"commit_comments"),l.a.createElement("li",null,"issue_comments"),l.a.createElement("li",null,"issue_events"),l.a.createElement("li",null,"issues"),l.a.createElement("li",null,"milestones"),l.a.createElement("li",null,"organizations"),l.a.createElement("li",null,"projects"),l.a.createElement("li",null,"protected_branches"),l.a.createElement("li",null,"pull_request_reviews"),l.a.createElement("li",null,"pull_requests"),l.a.createElement("li",null,"releases"),l.a.createElement("li",null,"repositories"),l.a.createElement("li",null,"review_comments"),l.a.createElement("li",null,"schema"),l.a.createElement("li",null,"users")),l.a.createElement("p",null,"The archive will also contain an ",l.a.createElement("code",null,"attachments")," directory that includes all attachment files uploaded to GitHub.com and a ",l.a.createElement("code",null,"repositories")," directory that contains the repository's Git data."),l.a.createElement(c["a"],{code:"octokit.migrations.getArchiveForAuthenticatedUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-commit-authors"},l.a.createElement(r["AnchorLink"],{to:"#get-commit-authors","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get commit authors"),l.a.createElement("p",null,"Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username ",l.a.createElement("code",null,"hubot")," into something like ",l.a.createElement("code",null,"hubot <hubot@12341234-abab-fefe-8787-fedcba987654>"),"."),l.a.createElement("p",null,"This endpoint and the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#map-a-commit-author"},"Map a commit author")," endpoint allow you to provide correct Git author information."),l.a.createElement(c["a"],{code:"octokit.migrations.getCommitAuthors({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A user ID. Only return users with an ID greater than this ID."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-commit-authors"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-import-status"},l.a.createElement(r["AnchorLink"],{to:"#get-an-import-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an import status"),l.a.createElement("p",null,"View the progress of an import."),l.a.createElement("p",null,l.a.createElement("strong",null,"Import status")),l.a.createElement("p",null,"This section includes details about the possible values of the ",l.a.createElement("code",null,"status")," field of the Import Progress response."),l.a.createElement("p",null,"An import that does not have errors will progress through these steps:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"detecting"),' - the "detection" step of the import is in progress because the request did not include a ',l.a.createElement("code",null,"vcs")," parameter. The import is identifying the type of source control present at the URL."),l.a.createElement("li",null,l.a.createElement("code",null,"importing"),' - the "raw" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include ',l.a.createElement("code",null,"commit_count")," (the total number of raw commits that will be imported) and ",l.a.createElement("code",null,"percent")," (0 - 100, the current progress through the import)."),l.a.createElement("li",null,l.a.createElement("code",null,"mapping"),' - the "rewrite" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.'),l.a.createElement("li",null,l.a.createElement("code",null,"pushing"),' - the "push" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include ',l.a.createElement("code",null,"push_percent"),", which is the percent value reported by ",l.a.createElement("code",null,"git push"),' when it is "Writing objects".'),l.a.createElement("li",null,l.a.createElement("code",null,"complete")," - the import is complete, and the repository is ready on GitHub.")),l.a.createElement("p",null,"If there are problems, you will see one of these in the ",l.a.createElement("code",null,"status")," field:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"auth_failed")," - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"Update an import")," section."),l.a.createElement("li",null,l.a.createElement("code",null,"error")," - the import encountered an error. The import progress response will include the ",l.a.createElement("code",null,"failed_step")," and an error message. Contact ",l.a.createElement(r["Link"],{to:"https://support.github.com/contact"},"GitHub Support")," or ",l.a.createElement(r["Link"],{to:"https://premium.githubsupport.com/"},"GitHub Premium Support")," for more information."),l.a.createElement("li",null,l.a.createElement("code",null,"detection_needs_auth")," - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"Update an import")," section."),l.a.createElement("li",null,l.a.createElement("code",null,"detection_found_nothing")," - the importer didn't recognize any source control at the URL. To resolve, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#cancel-an-import"},"Cancel the import")," and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-an-import"},"retry")," with the correct URL."),l.a.createElement("li",null,l.a.createElement("code",null,"detection_found_multiple")," - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a ",l.a.createElement("code",null,"project_choices")," field with the possible project choices as values. To update project choice, please see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"Update an import")," section.")),l.a.createElement("p",null,l.a.createElement("strong",null,"The project_choices field")),l.a.createElement("p",null,"When multiple projects are found at the provided URL, the response hash will include a ",l.a.createElement("code",null,"project_choices")," field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type."),l.a.createElement("p",null,l.a.createElement("strong",null,"Git LFS related fields")),l.a.createElement("p",null,"This section includes details about Git LFS related fields that may be present in the Import Progress response."),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"use_lfs")," - describes whether the import has been opted in or out of using Git LFS. The value can be ",l.a.createElement("code",null,"opt_in"),", ",l.a.createElement("code",null,"opt_out"),", or ",l.a.createElement("code",null,"undecided")," if no action has been taken."),l.a.createElement("li",null,l.a.createElement("code",null,"has_large_files")," - the boolean value describing whether files larger than 100MB were found during the ",l.a.createElement("code",null,"importing")," step."),l.a.createElement("li",null,l.a.createElement("code",null,"large_files_size")," - the total size in gigabytes of files larger than 100MB found in the originating repository."),l.a.createElement("li",null,l.a.createElement("code",null,"large_files_count"),' - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a "Get Large Files" request.')),l.a.createElement(c["a"],{code:"octokit.migrations.getImportStatus({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-an-import-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-large-files"},l.a.createElement(r["AnchorLink"],{to:"#get-large-files","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get large files"),l.a.createElement("p",null,"List files larger than 100MB found during the import"),l.a.createElement(c["a"],{code:"octokit.migrations.getLargeFiles({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-large-files"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-user-migration-status"},l.a.createElement(r["AnchorLink"],{to:"#get-a-user-migration-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a user migration status"),l.a.createElement("p",null,"Fetches a single user migration. The response includes the ",l.a.createElement("code",null,"state")," of the migration, which can be one of the following values:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"pending")," - the migration hasn't started yet."),l.a.createElement("li",null,l.a.createElement("code",null,"exporting")," - the migration is in progress."),l.a.createElement("li",null,l.a.createElement("code",null,"exported")," - the migration finished successfully."),l.a.createElement("li",null,l.a.createElement("code",null,"failed")," - the migration failed.")),l.a.createElement("p",null,"Once the migration has been ",l.a.createElement("code",null,"exported")," you can ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive"},"download the migration archive"),"."),l.a.createElement(c["a"],{code:"octokit.migrations.getStatusForAuthenticatedUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-a-user-migration-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-an-organization-migration-status"},l.a.createElement(r["AnchorLink"],{to:"#get-an-organization-migration-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get an organization migration status"),l.a.createElement("p",null,"Fetches the status of a migration."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"state")," of a migration can be one of the following values:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"pending"),", which means the migration hasn't started yet."),l.a.createElement("li",null,l.a.createElement("code",null,"exporting"),", which means the migration is in progress."),l.a.createElement("li",null,l.a.createElement("code",null,"exported"),", which means the migration finished successfully."),l.a.createElement("li",null,l.a.createElement("code",null,"failed"),", which means the migration failed.")),l.a.createElement(c["a"],{code:"octokit.migrations.getStatusForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#get-an-organization-migration-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-user-migrations"},l.a.createElement(r["AnchorLink"],{to:"#list-user-migrations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List user migrations"),l.a.createElement("p",null,"Lists all migrations a user has started."),l.a.createElement(c["a"],{code:"octokit.migrations.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-user-migrations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-migrations"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-migrations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization migrations"),l.a.createElement("p",null,"Lists the most recent migrations."),l.a.createElement(c["a"],{code:"octokit.migrations.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-organization-migrations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-in-an-organization-migration"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-in-an-organization-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories in an organization migration"),l.a.createElement("p",null,"List all the repositories for this organization migration."),l.a.createElement(c["a"],{code:"octokit.migrations.listReposForOrg({\n  org,\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-repositories-in-an-organization-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-for-a-user-migration"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-for-a-user-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories for a user migration"),l.a.createElement("p",null,"Lists all the repositories for this user migration."),l.a.createElement(c["a"],{code:"octokit.migrations.listReposForUser({\n  migration_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#list-repositories-for-a-user-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"map-a-commit-author"},l.a.createElement(r["AnchorLink"],{to:"#map-a-commit-author","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Map a commit author"),l.a.createElement("p",null,"Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository."),l.a.createElement(c["a"],{code:"octokit.migrations.mapCommitAuthor({\n  owner,\n  repo,\n  author_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"author_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new Git author email."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new Git author name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"remote_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#map-a-commit-author"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-git-lfs-preference"},l.a.createElement(r["AnchorLink"],{to:"#update-git-lfs-preference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update Git LFS preference"),l.a.createElement("p",null,"You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by ",l.a.createElement(r["Link"],{to:"https://git-lfs.github.com/"},"Git LFS"),". You can learn more about our LFS feature and working with large files ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/versioning-large-files/"},"on our help site"),"."),l.a.createElement(c["a"],{code:"octokit.migrations.setLfsPreference({\n  owner,\n  repo,\n  use_lfs,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"use_lfs"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"opt_in")," (large files will be stored using Git LFS) or ",l.a.createElement("code",null,"opt_out")," (large files will be removed during the import)."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-git-lfs-preference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"start-a-user-migration"},l.a.createElement(r["AnchorLink"],{to:"#start-a-user-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Start a user migration"),l.a.createElement("p",null,"Initiates the generation of a user migration archive."),l.a.createElement(c["a"],{code:"octokit.migrations.startForAuthenticatedUser({\n  repositories,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"lock_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Lock the repositories being migrated at the start of the migration"))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude_attachments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Do not include attachments in the migration"))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Exclude attributes from the API response to improve performance"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-a-user-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"start-an-organization-migration"},l.a.createElement(r["AnchorLink"],{to:"#start-an-organization-migration","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Start an organization migration"),l.a.createElement("p",null,"Initiates the generation of a migration archive."),l.a.createElement(c["a"],{code:"octokit.migrations.startForOrg({\n  org,\n  repositories,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repositories"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A list of arrays indicating which repositories should be migrated."))),l.a.createElement("tr",null,l.a.createElement("td",null,"lock_repositories"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether repositories should be locked (to prevent manipulation) while migrating data."))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude_attachments"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates whether attachments should be excluded from the migration (to reduce migration archive file size)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"exclude"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-an-organization-migration"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"start-an-import"},l.a.createElement(r["AnchorLink"],{to:"#start-an-import","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Start an import"),l.a.createElement("p",null,"Start a source import to a GitHub repository using GitHub Importer."),l.a.createElement(c["a"],{code:"octokit.migrations.startImport({\n  owner,\n  repo,\n  vcs_url,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL of the originating repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The originating VCS type. Can be one of ",l.a.createElement("code",null,"subversion"),", ",l.a.createElement("code",null,"git"),", ",l.a.createElement("code",null,"mercurial"),", or ",l.a.createElement("code",null,"tfvc"),". Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If authentication is required, the username to provide to ",l.a.createElement("code",null,"vcs_url"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_password"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If authentication is required, the password to provide to ",l.a.createElement("code",null,"vcs_url"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tfvc_project"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"For a tfvc import, the name of the project that is being imported."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-an-import"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unlock-a-user-repository"},l.a.createElement(r["AnchorLink"],{to:"#unlock-a-user-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unlock a user repository"),l.a.createElement("p",null,"Unlocks a repository. You can lock repositories when you ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#start-a-user-migration"},"start a user migration"),". Once the migration is complete you can unlock each repository to begin using it again or ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository"},"delete the repository")," if you no longer need the source data. Returns a status of ",l.a.createElement("code",null,"404 Not Found")," if the repository is not locked."),l.a.createElement(c["a"],{code:"octokit.migrations.unlockRepoForAuthenticatedUser({\n  migration_id,\n  repo_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repo_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"repo_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#unlock-a-user-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unlock-an-organization-repository"},l.a.createElement(r["AnchorLink"],{to:"#unlock-an-organization-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unlock an organization repository"),l.a.createElement("p",null,"Unlocks a repository that was locked for migration. You should unlock each migrated repository and ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository"},"delete them")," when the migration is complete and you no longer need the source data."),l.a.createElement(c["a"],{code:"octokit.migrations.unlockRepoForOrg({\n  org,\n  migration_id,\n  repo_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"migration_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"migration_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"repo_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"repo_name parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#unlock-an-organization-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-import"},l.a.createElement(r["AnchorLink"],{to:"#update-an-import","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an import"),l.a.createElement("p",null,"An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted."),l.a.createElement(c["a"],{code:"octokit.migrations.updateImport({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_username"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The username to provide to the originating repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs_password"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The password to provide to the originating repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"vcs"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tfvc_project"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/migrations#update-an-import"},"GitHub Developer Guide documentation"),".")))}},poL8:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide"},"\u4ecb \u7ecd"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/00_usage"},"Usage")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/01_authentication"},"Authentication")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/02_previews"},"Previews")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/03_request_formats"},"Request formats & aborts")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/04_custom_requests"},"Custom requests")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/05_pagination"},"Pagination")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/06_hooks"},"Hooks")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/07_custom_endpoints"},"Custom endpoint methods")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/08_plugins"},"Plugins")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/09_throttling"},"Throttling")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/10_retries"},"Automatic retries")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/11_logging"},"Logging")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/guide/12_debug"},"Debug")))),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api"},"API"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/actions"},"actions")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/activity"},"activity")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/apps"},"apps")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/billing"},"billing")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/checks"},"checks")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/codeScanning"},"codeScanning")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/codesOfConduct"},"codesOfConduct")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/emojis"},"emojis")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/enterpriseAdmin"},"enterpriseAdmin")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/gists"},"gists")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/git"},"git")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/gitignore"},"gitignore")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/interactions"},"interactions")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/issues"},"issues")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/licenses"},"licenses")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/markdown"},"markdown")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/meta"},"meta")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/migrations"},"migrations")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/orgs"},"orgs")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/projects"},"projects")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/pulls"},"pulls")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/rateLimit"},"rateLimit")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/reactions"},"reactions")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/repos"},"repos")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/search"},"search")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/secretScanning"},"secretScanning")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/teams"},"teams")),l.a.createElement("li",null,l.a.createElement(r["Link"],{to:"/api/users"},"users")))))))}},ppGB:function(e,t){var a=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:a)(e)}},pv2x:function(e,t,a){var n=a("I+eb"),l=a("0GbY"),r=a("HAuM"),c=a("glrk"),o=a("0Dky"),i=l("Reflect","apply"),s=Function.apply,u=!o((function(){i((function(){}))}));n({target:"Reflect",stat:!0,forced:u},{apply:function(e,t,a){return r(e),c(a),i?i(e,t,a):s.call(e,t,a)}})},q1tI:function(e,t,a){"use strict";e.exports=a("viRO")},qHiR:function(e,t,a){},qScx:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-a-code-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#get-a-code-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a code scanning alert"),l.a.createElement("p",null,"Gets a single code scanning alert. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," read permission to use this endpoint."),l.a.createElement("p",null,"The security ",l.a.createElement("code",null,"alert_number")," is found at the end of the security alert's URL. For example, the security alert ID for ",l.a.createElement("code",null,"https://github.com/Octo-org/octo-repo/security/code-scanning/88")," is ",l.a.createElement("code",null,"88"),"."),l.a.createElement(c["a"],{code:"octokit.codeScanning.getAlert({\n  owner,\n  repo,\n  alert_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#get-a-code-scanning-alert"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-code-scanning-alerts-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-code-scanning-alerts-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List code scanning alerts for a repository"),l.a.createElement("p",null,"Lists all open code scanning alerts for the default branch (usually ",l.a.createElement("code",null,"main")," or ",l.a.createElement("code",null,"master"),"). You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.listAlertsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"fixed"),", or ",l.a.createElement("code",null,"dismissed")," to list code scanning alerts in a specific state."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set a full Git reference to list alerts for a specific branch. The ",l.a.createElement("code",null,"ref")," must be formatted as ",l.a.createElement("code",null,"refs/heads/<branch name>"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#list-code-scanning-alerts-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-recent-code-scanning-analyses-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-recent-code-scanning-analyses-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List recent code scanning analyses for a repository"),l.a.createElement("p",null,"List the details of recent code scanning analyses for a repository. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.listRecentAnalyses({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set a full Git reference to list alerts for a specific branch. The ",l.a.createElement("code",null,"ref")," must be formatted as ",l.a.createElement("code",null,"refs/heads/<branch name>"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tool_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set a single code scanning tool name to filter alerts by tool."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#list-recent-analyses"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-code-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#update-a-code-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a code scanning alert"),l.a.createElement("p",null,"Updates the status of a single code scanning alert. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," write permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.updateAlert({\n  owner,\n  repo,\n  alert_number,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The security alert number, found at the end of the security alert's URL."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Sets the state of the code scanning alert. Can be one of ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"dismissed"),". You must provide ",l.a.createElement("code",null,"dismissed_reason")," when you set the state to ",l.a.createElement("code",null,"dismissed"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissed_reason"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when the state is dismissed.")," The reason for dismissing or closing the alert. Can be one of: ",l.a.createElement("code",null,"false positive"),", ",l.a.createElement("code",null,"won't fix"),", and ",l.a.createElement("code",null,"used in tests"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#upload-a-code-scanning-alert"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"upload-a-sarif-file"},l.a.createElement(r["AnchorLink"],{to:"#upload-a-sarif-file","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Upload a SARIF file"),l.a.createElement("p",null,"Upload a SARIF file containing the results of a code scanning analysis to make the results available in a repository. You must use an access token with the ",l.a.createElement("code",null,"security_events")," scope to use this endpoint. GitHub Apps must have the ",l.a.createElement("code",null,"security_events")," write permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.codeScanning.uploadSarif({\n  owner,\n  repo,\n  commit_sha,\n  ref,\n  sarif,\n  tool_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit SHA of the code scanning analysis file."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The full Git reference of the code scanning analysis file, formatted as ",l.a.createElement("code",null,"refs/heads/<branch name>"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sarif"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using ",l.a.createElement(r["Link"],{to:"http://www.gnu.org/software/gzip/manual/gzip.html"},l.a.createElement("code",null,"gzip"))," and then translate the contents of the file into a Base64 encoding string."))),l.a.createElement("tr",null,l.a.createElement("td",null,"checkout_uri"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The base directory used in the analysis, as it appears in the SARIF file. This property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"started_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The time that the analysis run began. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"tool_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the tool used to generate the code scanning analysis alert."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/code-scanning/#upload-a-sarif-analysis"},"GitHub Developer Guide documentation"),".")))}},qT12:function(e,t,a){"use strict";var n="function"===typeof Symbol&&Symbol["for"],l=n?Symbol["for"]("react.element"):60103,r=n?Symbol["for"]("react.portal"):60106,c=n?Symbol["for"]("react.fragment"):60107,o=n?Symbol["for"]("react.strict_mode"):60108,i=n?Symbol["for"]("react.profiler"):60114,s=n?Symbol["for"]("react.provider"):60109,u=n?Symbol["for"]("react.context"):60110,m=n?Symbol["for"]("react.async_mode"):60111,d=n?Symbol["for"]("react.concurrent_mode"):60111,E=n?Symbol["for"]("react.forward_ref"):60112,p=n?Symbol["for"]("react.suspense"):60113,h=n?Symbol["for"]("react.suspense_list"):60120,g=n?Symbol["for"]("react.memo"):60115,b=n?Symbol["for"]("react.lazy"):60116,f=n?Symbol["for"]("react.block"):60121,y=n?Symbol["for"]("react.fundamental"):60117,k=n?Symbol["for"]("react.responder"):60118,v=n?Symbol["for"]("react.scope"):60119;function w(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case l:switch(e=e.type,e){case m:case d:case c:case i:case o:case p:return e;default:switch(e=e&&e.$$typeof,e){case u:case E:case b:case g:case s:return e;default:return t}}case r:return t}}}function L(e){return w(e)===d}t.AsyncMode=m,t.ConcurrentMode=d,t.ContextConsumer=u,t.ContextProvider=s,t.Element=l,t.ForwardRef=E,t.Fragment=c,t.Lazy=b,t.Memo=g,t.Portal=r,t.Profiler=i,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return L(e)||w(e)===m},t.isConcurrentMode=L,t.isContextConsumer=function(e){return w(e)===u},t.isContextProvider=function(e){return w(e)===s},t.isElement=function(e){return"object"===typeof e&&null!==e&&e.$$typeof===l},t.isForwardRef=function(e){return w(e)===E},t.isFragment=function(e){return w(e)===c},t.isLazy=function(e){return w(e)===b},t.isMemo=function(e){return w(e)===g},t.isPortal=function(e){return w(e)===r},t.isProfiler=function(e){return w(e)===i},t.isStrictMode=function(e){return w(e)===o},t.isSuspense=function(e){return w(e)===p},t.isValidElementType=function(e){return"string"===typeof e||"function"===typeof e||e===c||e===d||e===i||e===o||e===p||e===h||"object"===typeof e&&null!==e&&(e.$$typeof===b||e.$$typeof===g||e.$$typeof===s||e.$$typeof===u||e.$$typeof===E||e.$$typeof===y||e.$$typeof===k||e.$$typeof===v||e.$$typeof===f)},t.typeOf=w},qY7S:function(e,t,a){"use strict";var n=a("HAuM"),l=a("A2ZE"),r=a("ImZN");e.exports=function(e){var t,a,c,o,i=arguments.length,s=i>1?arguments[1]:void 0;return n(this),t=void 0!==s,t&&n(s),void 0==e?new this:(a=[],t?(c=0,o=l(s,i>2?arguments[2]:void 0,2),r(e,(function(e){a.push(o(e,c++))}))):r(e,a.push,a),new this(a))}},qYE9:function(e,t){e.exports="undefined"!==typeof ArrayBuffer&&"undefined"!==typeof DataView},qaHo:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("WGBp"),i=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{some:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return i(a,(function(e){if(n(e,e,t))return i.stop()}),void 0,!1,!0).stopped}})},qc1c:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("HAuM"),o=a("ImZN");n({target:"Map",proto:!0,real:!0,forced:l},{merge:function(e){var t=r(this),a=c(t.set),n=0;while(n<arguments.length)o(arguments[n++],a,t,!0);return t}})},qgGA:function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=l.toKey,o=l.set;n({target:"Reflect",stat:!0},{metadata:function(e,t){return function(a,n){o(e,t,r(a),c(n))}}})},qxPZ:function(e,t,a){var n=a("tiKp"),l=n("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(a){try{return t[l]=!1,"/./"[e](t)}catch(n){}}return!1}},"r+Pq":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Many common request errors can be easily remediated by retrying the request. We recommend installing the ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/plugin-retry.js"},l.a.createElement("code",null,"@octokit/plugin-retry")," plugin")," for Automatic retries in these cases"),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\nconst { retry } = require("@octokit/plugin-retry");\nconst MyOctokit = Octokit.plugin(retry);\n\nconst octokit = new MyOctokit();\n\n// all requests sent with the `octokit` instance are now retried up to 3 times for recoverable errors.\n',lang:"js"})))}},r1Q5:function(e,t,a){"use strict";var n=a("J4zp");function l(){var e=i(a("q1tI"));return l=function(){return e},e}function r(){var e=c(a("6xEa"));return r=function(){return e},e}function c(e){return e&&e.__esModule?e:{default:e}}function o(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function i(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if(Object.prototype.hasOwnProperty.call(e,l)){var r=n?Object.getOwnPropertyDescriptor(e,l):null;r&&(r.get||r.set)?Object.defineProperty(a,l,r):a[l]=e[l]}return a["default"]=e,t&&t.set(e,a),a}function s(e,t){return p(e)||E(e,t)||m(e,t)||u()}function u(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function m(e,t){if(e){if("string"===typeof e)return d(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?d(e,t):void 0}}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function E(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function p(e){if(Array.isArray(e))return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var h="https://codesandbox.io/api/v1/sandboxes/define";function g(e){return r()["default"].compressToBase64(JSON.stringify(e)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function b(e){var t=document.createElement("span");t.innerHTML=e;var a=t.textContent;return t.remove(),a}function f(e){var t=Boolean(e.sources._.tsx),a=t?".tsx":".jsx",l={},r={},c=Object.values(e.dependencies).filter((function(e){return e.css})),o="App".concat(a),i="index".concat(a);return Object.entries(e.dependencies).forEach((function(e){var t=n(e,2),a=t[0],l=t[1].version;r[a]=l})),r["react-dom"]||(r["react-dom"]=r.react||"latest"),l["sandbox.config.json"]={content:JSON.stringify({template:t?"create-react-app-typescript":"create-react-app"},null,2)},l["package.json"]={content:JSON.stringify({name:e.title,description:b(e.description)||"An auto-generated demo by dumi",main:i,dependencies:r,devDependencies:t?{typescript:"^3"}:{}},null,2)},l["index.html"]={content:'<div style="margin: 16px;" id="root"></div>'},l[i]={content:"/**\n* This is an auto-generated demo by dumi\n* if you think it is not working as expected,\n* please report the issue at\n* https://github.com/umijs/dumi/issues\n**/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n".concat(c.map((function(e){var t=e.css;return"import '".concat(t,"';")})).join("\n"),"\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);")},Object.entries(e.sources).forEach((function(e){var t=n(e,2),a=t[0],r=t[1],c=r.tsx,i=r.jsx,s=r.content;l["_"===a?o:a]={content:c||i||s}})),g({files:l})}var y=function(e){var t=(0,l().useState)(),a=s(t,2),n=a[0],r=a[1];return(0,l().useEffect)((function(){if(e){var t=document.createElement("form"),a=document.createElement("input"),n=f(e);return t.method="POST",t.target="_blank",t.style.display="none",t.action=h,t.appendChild(a),t.setAttribute("data-demo",e.title||""),a.name="parameters",a.value=n,document.body.appendChild(t),r((function(){return function(){return t.submit()}})),function(){return t.remove()}}}),[e]),n};t["default"]=y},rB9j:function(e,t,a){"use strict";var n=a("I+eb"),l=a("kmMV");n({target:"RegExp",proto:!0,forced:/./.exec!==l},{exec:l})},rKzb:function(e,t,a){"use strict";var n=a("4syw"),l=a("8YOa").getWeakData,r=a("glrk"),c=a("hh1v"),o=a("GarU"),i=a("ImZN"),s=a("tycR"),u=a("UTVS"),m=a("afO8"),d=m.set,E=m.getterFor,p=s.find,h=s.findIndex,g=0,b=function(e){return e.frozen||(e.frozen=new f)},f=function(){this.entries=[]},y=function(e,t){return p(e.entries,(function(e){return e[0]===t}))};f.prototype={get:function(e){var t=y(this,e);if(t)return t[1]},has:function(e){return!!y(this,e)},set:function(e,t){var a=y(this,e);a?a[1]=t:this.entries.push([e,t])},delete:function(e){var t=h(this.entries,(function(t){return t[0]===e}));return~t&&this.entries.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,a,s){var m=e((function(e,n){o(e,m,t),d(e,{type:t,id:g++,frozen:void 0}),void 0!=n&&i(n,e[s],e,a)})),p=E(t),h=function(e,t,a){var n=p(e),c=l(r(t),!0);return!0===c?b(n).set(t,a):c[n.id]=a,e};return n(m.prototype,{delete:function(e){var t=p(this);if(!c(e))return!1;var a=l(e);return!0===a?b(t)["delete"](e):a&&u(a,t.id)&&delete a[t.id]},has:function(e){var t=p(this);if(!c(e))return!1;var a=l(e);return!0===a?b(t).has(e):a&&u(a,t.id)}}),n(m.prototype,a?{get:function(e){var t=p(this);if(c(e)){var a=l(e);return!0===a?b(t).get(e):a?a[t.id]:void 0}},set:function(e,t){return h(this,e,t)}}:{add:function(e){return h(this,e,!0)}}),m}}},rMNw:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"disable-a-selected-organization-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#disable-a-selected-organization-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable a selected organization for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.disableSelectedOrganizationGithubActionsEnterprise({\n  enterprise,\n  org_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"org_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of an organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#disable-a-selected-organization-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-a-selected-organization-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#enable-a-selected-organization-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable a selected organization for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.enableSelectedOrganizationGithubActionsEnterprise({\n  enterprise,\n  org_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"org_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Unique identifier of an organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#enable-a-selected-organization-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-allowed-actions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#get-allowed-actions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get allowed actions for an enterprise"),l.a.createElement("p",null,"Gets the selected actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.getAllowedActionsEnterprise({\n  enterprise,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#get-allowed-actions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-permissions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-permissions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions permissions for an enterprise"),l.a.createElement("p",null,"Gets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.getGithubActionsPermissionsEnterprise({\n  enterprise,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#get-github-actions-permissions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-selected-organizations-enabled-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#list-selected-organizations-enabled-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List selected organizations enabled for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.listSelectedOrganizationsEnabledGithubActionsEnterprise(\n  {\n    enterprise,\n  }\n);\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#list-selected-organizations-enabled-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-allowed-actions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#set-allowed-actions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set allowed actions for an enterprise"),l.a.createElement("p",null,"Sets the actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"allowed_actions")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.setAllowedActionsEnterprise({\n  enterprise,\n  github_owned_allowed,\n  verified_allowed,\n  patterns_allowed,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"github_owned_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether GitHub-owned actions are allowed. For example, this includes the actions in the ",l.a.createElement("code",null,"actions")," organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"verified_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether actions in GitHub Marketplace from verified creators are allowed. Set to ",l.a.createElement("code",null,"true")," to allow all GitHub Marketplace actions by verified creators."))),l.a.createElement("tr",null,l.a.createElement("td",null,"patterns_allowed"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, ",l.a.createElement("code",null,"monalisa/octocat@*"),", ",l.a.createElement("code",null,"monalisa/octocat@v2"),", ",l.a.createElement("code",null,"monalisa/*"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#set-allowed-actions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-github-actions-permissions-for-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set GitHub Actions permissions for an enterprise"),l.a.createElement("p",null,"Sets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise."),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.setGithubActionsPermissionsEnterprise({\n  enterprise,\n  enabled_organizations,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"enabled_organizations"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"none"),", or ",l.a.createElement("code",null,"selected"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allowed_actions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions policy that controls the actions that are allowed to run. Can be one of: ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"local_only"),", or ",l.a.createElement("code",null,"selected"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#set-github-actions-permissions-for-an-enterprise"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-selected-organizations-enabled-for-github-actions-in-an-enterprise"},l.a.createElement(r["AnchorLink"],{to:"#set-selected-organizations-enabled-for-github-actions-in-an-enterprise","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set selected organizations enabled for GitHub Actions in an enterprise"),l.a.createElement("p",null,"Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for ",l.a.createElement("code",null,"enabled_organizations")," must be configured to ",l.a.createElement("code",null,"selected"),'. For more information, see "',l.a.createElement(r["AnchorLink"],{to:"#set-github-actions-permissions-for-an-enterprise"},"Set GitHub Actions permissions for an enterprise"),'."'),l.a.createElement("p",null,"You must authenticate using an access token with the ",l.a.createElement("code",null,"admin:enterprise")," scope to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.enterpriseAdmin.setSelectedOrganizationsEnabledGithubActionsEnterprise({\n  enterprise,\n  selected_organization_ids,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"enterprise"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The slug version of the enterprise name. You can also substitute this value with the enterprise id."))),l.a.createElement("tr",null,l.a.createElement("td",null,"selected_organization_ids"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"List of organization IDs to enable for GitHub Actions."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/enterprise-admin#set-selected-organizations-enabled-for-github-actions-in-an-enterprise"},"GitHub Developer Guide documentation"),".")))}},rOQg:function(e,t,a){"use strict";var n=a("I+eb"),l=a("0Dky"),r=a("Yhre"),c=a("glrk"),o=a("I8vh"),i=a("UMSQ"),s=a("SEBh"),u=r.ArrayBuffer,m=r.DataView,d=u.prototype.slice,E=l((function(){return!new u(2).slice(1,void 0).byteLength}));n({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:E},{slice:function(e,t){if(void 0!==d&&void 0===t)return d.call(c(this),e);var a=c(this).byteLength,n=o(e,a),l=o(void 0===t?a:t,a),r=new(s(this,u))(i(l-n)),E=new m(this),p=new m(r),h=0;while(n<l)p.setUint8(h++,E.getUint8(n++));return r}})},"rR/O":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,l.a.createElement("code",null,"Octokit")," has 4 built-in log methods"),l.a.createElement("ol",null,l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.debug(message[, additionalInfo])")),l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.info(message[, additionalInfo])")),l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.warn(message[, additionalInfo])")),l.a.createElement("li",null,l.a.createElement("code",null,"octokit.log.error(message[, additionalInfo])"))),l.a.createElement("p",null,"They can be configured using the ",l.a.createElement("code",null,"log")," client option. By default, ",l.a.createElement("code",null,"octokit.log.debug()")," and ",l.a.createElement("code",null,"octokit.log.info()")," are no-ops, while the other two call ",l.a.createElement("code",null,"console.warn()")," and ",l.a.createElement("code",null,"console.error()")," respectively."),l.a.createElement("p",null,"This is useful if you build reusable ",l.a.createElement(r["AnchorLink"],{to:"#plugins"},"plugins"),".")))}},rW0t:function(e,t,a){"use strict";var n=a("glrk");e.exports=function(){var e=n(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},rZ3M:function(e,t,a){"use strict";var n=a("I+eb"),l=a("HYAF"),r=a("ROdP"),c=a("rW0t"),o=a("tiKp"),i=a("xDBR"),s=o("replace"),u=RegExp.prototype;n({target:"String",proto:!0},{replaceAll:function e(t,a){var n,o,m,d,E,p,h,g,b,f=l(this);if(null!=t){if(n=r(t),n&&(o=String(l("flags"in u?t.flags:c.call(t))),!~o.indexOf("g")))throw TypeError("`.replaceAll` does not allow non-global regexes");if(m=t[s],void 0!==m)return m.call(t,f,a);if(i&&n)return String(f).replace(t,a)}if(d=String(f),E=String(t),""===E)return e.call(d,/(?:)/g,a);if(p=d.split(E),"function"!==typeof a)return p.join(String(a));for(h=p[0],g=h.length,b=1;b<p.length;b++)h+=String(a(E,g,d)),g+=E.length+p[b].length,h+=p[b];return h}})},rb3L:function(e,t,a){var n=a("I+eb"),l=a("P940");n({target:"WeakSet",stat:!0},{of:l})},rkAj:function(e,t,a){var n=a("g6v/"),l=a("0Dky"),r=a("UTVS"),c=Object.defineProperty,o={},i=function(e){throw e};e.exports=function(e,t){if(r(o,e))return o[e];t||(t={});var a=[][e],s=!!r(t,"ACCESSORS")&&t.ACCESSORS,u=r(t,0)?t[0]:i,m=r(t,1)?t[1]:void 0;return o[e]=!!a&&!l((function(){if(s&&!n)return!0;var e={length:-1};s?c(e,1,{enumerable:!0,get:i}):e[1]=1,a.call(e,u,m)}))}},rpNk:function(e,t,a){"use strict";var n,l,r,c=a("4WOD"),o=a("kRJp"),i=a("UTVS"),s=a("tiKp"),u=a("xDBR"),m=s("iterator"),d=!1,E=function(){return this};[].keys&&(r=[].keys(),"next"in r?(l=c(c(r)),l!==Object.prototype&&(n=l)):d=!0),void 0==n&&(n={}),u||i(n,m)||o(n,m,E),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:d}},rstq:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"check-if-a-gist-is-starred"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-gist-is-starred","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a gist is starred"),l.a.createElement(c["a"],{code:"octokit.gists.checkIsStarred({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#check-if-a-gist-is-starred"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#create-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a gist"),l.a.createElement("p",null,"Allows you to add a new gist with one or more files."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' Don\'t name your files "gistfile" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.'),l.a.createElement(c["a"],{code:"octokit.gists.create({\n        files,\nfiles.*.content\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Description of the gist"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Names and content for the files that make up the gist"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*.content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Content of the file"))),l.a.createElement("tr",null,l.a.createElement("td",null,"public"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#create-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.createComment({\n  gist_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The comment text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#create-a-gist-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a gist"),l.a.createElement(c["a"],{code:"octokit.gists.delete({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#delete-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.deleteComment({\n  gist_id,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#delete-a-gist-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"fork-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#fork-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Fork a gist"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": This was previously ",l.a.createElement("code",null,"/gists/:gist_id/fork"),"."),l.a.createElement(c["a"],{code:"octokit.gists.fork({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#fork-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gist"),l.a.createElement(c["a"],{code:"octokit.gists.get({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#get-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.getComment({\n  gist_id,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#get-a-gist-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gist-revision"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gist-revision","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gist revision"),l.a.createElement(c["a"],{code:"octokit.gists.getRevision({\n  gist_id,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#get-a-gist-revision"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gists-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gists-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gists for the authenticated user"),l.a.createElement("p",null,"Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:"),l.a.createElement(c["a"],{code:"octokit.gists.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gists-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gist-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-gist-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gist comments"),l.a.createElement(c["a"],{code:"octokit.gists.listComments({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#list-gist-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gist-commits"},l.a.createElement(r["AnchorLink"],{to:"#list-gist-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gist commits"),l.a.createElement(c["a"],{code:"octokit.gists.listCommits({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gist-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gist-forks"},l.a.createElement(r["AnchorLink"],{to:"#list-gist-forks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gist forks"),l.a.createElement(c["a"],{code:"octokit.gists.listForks({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gist-forks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gists-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gists-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gists for a user"),l.a.createElement("p",null,"Lists public gists for the specified user:"),l.a.createElement(c["a"],{code:"octokit.gists.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gists-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-gists"},l.a.createElement(r["AnchorLink"],{to:"#list-public-gists","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public gists"),l.a.createElement("p",null,"List public gists sorted by most recently updated to least recently updated."),l.a.createElement("p",null,"Note: With ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"pagination"),", you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."),l.a.createElement(c["a"],{code:"octokit.gists.listPublic();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-public-gists"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-starred-gists"},l.a.createElement(r["AnchorLink"],{to:"#list-starred-gists","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List starred gists"),l.a.createElement("p",null,"List the authenticated user's starred gists:"),l.a.createElement(c["a"],{code:"octokit.gists.listStarred();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-starred-gists"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"star-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#star-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Star a gist"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.gists.star({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#star-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unstar-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#unstar-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unstar a gist"),l.a.createElement(c["a"],{code:"octokit.gists.unstar({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#unstar-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#update-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a gist"),l.a.createElement("p",null,"Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged."),l.a.createElement(c["a"],{code:"octokit.gists.update({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Description of the gist"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Names of files to be updated"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*.content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new content of the file"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*.filename"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new filename for the file"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#update-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.updateComment({\n  gist_id,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The comment text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#update-a-gist-comment"},"GitHub Developer Guide documentation"),".")))}},s5qe:function(e,t,a){"use strict";var n=a("2oRo"),l=a("67WC"),r=a("0Dky"),c=n.Int8Array,o=l.aTypedArray,i=l.exportTypedArrayMethod,s=[].toLocaleString,u=[].slice,m=!!c&&r((function(){s.call(new c(1))})),d=r((function(){return[1,2].toLocaleString()!=new c([1,2]).toLocaleString()}))||!r((function(){c.prototype.toLocaleString.call([1,2])}));i("toLocaleString",(function(){return s.apply(m?u.call(o(this)):o(this),arguments)}),d)},sEFX:function(e,t,a){"use strict";var n=a("AO7/"),l=a("9d/t");e.exports=n?{}.toString:function(){return"[object "+l(this)+"]"}},sL9R:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"check-if-a-gist-is-starred"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-gist-is-starred","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a gist is starred"),l.a.createElement(c["a"],{code:"octokit.gists.checkIsStarred({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#check-if-a-gist-is-starred"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#create-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a gist"),l.a.createElement("p",null,"Allows you to add a new gist with one or more files."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:"),' Don\'t name your files "gistfile" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.'),l.a.createElement(c["a"],{code:"octokit.gists.create({\n        files,\nfiles.*.content\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Description of the gist"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Names and content for the files that make up the gist"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*.content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Content of the file"))),l.a.createElement("tr",null,l.a.createElement("td",null,"public"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#create-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.createComment({\n  gist_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The comment text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#create-a-gist-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a gist"),l.a.createElement(c["a"],{code:"octokit.gists.delete({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#delete-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.deleteComment({\n  gist_id,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#delete-a-gist-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"fork-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#fork-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Fork a gist"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": This was previously ",l.a.createElement("code",null,"/gists/:gist_id/fork"),"."),l.a.createElement(c["a"],{code:"octokit.gists.fork({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#fork-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gist"),l.a.createElement(c["a"],{code:"octokit.gists.get({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#get-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.getComment({\n  gist_id,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#get-a-gist-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-gist-revision"},l.a.createElement(r["AnchorLink"],{to:"#get-a-gist-revision","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a gist revision"),l.a.createElement(c["a"],{code:"octokit.gists.getRevision({\n  gist_id,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#get-a-gist-revision"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gists-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gists-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gists for the authenticated user"),l.a.createElement("p",null,"Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:"),l.a.createElement(c["a"],{code:"octokit.gists.list();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gists-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gist-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-gist-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gist comments"),l.a.createElement(c["a"],{code:"octokit.gists.listComments({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#list-gist-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gist-commits"},l.a.createElement(r["AnchorLink"],{to:"#list-gist-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gist commits"),l.a.createElement(c["a"],{code:"octokit.gists.listCommits({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gist-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gist-forks"},l.a.createElement(r["AnchorLink"],{to:"#list-gist-forks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gist forks"),l.a.createElement(c["a"],{code:"octokit.gists.listForks({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gist-forks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-gists-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-gists-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List gists for a user"),l.a.createElement("p",null,"Lists public gists for the specified user:"),l.a.createElement(c["a"],{code:"octokit.gists.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-gists-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-gists"},l.a.createElement(r["AnchorLink"],{to:"#list-public-gists","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public gists"),l.a.createElement("p",null,"List public gists sorted by most recently updated to least recently updated."),l.a.createElement("p",null,"Note: With ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"pagination"),", you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."),l.a.createElement(c["a"],{code:"octokit.gists.listPublic();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-public-gists"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-starred-gists"},l.a.createElement(r["AnchorLink"],{to:"#list-starred-gists","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List starred gists"),l.a.createElement("p",null,"List the authenticated user's starred gists:"),l.a.createElement(c["a"],{code:"octokit.gists.listStarred();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#list-starred-gists"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"star-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#star-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Star a gist"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.gists.star({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#star-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unstar-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#unstar-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unstar a gist"),l.a.createElement(c["a"],{code:"octokit.gists.unstar({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#unstar-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-gist"},l.a.createElement(r["AnchorLink"],{to:"#update-a-gist","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a gist"),l.a.createElement("p",null,"Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged."),l.a.createElement(c["a"],{code:"octokit.gists.update({\n  gist_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Description of the gist"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Names of files to be updated"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*.content"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new content of the file"))),l.a.createElement("tr",null,l.a.createElement("td",null,"files.*.filename"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The new filename for the file"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/gists/#update-a-gist"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-gist-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-a-gist-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a gist comment"),l.a.createElement(c["a"],{code:"octokit.gists.updateComment({\n  gist_id,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"gist_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"gist_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The comment text."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/gists#update-a-gist-comment"},"GitHub Developer Guide documentation"),".")))}},sQ9d:function(e,t,a){var n=a("I+eb"),l=a("eDxR"),r=a("glrk"),c=l.keys,o=l.toKey;n({target:"Reflect",stat:!0},{getOwnMetadataKeys:function(e){var t=arguments.length<2?void 0:o(arguments[1]);return c(r(e),t)}})},spTT:function(e,t,a){var n=a("I+eb"),l=a("qY7S");n({target:"WeakSet",stat:!0},{from:l})},"t+32":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-all-codes-of-conduct"},l.a.createElement(r["AnchorLink"],{to:"#get-all-codes-of-conduct","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all codes of conduct"),l.a.createElement(c["a"],{code:"octokit.codesOfConduct.getAllCodesOfConduct();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/codes_of_conduct/#get-all-codes-of-conduct"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-code-of-conduct"},l.a.createElement(r["AnchorLink"],{to:"#get-a-code-of-conduct","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a code of conduct"),l.a.createElement(c["a"],{code:"octokit.codesOfConduct.getConductCode({\n  key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/codes_of_conduct/#get-a-code-of-conduct"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-code-of-conduct-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-the-code-of-conduct-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the code of conduct for a repository"),l.a.createElement("p",null,"Returns the contents of the repository's code of conduct file, if one is detected."),l.a.createElement("p",null,"A code of conduct is detected if there is a file named ",l.a.createElement("code",null,"CODE_OF_CONDUCT")," in the root directory of the repository. GitHub detects which code of conduct it is using fuzzy matching."),l.a.createElement(c["a"],{code:"octokit.codesOfConduct.getForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/codes_of_conduct/#get-the-code-of-conduct-for-a-repository"},"GitHub Developer Guide documentation"),".")))}},"t/kZ":function(e,t,a){"use strict";var n=a("RIqP");function l(){var e=o(a("q1tI"));return l=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var r=a("dEAq");function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if(Object.prototype.hasOwnProperty.call(e,l)){var r=n?Object.getOwnPropertyDescriptor(e,l):null;r&&(r.get||r.set)?Object.defineProperty(a,l,r):a[l]=e[l]}return a["default"]=e,t&&t.set(e,a),a}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){u(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){return g(e)||h(e,t)||E(e,t)||d()}function d(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function E(e,t){if(e){if("string"===typeof e)return p(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?p(e,t):void 0}}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function h(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function g(e){if(Array.isArray(e))return e}var b=function(e){var t=(0,l().useContext)(r.context),a=t.locale,c=t.routes,o=t.config.locales,i=(0,l().useState)([]),s=m(i,2),u=s[0],d=s[1],E=(0,l().useState)([]),p=m(E,2),h=p[0],g=p[1];return(0,l().useEffect)((function(){d(c.filter((function(e){var t=e.title,n=e.meta,l=(null===n||void 0===n?void 0:n.locale)===a,r=(null===n||void 0===n?void 0:n.locale)===o[0].name||!(null===n||void 0===n?void 0:n.locale)&&(!o.length||a===o[0].name);return t&&(r||l)})).reduce((function(e,t){var a,l,r={title:t.title,path:t.path};return(null===(a=t.meta)||void 0===a?void 0:a.group)&&(r.parent=t.meta.group),e.push(r),e.push.apply(e,n(((null===(l=t.meta)||void 0===l?void 0:l.slugs)||[]).filter((function(e){var a=e.value;return a!==t.title})).map((function(e){return{title:e.value,path:"".concat(t.path,"#").concat(e.heading),parent:r}})))),e}),[]))}),[c.length,a]),(0,l().useEffect)((function(){var t=null===e||void 0===e?void 0:e.trim().toUpperCase();if(t){for(var a=[],n=0;n<u.length&&a.length<6;n+=1)u[n].title.toUpperCase().indexOf(t)>-1&&a.push(u[n]);g(a)}else g([])}),[e,u.length]),h},f=function(){var e=(0,l().useContext)(r.context),t=e.config.algolia,a=(0,l().useCallback)((function(e){window.docsearch(s({inputSelector:e},t))}),[t]);return a},y=function(e){var t=(0,l().useContext)(r.context),a=t.config,n=b(e),c=f();return a.algolia?c:n};t["default"]=y},tEiQ:function(e,t,a){"use strict";(function(e){var n=a("q1tI"),l=a.n(n),r=a("dI71"),c=a("17x9"),o=a.n(c),i=1073741823,s="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof e?e:{};function u(){var e="__global_unique_id__";return s[e]=(s[e]||0)+1}function m(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function d(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(a,n){e=a,t.forEach((function(t){return t(e,n)}))}}}function E(e){return Array.isArray(e)?e[0]:e}function p(e,t){var a,l,c="__create-react-context-"+u()+"__",s=function(e){function a(){var t;return t=e.apply(this,arguments)||this,t.emitter=d(t.props.value),t}Object(r["a"])(a,e);var n=a.prototype;return n.getChildContext=function(){var e;return e={},e[c]=this.emitter,e},n.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var a,n=this.props.value,l=e.value;m(n,l)?a=0:(a="function"===typeof t?t(n,l):i,a|=0,0!==a&&this.emitter.set(e.value,a))}},n.render=function(){return this.props.children},a}(n["Component"]);s.childContextTypes=(a={},a[c]=o.a.object.isRequired,a);var p=function(t){function a(){var e;return e=t.apply(this,arguments)||this,e.state={value:e.getValue()},e.onUpdate=function(t,a){var n=0|e.observedBits;0!==(n&a)&&e.setState({value:e.getValue()})},e}Object(r["a"])(a,t);var n=a.prototype;return n.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=void 0===t||null===t?i:t},n.componentDidMount=function(){this.context[c]&&this.context[c].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=void 0===e||null===e?i:e},n.componentWillUnmount=function(){this.context[c]&&this.context[c].off(this.onUpdate)},n.getValue=function(){return this.context[c]?this.context[c].get():e},n.render=function(){return E(this.props.children)(this.state.value)},a}(n["Component"]);return p.contextTypes=(l={},l[c]=o.a.object,l),{Provider:s,Consumer:p}}var h=l.a.createContext||p;t["a"]=h}).call(this,a("yLpj"))},tW5y:function(e,t,a){"use strict";var n=a("hh1v"),l=a("m/L8"),r=a("4WOD"),c=a("tiKp"),o=c("hasInstance"),i=Function.prototype;o in i||l.f(i,o,{value:function(e){if("function"!=typeof this||!n(e))return!1;if(!n(this.prototype))return e instanceof this;while(e=r(e))if(this.prototype===e)return!0;return!1}})},tXUg:function(e,t,a){var n,l,r,c,o,i,s,u,m=a("2oRo"),d=a("Bs8V").f,E=a("xrYK"),p=a("LPSS").set,h=a("HNyW"),g=m.MutationObserver||m.WebKitMutationObserver,b=m.process,f=m.Promise,y="process"==E(b),k=d(m,"queueMicrotask"),v=k&&k.value;v||(n=function(){var e,t;y&&(e=b.domain)&&e.exit();while(l){t=l.fn,l=l.next;try{t()}catch(a){throw l?c():r=void 0,a}}r=void 0,e&&e.enter()},y?c=function(){b.nextTick(n)}:g&&!h?(o=!0,i=document.createTextNode(""),new g(n).observe(i,{characterData:!0}),c=function(){i.data=o=!o}):f&&f.resolve?(s=f.resolve(void 0),u=s.then,c=function(){u.call(s,n)}):c=function(){p.call(m,n)}),e.exports=v||function(e){var t={fn:e,next:void 0};r&&(r.next=t),l||(l=t,c()),r=t}},tiKp:function(e,t,a){var n=a("2oRo"),l=a("VpIT"),r=a("UTVS"),c=a("kOOl"),o=a("STAE"),i=a("/b8u"),s=l("wks"),u=n.Symbol,m=i?u:u&&u.withoutSetter||c;e.exports=function(e){return r(s,e)||(o&&r(u,e)?s[e]=u[e]:s[e]=m("Symbol."+e)),s[e]}},tijO:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("glrk"),c=a("A2ZE"),o=a("WGBp"),i=a("ImZN");n({target:"Set",proto:!0,real:!0,forced:l},{find:function(e){var t=r(this),a=o(t),n=c(e,arguments.length>1?arguments[1]:void 0,3);return i(a,(function(e){if(n(e,e,t))return i.stop(e)}),void 0,!1,!0).result}})},tjZM:function(e,t,a){var n=a("dG/n");n("asyncIterator")},toAj:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ppGB"),r=a("QIpd"),c=a("EUja"),o=a("0Dky"),i=1..toFixed,s=Math.floor,u=function(e,t,a){return 0===t?a:t%2===1?u(e,t-1,a*e):u(e*e,t/2,a)},m=function(e){var t=0,a=e;while(a>=4096)t+=12,a/=4096;while(a>=2)t+=1,a/=2;return t},d=i&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!o((function(){i.call({})}));n({target:"Number",proto:!0,forced:d},{toFixed:function(e){var t,a,n,o,i=r(this),d=l(e),E=[0,0,0,0,0,0],p="",h="0",g=function(e,t){var a=-1,n=t;while(++a<6)n+=e*E[a],E[a]=n%1e7,n=s(n/1e7)},b=function(e){var t=6,a=0;while(--t>=0)a+=E[t],E[t]=s(a/e),a=a%e*1e7},f=function(){var e=6,t="";while(--e>=0)if(""!==t||0===e||0!==E[e]){var a=String(E[e]);t=""===t?a:t+c.call("0",7-a.length)+a}return t};if(d<0||d>20)throw RangeError("Incorrect fraction digits");if(i!=i)return"NaN";if(i<=-1e21||i>=1e21)return String(i);if(i<0&&(p="-",i=-i),i>1e-21)if(t=m(i*u(2,69,1))-69,a=t<0?i*u(2,-t,1):i/u(2,t,1),a*=4503599627370496,t=52-t,t>0){g(0,a),n=d;while(n>=7)g(1e7,0),n-=7;g(u(10,n,1),0),n=t-1;while(n>=23)b(1<<23),n-=23;b(1<<n),g(1,1),b(2),h=f()}else g(0,a),g(1<<-t,0),h=f()+c.call("0",d);return d>0?(o=h.length,h=p+(o<=d?"0."+c.call("0",d-o)+h:h.slice(0,o-d)+"."+h.slice(o-d))):h=p+h,h}})},tycR:function(e,t,a){var n=a("A2ZE"),l=a("RK3t"),r=a("ewvW"),c=a("UMSQ"),o=a("ZfDv"),i=[].push,s=function(e){var t=1==e,a=2==e,s=3==e,u=4==e,m=6==e,d=5==e||m;return function(E,p,h,g){for(var b,f,y=r(E),k=l(y),v=n(p,h,3),w=c(k.length),L=0,A=g||o,x=t?A(E,w):a?A(E,0):void 0;w>L;L++)if((d||L in k)&&(b=k[L],f=v(b,L,y),e))if(t)x[L]=f;else if(f)switch(e){case 3:return!0;case 5:return b;case 6:return L;case 2:i.call(x,b)}else if(u)return!1;return m?-1:s||u?u:x}};e.exports={forEach:s(0),map:s(1),filter:s(2),some:s(3),every:s(4),find:s(5),findIndex:s(6)}},"uJ+Q":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-a-secret-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#get-a-secret-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a secret scanning alert"),l.a.createElement("p",null,"Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the ",l.a.createElement("code",null,"repo")," scope or ",l.a.createElement("code",null,"security_events")," scope."),l.a.createElement("p",null,"GitHub Apps must have the ",l.a.createElement("code",null,"secret_scanning_alerts")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.secretScanning.getAlert({\n  owner,\n  repo,\n  alert_number,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The security alert number, found at the end of the security alert's URL."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/secret-scanning#get-a-secret-scanning-alert"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-secret-scanning-alerts-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-secret-scanning-alerts-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List secret scanning alerts for a repository"),l.a.createElement("p",null,"Lists all secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the ",l.a.createElement("code",null,"repo")," scope or ",l.a.createElement("code",null,"security_events")," scope."),l.a.createElement("p",null,"GitHub Apps must have the ",l.a.createElement("code",null,"secret_scanning_alerts")," read permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.secretScanning.listAlertsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"resolved")," to only list secret scanning alerts in a specific state."))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/secret-scanning#list-secret-scanning-alerts-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-secret-scanning-alert"},l.a.createElement(r["AnchorLink"],{to:"#update-a-secret-scanning-alert","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a secret scanning alert"),l.a.createElement("p",null,"Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the ",l.a.createElement("code",null,"repo")," scope or ",l.a.createElement("code",null,"security_events")," scope."),l.a.createElement("p",null,"GitHub Apps must have the ",l.a.createElement("code",null,"secret_scanning_alerts")," write permission to use this endpoint."),l.a.createElement(c["a"],{code:"octokit.secretScanning.updateAlert({\n  owner,\n  repo,\n  alert_number,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"alert_number"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The security alert number, found at the end of the security alert's URL."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Sets the state of the secret scanning alert. Can be either ",l.a.createElement("code",null,"open")," or ",l.a.createElement("code",null,"resolved"),". You must provide ",l.a.createElement("code",null,"resolution")," when you set the state to ",l.a.createElement("code",null,"resolved"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"resolution"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required when the ",l.a.createElement("code",null,"state")," is ",l.a.createElement("code",null,"resolved"),".")," The reason for resolving the alert. Can be one of ",l.a.createElement("code",null,"false_positive"),", ",l.a.createElement("code",null,"wont_fix"),", ",l.a.createElement("code",null,"revoked"),", or ",l.a.createElement("code",null,"used_in_tests"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/secret-scanning#update-a-secret-scanning-alert"},"GitHub Developer Guide documentation"),".")))}},uWhJ:function(e,t,a){var n=a("I+eb"),l=Math.PI/180;n({target:"Math",stat:!0},{radians:function(e){return e*l}})},unQa:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ImZN"),r=a("HAuM");n({target:"Map",stat:!0},{keyBy:function(e,t){var a=new this;r(t);var n=r(a.set);return l(e,(function(e){n.call(a,t(e),e)})),a}})},uqXc:function(e,t,a){var n=a("I+eb"),l=a("5Yz+");n({target:"Array",proto:!0,forced:l!==[].lastIndexOf},{lastIndexOf:l})},uy83:function(e,t,a){var n=a("0Dky");e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},v5b1:function(e,t,a){"use strict";var n=a("I+eb"),l=a("g6v/"),r=a("6x0u"),c=a("ewvW"),o=a("wE6v"),i=a("4WOD"),s=a("Bs8V").f;l&&n({target:"Object",proto:!0,forced:r},{__lookupGetter__:function(e){var t,a=c(this),n=o(e,!0);do{if(t=s(a,n))return t.get}while(a=i(a))}})},vRGJ:function(e,t,a){var n=a("49sm");e.exports=f,e.exports.parse=r,e.exports.compile=c,e.exports.tokensToFunction=s,e.exports.tokensToRegExp=b;var l=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function r(e,t){var a,n=[],r=0,c=0,o="",i=t&&t.delimiter||"/";while(null!=(a=l.exec(e))){var s=a[0],d=a[1],E=a.index;if(o+=e.slice(c,E),c=E+s.length,d)o+=d[1];else{var p=e[c],h=a[2],g=a[3],b=a[4],f=a[5],y=a[6],k=a[7];o&&(n.push(o),o="");var v=null!=h&&null!=p&&p!==h,w="+"===y||"*"===y,L="?"===y||"*"===y,A=a[2]||i,x=b||f;n.push({name:g||r++,prefix:h||"",delimiter:A,optional:L,repeat:w,partial:v,asterisk:!!k,pattern:x?m(x):k?".*":"[^"+u(A)+"]+?"})}}return c<e.length&&(o+=e.substr(c)),o&&n.push(o),n}function c(e,t){return s(r(e,t),t)}function o(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function s(e,t){for(var a=new Array(e.length),l=0;l<e.length;l++)"object"===typeof e[l]&&(a[l]=new RegExp("^(?:"+e[l].pattern+")$",E(t)));return function(t,l){for(var r="",c=t||{},s=l||{},u=s.pretty?o:encodeURIComponent,m=0;m<e.length;m++){var d=e[m];if("string"!==typeof d){var E,p=c[d.name];if(null==p){if(d.optional){d.partial&&(r+=d.prefix);continue}throw new TypeError('Expected "'+d.name+'" to be defined')}if(n(p)){if(!d.repeat)throw new TypeError('Expected "'+d.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(d.optional)continue;throw new TypeError('Expected "'+d.name+'" to not be empty')}for(var h=0;h<p.length;h++){if(E=u(p[h]),!a[m].test(E))throw new TypeError('Expected all "'+d.name+'" to match "'+d.pattern+'", but received `'+JSON.stringify(E)+"`");r+=(0===h?d.prefix:d.delimiter)+E}}else{if(E=d.asterisk?i(p):u(p),!a[m].test(E))throw new TypeError('Expected "'+d.name+'" to match "'+d.pattern+'", but received "'+E+'"');r+=d.prefix+E}}else r+=d}return r}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function m(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function d(e,t){return e.keys=t,e}function E(e){return e&&e.sensitive?"":"i"}function p(e,t){var a=e.source.match(/\((?!\?)/g);if(a)for(var n=0;n<a.length;n++)t.push({name:n,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return d(e,t)}function h(e,t,a){for(var n=[],l=0;l<e.length;l++)n.push(f(e[l],t,a).source);var r=new RegExp("(?:"+n.join("|")+")",E(a));return d(r,t)}function g(e,t,a){return b(r(e,a),t,a)}function b(e,t,a){n(t)||(a=t||a,t=[]),a=a||{};for(var l=a.strict,r=!1!==a.end,c="",o=0;o<e.length;o++){var i=e[o];if("string"===typeof i)c+=u(i);else{var s=u(i.prefix),m="(?:"+i.pattern+")";t.push(i),i.repeat&&(m+="(?:"+s+m+")*"),m=i.optional?i.partial?s+"("+m+")?":"(?:"+s+"("+m+"))?":s+"("+m+")",c+=m}}var p=u(a.delimiter||"/"),h=c.slice(-p.length)===p;return l||(c=(h?c.slice(0,-p.length):c)+"(?:"+p+"(?=$))?"),c+=r?"$":l&&h?"":"(?="+p+"|$)",d(new RegExp("^"+c,E(a)),t)}function f(e,t,a){return n(t)||(a=t||a,t=[]),a=a||{},e instanceof RegExp?p(e,t):n(e)?h(e,t,a):g(e,t,a)}},vZi8:function(e,t,a){var n=a("I+eb"),l=a("YGK4"),r=a("eDxR"),c=a("glrk"),o=a("4WOD"),i=a("ImZN"),s=r.keys,u=r.toKey,m=function(e){var t=[];return i(e,t.push,t),t},d=function(e,t){var a=s(e,t),n=o(e);if(null===n)return a;var r=d(n,t);return r.length?a.length?m(new l(a.concat(r))):r:a};n({target:"Reflect",stat:!0},{getMetadataKeys:function(e){var t=arguments.length<2?void 0:u(arguments[1]);return d(c(e),t)}})},vdRX:function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{DEG_PER_RAD:Math.PI/180})},viRO:function(e,t,a){"use strict";var n=a("MgzW"),l="function"===typeof Symbol&&Symbol.for,r=l?Symbol.for("react.element"):60103,c=l?Symbol.for("react.portal"):60106,o=l?Symbol.for("react.fragment"):60107,i=l?Symbol.for("react.strict_mode"):60108,s=l?Symbol.for("react.profiler"):60114,u=l?Symbol.for("react.provider"):60109,m=l?Symbol.for("react.context"):60110,d=l?Symbol.for("react.forward_ref"):60112,E=l?Symbol.for("react.suspense"):60113,p=l?Symbol.for("react.memo"):60115,h=l?Symbol.for("react.lazy"):60116,g="function"===typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,a=1;a<arguments.length;a++)t+="&args[]="+encodeURIComponent(arguments[a]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function k(e,t,a){this.props=e,this.context=t,this.refs=y,this.updater=a||f}function v(){}function w(e,t,a){this.props=e,this.context=t,this.refs=y,this.updater=a||f}k.prototype.isReactComponent={},k.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},k.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=k.prototype;var L=w.prototype=new v;L.constructor=w,n(L,k.prototype),L.isPureReactComponent=!0;var A={current:null},x=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function G(e,t,a){var n,l={},c=null,o=null;if(null!=t)for(n in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(c=""+t.key),t)x.call(t,n)&&!_.hasOwnProperty(n)&&(l[n]=t[n]);var i=arguments.length-2;if(1===i)l.children=a;else if(1<i){for(var s=Array(i),u=0;u<i;u++)s[u]=arguments[u+2];l.children=s}if(e&&e.defaultProps)for(n in i=e.defaultProps,i)void 0===l[n]&&(l[n]=i[n]);return{$$typeof:r,type:e,key:c,ref:o,props:l,_owner:A.current}}function P(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function I(e){return"object"===typeof e&&null!==e&&e.$$typeof===r}function S(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}var T=/\/+/g,N=[];function j(e,t,a,n){if(N.length){var l=N.pop();return l.result=e,l.keyPrefix=t,l.func=a,l.context=n,l.count=0,l}return{result:e,keyPrefix:t,func:a,context:n,count:0}}function H(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function q(e,t,a,n){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var o=!1;if(null===e)o=!0;else switch(l){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case r:case c:o=!0}}if(o)return a(n,e,""===t?"."+z(e,0):t),1;if(o=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){l=e[i];var s=t+z(l,i);o+=q(l,s,a,n)}else if(null===e||"object"!==typeof e?s=null:(s=g&&e[g]||e["@@iterator"],s="function"===typeof s?s:null),"function"===typeof s)for(e=s.call(e),i=0;!(l=e.next()).done;)l=l.value,s=t+z(l,i++),o+=q(l,s,a,n);else if("object"===l)throw a=""+e,Error(b(31,"[object Object]"===a?"object with keys {"+Object.keys(e).join(", ")+"}":a,""));return o}function D(e,t,a){return null==e?0:q(e,"",t,a)}function z(e,t){return"object"===typeof e&&null!==e&&null!=e.key?S(e.key):t.toString(36)}function C(e,t){e.func.call(e.context,t,e.count++)}function O(e,t,a){var n=e.result,l=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?R(e,n,a,(function(e){return e})):null!=e&&(I(e)&&(e=P(e,l+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(T,"$&/")+"/")+a)),n.push(e))}function R(e,t,a,n,l){var r="";null!=a&&(r=(""+a).replace(T,"$&/")+"/"),t=j(t,r,n,l),D(e,O,t),H(t)}var F={current:null};function U(){var e=F.current;if(null===e)throw Error(b(321));return e}var M={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:A,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:function(e,t,a){if(null==e)return e;var n=[];return R(e,n,null,t,a),n},forEach:function(e,t,a){if(null==e)return e;t=j(null,null,t,a),D(e,C,t),H(t)},count:function(e){return D(e,(function(){return null}),null)},toArray:function(e){var t=[];return R(e,t,null,(function(e){return e})),t},only:function(e){if(!I(e))throw Error(b(143));return e}},t.Component=k,t.Fragment=o,t.Profiler=s,t.PureComponent=w,t.StrictMode=i,t.Suspense=E,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error(b(267,e));var l=n({},e.props),c=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=A.current),void 0!==t.key&&(c=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in t)x.call(t,u)&&!_.hasOwnProperty(u)&&(l[u]=void 0===t[u]&&void 0!==s?s[u]:t[u])}var u=arguments.length-2;if(1===u)l.children=a;else if(1<u){s=Array(u);for(var m=0;m<u;m++)s[m]=arguments[m+2];l.children=s}return{$$typeof:r,type:e.type,key:c,ref:o,props:l,_owner:i}},t.createContext=function(e,t){return void 0===t&&(t=null),e={$$typeof:m,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null},e.Provider={$$typeof:u,_context:e},e.Consumer=e},t.createElement=G,t.createFactory=function(e){var t=G.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return U().useCallback(e,t)},t.useContext=function(e,t){return U().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return U().useEffect(e,t)},t.useImperativeHandle=function(e,t,a){return U().useImperativeHandle(e,t,a)},t.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},t.useMemo=function(e,t){return U().useMemo(e,t)},t.useReducer=function(e,t,a){return U().useReducer(e,t,a)},t.useRef=function(e){return U().useRef(e)},t.useState=function(e){return U().useState(e)},t.version="16.14.0"},vo4V:function(e,t,a){var n=a("90hW"),l=Math.abs,r=Math.pow,c=r(2,-52),o=r(2,-23),i=r(2,127)*(2-o),s=r(2,-126),u=function(e){return e+1/c-1/c};e.exports=Math.fround||function(e){var t,a,r=l(e),m=n(e);return r<s?m*u(r/s/o)*s*o:(t=(1+o/c)*r,a=t-(t-r),a>i||a!=a?m*(1/0):m*a)}},voyM:function(e,t){e.exports=Math.scale||function(e,t,a,n,l){return 0===arguments.length||e!=e||t!=t||a!=a||n!=n||l!=l?NaN:e===1/0||e===-1/0?e:(e-t)*(l-n)/(a-t)+n}},vpkV:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isSSR=t.getWindowInitialProps=t.isBrowser=void 0;var n=function(){return"undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement};t.isBrowser=n;var l=function(){return n()?window.g_initialProps:void 0};t.getWindowInitialProps=l;var r=function(){return n()&&window.g_useSSR};t.isSSR=r},vxnP:function(e,t,a){"use strict";var n=a("I+eb");n({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},vzwy:function(e,t,a){"use strict";var n=a("I+eb"),l=a("ppGB"),r=a("wg0c"),c="Invalid number representation",o="Invalid radix",i=/^[\da-z]+$/;n({target:"Number",stat:!0},{fromString:function(e,t){var a,n,s=1;if("string"!=typeof e)throw TypeError(c);if(!e.length)throw SyntaxError(c);if("-"==e.charAt(0)&&(s=-1,e=e.slice(1),!e.length))throw SyntaxError(c);if(a=void 0===t?10:l(t),a<2||a>36)throw RangeError(o);if(!i.test(e)||(n=r(e,a)).toString(a)!==e)throw SyntaxError(c);return s*n}})},w1rZ:function(e,t,a){var n=a("I+eb"),l=a("fhKU");n({target:"Number",stat:!0,forced:Number.parseFloat!=l},{parseFloat:l})},w7s6:function(e,t,a){var n=a("I+eb");n({target:"Math",stat:!0},{RAD_PER_DEG:180/Math.PI})},wE6v:function(e,t,a){var n=a("hh1v");e.exports=function(e,t){if(!n(e))return e;var a,l;if(t&&"function"==typeof(a=e.toString)&&!n(l=a.call(e)))return l;if("function"==typeof(a=e.valueOf)&&!n(l=a.call(e)))return l;if(!t&&"function"==typeof(a=e.toString)&&!n(l=a.call(e)))return l;throw TypeError("Can't convert object to primitive value")}},wHa0:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"add-project-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#add-project-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add project collaborator"),l.a.createElement("p",null,"Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to add a collaborator."),l.a.createElement(c["a"],{code:"octokit.projects.addCollaborator({\n  project_id,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant the collaborator."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#add-project-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#create-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a project card"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),': GitHub\'s REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the ',l.a.createElement("code",null,"pull_request")," key."),l.a.createElement("p",null,"Be aware that the ",l.a.createElement("code",null,"id"),' of a pull request returned from "Issues" endpoints will be an ',l.a.createElement("em",null,"issue id"),'. To find out the pull request id, use the "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests"),'" endpoint.'),l.a.createElement(c["a"],{code:"octokit.projects.createCard({\n  column_id,\n  note,\n  content_id,\n  content_type,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"note"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The project card's note"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The unique identifier of the content associated with the card"))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The piece of content associated with the card"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#create-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#create-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a project column"),l.a.createElement(c["a"],{code:"octokit.projects.createColumn({\n  project_id,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project column"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#create-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-user-project"},l.a.createElement(r["AnchorLink"],{to:"#create-a-user-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a user project"),l.a.createElement(c["a"],{code:"octokit.projects.createForAuthenticatedUser({\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Body of the project"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#create-a-user-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-project"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization project"),l.a.createElement("p",null,"Creates an organization project board. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.createForOrg({\n  org,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the project."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the project."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#create-an-organization-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-project"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository project"),l.a.createElement("p",null,"Creates a repository project board. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.createForRepo({\n  owner,\n  repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the project."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The description of the project."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#create-a-repository-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-project"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a project"),l.a.createElement("p",null,"Deletes a project board. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled."),l.a.createElement(c["a"],{code:"octokit.projects.delete({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#delete-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a project card"),l.a.createElement(c["a"],{code:"octokit.projects.deleteCard({\n  card_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#delete-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a project column"),l.a.createElement(c["a"],{code:"octokit.projects.deleteColumn({\n  column_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#delete-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-project"},l.a.createElement(r["AnchorLink"],{to:"#get-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a project"),l.a.createElement("p",null,"Gets a project by its ",l.a.createElement("code",null,"id"),". Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.get({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#get-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#get-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a project card"),l.a.createElement(c["a"],{code:"octokit.projects.getCard({\n  card_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#get-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#get-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a project column"),l.a.createElement(c["a"],{code:"octokit.projects.getColumn({\n  column_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#get-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-project-permission-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-project-permission-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get project permission for a user"),l.a.createElement("p",null,"Returns the collaborator's permission level for an organization project. Possible values for the ",l.a.createElement("code",null,"permission")," key: ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"write"),", ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"none"),". You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to review a user's permission level."),l.a.createElement(c["a"],{code:"octokit.projects.getPermissionForUser({\n  project_id,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#get-project-permission-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-project-cards"},l.a.createElement(r["AnchorLink"],{to:"#list-project-cards","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List project cards"),l.a.createElement(c["a"],{code:"octokit.projects.listCards({\n  column_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"archived_state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters the project cards that are returned by the card's state. Can be one of ",l.a.createElement("code",null,"all"),",",l.a.createElement("code",null,"archived"),", or ",l.a.createElement("code",null,"not_archived"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#list-project-cards"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-project-collaborators"},l.a.createElement(r["AnchorLink"],{to:"#list-project-collaborators","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List project collaborators"),l.a.createElement("p",null,"Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to list collaborators."),l.a.createElement(c["a"],{code:"octokit.projects.listCollaborators({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"affiliation"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filters the collaborators by their affiliation. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"outside"),": Outside collaborators of a project that are not a member of the project's organization.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"direct"),": Collaborators with permissions to a project, regardless of organization membership status.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All collaborators the authenticated user can see."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#list-project-collaborators"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-project-columns"},l.a.createElement(r["AnchorLink"],{to:"#list-project-columns","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List project columns"),l.a.createElement(c["a"],{code:"octokit.projects.listColumns({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#list-project-columns"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization projects"),l.a.createElement("p",null,"Lists the projects in an organization. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the projects to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#list-organization-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository projects"),l.a.createElement("p",null,"Lists the projects in a repository. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.listForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the projects to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#list-repository-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-user-projects"},l.a.createElement(r["AnchorLink"],{to:"#list-user-projects","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List user projects"),l.a.createElement(c["a"],{code:"octokit.projects.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Indicates the state of the projects to return. Can be either ",l.a.createElement("code",null,"open"),", ",l.a.createElement("code",null,"closed"),", or ",l.a.createElement("code",null,"all"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#list-user-projects"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"move-a-project-card"},l.a.createElement(r["AnchorLink"],{to:"#move-a-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Move a project card"),l.a.createElement(c["a"],{code:"octokit.projects.moveCard({\n  card_id,\n  position,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The position of the card in a column"))),l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The unique identifier of the column the card should be moved to"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#move-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"move-a-project-column"},l.a.createElement(r["AnchorLink"],{to:"#move-a-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Move a project column"),l.a.createElement(c["a"],{code:"octokit.projects.moveColumn({\n  column_id,\n  position,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The position of the column in a project"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#move-a-project-column"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-user-as-a-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#remove-user-as-a-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove user as a collaborator"),l.a.createElement("p",null,"Removes a collaborator from an organization project. You must be an organization owner or a project ",l.a.createElement("code",null,"admin")," to remove a collaborator."),l.a.createElement(c["a"],{code:"octokit.projects.removeCollaborator({\n  project_id,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#remove-project-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-project"},l.a.createElement(r["AnchorLink"],{to:"#update-a-project","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a project"),l.a.createElement("p",null,"Updates a project board's information. Returns a ",l.a.createElement("code",null,"404 Not Found")," status if projects are disabled. If you do not have sufficient privileges to perform this action, a ",l.a.createElement("code",null,"401 Unauthorized")," or ",l.a.createElement("code",null,"410 Gone")," status is returned."),l.a.createElement(c["a"],{code:"octokit.projects.update({\n  project_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"project_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Body of the project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"State of the project; either 'open' or 'closed'"))),l.a.createElement("tr",null,l.a.createElement("td",null,"organization_permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The baseline permission that all organization members have on this project"))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether or not this project can be seen by everyone."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/projects/#update-a-project"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-existing-project-card"},l.a.createElement(r["AnchorLink"],{to:"#update-an-existing-project-card","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an existing project card"),l.a.createElement(c["a"],{code:"octokit.projects.updateCard({\n  card_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"card_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"card_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"note"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The project card's note"))),l.a.createElement("tr",null,l.a.createElement("td",null,"archived"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether or not the card is archived"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#update-a-project-card"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-an-existing-project-column"},l.a.createElement(r["AnchorLink"],{to:"#update-an-existing-project-column","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update an existing project column"),l.a.createElement(c["a"],{code:"octokit.projects.updateColumn({\n  column_id,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"column_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"column_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Name of the project column"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/projects#update-a-project-column"},"GitHub Developer Guide documentation"),".")))}},wTVA:function(e,t){function a(e){if(Array.isArray(e))return e}e.exports=a},wfmh:function(e,t,a){var n=a("I+eb"),l=a("ImZN"),r=a("hBjN");n({target:"Object",stat:!0},{fromEntries:function(e){var t={};return l(e,(function(e,a){r(t,e,a)}),void 0,!0),t}})},wg0c:function(e,t,a){var n=a("2oRo"),l=a("WKiH").trim,r=a("WJkJ"),c=n.parseInt,o=/^[+-]?0[Xx]/,i=8!==c(r+"08")||22!==c(r+"0x16");e.exports=i?function(e,t){var a=l(String(e));return c(a,t>>>0||(o.test(a)?16:10))}:c},wgYD:function(e,t,a){"use strict";var n=a("I+eb"),l=a("xDBR"),r=a("Cg3G");n({target:"Map",proto:!0,real:!0,forced:l},{deleteAll:function(){return r.apply(this,arguments)}})},wkBT:function(e,t){function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}e.exports=a},wx14:function(e,t,a){"use strict";function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},n.apply(this,arguments)}a.d(t,"a",(function(){return n}))},x41O:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-github-actions-billing-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-billing-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions billing for an organization"),l.a.createElement("p",null,"Gets the summary of the free and paid GitHub Actions minutes used."),l.a.createElement("p",null,'Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"admin:org")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubActionsBillingOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-actions-billing-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-actions-billing-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-github-actions-billing-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Actions billing for a user"),l.a.createElement("p",null,"Gets the summary of the free and paid GitHub Actions minutes used."),l.a.createElement("p",null,'Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions"},"Managing billing for GitHub Actions"),'".'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubActionsBillingUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-actions-billing-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-packages-billing-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-github-packages-billing-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Packages billing for an organization"),l.a.createElement("p",null,"Gets the free and paid storage usued for GitHub Packages in gigabytes."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"admin:org")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubPackagesBillingOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-packages-billing-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-packages-billing-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-github-packages-billing-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Packages billing for a user"),l.a.createElement("p",null,"Gets the free and paid storage used for GitHub Packages in gigabytes."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getGithubPackagesBillingUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-github-packages-billing-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-shared-storage-billing-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-shared-storage-billing-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get shared storage billing for an organization"),l.a.createElement("p",null,"Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"admin:org")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getSharedStorageBillingOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-shared-storage-billing-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-shared-storage-billing-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-shared-storage-billing-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get shared storage billing for a user"),l.a.createElement("p",null,"Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages."),l.a.createElement("p",null,'Paid minutes only apply to packages stored for private repositories. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages"},"Managing billing for GitHub Packages"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"user")," scope."),l.a.createElement(c["a"],{code:"octokit.billing.getSharedStorageBillingUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/billing/#get-shared-storage-billing-for-a-user"},"GitHub Developer Guide documentation"),".")))}},xDBR:function(e,t){e.exports=!1},xG3u:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"check-if-a-repository-is-starred-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-repository-is-starred-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a repository is starred by the authenticated user"),l.a.createElement(c["a"],{code:"octokit.activity.checkRepoIsStarredByAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-subscription"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository subscription"),l.a.createElement("p",null,"This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-repository-subscription"},"set the repository's subscription manually"),"."),l.a.createElement(c["a"],{code:"octokit.activity.deleteRepoSubscription({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-repository-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-thread-subscription"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-thread-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a thread subscription"),l.a.createElement("p",null,"Mutes all future notifications for a conversation until you comment on the thread or get an ",l.a.createElement("strong",null,"@mention"),". If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-thread-subscription"},"Set a thread subscription")," endpoint and set ",l.a.createElement("code",null,"ignore")," to ",l.a.createElement("code",null,"true"),"."),l.a.createElement(c["a"],{code:"octokit.activity.deleteThreadSubscription({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-thread-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-feeds"},l.a.createElement(r["AnchorLink"],{to:"#get-feeds","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get feeds"),l.a.createElement("p",null,"GitHub provides several timeline resources in ",l.a.createElement(r["Link"],{to:"http://en.wikipedia.org/wiki/Atom_(standard)"},"Atom")," format. The Feeds API lists all the feeds available to the authenticated user:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Timeline"),": The GitHub global public timeline"),l.a.createElement("li",null,l.a.createElement("strong",null,"User"),": The public timeline for any user, using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia"},"URI template")),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user public"),": The public timeline for the authenticated user"),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user"),": The private timeline for the authenticated user"),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user actor"),": The private timeline for activity created by the authenticated user"),l.a.createElement("li",null,l.a.createElement("strong",null,"Current user organizations"),": The private timeline for the organizations the authenticated user is a member of."),l.a.createElement("li",null,l.a.createElement("strong",null,"Security advisories"),": A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.")),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Private feeds are only returned when ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication"},"authenticating via Basic Auth")," since current feed URIs use the older, non revocable auth tokens."),l.a.createElement(c["a"],{code:"octokit.activity.getFeeds();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-feeds"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-subscription"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository subscription"),l.a.createElement(c["a"],{code:"octokit.activity.getRepoSubscription({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-repository-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-thread"},l.a.createElement(r["AnchorLink"],{to:"#get-a-thread","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a thread"),l.a.createElement(c["a"],{code:"octokit.activity.getThread({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-thread"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-thread-subscription-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#get-a-thread-subscription-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a thread subscription for the authenticated user"),l.a.createElement("p",null,"This checks to see if the current user is subscribed to a thread. You can also ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-repository-subscription"},"get a repository subscription"),"."),l.a.createElement("p",null,"Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were ",l.a.createElement("strong",null,"@mentioned"),", or manually subscribe to a thread."),l.a.createElement(c["a"],{code:"octokit.activity.getThreadSubscriptionForAuthenticatedUser({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-events-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-events-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List events for the authenticated user"),l.a.createElement("p",null,"If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events."),l.a.createElement(c["a"],{code:"octokit.activity.listEventsForAuthenticatedUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-events-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-notifications-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-notifications-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List notifications for the authenticated user"),l.a.createElement("p",null,"List all notifications for the current user, sorted by most recently updated."),l.a.createElement(c["a"],{code:"octokit.activity.listNotificationsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"all"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", show notifications marked as read."))),l.a.createElement("tr",null,l.a.createElement("td",null,"participating"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", only shows notifications in which the user is directly participating or mentioned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"before"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated before the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-events-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-events-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization events for the authenticated user"),l.a.createElement("p",null,"This is the user's organization dashboard. You must be authenticated as the user to view this."),l.a.createElement(c["a"],{code:"octokit.activity.listOrgEventsForAuthenticatedUser({\n  username,\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-organization-events-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events"),l.a.createElement("p",null,"We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago."),l.a.createElement(c["a"],{code:"octokit.activity.listPublicEvents();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events-for-a-network-of-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events-for-a-network-of-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events for a network of repositories"),l.a.createElement(c["a"],{code:"octokit.activity.listPublicEventsForRepoNetwork({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events-for-a-network-of-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events for a user"),l.a.createElement(c["a"],{code:"octokit.activity.listPublicEventsForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-organization-events"},l.a.createElement(r["AnchorLink"],{to:"#list-public-organization-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public organization events"),l.a.createElement(c["a"],{code:"octokit.activity.listPublicOrgEvents({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-organization-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-events-received-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-events-received-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List events received by the authenticated user"),l.a.createElement("p",null,"These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events."),l.a.createElement(c["a"],{code:"octokit.activity.listReceivedEventsForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-events-received-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-events-received-by-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-public-events-received-by-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public events received by a user"),l.a.createElement(c["a"],{code:"octokit.activity.listReceivedPublicEventsForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-public-events-received-by-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-events"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-events","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository events"),l.a.createElement(c["a"],{code:"octokit.activity.listRepoEvents({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repository-events"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-notifications-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-notifications-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository notifications for the authenticated user"),l.a.createElement("p",null,"List all notifications for the current user."),l.a.createElement(c["a"],{code:"octokit.activity.listRepoNotificationsForAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"all"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", show notifications marked as read."))),l.a.createElement("tr",null,l.a.createElement("td",null,"participating"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", only shows notifications in which the user is directly participating or mentioned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"before"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated before the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-starred-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-starred-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories starred by the authenticated user"),l.a.createElement("p",null,"Lists repositories the authenticated user has starred."),l.a.createElement("p",null,"You can also find out ",l.a.createElement("em",null,"when")," stars were created by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"Accept")," header:"),l.a.createElement(c["a"],{code:"octokit.activity.listReposStarredByAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-starred-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-starred-by-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-starred-by-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories starred by a user"),l.a.createElement("p",null,"Lists repositories a user has starred."),l.a.createElement("p",null,"You can also find out ",l.a.createElement("em",null,"when")," stars were created by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"Accept")," header:"),l.a.createElement(c["a"],{code:"octokit.activity.listReposStarredByUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"created")," (when the repository was starred) or ",l.a.createElement("code",null,"updated")," (when it was last pushed to)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"One of ",l.a.createElement("code",null,"asc")," (ascending) or ",l.a.createElement("code",null,"desc")," (descending)."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-starred-by-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-watched-by-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-watched-by-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories watched by a user"),l.a.createElement("p",null,"Lists repositories a user is watching."),l.a.createElement(c["a"],{code:"octokit.activity.listReposWatchedByUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-watched-by-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-stargazers"},l.a.createElement(r["AnchorLink"],{to:"#list-stargazers","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List stargazers"),l.a.createElement("p",null,"Lists the people that have starred the repository."),l.a.createElement("p",null,"You can also find out ",l.a.createElement("em",null,"when")," stars were created by passing the following custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"media type")," via the ",l.a.createElement("code",null,"Accept")," header:"),l.a.createElement(c["a"],{code:"octokit.activity.listStargazersForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-stargazers"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-watched-by-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-watched-by-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories watched by the authenticated user"),l.a.createElement("p",null,"Lists repositories the authenticated user is watching."),l.a.createElement(c["a"],{code:"octokit.activity.listWatchedReposForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repositories-watched-by-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-watchers"},l.a.createElement(r["AnchorLink"],{to:"#list-watchers","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List watchers"),l.a.createElement("p",null,"Lists the people watching the specified repository."),l.a.createElement(c["a"],{code:"octokit.activity.listWatchersForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-watchers"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"mark-notifications-as-read"},l.a.createElement(r["AnchorLink"],{to:"#mark-notifications-as-read","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Mark notifications as read"),l.a.createElement("p",null,'Marks all notifications as "read" removes it from the ',l.a.createElement(r["Link"],{to:"https://github.com/notifications"},"default view on GitHub"),". If the number of notifications is too large to complete in one request, you will receive a ",l.a.createElement("code",null,"202 Accepted"),' status and GitHub will run an asynchronous process to mark notifications as "read." To check whether any "unread" notifications remain, you can use the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user"},"List notifications for the authenticated user")," endpoint and pass the query parameter ",l.a.createElement("code",null,"all=false"),"."),l.a.createElement(c["a"],{code:"octokit.activity.markNotificationsAsRead();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"last_read_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Describes the last point that notifications were checked."))),l.a.createElement("tr",null,l.a.createElement("td",null,"read"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the notification has been read."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#mark-notifications-as-read"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"mark-repository-notifications-as-read"},l.a.createElement(r["AnchorLink"],{to:"#mark-repository-notifications-as-read","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Mark repository notifications as read"),l.a.createElement("p",null,'Marks all notifications in a repository as "read" removes them from the ',l.a.createElement(r["Link"],{to:"https://github.com/notifications"},"default view on GitHub"),". If the number of notifications is too large to complete in one request, you will receive a ",l.a.createElement("code",null,"202 Accepted"),' status and GitHub will run an asynchronous process to mark notifications as "read." To check whether any "unread" notifications remain, you can use the ',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user"},"List repository notifications for the authenticated user")," endpoint and pass the query parameter ",l.a.createElement("code",null,"all=false"),"."),l.a.createElement(c["a"],{code:"octokit.activity.markRepoNotificationsAsRead({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"last_read_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),". Default: The current timestamp."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#mark-repository-notifications-as-read"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"mark-a-thread-as-read"},l.a.createElement(r["AnchorLink"],{to:"#mark-a-thread-as-read","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Mark a thread as read"),l.a.createElement(c["a"],{code:"octokit.activity.markThreadAsRead({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#mark-a-thread-as-read"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-a-repository-subscription"},l.a.createElement(r["AnchorLink"],{to:"#set-a-repository-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set a repository subscription"),l.a.createElement("p",null,"If you would like to watch a repository, set ",l.a.createElement("code",null,"subscribed")," to ",l.a.createElement("code",null,"true"),". If you would like to ignore notifications made within a repository, set ",l.a.createElement("code",null,"ignored")," to ",l.a.createElement("code",null,"true"),". If you would like to stop watching a repository, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-repository-subscription"},"delete the repository's subscription")," completely."),l.a.createElement(c["a"],{code:"octokit.activity.setRepoSubscription({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"subscribed"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications should be received from this repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ignored"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if all notifications should be blocked from this repository."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-repository-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-a-thread-subscription"},l.a.createElement(r["AnchorLink"],{to:"#set-a-thread-subscription","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set a thread subscription"),l.a.createElement("p",null,"If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an ",l.a.createElement("strong",null,"@mention"),"."),l.a.createElement("p",null,"You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored."),l.a.createElement("p",null,"Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#delete-a-thread-subscription"},"Delete a thread subscription")," endpoint."),l.a.createElement(c["a"],{code:"octokit.activity.setThreadSubscription({\n  thread_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"thread_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"thread_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"ignored"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to block all notifications from a thread."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#set-a-thread-subscription"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"star-a-repository-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#star-a-repository-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Star a repository for the authenticated user"),l.a.createElement("p",null,"Note that you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement(c["a"],{code:"octokit.activity.starRepoForAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#star-a-repository-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"unstar-a-repository-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#unstar-a-repository-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Unstar a repository for the authenticated user"),l.a.createElement(c["a"],{code:"octokit.activity.unstarRepoForAuthenticatedUser({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/activity#unstar-a-repository-for-the-authenticated-user"},"GitHub Developer Guide documentation"),".")))}},xQzV:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-emojis"},l.a.createElement(r["AnchorLink"],{to:"#get-emojis","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get emojis"),l.a.createElement("p",null,"Lists all the emojis available to use on GitHub."),l.a.createElement(c["a"],{code:"octokit.emojis.get();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/emojis/#get-emojis"},"GitHub Developer Guide documentation"),".")))}},xrYK:function(e,t){var a={}.toString;e.exports=function(e){return a.call(e).slice(8,-1)}},xs3f:function(e,t,a){var n=a("2oRo"),l=a("zk60"),r="__core-js_shared__",c=n[r]||l(r,{});e.exports=c},yLpj:function(e,t){var a;a=function(){return this}();try{a=a||new Function("return this")()}catch(n){"object"===typeof window&&(a=window)}e.exports=a},yNLB:function(e,t,a){var n=a("0Dky"),l=a("WJkJ"),r="\u200b\x85\u180e";e.exports=function(e){return n((function(){return!!l[e]()||r[e]()!=r||l[e].name!==e}))}},yXV3:function(e,t,a){"use strict";var n=a("I+eb"),l=a("TWQb").indexOf,r=a("pkCn"),c=a("rkAj"),o=[].indexOf,i=!!o&&1/[1].indexOf(1,-0)<0,s=r("indexOf"),u=c("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:i||!s||!u},{indexOf:function(e){return i?o.apply(this,arguments)||0:l(this,e,arguments.length>1?arguments[1]:void 0)}})},yl30:function(e,t,a){"use strict";var n=a("q1tI"),l=a("MgzW"),r=a("QCnb");function c(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,a=1;a<arguments.length;a++)t+="&args[]="+encodeURIComponent(arguments[a]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(c(227));function o(e,t,a,n,l,r,c,o,i){var s=Array.prototype.slice.call(arguments,3);try{t.apply(a,s)}catch(u){this.onError(u)}}var i=!1,s=null,u=!1,m=null,d={onError:function(e){i=!0,s=e}};function E(e,t,a,n,l,r,c,u,m){i=!1,s=null,o.apply(d,arguments)}function p(e,t,a,n,l,r,o,d,p){if(E.apply(this,arguments),i){if(!i)throw Error(c(198));var h=s;i=!1,s=null,u||(u=!0,m=h)}}var h=null,g=null,b=null;function f(e,t,a){var n=e.type||"unknown-event";e.currentTarget=b(a),p(n,t,void 0,e),e.currentTarget=null}var y=null,k={};function v(){if(y)for(var e in k){var t=k[e],a=y.indexOf(e);if(!(-1<a))throw Error(c(96,e));if(!L[a]){if(!t.extractEvents)throw Error(c(97,e));for(var n in L[a]=t,a=t.eventTypes,a){var l=void 0,r=a[n],o=t,i=n;if(A.hasOwnProperty(i))throw Error(c(99,i));A[i]=r;var s=r.phasedRegistrationNames;if(s){for(l in s)s.hasOwnProperty(l)&&w(s[l],o,i);l=!0}else r.registrationName?(w(r.registrationName,o,i),l=!0):l=!1;if(!l)throw Error(c(98,n,e))}}}}function w(e,t,a){if(x[e])throw Error(c(100,e));x[e]=t,_[e]=t.eventTypes[a].dependencies}var L=[],A={},x={},_={};function G(e){var t,a=!1;for(t in e)if(e.hasOwnProperty(t)){var n=e[t];if(!k.hasOwnProperty(t)||k[t]!==n){if(k[t])throw Error(c(102,t));k[t]=n,a=!0}}a&&v()}var P=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),I=null,S=null,T=null;function N(e){if(e=g(e)){if("function"!==typeof I)throw Error(c(280));var t=e.stateNode;t&&(t=h(t),I(e.stateNode,e.type,t))}}function j(e){S?T?T.push(e):T=[e]:S=e}function H(){if(S){var e=S,t=T;if(T=S=null,N(e),t)for(e=0;e<t.length;e++)N(t[e])}}function q(e,t){return e(t)}function D(e,t,a,n,l){return e(t,a,n,l)}function z(){}var C=q,O=!1,R=!1;function F(){null===S&&null===T||(z(),H())}function U(e,t,a){if(R)return e(t,a);R=!0;try{return C(e,t,a)}finally{R=!1,F()}}var M=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Y=Object.prototype.hasOwnProperty,B={},W={};function K(e){return!!Y.call(W,e)||!Y.call(B,e)&&(M.test(e)?W[e]=!0:(B[e]=!0,!1))}function V(e,t,a,n){if(null!==a&&0===a.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==a?!a.acceptsBooleans:(e=e.toLowerCase().slice(0,5),"data-"!==e&&"aria-"!==e));default:return!1}}function Z(e,t,a,n){if(null===t||"undefined"===typeof t||V(e,t,a,n))return!0;if(n)return!1;if(null!==a)switch(a.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function $(e,t,a,n,l,r){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=l,this.mustUseProperty=a,this.propertyName=e,this.type=t,this.sanitizeURL=r}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];Q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var J=/[\-:]([a-z])/g;function X(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(J,X);Q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(J,X);Q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(J,X);Q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),Q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var ee=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function te(e,t,a,n){var l=Q.hasOwnProperty(t)?Q[t]:null,r=null!==l?0===l.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]));r||(Z(t,a,l,n)&&(a=null),n||null===l?K(t)&&(null===a?e.removeAttribute(t):e.setAttribute(t,""+a)):l.mustUseProperty?e[l.propertyName]=null===a?3!==l.type&&"":a:(t=l.attributeName,n=l.attributeNamespace,null===a?e.removeAttribute(t):(l=l.type,a=3===l||4===l&&!0===a?"":""+a,n?e.setAttributeNS(n,t,a):e.setAttribute(t,a))))}ee.hasOwnProperty("ReactCurrentDispatcher")||(ee.ReactCurrentDispatcher={current:null}),ee.hasOwnProperty("ReactCurrentBatchConfig")||(ee.ReactCurrentBatchConfig={suspense:null});var ae=/^(.*)[\\\/]/,ne="function"===typeof Symbol&&Symbol.for,le=ne?Symbol.for("react.element"):60103,re=ne?Symbol.for("react.portal"):60106,ce=ne?Symbol.for("react.fragment"):60107,oe=ne?Symbol.for("react.strict_mode"):60108,ie=ne?Symbol.for("react.profiler"):60114,se=ne?Symbol.for("react.provider"):60109,ue=ne?Symbol.for("react.context"):60110,me=ne?Symbol.for("react.concurrent_mode"):60111,de=ne?Symbol.for("react.forward_ref"):60112,Ee=ne?Symbol.for("react.suspense"):60113,pe=ne?Symbol.for("react.suspense_list"):60120,he=ne?Symbol.for("react.memo"):60115,ge=ne?Symbol.for("react.lazy"):60116,be=ne?Symbol.for("react.block"):60121,fe="function"===typeof Symbol&&Symbol.iterator;function ye(e){return null===e||"object"!==typeof e?null:(e=fe&&e[fe]||e["@@iterator"],"function"===typeof e?e:null)}function ke(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}function ve(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case ce:return"Fragment";case re:return"Portal";case ie:return"Profiler";case oe:return"StrictMode";case Ee:return"Suspense";case pe:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case ue:return"Context.Consumer";case se:return"Context.Provider";case de:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case he:return ve(e.type);case be:return ve(e.render);case ge:if(e=1===e._status?e._result:null)return ve(e)}return null}function we(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var a="";break e;default:var n=e._debugOwner,l=e._debugSource,r=ve(e.type);a=null,n&&(a=ve(n.type)),n=r,r="",l?r=" (at "+l.fileName.replace(ae,"")+":"+l.lineNumber+")":a&&(r=" (created by "+a+")"),a="\n    in "+(n||"Unknown")+r}t+=a,e=e.return}while(e);return t}function Le(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Ae(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){var t=Ae(e)?"checked":"value",a=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof a&&"function"===typeof a.get&&"function"===typeof a.set){var l=a.get,r=a.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){n=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:a.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function _e(e){e._valueTracker||(e._valueTracker=xe(e))}function Ge(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var a=t.getValue(),n="";return e&&(n=Ae(e)?e.checked?"true":"false":e.value),e=n,e!==a&&(t.setValue(e),!0)}function Pe(e,t){var a=t.checked;return l({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=a?a:e._wrapperState.initialChecked})}function Ie(e,t){var a=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;a=Le(null!=t.value?t.value:a),e._wrapperState={initialChecked:n,initialValue:a,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){t=t.checked,null!=t&&te(e,"checked",t,!1)}function Te(e,t){Se(e,t);var a=Le(t.value),n=t.type;if(null!=a)"number"===n?(0===a&&""===e.value||e.value!=a)&&(e.value=""+a):e.value!==""+a&&(e.value=""+a);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?je(e,t.type,a):t.hasOwnProperty("defaultValue")&&je(e,t.type,Le(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ne(e,t,a){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,a||t===e.value||(e.value=t),e.defaultValue=t}a=e.name,""!==a&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==a&&(e.name=a)}function je(e,t,a){"number"===t&&e.ownerDocument.activeElement===e||(null==a?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+a&&(e.defaultValue=""+a))}function He(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}function qe(e,t){return e=l({children:void 0},t),(t=He(t.children))&&(e.children=t),e}function De(e,t,a,n){if(e=e.options,t){t={};for(var l=0;l<a.length;l++)t["$"+a[l]]=!0;for(a=0;a<e.length;a++)l=t.hasOwnProperty("$"+e[a].value),e[a].selected!==l&&(e[a].selected=l),l&&n&&(e[a].defaultSelected=!0)}else{for(a=""+Le(a),t=null,l=0;l<e.length;l++){if(e[l].value===a)return e[l].selected=!0,void(n&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function ze(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(c(91));return l({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ce(e,t){var a=t.value;if(null==a){if(a=t.children,t=t.defaultValue,null!=a){if(null!=t)throw Error(c(92));if(Array.isArray(a)){if(!(1>=a.length))throw Error(c(93));a=a[0]}t=a}null==t&&(t=""),a=t}e._wrapperState={initialValue:Le(a)}}function Oe(e,t){var a=Le(t.value),n=Le(t.defaultValue);null!=a&&(a=""+a,a!==e.value&&(e.value=a),null==t.defaultValue&&e.defaultValue!==a&&(e.defaultValue=a)),null!=n&&(e.defaultValue=""+n)}function Re(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Fe={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Ue(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Me(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ue(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ye,Be=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,a,n,l){MSApp.execUnsafeLocalFunction((function(){return e(t,a,n,l)}))}:e}((function(e,t){if(e.namespaceURI!==Fe.svg||"innerHTML"in e)e.innerHTML=t;else{for(Ye=Ye||document.createElement("div"),Ye.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ye.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function We(e,t){if(t){var a=e.firstChild;if(a&&a===e.lastChild&&3===a.nodeType)return void(a.nodeValue=t)}e.textContent=t}function Ke(e,t){var a={};return a[e.toLowerCase()]=t.toLowerCase(),a["Webkit"+e]="webkit"+t,a["Moz"+e]="moz"+t,a}var Ve={animationend:Ke("Animation","AnimationEnd"),animationiteration:Ke("Animation","AnimationIteration"),animationstart:Ke("Animation","AnimationStart"),transitionend:Ke("Transition","TransitionEnd")},Ze={},$e={};function Qe(e){if(Ze[e])return Ze[e];if(!Ve[e])return e;var t,a=Ve[e];for(t in a)if(a.hasOwnProperty(t)&&t in $e)return Ze[e]=a[t];return e}P&&($e=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);var Je=Qe("animationend"),Xe=Qe("animationiteration"),et=Qe("animationstart"),tt=Qe("transitionend"),at="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),nt=new("function"===typeof WeakMap?WeakMap:Map);function lt(e){var t=nt.get(e);return void 0===t&&(t=new Map,nt.set(e,t)),t}function rt(e){var t=e,a=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{t=e,0!==(1026&t.effectTag)&&(a=t.return),e=t.return}while(e)}return 3===t.tag?a:null}function ct(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(e=e.alternate,null!==e&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function ot(e){if(rt(e)!==e)throw Error(c(188))}function it(e){var t=e.alternate;if(!t){if(t=rt(e),null===t)throw Error(c(188));return t!==e?null:e}for(var a=e,n=t;;){var l=a.return;if(null===l)break;var r=l.alternate;if(null===r){if(n=l.return,null!==n){a=n;continue}break}if(l.child===r.child){for(r=l.child;r;){if(r===a)return ot(l),e;if(r===n)return ot(l),t;r=r.sibling}throw Error(c(188))}if(a.return!==n.return)a=l,n=r;else{for(var o=!1,i=l.child;i;){if(i===a){o=!0,a=l,n=r;break}if(i===n){o=!0,n=l,a=r;break}i=i.sibling}if(!o){for(i=r.child;i;){if(i===a){o=!0,a=r,n=l;break}if(i===n){o=!0,n=r,a=l;break}i=i.sibling}if(!o)throw Error(c(189))}}if(a.alternate!==n)throw Error(c(190))}if(3!==a.tag)throw Error(c(188));return a.stateNode.current===a?e:t}function st(e){if(e=it(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function ut(e,t){if(null==t)throw Error(c(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function mt(e,t,a){Array.isArray(e)?e.forEach(t,a):e&&t.call(a,e)}var dt=null;function Et(e){if(e){var t=e._dispatchListeners,a=e._dispatchInstances;if(Array.isArray(t))for(var n=0;n<t.length&&!e.isPropagationStopped();n++)f(e,t[n],a[n]);else t&&f(e,t,a);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function pt(e){if(null!==e&&(dt=ut(dt,e)),e=dt,dt=null,e){if(mt(e,Et),dt)throw Error(c(95));if(u)throw e=m,u=!1,m=null,e}}function ht(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function gt(e){if(!P)return!1;e="on"+e;var t=e in document;return t||(t=document.createElement("div"),t.setAttribute(e,"return;"),t="function"===typeof t[e]),t}var bt=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>bt.length&&bt.push(e)}function yt(e,t,a,n){if(bt.length){var l=bt.pop();return l.topLevelType=e,l.eventSystemFlags=n,l.nativeEvent=t,l.targetInst=a,l}return{topLevelType:e,eventSystemFlags:n,nativeEvent:t,targetInst:a,ancestors:[]}}function kt(e){var t=e.targetInst,a=t;do{if(!a){e.ancestors.push(a);break}var n=a;if(3===n.tag)n=n.stateNode.containerInfo;else{for(;n.return;)n=n.return;n=3!==n.tag?null:n.stateNode.containerInfo}if(!n)break;t=a.tag,5!==t&&6!==t||e.ancestors.push(a),a=Ra(n)}while(a);for(a=0;a<e.ancestors.length;a++){t=e.ancestors[a];var l=ht(e.nativeEvent);n=e.topLevelType;var r=e.nativeEvent,c=e.eventSystemFlags;0===a&&(c|=64);for(var o=null,i=0;i<L.length;i++){var s=L[i];s&&(s=s.extractEvents(n,t,r,l,c))&&(o=ut(o,s))}pt(o)}}function vt(e,t,a){if(!a.has(e)){switch(e){case"scroll":na(t,"scroll",!0);break;case"focus":case"blur":na(t,"focus",!0),na(t,"blur",!0),a.set("blur",null),a.set("focus",null);break;case"cancel":case"close":gt(e)&&na(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===at.indexOf(e)&&aa(e,t)}a.set(e,null)}}var wt,Lt,At,xt=!1,_t=[],Gt=null,Pt=null,It=null,St=new Map,Tt=new Map,Nt=[],jt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ht="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function qt(e,t){var a=lt(t);jt.forEach((function(e){vt(e,t,a)})),Ht.forEach((function(e){vt(e,t,a)}))}function Dt(e,t,a,n,l){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|a,nativeEvent:l,container:n}}function zt(e,t){switch(e){case"focus":case"blur":Gt=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":It=null;break;case"pointerover":case"pointerout":St.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Ct(e,t,a,n,l,r){return null===e||e.nativeEvent!==r?(e=Dt(t,a,n,l,r),null!==t&&(t=Fa(t),null!==t&&Lt(t)),e):(e.eventSystemFlags|=n,e)}function Ot(e,t,a,n,l){switch(t){case"focus":return Gt=Ct(Gt,e,t,a,n,l),!0;case"dragenter":return Pt=Ct(Pt,e,t,a,n,l),!0;case"mouseover":return It=Ct(It,e,t,a,n,l),!0;case"pointerover":var r=l.pointerId;return St.set(r,Ct(St.get(r)||null,e,t,a,n,l)),!0;case"gotpointercapture":return r=l.pointerId,Tt.set(r,Ct(Tt.get(r)||null,e,t,a,n,l)),!0}return!1}function Rt(e){var t=Ra(e.target);if(null!==t){var a=rt(t);if(null!==a)if(t=a.tag,13===t){if(t=ct(a),null!==t)return e.blockedOn=t,void r.unstable_runWithPriority(e.priority,(function(){At(a)}))}else if(3===t&&a.stateNode.hydrate)return void(e.blockedOn=3===a.tag?a.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;var t=oa(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var a=Fa(t);return null!==a&&Lt(a),e.blockedOn=t,!1}return!0}function Ut(e,t,a){Ft(e)&&a.delete(t)}function Mt(){for(xt=!1;0<_t.length;){var e=_t[0];if(null!==e.blockedOn){e=Fa(e.blockedOn),null!==e&&wt(e);break}var t=oa(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:_t.shift()}null!==Gt&&Ft(Gt)&&(Gt=null),null!==Pt&&Ft(Pt)&&(Pt=null),null!==It&&Ft(It)&&(It=null),St.forEach(Ut),Tt.forEach(Ut)}function Yt(e,t){e.blockedOn===t&&(e.blockedOn=null,xt||(xt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Mt)))}function Bt(e){function t(t){return Yt(t,e)}if(0<_t.length){Yt(_t[0],e);for(var a=1;a<_t.length;a++){var n=_t[a];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==Gt&&Yt(Gt,e),null!==Pt&&Yt(Pt,e),null!==It&&Yt(It,e),St.forEach(t),Tt.forEach(t),a=0;a<Nt.length;a++)n=Nt[a],n.blockedOn===e&&(n.blockedOn=null);for(;0<Nt.length&&(a=Nt[0],null===a.blockedOn);)Rt(a),null===a.blockedOn&&Nt.shift()}var Wt={},Kt=new Map,Vt=new Map,Zt=["abort","abort",Je,"animationEnd",Xe,"animationIteration",et,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",tt,"transitionEnd","waiting","waiting"];function $t(e,t){for(var a=0;a<e.length;a+=2){var n=e[a],l=e[a+1],r="on"+(l[0].toUpperCase()+l.slice(1));r={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],eventPriority:t},Vt.set(n,t),Kt.set(n,r),Wt[l]=r}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(Zt,2);for(var Qt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Jt=0;Jt<Qt.length;Jt++)Vt.set(Qt[Jt],0);var Xt=r.unstable_UserBlockingPriority,ea=r.unstable_runWithPriority,ta=!0;function aa(e,t){na(t,e,!1)}function na(e,t,a){var n=Vt.get(t);switch(void 0===n?2:n){case 0:n=la.bind(null,t,1,e);break;case 1:n=ra.bind(null,t,1,e);break;default:n=ca.bind(null,t,1,e)}a?e.addEventListener(t,n,!0):e.addEventListener(t,n,!1)}function la(e,t,a,n){O||z();var l=ca,r=O;O=!0;try{D(l,e,t,a,n)}finally{(O=r)||F()}}function ra(e,t,a,n){ea(Xt,ca.bind(null,e,t,a,n))}function ca(e,t,a,n){if(ta)if(0<_t.length&&-1<jt.indexOf(e))e=Dt(null,e,t,a,n),_t.push(e);else{var l=oa(e,t,a,n);if(null===l)zt(e,n);else if(-1<jt.indexOf(e))e=Dt(l,e,t,a,n),_t.push(e);else if(!Ot(l,e,t,a,n)){zt(e,n),e=yt(e,n,null,t);try{U(kt,e)}finally{ft(e)}}}}function oa(e,t,a,n){if(a=ht(n),a=Ra(a),null!==a){var l=rt(a);if(null===l)a=null;else{var r=l.tag;if(13===r){if(a=ct(l),null!==a)return a;a=null}else if(3===r){if(l.stateNode.hydrate)return 3===l.tag?l.stateNode.containerInfo:null;a=null}else l!==a&&(a=null)}}e=yt(e,n,a,t);try{U(kt,e)}finally{ft(e)}return null}var ia={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},sa=["Webkit","ms","Moz","O"];function ua(e,t,a){return null==t||"boolean"===typeof t||""===t?"":a||"number"!==typeof t||0===t||ia.hasOwnProperty(e)&&ia[e]?(""+t).trim():t+"px"}function ma(e,t){for(var a in e=e.style,t)if(t.hasOwnProperty(a)){var n=0===a.indexOf("--"),l=ua(a,t[a],n);"float"===a&&(a="cssFloat"),n?e.setProperty(a,l):e[a]=l}}Object.keys(ia).forEach((function(e){sa.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ia[t]=ia[e]}))}));var da=l({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ea(e,t){if(t){if(da[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(c(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(c(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(c(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(c(62,""))}}function pa(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ha=Fe.html;function ga(e,t){e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument;var a=lt(e);t=_[t];for(var n=0;n<t.length;n++)vt(t[n],e,a)}function ba(){}function fa(e){if(e=e||("undefined"!==typeof document?document:void 0),"undefined"===typeof e)return null;try{return e.activeElement||e.body}catch(t){return e.body}}function ya(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ka(e,t){var a,n=ya(e);for(e=0;n;){if(3===n.nodeType){if(a=e+n.textContent.length,e<=t&&a>=t)return{node:n,offset:t-e};e=a}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ya(n)}}function va(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?va(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function wa(){for(var e=window,t=fa();t instanceof e.HTMLIFrameElement;){try{var a="string"===typeof t.contentWindow.location.href}catch(n){a=!1}if(!a)break;e=t.contentWindow,t=fa(e.document)}return t}function La(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Aa="$",xa="/$",_a="$?",Ga="$!",Pa=null,Ia=null;function Sa(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ta(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Na="function"===typeof setTimeout?setTimeout:void 0,ja="function"===typeof clearTimeout?clearTimeout:void 0;function Ha(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function qa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var a=e.data;if(a===Aa||a===Ga||a===_a){if(0===t)return e;t--}else a===xa&&t++}e=e.previousSibling}return null}var Da=Math.random().toString(36).slice(2),za="__reactInternalInstance$"+Da,Ca="__reactEventHandlers$"+Da,Oa="__reactContainere$"+Da;function Ra(e){var t=e[za];if(t)return t;for(var a=e.parentNode;a;){if(t=a[Oa]||a[za]){if(a=t.alternate,null!==t.child||null!==a&&null!==a.child)for(e=qa(e);null!==e;){if(a=e[za])return a;e=qa(e)}return t}e=a,a=e.parentNode}return null}function Fa(e){return e=e[za]||e[Oa],!e||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Ua(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(c(33))}function Ma(e){return e[Ca]||null}function Ya(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Ba(e,t){var a=e.stateNode;if(!a)return null;var n=h(a);if(!n)return null;a=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(e=e.type,n=!("button"===e||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(a&&"function"!==typeof a)throw Error(c(231,t,typeof a));return a}function Wa(e,t,a){(t=Ba(e,a.dispatchConfig.phasedRegistrationNames[t]))&&(a._dispatchListeners=ut(a._dispatchListeners,t),a._dispatchInstances=ut(a._dispatchInstances,e))}function Ka(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,a=[];t;)a.push(t),t=Ya(t);for(t=a.length;0<t--;)Wa(a[t],"captured",e);for(t=0;t<a.length;t++)Wa(a[t],"bubbled",e)}}function Va(e,t,a){e&&a&&a.dispatchConfig.registrationName&&(t=Ba(e,a.dispatchConfig.registrationName))&&(a._dispatchListeners=ut(a._dispatchListeners,t),a._dispatchInstances=ut(a._dispatchInstances,e))}function Za(e){e&&e.dispatchConfig.registrationName&&Va(e._targetInst,null,e)}function $a(e){mt(e,Ka)}var Qa=null,Ja=null,Xa=null;function en(){if(Xa)return Xa;var e,t,a=Ja,n=a.length,l="value"in Qa?Qa.value:Qa.textContent,r=l.length;for(e=0;e<n&&a[e]===l[e];e++);var c=n-e;for(t=1;t<=c&&a[n-t]===l[r-t];t++);return Xa=l.slice(e,1<t?1-t:void 0)}function tn(){return!0}function an(){return!1}function nn(e,t,a,n){for(var l in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=a,e=this.constructor.Interface,e)e.hasOwnProperty(l)&&((t=e[l])?this[l]=t(a):"target"===l?this.target=n:this[l]=a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?tn:an,this.isPropagationStopped=an,this}function ln(e,t,a,n){if(this.eventPool.length){var l=this.eventPool.pop();return this.call(l,e,t,a,n),l}return new this(e,t,a,n)}function rn(e){if(!(e instanceof this))throw Error(c(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function cn(e){e.eventPool=[],e.getPooled=ln,e.release=rn}l(nn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=tn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=tn)},persist:function(){this.isPersistent=tn},isPersistent:an,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=an,this._dispatchInstances=this._dispatchListeners=null}}),nn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},nn.extend=function(e){function t(){}function a(){return n.apply(this,arguments)}var n=this;t.prototype=n.prototype;var r=new t;return l(r,a.prototype),a.prototype=r,a.prototype.constructor=a,a.Interface=l({},n.Interface,e),a.extend=n.extend,cn(a),a},cn(nn);var on=nn.extend({data:null}),sn=nn.extend({data:null}),un=[9,13,27,32],mn=P&&"CompositionEvent"in window,dn=null;P&&"documentMode"in document&&(dn=document.documentMode);var En=P&&"TextEvent"in window&&!dn,pn=P&&(!mn||dn&&8<dn&&11>=dn),hn=String.fromCharCode(32),gn={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},bn=!1;function fn(e,t){switch(e){case"keyup":return-1!==un.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function yn(e){return e=e.detail,"object"===typeof e&&"data"in e?e.data:null}var kn=!1;function vn(e,t){switch(e){case"compositionend":return yn(t);case"keypress":return 32!==t.which?null:(bn=!0,hn);case"textInput":return e=t.data,e===hn&&bn?null:e;default:return null}}function wn(e,t){if(kn)return"compositionend"===e||!mn&&fn(e,t)?(e=en(),Xa=Ja=Qa=null,kn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return pn&&"ko"!==t.locale?null:t.data;default:return null}}var Ln={eventTypes:gn,extractEvents:function(e,t,a,n){var l;if(mn)e:{switch(e){case"compositionstart":var r=gn.compositionStart;break e;case"compositionend":r=gn.compositionEnd;break e;case"compositionupdate":r=gn.compositionUpdate;break e}r=void 0}else kn?fn(e,a)&&(r=gn.compositionEnd):"keydown"===e&&229===a.keyCode&&(r=gn.compositionStart);return r?(pn&&"ko"!==a.locale&&(kn||r!==gn.compositionStart?r===gn.compositionEnd&&kn&&(l=en()):(Qa=n,Ja="value"in Qa?Qa.value:Qa.textContent,kn=!0)),r=on.getPooled(r,t,a,n),l?r.data=l:(l=yn(a),null!==l&&(r.data=l)),$a(r),l=r):l=null,(e=En?vn(e,a):wn(e,a))?(t=sn.getPooled(gn.beforeInput,t,a,n),t.data=e,$a(t)):t=null,null===l?t:null===t?l:[l,t]}},An={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!An[e.type]:"textarea"===t}var _n={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Gn(e,t,a){return e=nn.getPooled(_n.change,e,t,a),e.type="change",j(a),$a(e),e}var Pn=null,In=null;function Sn(e){pt(e)}function Tn(e){var t=Ua(e);if(Ge(t))return e}function Nn(e,t){if("change"===e)return t}var jn=!1;function Hn(){Pn&&(Pn.detachEvent("onpropertychange",qn),In=Pn=null)}function qn(e){if("value"===e.propertyName&&Tn(In))if(e=Gn(In,e,ht(e)),O)pt(e);else{O=!0;try{q(Sn,e)}finally{O=!1,F()}}}function Dn(e,t,a){"focus"===e?(Hn(),Pn=t,In=a,Pn.attachEvent("onpropertychange",qn)):"blur"===e&&Hn()}function zn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Tn(In)}function Cn(e,t){if("click"===e)return Tn(t)}function On(e,t){if("input"===e||"change"===e)return Tn(t)}P&&(jn=gt("input")&&(!document.documentMode||9<document.documentMode));var Rn={eventTypes:_n,_isInputEventSupported:jn,extractEvents:function(e,t,a,n){var l=t?Ua(t):window,r=l.nodeName&&l.nodeName.toLowerCase();if("select"===r||"input"===r&&"file"===l.type)var c=Nn;else if(xn(l))if(jn)c=On;else{c=zn;var o=Dn}else(r=l.nodeName)&&"input"===r.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(c=Cn);if(c&&(c=c(e,t)))return Gn(c,a,n);o&&o(e,l,t),"blur"===e&&(e=l._wrapperState)&&e.controlled&&"number"===l.type&&je(l,"number",l.value)}},Fn=nn.extend({view:null,detail:null}),Un={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Mn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Un[e])&&!!t[e]}function Yn(){return Mn}var Bn=0,Wn=0,Kn=!1,Vn=!1,Zn=Fn.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yn,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Bn;return Bn=e.screenX,Kn?"mousemove"===e.type?e.screenX-t:0:(Kn=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Wn;return Wn=e.screenY,Vn?"mousemove"===e.type?e.screenY-t:0:(Vn=!0,0)}}),$n=Zn.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Qn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Jn={eventTypes:Qn,extractEvents:function(e,t,a,n,l){var r="mouseover"===e||"pointerover"===e,c="mouseout"===e||"pointerout"===e;if(r&&0===(32&l)&&(a.relatedTarget||a.fromElement)||!c&&!r)return null;if(r=n.window===n?n:(r=n.ownerDocument)?r.defaultView||r.parentWindow:window,c){if(c=t,t=(t=a.relatedTarget||a.toElement)?Ra(t):null,null!==t){var o=rt(t);(t!==o||5!==t.tag&&6!==t.tag)&&(t=null)}}else c=null;if(c===t)return null;if("mouseout"===e||"mouseover"===e)var i=Zn,s=Qn.mouseLeave,u=Qn.mouseEnter,m="mouse";else"pointerout"!==e&&"pointerover"!==e||(i=$n,s=Qn.pointerLeave,u=Qn.pointerEnter,m="pointer");if(e=null==c?r:Ua(c),r=null==t?r:Ua(t),s=i.getPooled(s,c,a,n),s.type=m+"leave",s.target=e,s.relatedTarget=r,a=i.getPooled(u,t,a,n),a.type=m+"enter",a.target=r,a.relatedTarget=e,n=c,m=t,n&&m)e:{for(i=n,u=m,c=0,e=i;e;e=Ya(e))c++;for(e=0,t=u;t;t=Ya(t))e++;for(;0<c-e;)i=Ya(i),c--;for(;0<e-c;)u=Ya(u),e--;for(;c--;){if(i===u||i===u.alternate)break e;i=Ya(i),u=Ya(u)}i=null}else i=null;for(u=i,i=[];n&&n!==u;){if(c=n.alternate,null!==c&&c===u)break;i.push(n),n=Ya(n)}for(n=[];m&&m!==u;){if(c=m.alternate,null!==c&&c===u)break;n.push(m),m=Ya(m)}for(m=0;m<i.length;m++)Va(i[m],"bubbled",s);for(m=n.length;0<m--;)Va(n[m],"captured",a);return 0===(64&l)?[s]:[s,a]}};function Xn(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t}var el="function"===typeof Object.is?Object.is:Xn,tl=Object.prototype.hasOwnProperty;function al(e,t){if(el(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var a=Object.keys(e),n=Object.keys(t);if(a.length!==n.length)return!1;for(n=0;n<a.length;n++)if(!tl.call(t,a[n])||!el(e[a[n]],t[a[n]]))return!1;return!0}var nl=P&&"documentMode"in document&&11>=document.documentMode,ll={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},rl=null,cl=null,ol=null,il=!1;function sl(e,t){var a=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return il||null==rl||rl!==fa(a)?null:(a=rl,"selectionStart"in a&&La(a)?a={start:a.selectionStart,end:a.selectionEnd}:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection(),a={anchorNode:a.anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset}),ol&&al(ol,a)?null:(ol=a,e=nn.getPooled(ll.select,cl,e,t),e.type="select",e.target=rl,$a(e),e))}var ul={eventTypes:ll,extractEvents:function(e,t,a,n,l,r){if(l=r||(n.window===n?n.document:9===n.nodeType?n:n.ownerDocument),!(r=!l)){e:{l=lt(l),r=_.onSelect;for(var c=0;c<r.length;c++)if(!l.has(r[c])){l=!1;break e}l=!0}r=!l}if(r)return null;switch(l=t?Ua(t):window,e){case"focus":(xn(l)||"true"===l.contentEditable)&&(rl=l,cl=t,ol=null);break;case"blur":ol=cl=rl=null;break;case"mousedown":il=!0;break;case"contextmenu":case"mouseup":case"dragend":return il=!1,sl(a,n);case"selectionchange":if(nl)break;case"keydown":case"keyup":return sl(a,n)}return null}},ml=nn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),dl=nn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),El=Fn.extend({relatedTarget:null});function pl(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,0===e&&13===t&&(e=13)):e=t,10===e&&(e=13),32<=e||13===e?e:0}var hl={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},gl={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},bl=Fn.extend({key:function(e){if(e.key){var t=hl[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?(e=pl(e),13===e?"Enter":String.fromCharCode(e)):"keydown"===e.type||"keyup"===e.type?gl[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yn,charCode:function(e){return"keypress"===e.type?pl(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?pl(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),fl=Zn.extend({dataTransfer:null}),yl=Fn.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yn}),kl=nn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vl=Zn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),wl={eventTypes:Wt,extractEvents:function(e,t,a,n){var l=Kt.get(e);if(!l)return null;switch(e){case"keypress":if(0===pl(a))return null;case"keydown":case"keyup":e=bl;break;case"blur":case"focus":e=El;break;case"click":if(2===a.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Zn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=fl;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=yl;break;case Je:case Xe:case et:e=ml;break;case tt:e=kl;break;case"scroll":e=Fn;break;case"wheel":e=vl;break;case"copy":case"cut":case"paste":e=dl;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=$n;break;default:e=nn}return t=e.getPooled(l,t,a,n),$a(t),t}};if(y)throw Error(c(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),v();var Ll=Fa;h=Ma,g=Ll,b=Ua,G({SimpleEventPlugin:wl,EnterLeaveEventPlugin:Jn,ChangeEventPlugin:Rn,SelectEventPlugin:ul,BeforeInputEventPlugin:Ln});var Al=[],xl=-1;function _l(e){0>xl||(e.current=Al[xl],Al[xl]=null,xl--)}function Gl(e,t){xl++,Al[xl]=e.current,e.current=t}var Pl={},Il={current:Pl},Sl={current:!1},Tl=Pl;function Nl(e,t){var a=e.type.contextTypes;if(!a)return Pl;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var l,r={};for(l in a)r[l]=t[l];return n&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function jl(e){return e=e.childContextTypes,null!==e&&void 0!==e}function Hl(){_l(Sl),_l(Il)}function ql(e,t,a){if(Il.current!==Pl)throw Error(c(168));Gl(Il,t),Gl(Sl,a)}function Dl(e,t,a){var n=e.stateNode;if(e=t.childContextTypes,"function"!==typeof n.getChildContext)return a;for(var r in n=n.getChildContext(),n)if(!(r in e))throw Error(c(108,ve(t)||"Unknown",r));return l({},a,{},n)}function zl(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Pl,Tl=Il.current,Gl(Il,e),Gl(Sl,Sl.current),!0}function Cl(e,t,a){var n=e.stateNode;if(!n)throw Error(c(169));a?(e=Dl(e,t,Tl),n.__reactInternalMemoizedMergedChildContext=e,_l(Sl),_l(Il),Gl(Il,e)):_l(Sl),Gl(Sl,a)}var Ol=r.unstable_runWithPriority,Rl=r.unstable_scheduleCallback,Fl=r.unstable_cancelCallback,Ul=r.unstable_requestPaint,Ml=r.unstable_now,Yl=r.unstable_getCurrentPriorityLevel,Bl=r.unstable_ImmediatePriority,Wl=r.unstable_UserBlockingPriority,Kl=r.unstable_NormalPriority,Vl=r.unstable_LowPriority,Zl=r.unstable_IdlePriority,$l={},Ql=r.unstable_shouldYield,Jl=void 0!==Ul?Ul:function(){},Xl=null,er=null,tr=!1,ar=Ml(),nr=1e4>ar?Ml:function(){return Ml()-ar};function lr(){switch(Yl()){case Bl:return 99;case Wl:return 98;case Kl:return 97;case Vl:return 96;case Zl:return 95;default:throw Error(c(332))}}function rr(e){switch(e){case 99:return Bl;case 98:return Wl;case 97:return Kl;case 96:return Vl;case 95:return Zl;default:throw Error(c(332))}}function cr(e,t){return e=rr(e),Ol(e,t)}function or(e,t,a){return e=rr(e),Rl(e,t,a)}function ir(e){return null===Xl?(Xl=[e],er=Rl(Bl,ur)):Xl.push(e),$l}function sr(){if(null!==er){var e=er;er=null,Fl(e)}ur()}function ur(){if(!tr&&null!==Xl){tr=!0;var e=0;try{var t=Xl;cr(99,(function(){for(;e<t.length;e++){var a=t[e];do{a=a(!0)}while(null!==a)}})),Xl=null}catch(a){throw null!==Xl&&(Xl=Xl.slice(e+1)),Rl(Bl,sr),a}finally{tr=!1}}}function mr(e,t,a){return a/=10,1073741821-(1+((1073741821-e+t/10)/a|0))*a}function dr(e,t){if(e&&e.defaultProps)for(var a in t=l({},t),e=e.defaultProps,e)void 0===t[a]&&(t[a]=e[a]);return t}var Er={current:null},pr=null,hr=null,gr=null;function br(){gr=hr=pr=null}function fr(e){var t=Er.current;_l(Er),e.type._context._currentValue=t}function yr(e,t){for(;null!==e;){var a=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==a&&a.childExpirationTime<t&&(a.childExpirationTime=t);else{if(!(null!==a&&a.childExpirationTime<t))break;a.childExpirationTime=t}e=e.return}}function kr(e,t){pr=e,gr=hr=null,e=e.dependencies,null!==e&&null!==e.firstContext&&(e.expirationTime>=t&&(Kc=!0),e.firstContext=null)}function vr(e,t){if(gr!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(gr=e,t=1073741823),t={context:e,observedBits:t,next:null},null===hr){if(null===pr)throw Error(c(308));hr=t,pr.dependencies={expirationTime:0,firstContext:t,responders:null}}else hr=hr.next=t;return e._currentValue}var wr=!1;function Lr(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function Ar(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function xr(e,t){return e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null},e.next=e}function _r(e,t){if(e=e.updateQueue,null!==e){e=e.shared;var a=e.pending;null===a?t.next=t:(t.next=a.next,a.next=t),e.pending=t}}function Gr(e,t){var a=e.alternate;null!==a&&Ar(a,e),e=e.updateQueue,a=e.baseQueue,null===a?(e.baseQueue=t.next=t,t.next=t):(t.next=a.next,a.next=t)}function Pr(e,t,a,n){var r=e.updateQueue;wr=!1;var c=r.baseQueue,o=r.shared.pending;if(null!==o){if(null!==c){var i=c.next;c.next=o.next,o.next=i}c=o,r.shared.pending=null,i=e.alternate,null!==i&&(i=i.updateQueue,null!==i&&(i.baseQueue=o))}if(null!==c){i=c.next;var s=r.baseState,u=0,m=null,d=null,E=null;if(null!==i){var p=i;do{if(o=p.expirationTime,o<n){var h={expirationTime:p.expirationTime,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null};null===E?(d=E=h,m=s):E=E.next=h,o>u&&(u=o)}else{null!==E&&(E=E.next={expirationTime:1073741823,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null}),Di(o,p.suspenseConfig);e:{var g=e,b=p;switch(o=t,h=a,b.tag){case 1:if(g=b.payload,"function"===typeof g){s=g.call(h,s,o);break e}s=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(g=b.payload,o="function"===typeof g?g.call(h,s,o):g,null===o||void 0===o)break e;s=l({},s,o);break e;case 2:wr=!0}}null!==p.callback&&(e.effectTag|=32,o=r.effects,null===o?r.effects=[p]:o.push(p))}if(p=p.next,null===p||p===i){if(o=r.shared.pending,null===o)break;p=c.next=o.next,o.next=i,r.baseQueue=c=o,r.shared.pending=null}}while(1)}null===E?m=s:E.next=d,r.baseState=m,r.baseQueue=E,zi(u),e.expirationTime=u,e.memoizedState=s}}function Ir(e,t,a){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],l=n.callback;if(null!==l){if(n.callback=null,n=l,l=a,"function"!==typeof n)throw Error(c(191,n));n.call(l)}}}var Sr=ee.ReactCurrentBatchConfig,Tr=(new n.Component).refs;function Nr(e,t,a,n){t=e.memoizedState,a=a(n,t),a=null===a||void 0===a?t:l({},t,a),e.memoizedState=a,0===e.expirationTime&&(e.updateQueue.baseState=a)}var jr={isMounted:function(e){return!!(e=e._reactInternalFiber)&&rt(e)===e},enqueueSetState:function(e,t,a){e=e._reactInternalFiber;var n=wi(),l=Sr.suspense;n=Li(n,e,l),l=xr(n,l),l.payload=t,void 0!==a&&null!==a&&(l.callback=a),_r(e,l),Ai(e,n)},enqueueReplaceState:function(e,t,a){e=e._reactInternalFiber;var n=wi(),l=Sr.suspense;n=Li(n,e,l),l=xr(n,l),l.tag=1,l.payload=t,void 0!==a&&null!==a&&(l.callback=a),_r(e,l),Ai(e,n)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var a=wi(),n=Sr.suspense;a=Li(a,e,n),n=xr(a,n),n.tag=2,void 0!==t&&null!==t&&(n.callback=t),_r(e,n),Ai(e,a)}};function Hr(e,t,a,n,l,r,c){return e=e.stateNode,"function"===typeof e.shouldComponentUpdate?e.shouldComponentUpdate(n,r,c):!t.prototype||!t.prototype.isPureReactComponent||(!al(a,n)||!al(l,r))}function qr(e,t,a){var n=!1,l=Pl,r=t.contextType;return"object"===typeof r&&null!==r?r=vr(r):(l=jl(t)?Tl:Il.current,n=t.contextTypes,r=(n=null!==n&&void 0!==n)?Nl(e,l):Pl),t=new t(a,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=jr,e.stateNode=t,t._reactInternalFiber=e,n&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=r),t}function Dr(e,t,a,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(a,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(a,n),t.state!==e&&jr.enqueueReplaceState(t,t.state,null)}function zr(e,t,a,n){var l=e.stateNode;l.props=a,l.state=e.memoizedState,l.refs=Tr,Lr(e);var r=t.contextType;"object"===typeof r&&null!==r?l.context=vr(r):(r=jl(t)?Tl:Il.current,l.context=Nl(e,r)),Pr(e,a,l,n),l.state=e.memoizedState,r=t.getDerivedStateFromProps,"function"===typeof r&&(Nr(e,t,r,a),l.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof l.getSnapshotBeforeUpdate||"function"!==typeof l.UNSAFE_componentWillMount&&"function"!==typeof l.componentWillMount||(t=l.state,"function"===typeof l.componentWillMount&&l.componentWillMount(),"function"===typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&jr.enqueueReplaceState(l,l.state,null),Pr(e,a,l,n),l.state=e.memoizedState),"function"===typeof l.componentDidMount&&(e.effectTag|=4)}var Cr=Array.isArray;function Or(e,t,a){if(e=a.ref,null!==e&&"function"!==typeof e&&"object"!==typeof e){if(a._owner){if(a=a._owner,a){if(1!==a.tag)throw Error(c(309));var n=a.stateNode}if(!n)throw Error(c(147,e));var l=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=n.refs;t===Tr&&(t=n.refs={}),null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if("string"!==typeof e)throw Error(c(284));if(!a._owner)throw Error(c(290,e))}return e}function Rr(e,t){if("textarea"!==e.type)throw Error(c(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Fr(e){function t(t,a){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=a,t.lastEffect=a):t.firstEffect=t.lastEffect=a,a.nextEffect=null,a.effectTag=8}}function a(a,n){if(!e)return null;for(;null!==n;)t(a,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t){return e=rs(e,t),e.index=0,e.sibling=null,e}function r(t,a,n){return t.index=n,e?(n=t.alternate,null!==n?(n=n.index,n<a?(t.effectTag=2,a):n):(t.effectTag=2,a)):a}function o(t){return e&&null===t.alternate&&(t.effectTag=2),t}function i(e,t,a,n){return null===t||6!==t.tag?(t=is(a,e.mode,n),t.return=e,t):(t=l(t,a),t.return=e,t)}function s(e,t,a,n){return null!==t&&t.elementType===a.type?(n=l(t,a.props),n.ref=Or(e,t,a),n.return=e,n):(n=cs(a.type,a.key,a.props,null,e.mode,n),n.ref=Or(e,t,a),n.return=e,n)}function u(e,t,a,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==a.containerInfo||t.stateNode.implementation!==a.implementation?(t=ss(a,e.mode,n),t.return=e,t):(t=l(t,a.children||[]),t.return=e,t)}function m(e,t,a,n,r){return null===t||7!==t.tag?(t=os(a,e.mode,n,r),t.return=e,t):(t=l(t,a),t.return=e,t)}function d(e,t,a){if("string"===typeof t||"number"===typeof t)return t=is(""+t,e.mode,a),t.return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case le:return a=cs(t.type,t.key,t.props,null,e.mode,a),a.ref=Or(e,null,t),a.return=e,a;case re:return t=ss(t,e.mode,a),t.return=e,t}if(Cr(t)||ye(t))return t=os(t,e.mode,a,null),t.return=e,t;Rr(e,t)}return null}function E(e,t,a,n){var l=null!==t?t.key:null;if("string"===typeof a||"number"===typeof a)return null!==l?null:i(e,t,""+a,n);if("object"===typeof a&&null!==a){switch(a.$$typeof){case le:return a.key===l?a.type===ce?m(e,t,a.props.children,n,l):s(e,t,a,n):null;case re:return a.key===l?u(e,t,a,n):null}if(Cr(a)||ye(a))return null!==l?null:m(e,t,a,n,null);Rr(e,a)}return null}function p(e,t,a,n,l){if("string"===typeof n||"number"===typeof n)return e=e.get(a)||null,i(t,e,""+n,l);if("object"===typeof n&&null!==n){switch(n.$$typeof){case le:return e=e.get(null===n.key?a:n.key)||null,n.type===ce?m(t,e,n.props.children,l,n.key):s(t,e,n,l);case re:return e=e.get(null===n.key?a:n.key)||null,u(t,e,n,l)}if(Cr(n)||ye(n))return e=e.get(a)||null,m(t,e,n,l,null);Rr(t,n)}return null}function h(l,c,o,i){for(var s=null,u=null,m=c,h=c=0,g=null;null!==m&&h<o.length;h++){m.index>h?(g=m,m=null):g=m.sibling;var b=E(l,m,o[h],i);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(l,m),c=r(b,c,h),null===u?s=b:u.sibling=b,u=b,m=g}if(h===o.length)return a(l,m),s;if(null===m){for(;h<o.length;h++)m=d(l,o[h],i),null!==m&&(c=r(m,c,h),null===u?s=m:u.sibling=m,u=m);return s}for(m=n(l,m);h<o.length;h++)g=p(m,l,h,o[h],i),null!==g&&(e&&null!==g.alternate&&m.delete(null===g.key?h:g.key),c=r(g,c,h),null===u?s=g:u.sibling=g,u=g);return e&&m.forEach((function(e){return t(l,e)})),s}function g(l,o,i,s){var u=ye(i);if("function"!==typeof u)throw Error(c(150));if(i=u.call(i),null==i)throw Error(c(151));for(var m=u=null,h=o,g=o=0,b=null,f=i.next();null!==h&&!f.done;g++,f=i.next()){h.index>g?(b=h,h=null):b=h.sibling;var y=E(l,h,f.value,s);if(null===y){null===h&&(h=b);break}e&&h&&null===y.alternate&&t(l,h),o=r(y,o,g),null===m?u=y:m.sibling=y,m=y,h=b}if(f.done)return a(l,h),u;if(null===h){for(;!f.done;g++,f=i.next())f=d(l,f.value,s),null!==f&&(o=r(f,o,g),null===m?u=f:m.sibling=f,m=f);return u}for(h=n(l,h);!f.done;g++,f=i.next())f=p(h,l,g,f.value,s),null!==f&&(e&&null!==f.alternate&&h.delete(null===f.key?g:f.key),o=r(f,o,g),null===m?u=f:m.sibling=f,m=f);return e&&h.forEach((function(e){return t(l,e)})),u}return function(e,n,r,i){var s="object"===typeof r&&null!==r&&r.type===ce&&null===r.key;s&&(r=r.props.children);var u="object"===typeof r&&null!==r;if(u)switch(r.$$typeof){case le:e:{for(u=r.key,s=n;null!==s;){if(s.key===u){switch(s.tag){case 7:if(r.type===ce){a(e,s.sibling),n=l(s,r.props.children),n.return=e,e=n;break e}break;default:if(s.elementType===r.type){a(e,s.sibling),n=l(s,r.props),n.ref=Or(e,s,r),n.return=e,e=n;break e}}a(e,s);break}t(e,s),s=s.sibling}r.type===ce?(n=os(r.props.children,e.mode,i,r.key),n.return=e,e=n):(i=cs(r.type,r.key,r.props,null,e.mode,i),i.ref=Or(e,n,r),i.return=e,e=i)}return o(e);case re:e:{for(s=r.key;null!==n;){if(n.key===s){if(4===n.tag&&n.stateNode.containerInfo===r.containerInfo&&n.stateNode.implementation===r.implementation){a(e,n.sibling),n=l(n,r.children||[]),n.return=e,e=n;break e}a(e,n);break}t(e,n),n=n.sibling}n=ss(r,e.mode,i),n.return=e,e=n}return o(e)}if("string"===typeof r||"number"===typeof r)return r=""+r,null!==n&&6===n.tag?(a(e,n.sibling),n=l(n,r),n.return=e,e=n):(a(e,n),n=is(r,e.mode,i),n.return=e,e=n),o(e);if(Cr(r))return h(e,n,r,i);if(ye(r))return g(e,n,r,i);if(u&&Rr(e,r),"undefined"===typeof r&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(c(152,e.displayName||e.name||"Component"))}return a(e,n)}}var Ur=Fr(!0),Mr=Fr(!1),Yr={},Br={current:Yr},Wr={current:Yr},Kr={current:Yr};function Vr(e){if(e===Yr)throw Error(c(174));return e}function Zr(e,t){switch(Gl(Kr,t),Gl(Wr,e),Gl(Br,Yr),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Me(null,"");break;default:e=8===e?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=Me(t,e)}_l(Br),Gl(Br,t)}function $r(){_l(Br),_l(Wr),_l(Kr)}function Qr(e){Vr(Kr.current);var t=Vr(Br.current),a=Me(t,e.type);t!==a&&(Gl(Wr,e),Gl(Br,a))}function Jr(e){Wr.current===e&&(_l(Br),_l(Wr))}var Xr={current:0};function ec(e){for(var t=e;null!==t;){if(13===t.tag){var a=t.memoizedState;if(null!==a&&(a=a.dehydrated,null===a||a.data===_a||a.data===Ga))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function tc(e,t){return{responder:e,props:t}}var ac=ee.ReactCurrentDispatcher,nc=ee.ReactCurrentBatchConfig,lc=0,rc=null,cc=null,oc=null,ic=!1;function sc(){throw Error(c(321))}function uc(e,t){if(null===t)return!1;for(var a=0;a<t.length&&a<e.length;a++)if(!el(e[a],t[a]))return!1;return!0}function mc(e,t,a,n,l,r){if(lc=r,rc=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,ac.current=null===e||null===e.memoizedState?Hc:qc,e=a(n,l),t.expirationTime===lc){r=0;do{if(t.expirationTime=0,!(25>r))throw Error(c(301));r+=1,oc=cc=null,t.updateQueue=null,ac.current=Dc,e=a(n,l)}while(t.expirationTime===lc)}if(ac.current=jc,t=null!==cc&&null!==cc.next,lc=0,oc=cc=rc=null,ic=!1,t)throw Error(c(300));return e}function dc(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===oc?rc.memoizedState=oc=e:oc=oc.next=e,oc}function Ec(){if(null===cc){var e=rc.alternate;e=null!==e?e.memoizedState:null}else e=cc.next;var t=null===oc?rc.memoizedState:oc.next;if(null!==t)oc=t,cc=e;else{if(null===e)throw Error(c(310));cc=e,e={memoizedState:cc.memoizedState,baseState:cc.baseState,baseQueue:cc.baseQueue,queue:cc.queue,next:null},null===oc?rc.memoizedState=oc=e:oc=oc.next=e}return oc}function pc(e,t){return"function"===typeof t?t(e):t}function hc(e){var t=Ec(),a=t.queue;if(null===a)throw Error(c(311));a.lastRenderedReducer=e;var n=cc,l=n.baseQueue,r=a.pending;if(null!==r){if(null!==l){var o=l.next;l.next=r.next,r.next=o}n.baseQueue=l=r,a.pending=null}if(null!==l){l=l.next,n=n.baseState;var i=o=r=null,s=l;do{var u=s.expirationTime;if(u<lc){var m={expirationTime:s.expirationTime,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===i?(o=i=m,r=n):i=i.next=m,u>rc.expirationTime&&(rc.expirationTime=u,zi(u))}else null!==i&&(i=i.next={expirationTime:1073741823,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),Di(u,s.suspenseConfig),n=s.eagerReducer===e?s.eagerState:e(n,s.action);s=s.next}while(null!==s&&s!==l);null===i?r=n:i.next=o,el(n,t.memoizedState)||(Kc=!0),t.memoizedState=n,t.baseState=r,t.baseQueue=i,a.lastRenderedState=n}return[t.memoizedState,a.dispatch]}function gc(e){var t=Ec(),a=t.queue;if(null===a)throw Error(c(311));a.lastRenderedReducer=e;var n=a.dispatch,l=a.pending,r=t.memoizedState;if(null!==l){a.pending=null;var o=l=l.next;do{r=e(r,o.action),o=o.next}while(o!==l);el(r,t.memoizedState)||(Kc=!0),t.memoizedState=r,null===t.baseQueue&&(t.baseState=r),a.lastRenderedState=r}return[r,n]}function bc(e){var t=dc();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=t.queue={pending:null,dispatch:null,lastRenderedReducer:pc,lastRenderedState:e},e=e.dispatch=Nc.bind(null,rc,e),[t.memoizedState,e]}function fc(e,t,a,n){return e={tag:e,create:t,destroy:a,deps:n,next:null},t=rc.updateQueue,null===t?(t={lastEffect:null},rc.updateQueue=t,t.lastEffect=e.next=e):(a=t.lastEffect,null===a?t.lastEffect=e.next=e:(n=a.next,a.next=e,e.next=n,t.lastEffect=e)),e}function yc(){return Ec().memoizedState}function kc(e,t,a,n){var l=dc();rc.effectTag|=e,l.memoizedState=fc(1|t,a,void 0,void 0===n?null:n)}function vc(e,t,a,n){var l=Ec();n=void 0===n?null:n;var r=void 0;if(null!==cc){var c=cc.memoizedState;if(r=c.destroy,null!==n&&uc(n,c.deps))return void fc(t,a,r,n)}rc.effectTag|=e,l.memoizedState=fc(1|t,a,r,n)}function wc(e,t){return kc(516,4,e,t)}function Lc(e,t){return vc(516,4,e,t)}function Ac(e,t){return vc(4,2,e,t)}function xc(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function _c(e,t,a){return a=null!==a&&void 0!==a?a.concat([e]):null,vc(4,2,xc.bind(null,t,e),a)}function Gc(){}function Pc(e,t){return dc().memoizedState=[e,void 0===t?null:t],e}function Ic(e,t){var a=Ec();t=void 0===t?null:t;var n=a.memoizedState;return null!==n&&null!==t&&uc(t,n[1])?n[0]:(a.memoizedState=[e,t],e)}function Sc(e,t){var a=Ec();t=void 0===t?null:t;var n=a.memoizedState;return null!==n&&null!==t&&uc(t,n[1])?n[0]:(e=e(),a.memoizedState=[e,t],e)}function Tc(e,t,a){var n=lr();cr(98>n?98:n,(function(){e(!0)})),cr(97<n?97:n,(function(){var n=nc.suspense;nc.suspense=void 0===t?null:t;try{e(!1),a()}finally{nc.suspense=n}}))}function Nc(e,t,a){var n=wi(),l=Sr.suspense;n=Li(n,e,l),l={expirationTime:n,suspenseConfig:l,action:a,eagerReducer:null,eagerState:null,next:null};var r=t.pending;if(null===r?l.next=l:(l.next=r.next,r.next=l),t.pending=l,r=e.alternate,e===rc||null!==r&&r===rc)ic=!0,l.expirationTime=lc,rc.expirationTime=lc;else{if(0===e.expirationTime&&(null===r||0===r.expirationTime)&&(r=t.lastRenderedReducer,null!==r))try{var c=t.lastRenderedState,o=r(c,a);if(l.eagerReducer=r,l.eagerState=o,el(o,c))return}catch(i){}Ai(e,n)}}var jc={readContext:vr,useCallback:sc,useContext:sc,useEffect:sc,useImperativeHandle:sc,useLayoutEffect:sc,useMemo:sc,useReducer:sc,useRef:sc,useState:sc,useDebugValue:sc,useResponder:sc,useDeferredValue:sc,useTransition:sc},Hc={readContext:vr,useCallback:Pc,useContext:vr,useEffect:wc,useImperativeHandle:function(e,t,a){return a=null!==a&&void 0!==a?a.concat([e]):null,kc(4,2,xc.bind(null,t,e),a)},useLayoutEffect:function(e,t){return kc(4,2,e,t)},useMemo:function(e,t){var a=dc();return t=void 0===t?null:t,e=e(),a.memoizedState=[e,t],e},useReducer:function(e,t,a){var n=dc();return t=void 0!==a?a(t):t,n.memoizedState=n.baseState=t,e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},e=e.dispatch=Nc.bind(null,rc,e),[n.memoizedState,e]},useRef:function(e){var t=dc();return e={current:e},t.memoizedState=e},useState:bc,useDebugValue:Gc,useResponder:tc,useDeferredValue:function(e,t){var a=bc(e),n=a[0],l=a[1];return wc((function(){var a=nc.suspense;nc.suspense=void 0===t?null:t;try{l(e)}finally{nc.suspense=a}}),[e,t]),n},useTransition:function(e){var t=bc(!1),a=t[0];return t=t[1],[Pc(Tc.bind(null,t,e),[t,e]),a]}},qc={readContext:vr,useCallback:Ic,useContext:vr,useEffect:Lc,useImperativeHandle:_c,useLayoutEffect:Ac,useMemo:Sc,useReducer:hc,useRef:yc,useState:function(){return hc(pc)},useDebugValue:Gc,useResponder:tc,useDeferredValue:function(e,t){var a=hc(pc),n=a[0],l=a[1];return Lc((function(){var a=nc.suspense;nc.suspense=void 0===t?null:t;try{l(e)}finally{nc.suspense=a}}),[e,t]),n},useTransition:function(e){var t=hc(pc),a=t[0];return t=t[1],[Ic(Tc.bind(null,t,e),[t,e]),a]}},Dc={readContext:vr,useCallback:Ic,useContext:vr,useEffect:Lc,useImperativeHandle:_c,useLayoutEffect:Ac,useMemo:Sc,useReducer:gc,useRef:yc,useState:function(){return gc(pc)},useDebugValue:Gc,useResponder:tc,useDeferredValue:function(e,t){var a=gc(pc),n=a[0],l=a[1];return Lc((function(){var a=nc.suspense;nc.suspense=void 0===t?null:t;try{l(e)}finally{nc.suspense=a}}),[e,t]),n},useTransition:function(e){var t=gc(pc),a=t[0];return t=t[1],[Ic(Tc.bind(null,t,e),[t,e]),a]}},zc=null,Cc=null,Oc=!1;function Rc(e,t){var a=as(5,null,null,0);a.elementType="DELETED",a.type="DELETED",a.stateNode=t,a.return=e,a.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=a,e.lastEffect=a):e.firstEffect=e.lastEffect=a}function Fc(e,t){switch(e.tag){case 5:var a=e.type;return t=1!==t.nodeType||a.toLowerCase()!==t.nodeName.toLowerCase()?null:t,null!==t&&(e.stateNode=t,!0);case 6:return t=""===e.pendingProps||3!==t.nodeType?null:t,null!==t&&(e.stateNode=t,!0);case 13:return!1;default:return!1}}function Uc(e){if(Oc){var t=Cc;if(t){var a=t;if(!Fc(e,t)){if(t=Ha(a.nextSibling),!t||!Fc(e,t))return e.effectTag=-1025&e.effectTag|2,Oc=!1,void(zc=e);Rc(zc,a)}zc=e,Cc=Ha(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Oc=!1,zc=e}}function Mc(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zc=e}function Yc(e){if(e!==zc)return!1;if(!Oc)return Mc(e),Oc=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ta(t,e.memoizedProps))for(t=Cc;t;)Rc(e,t),t=Ha(t.nextSibling);if(Mc(e),13===e.tag){if(e=e.memoizedState,e=null!==e?e.dehydrated:null,!e)throw Error(c(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var a=e.data;if(a===xa){if(0===t){Cc=Ha(e.nextSibling);break e}t--}else a!==Aa&&a!==Ga&&a!==_a||t++}e=e.nextSibling}Cc=null}}else Cc=zc?Ha(e.stateNode.nextSibling):null;return!0}function Bc(){Cc=zc=null,Oc=!1}var Wc=ee.ReactCurrentOwner,Kc=!1;function Vc(e,t,a,n){t.child=null===e?Mr(t,null,a,n):Ur(t,e.child,a,n)}function Zc(e,t,a,n,l){a=a.render;var r=t.ref;return kr(t,l),n=mc(e,t,a,n,r,l),null===e||Kc?(t.effectTag|=1,Vc(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),Eo(e,t,l))}function $c(e,t,a,n,l,r){if(null===e){var c=a.type;return"function"!==typeof c||ns(c)||void 0!==c.defaultProps||null!==a.compare||void 0!==a.defaultProps?(e=cs(a.type,null,n,null,t.mode,r),e.ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=c,Qc(e,t,c,n,l,r))}return c=e.child,l<r&&(l=c.memoizedProps,a=a.compare,a=null!==a?a:al,a(l,n)&&e.ref===t.ref)?Eo(e,t,r):(t.effectTag|=1,e=rs(c,n),e.ref=t.ref,e.return=t,t.child=e)}function Qc(e,t,a,n,l,r){return null!==e&&al(e.memoizedProps,n)&&e.ref===t.ref&&(Kc=!1,l<r)?(t.expirationTime=e.expirationTime,Eo(e,t,r)):Xc(e,t,a,n,r)}function Jc(e,t){var a=t.ref;(null===e&&null!==a||null!==e&&e.ref!==a)&&(t.effectTag|=128)}function Xc(e,t,a,n,l){var r=jl(a)?Tl:Il.current;return r=Nl(t,r),kr(t,l),a=mc(e,t,a,n,r,l),null===e||Kc?(t.effectTag|=1,Vc(e,t,a,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),Eo(e,t,l))}function eo(e,t,a,n,l){if(jl(a)){var r=!0;zl(t)}else r=!1;if(kr(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),qr(t,a,n),zr(t,a,n,l),n=!0;else if(null===e){var c=t.stateNode,o=t.memoizedProps;c.props=o;var i=c.context,s=a.contextType;"object"===typeof s&&null!==s?s=vr(s):(s=jl(a)?Tl:Il.current,s=Nl(t,s));var u=a.getDerivedStateFromProps,m="function"===typeof u||"function"===typeof c.getSnapshotBeforeUpdate;m||"function"!==typeof c.UNSAFE_componentWillReceiveProps&&"function"!==typeof c.componentWillReceiveProps||(o!==n||i!==s)&&Dr(t,c,n,s),wr=!1;var d=t.memoizedState;c.state=d,Pr(t,n,c,l),i=t.memoizedState,o!==n||d!==i||Sl.current||wr?("function"===typeof u&&(Nr(t,a,u,n),i=t.memoizedState),(o=wr||Hr(t,a,o,n,d,i,s))?(m||"function"!==typeof c.UNSAFE_componentWillMount&&"function"!==typeof c.componentWillMount||("function"===typeof c.componentWillMount&&c.componentWillMount(),"function"===typeof c.UNSAFE_componentWillMount&&c.UNSAFE_componentWillMount()),"function"===typeof c.componentDidMount&&(t.effectTag|=4)):("function"===typeof c.componentDidMount&&(t.effectTag|=4),t.memoizedProps=n,t.memoizedState=i),c.props=n,c.state=i,c.context=s,n=o):("function"===typeof c.componentDidMount&&(t.effectTag|=4),n=!1)}else c=t.stateNode,Ar(e,t),o=t.memoizedProps,c.props=t.type===t.elementType?o:dr(t.type,o),i=c.context,s=a.contextType,"object"===typeof s&&null!==s?s=vr(s):(s=jl(a)?Tl:Il.current,s=Nl(t,s)),u=a.getDerivedStateFromProps,(m="function"===typeof u||"function"===typeof c.getSnapshotBeforeUpdate)||"function"!==typeof c.UNSAFE_componentWillReceiveProps&&"function"!==typeof c.componentWillReceiveProps||(o!==n||i!==s)&&Dr(t,c,n,s),wr=!1,i=t.memoizedState,c.state=i,Pr(t,n,c,l),d=t.memoizedState,o!==n||i!==d||Sl.current||wr?("function"===typeof u&&(Nr(t,a,u,n),d=t.memoizedState),(u=wr||Hr(t,a,o,n,i,d,s))?(m||"function"!==typeof c.UNSAFE_componentWillUpdate&&"function"!==typeof c.componentWillUpdate||("function"===typeof c.componentWillUpdate&&c.componentWillUpdate(n,d,s),"function"===typeof c.UNSAFE_componentWillUpdate&&c.UNSAFE_componentWillUpdate(n,d,s)),"function"===typeof c.componentDidUpdate&&(t.effectTag|=4),"function"===typeof c.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!==typeof c.componentDidUpdate||o===e.memoizedProps&&i===e.memoizedState||(t.effectTag|=4),"function"!==typeof c.getSnapshotBeforeUpdate||o===e.memoizedProps&&i===e.memoizedState||(t.effectTag|=256),t.memoizedProps=n,t.memoizedState=d),c.props=n,c.state=d,c.context=s,n=u):("function"!==typeof c.componentDidUpdate||o===e.memoizedProps&&i===e.memoizedState||(t.effectTag|=4),"function"!==typeof c.getSnapshotBeforeUpdate||o===e.memoizedProps&&i===e.memoizedState||(t.effectTag|=256),n=!1);return to(e,t,a,n,r,l)}function to(e,t,a,n,l,r){Jc(e,t);var c=0!==(64&t.effectTag);if(!n&&!c)return l&&Cl(t,a,!1),Eo(e,t,r);n=t.stateNode,Wc.current=t;var o=c&&"function"!==typeof a.getDerivedStateFromError?null:n.render();return t.effectTag|=1,null!==e&&c?(t.child=Ur(t,e.child,null,r),t.child=Ur(t,null,o,r)):Vc(e,t,o,r),t.memoizedState=n.state,l&&Cl(t,a,!0),t.child}function ao(e){var t=e.stateNode;t.pendingContext?ql(e,t.pendingContext,t.pendingContext!==t.context):t.context&&ql(e,t.context,!1),Zr(e,t.containerInfo)}var no,lo,ro,co,oo={dehydrated:null,retryTime:0};function io(e,t,a){var n,l=t.mode,r=t.pendingProps,c=Xr.current,o=!1;if((n=0!==(64&t.effectTag))||(n=0!==(2&c)&&(null===e||null!==e.memoizedState)),n?(o=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===r.fallback||!0===r.unstable_avoidThisFallback||(c|=1),Gl(Xr,1&c),null===e){if(void 0!==r.fallback&&Uc(t),o){if(o=r.fallback,r=os(null,l,0,null),r.return=t,0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,r.child=e;null!==e;)e.return=r,e=e.sibling;return a=os(o,l,a,null),a.return=t,r.sibling=a,t.memoizedState=oo,t.child=r,a}return l=r.children,t.memoizedState=null,t.child=Mr(t,null,l,a)}if(null!==e.memoizedState){if(e=e.child,l=e.sibling,o){if(r=r.fallback,a=rs(e,e.pendingProps),a.return=t,0===(2&t.mode)&&(o=null!==t.memoizedState?t.child.child:t.child,o!==e.child))for(a.child=o;null!==o;)o.return=a,o=o.sibling;return l=rs(l,r),l.return=t,a.sibling=l,a.childExpirationTime=0,t.memoizedState=oo,t.child=a,l}return a=Ur(t,e.child,r.children,a),t.memoizedState=null,t.child=a}if(e=e.child,o){if(o=r.fallback,r=os(null,l,0,null),r.return=t,r.child=e,null!==e&&(e.return=r),0===(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,r.child=e;null!==e;)e.return=r,e=e.sibling;return a=os(o,l,a,null),a.return=t,r.sibling=a,a.effectTag|=2,r.childExpirationTime=0,t.memoizedState=oo,t.child=r,a}return t.memoizedState=null,t.child=Ur(t,e,r.children,a)}function so(e,t){e.expirationTime<t&&(e.expirationTime=t);var a=e.alternate;null!==a&&a.expirationTime<t&&(a.expirationTime=t),yr(e.return,t)}function uo(e,t,a,n,l,r){var c=e.memoizedState;null===c?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:a,tailExpiration:0,tailMode:l,lastEffect:r}:(c.isBackwards=t,c.rendering=null,c.renderingStartTime=0,c.last=n,c.tail=a,c.tailExpiration=0,c.tailMode=l,c.lastEffect=r)}function mo(e,t,a){var n=t.pendingProps,l=n.revealOrder,r=n.tail;if(Vc(e,t,n.children,a),n=Xr.current,0!==(2&n))n=1&n|2,t.effectTag|=64;else{if(null!==e&&0!==(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&so(e,a);else if(19===e.tag)so(e,a);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(Gl(Xr,n),0===(2&t.mode))t.memoizedState=null;else switch(l){case"forwards":for(a=t.child,l=null;null!==a;)e=a.alternate,null!==e&&null===ec(e)&&(l=a),a=a.sibling;a=l,null===a?(l=t.child,t.child=null):(l=a.sibling,a.sibling=null),uo(t,!1,l,a,r,t.lastEffect);break;case"backwards":for(a=null,l=t.child,t.child=null;null!==l;){if(e=l.alternate,null!==e&&null===ec(e)){t.child=l;break}e=l.sibling,l.sibling=a,a=l,l=e}uo(t,!0,a,null,r,t.lastEffect);break;case"together":uo(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Eo(e,t,a){null!==e&&(t.dependencies=e.dependencies);var n=t.expirationTime;if(0!==n&&zi(n),t.childExpirationTime<a)return null;if(null!==e&&t.child!==e.child)throw Error(c(153));if(null!==t.child){for(e=t.child,a=rs(e,e.pendingProps),t.child=a,a.return=t;null!==e.sibling;)e=e.sibling,a=a.sibling=rs(e,e.pendingProps),a.return=t;a.sibling=null}return t.child}function po(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var a=null;null!==t;)null!==t.alternate&&(a=t),t=t.sibling;null===a?e.tail=null:a.sibling=null;break;case"collapsed":a=e.tail;for(var n=null;null!==a;)null!==a.alternate&&(n=a),a=a.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function ho(e,t,a){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return jl(t.type)&&Hl(),null;case 3:return $r(),_l(Sl),_l(Il),a=t.stateNode,a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||!Yc(t)||(t.effectTag|=4),lo(t),null;case 5:Jr(t),a=Vr(Kr.current);var r=t.type;if(null!==e&&null!=t.stateNode)ro(e,t,r,n,a),e.ref!==t.ref&&(t.effectTag|=128);else{if(!n){if(null===t.stateNode)throw Error(c(166));return null}if(e=Vr(Br.current),Yc(t)){n=t.stateNode,r=t.type;var o=t.memoizedProps;switch(n[za]=t,n[Ca]=o,r){case"iframe":case"object":case"embed":aa("load",n);break;case"video":case"audio":for(e=0;e<at.length;e++)aa(at[e],n);break;case"source":aa("error",n);break;case"img":case"image":case"link":aa("error",n),aa("load",n);break;case"form":aa("reset",n),aa("submit",n);break;case"details":aa("toggle",n);break;case"input":Ie(n,o),aa("invalid",n),ga(a,"onChange");break;case"select":n._wrapperState={wasMultiple:!!o.multiple},aa("invalid",n),ga(a,"onChange");break;case"textarea":Ce(n,o),aa("invalid",n),ga(a,"onChange")}for(var i in Ea(r,o),e=null,o)if(o.hasOwnProperty(i)){var s=o[i];"children"===i?"string"===typeof s?n.textContent!==s&&(e=["children",s]):"number"===typeof s&&n.textContent!==""+s&&(e=["children",""+s]):x.hasOwnProperty(i)&&null!=s&&ga(a,i)}switch(r){case"input":_e(n),Ne(n,o,!0);break;case"textarea":_e(n),Re(n);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(n.onclick=ba)}a=e,t.updateQueue=a,null!==a&&(t.effectTag|=4)}else{switch(i=9===a.nodeType?a:a.ownerDocument,e===ha&&(e=Ue(r)),e===ha?"script"===r?(e=i.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=i.createElement(r,{is:n.is}):(e=i.createElement(r),"select"===r&&(i=e,n.multiple?i.multiple=!0:n.size&&(i.size=n.size))):e=i.createElementNS(e,r),e[za]=t,e[Ca]=n,no(e,t,!1,!1),t.stateNode=e,i=pa(r,n),r){case"iframe":case"object":case"embed":aa("load",e),s=n;break;case"video":case"audio":for(s=0;s<at.length;s++)aa(at[s],e);s=n;break;case"source":aa("error",e),s=n;break;case"img":case"image":case"link":aa("error",e),aa("load",e),s=n;break;case"form":aa("reset",e),aa("submit",e),s=n;break;case"details":aa("toggle",e),s=n;break;case"input":Ie(e,n),s=Pe(e,n),aa("invalid",e),ga(a,"onChange");break;case"option":s=qe(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},s=l({},n,{value:void 0}),aa("invalid",e),ga(a,"onChange");break;case"textarea":Ce(e,n),s=ze(e,n),aa("invalid",e),ga(a,"onChange");break;default:s=n}Ea(r,s);var u=s;for(o in u)if(u.hasOwnProperty(o)){var m=u[o];"style"===o?ma(e,m):"dangerouslySetInnerHTML"===o?(m=m?m.__html:void 0,null!=m&&Be(e,m)):"children"===o?"string"===typeof m?("textarea"!==r||""!==m)&&We(e,m):"number"===typeof m&&We(e,""+m):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(x.hasOwnProperty(o)?null!=m&&ga(a,o):null!=m&&te(e,o,m,i))}switch(r){case"input":_e(e),Ne(e,n,!1);break;case"textarea":_e(e),Re(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Le(n.value));break;case"select":e.multiple=!!n.multiple,a=n.value,null!=a?De(e,!!n.multiple,a,!1):null!=n.defaultValue&&De(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=ba)}Sa(r,n)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)co(e,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(c(166));a=Vr(Kr.current),Vr(Br.current),Yc(t)?(a=t.stateNode,n=t.memoizedProps,a[za]=t,a.nodeValue!==n&&(t.effectTag|=4)):(a=(9===a.nodeType?a:a.ownerDocument).createTextNode(n),a[za]=t,t.stateNode=a)}return null;case 13:return _l(Xr),n=t.memoizedState,0!==(64&t.effectTag)?(t.expirationTime=a,t):(a=null!==n,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Yc(t):(r=e.memoizedState,n=null!==r,a||null===r||(r=e.child.sibling,null!==r&&(o=t.firstEffect,null!==o?(t.firstEffect=r,r.nextEffect=o):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8))),a&&!n&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Xr.current)?ai===Wo&&(ai=Zo):(ai!==Wo&&ai!==Zo||(ai=$o),0!==oi&&null!==Xo&&(ds(Xo,ti),Es(Xo,oi)))),(a||n)&&(t.effectTag|=4),null);case 4:return $r(),lo(t),null;case 10:return fr(t),null;case 17:return jl(t.type)&&Hl(),null;case 19:if(_l(Xr),n=t.memoizedState,null===n)return null;if(r=0!==(64&t.effectTag),o=n.rendering,null===o){if(r)po(n,!1);else if(ai!==Wo||null!==e&&0!==(64&e.effectTag))for(o=t.child;null!==o;){if(e=ec(o),null!==e){for(t.effectTag|=64,po(n,!1),r=e.updateQueue,null!==r&&(t.updateQueue=r,t.effectTag|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=t.child;null!==n;)r=n,o=a,r.effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,e=r.alternate,null===e?(r.childExpirationTime=0,r.expirationTime=o,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=e.childExpirationTime,r.expirationTime=e.expirationTime,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,o=e.dependencies,r.dependencies=null===o?null:{expirationTime:o.expirationTime,firstContext:o.firstContext,responders:o.responders}),n=n.sibling;return Gl(Xr,1&Xr.current|2),t.child}o=o.sibling}}else{if(!r)if(e=ec(o),null!==e){if(t.effectTag|=64,r=!0,a=e.updateQueue,null!==a&&(t.updateQueue=a,t.effectTag|=4),po(n,!0),null===n.tail&&"hidden"===n.tailMode&&!o.alternate)return t=t.lastEffect=n.lastEffect,null!==t&&(t.nextEffect=null),null}else 2*nr()-n.renderingStartTime>n.tailExpiration&&1<a&&(t.effectTag|=64,r=!0,po(n,!1),t.expirationTime=t.childExpirationTime=a-1);n.isBackwards?(o.sibling=t.child,t.child=o):(a=n.last,null!==a?a.sibling=o:t.child=o,n.last=o)}return null!==n.tail?(0===n.tailExpiration&&(n.tailExpiration=nr()+500),a=n.tail,n.rendering=a,n.tail=a.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=nr(),a.sibling=null,t=Xr.current,Gl(Xr,r?1&t|2:1&t),a):null}throw Error(c(156,t.tag))}function go(e){switch(e.tag){case 1:jl(e.type)&&Hl();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if($r(),_l(Sl),_l(Il),t=e.effectTag,0!==(64&t))throw Error(c(285));return e.effectTag=-4097&t|64,e;case 5:return Jr(e),null;case 13:return _l(Xr),t=e.effectTag,4096&t?(e.effectTag=-4097&t|64,e):null;case 19:return _l(Xr),null;case 4:return $r(),null;case 10:return fr(e),null;default:return null}}function bo(e,t){return{value:e,source:t,stack:we(t)}}no=function(e,t){for(var a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;a=a.return}a.sibling.return=a.return,a=a.sibling}},lo=function(){},ro=function(e,t,a,n,r){var c=e.memoizedProps;if(c!==n){var o,i,s=t.stateNode;switch(Vr(Br.current),e=null,a){case"input":c=Pe(s,c),n=Pe(s,n),e=[];break;case"option":c=qe(s,c),n=qe(s,n),e=[];break;case"select":c=l({},c,{value:void 0}),n=l({},n,{value:void 0}),e=[];break;case"textarea":c=ze(s,c),n=ze(s,n),e=[];break;default:"function"!==typeof c.onClick&&"function"===typeof n.onClick&&(s.onclick=ba)}for(o in Ea(a,n),a=null,c)if(!n.hasOwnProperty(o)&&c.hasOwnProperty(o)&&null!=c[o])if("style"===o)for(i in s=c[o],s)s.hasOwnProperty(i)&&(a||(a={}),a[i]="");else"dangerouslySetInnerHTML"!==o&&"children"!==o&&"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(x.hasOwnProperty(o)?e||(e=[]):(e=e||[]).push(o,null));for(o in n){var u=n[o];if(s=null!=c?c[o]:void 0,n.hasOwnProperty(o)&&u!==s&&(null!=u||null!=s))if("style"===o)if(s){for(i in s)!s.hasOwnProperty(i)||u&&u.hasOwnProperty(i)||(a||(a={}),a[i]="");for(i in u)u.hasOwnProperty(i)&&s[i]!==u[i]&&(a||(a={}),a[i]=u[i])}else a||(e||(e=[]),e.push(o,a)),a=u;else"dangerouslySetInnerHTML"===o?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(e=e||[]).push(o,u)):"children"===o?s===u||"string"!==typeof u&&"number"!==typeof u||(e=e||[]).push(o,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&(x.hasOwnProperty(o)?(null!=u&&ga(r,o),e||s===u||(e=[])):(e=e||[]).push(o,u))}a&&(e=e||[]).push("style",a),r=e,(t.updateQueue=r)&&(t.effectTag|=4)}},co=function(e,t,a,n){a!==n&&(t.effectTag|=4)};var fo="function"===typeof WeakSet?WeakSet:Set;function yo(e,t){var a=t.source,n=t.stack;null===n&&null!==a&&(n=we(a)),null!==a&&ve(a.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(l){setTimeout((function(){throw l}))}}function ko(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(a){Zi(e,a)}}function vo(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(a){Zi(e,a)}else t.current=null}function wo(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var a=e.memoizedProps,n=e.memoizedState;e=t.stateNode,t=e.getSnapshotBeforeUpdate(t.elementType===t.type?a:dr(t.type,a),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(c(163))}function Lo(e,t){if(t=t.updateQueue,t=null!==t?t.lastEffect:null,null!==t){var a=t=t.next;do{if((a.tag&e)===e){var n=a.destroy;a.destroy=void 0,void 0!==n&&n()}a=a.next}while(a!==t)}}function Ao(e,t){if(t=t.updateQueue,t=null!==t?t.lastEffect:null,null!==t){var a=t=t.next;do{if((a.tag&e)===e){var n=a.create;a.destroy=n()}a=a.next}while(a!==t)}}function xo(e,t,a){switch(a.tag){case 0:case 11:case 15:case 22:return void Ao(3,a);case 1:if(e=a.stateNode,4&a.effectTag)if(null===t)e.componentDidMount();else{var n=a.elementType===a.type?t.memoizedProps:dr(a.type,t.memoizedProps);e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return t=a.updateQueue,void(null!==t&&Ir(a,t,e));case 3:if(t=a.updateQueue,null!==t){if(e=null,null!==a.child)switch(a.child.tag){case 5:e=a.child.stateNode;break;case 1:e=a.child.stateNode}Ir(a,t,e)}return;case 5:return e=a.stateNode,void(null===t&&4&a.effectTag&&Sa(a.type,a.memoizedProps)&&e.focus());case 6:return;case 4:return;case 12:return;case 13:return void(null===a.memoizedState&&(a=a.alternate,null!==a&&(a=a.memoizedState,null!==a&&(a=a.dehydrated,null!==a&&Bt(a)))));case 19:case 17:case 20:case 21:return}throw Error(c(163))}function _o(e,t,a){switch("function"===typeof Xi&&Xi(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(e=t.updateQueue,null!==e&&(e=e.lastEffect,null!==e)){var n=e.next;cr(97<a?97:a,(function(){var e=n;do{var a=e.destroy;if(void 0!==a){var l=t;try{a()}catch(r){Zi(l,r)}}e=e.next}while(e!==n)}))}break;case 1:vo(t),a=t.stateNode,"function"===typeof a.componentWillUnmount&&ko(t,a);break;case 5:vo(t);break;case 4:No(e,t,a)}}function Go(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&Go(t)}function Po(e){return 5===e.tag||3===e.tag||4===e.tag}function Io(e){e:{for(var t=e.return;null!==t;){if(Po(t)){var a=t;break e}t=t.return}throw Error(c(160))}switch(t=a.stateNode,a.tag){case 5:var n=!1;break;case 3:t=t.containerInfo,n=!0;break;case 4:t=t.containerInfo,n=!0;break;default:throw Error(c(161))}16&a.effectTag&&(We(t,""),a.effectTag&=-17);e:t:for(a=e;;){for(;null===a.sibling;){if(null===a.return||Po(a.return)){a=null;break e}a=a.return}for(a.sibling.return=a.return,a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(2&a.effectTag)continue t;if(null===a.child||4===a.tag)continue t;a.child.return=a,a=a.child}if(!(2&a.effectTag)){a=a.stateNode;break e}}n?So(e,a,t):To(e,a,t)}function So(e,t,a){var n=e.tag,l=5===n||6===n;if(l)e=l?e.stateNode:e.stateNode.instance,t?8===a.nodeType?a.parentNode.insertBefore(e,t):a.insertBefore(e,t):(8===a.nodeType?(t=a.parentNode,t.insertBefore(e,a)):(t=a,t.appendChild(e)),a=a._reactRootContainer,null!==a&&void 0!==a||null!==t.onclick||(t.onclick=ba));else if(4!==n&&(e=e.child,null!==e))for(So(e,t,a),e=e.sibling;null!==e;)So(e,t,a),e=e.sibling}function To(e,t,a){var n=e.tag,l=5===n||6===n;if(l)e=l?e.stateNode:e.stateNode.instance,t?a.insertBefore(e,t):a.appendChild(e);else if(4!==n&&(e=e.child,null!==e))for(To(e,t,a),e=e.sibling;null!==e;)To(e,t,a),e=e.sibling}function No(e,t,a){for(var n,l,r=t,o=!1;;){if(!o){o=r.return;e:for(;;){if(null===o)throw Error(c(160));switch(n=o.stateNode,o.tag){case 5:l=!1;break e;case 3:n=n.containerInfo,l=!0;break e;case 4:n=n.containerInfo,l=!0;break e}o=o.return}o=!0}if(5===r.tag||6===r.tag){e:for(var i=e,s=r,u=a,m=s;;)if(_o(i,m,u),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===s)break e;for(;null===m.sibling;){if(null===m.return||m.return===s)break e;m=m.return}m.sibling.return=m.return,m=m.sibling}l?(i=n,s=r.stateNode,8===i.nodeType?i.parentNode.removeChild(s):i.removeChild(s)):n.removeChild(r.stateNode)}else if(4===r.tag){if(null!==r.child){n=r.stateNode.containerInfo,l=!0,r.child.return=r,r=r.child;continue}}else if(_o(e,r,a),null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return,4===r.tag&&(o=!1)}r.sibling.return=r.return,r=r.sibling}}function jo(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void Lo(3,t);case 1:return;case 5:var a=t.stateNode;if(null!=a){var n=t.memoizedProps,l=null!==e?e.memoizedProps:n;e=t.type;var r=t.updateQueue;if(t.updateQueue=null,null!==r){for(a[Ca]=n,"input"===e&&"radio"===n.type&&null!=n.name&&Se(a,n),pa(e,l),t=pa(e,n),l=0;l<r.length;l+=2){var o=r[l],i=r[l+1];"style"===o?ma(a,i):"dangerouslySetInnerHTML"===o?Be(a,i):"children"===o?We(a,i):te(a,o,i,t)}switch(e){case"input":Te(a,n);break;case"textarea":Oe(a,n);break;case"select":t=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!n.multiple,e=n.value,null!=e?De(a,!!n.multiple,e,!1):t!==!!n.multiple&&(null!=n.defaultValue?De(a,!!n.multiple,n.defaultValue,!0):De(a,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(c(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return t=t.stateNode,void(t.hydrate&&(t.hydrate=!1,Bt(t.containerInfo)));case 12:return;case 13:if(a=t,null===t.memoizedState?n=!1:(n=!0,a=t.child,si=nr()),null!==a)e:for(e=a;;){if(5===e.tag)r=e.stateNode,n?(r=r.style,"function"===typeof r.setProperty?r.setProperty("display","none","important"):r.display="none"):(r=e.stateNode,l=e.memoizedProps.style,l=void 0!==l&&null!==l&&l.hasOwnProperty("display")?l.display:null,r.style.display=ua("display",l));else if(6===e.tag)e.stateNode.nodeValue=n?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){r=e.child.sibling,r.return=e,e=r;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void Ho(t);case 19:return void Ho(t);case 17:return}throw Error(c(163))}function Ho(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var a=e.stateNode;null===a&&(a=e.stateNode=new fo),t.forEach((function(t){var n=Qi.bind(null,e,t);a.has(t)||(a.add(t),t.then(n,n))}))}}var qo="function"===typeof WeakMap?WeakMap:Map;function Do(e,t,a){a=xr(a,null),a.tag=3,a.payload={element:null};var n=t.value;return a.callback=function(){di||(di=!0,Ei=n),yo(e,t)},a}function zo(e,t,a){a=xr(a,null),a.tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var l=t.value;a.payload=function(){return yo(e,t),n(l)}}var r=e.stateNode;return null!==r&&"function"===typeof r.componentDidCatch&&(a.callback=function(){"function"!==typeof n&&(null===pi?pi=new Set([this]):pi.add(this),yo(e,t));var a=t.stack;this.componentDidCatch(t.value,{componentStack:null!==a?a:""})}),a}var Co,Oo=Math.ceil,Ro=ee.ReactCurrentDispatcher,Fo=ee.ReactCurrentOwner,Uo=0,Mo=8,Yo=16,Bo=32,Wo=0,Ko=1,Vo=2,Zo=3,$o=4,Qo=5,Jo=Uo,Xo=null,ei=null,ti=0,ai=Wo,ni=null,li=1073741823,ri=1073741823,ci=null,oi=0,ii=!1,si=0,ui=500,mi=null,di=!1,Ei=null,pi=null,hi=!1,gi=null,bi=90,fi=null,yi=0,ki=null,vi=0;function wi(){return(Jo&(Yo|Bo))!==Uo?1073741821-(nr()/10|0):0!==vi?vi:vi=1073741821-(nr()/10|0)}function Li(e,t,a){if(t=t.mode,0===(2&t))return 1073741823;var n=lr();if(0===(4&t))return 99===n?1073741823:1073741822;if((Jo&Yo)!==Uo)return ti;if(null!==a)e=mr(e,0|a.timeoutMs||5e3,250);else switch(n){case 99:e=1073741823;break;case 98:e=mr(e,150,100);break;case 97:case 96:e=mr(e,5e3,250);break;case 95:e=2;break;default:throw Error(c(326))}return null!==Xo&&e===ti&&--e,e}function Ai(e,t){if(50<yi)throw yi=0,ki=null,Error(c(185));if(e=xi(e,t),null!==e){var a=lr();1073741823===t?(Jo&Mo)!==Uo&&(Jo&(Yo|Bo))===Uo?Ii(e):(Gi(e),Jo===Uo&&sr()):Gi(e),(4&Jo)===Uo||98!==a&&99!==a||(null===fi?fi=new Map([[e,t]]):(a=fi.get(e),(void 0===a||a>t)&&fi.set(e,t)))}}function xi(e,t){e.expirationTime<t&&(e.expirationTime=t);var a=e.alternate;null!==a&&a.expirationTime<t&&(a.expirationTime=t);var n=e.return,l=null;if(null===n&&3===e.tag)l=e.stateNode;else for(;null!==n;){if(a=n.alternate,n.childExpirationTime<t&&(n.childExpirationTime=t),null!==a&&a.childExpirationTime<t&&(a.childExpirationTime=t),null===n.return&&3===n.tag){l=n.stateNode;break}n=n.return}return null!==l&&(Xo===l&&(zi(t),ai===$o&&ds(l,ti)),Es(l,t)),l}function _i(e){var t=e.lastExpiredTime;if(0!==t)return t;if(t=e.firstPendingTime,!ms(e,t))return t;var a=e.lastPingedTime;return e=e.nextKnownPendingLevel,e=a>e?a:e,2>=e&&t!==e?0:e}function Gi(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=ir(Ii.bind(null,e));else{var t=_i(e),a=e.callbackNode;if(0===t)null!==a&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var n=wi();if(1073741823===t?n=99:1===t||2===t?n=95:(n=10*(1073741821-t)-10*(1073741821-n),n=0>=n?99:250>=n?98:5250>=n?97:95),null!==a){var l=e.callbackPriority;if(e.callbackExpirationTime===t&&l>=n)return;a!==$l&&Fl(a)}e.callbackExpirationTime=t,e.callbackPriority=n,t=1073741823===t?ir(Ii.bind(null,e)):or(n,Pi.bind(null,e),{timeout:10*(1073741821-t)-nr()}),e.callbackNode=t}}}function Pi(e,t){if(vi=0,t)return t=wi(),ps(e,t),Gi(e),null;var a=_i(e);if(0!==a){if(t=e.callbackNode,(Jo&(Yo|Bo))!==Uo)throw Error(c(327));if(Wi(),e===Xo&&a===ti||ji(e,a),null!==ei){var n=Jo;Jo|=Yo;var l=qi();do{try{Oi();break}catch(i){Hi(e,i)}}while(1);if(br(),Jo=n,Ro.current=l,ai===Ko)throw t=ni,ji(e,a),ds(e,a),Gi(e),t;if(null===ei)switch(l=e.finishedWork=e.current.alternate,e.finishedExpirationTime=a,n=ai,Xo=null,n){case Wo:case Ko:throw Error(c(345));case Vo:ps(e,2<a?2:a);break;case Zo:if(ds(e,a),n=e.lastSuspendedTime,a===n&&(e.nextKnownPendingLevel=Ui(l)),1073741823===li&&(l=si+ui-nr(),10<l)){if(ii){var r=e.lastPingedTime;if(0===r||r>=a){e.lastPingedTime=a,ji(e,a);break}}if(r=_i(e),0!==r&&r!==a)break;if(0!==n&&n!==a){e.lastPingedTime=n;break}e.timeoutHandle=Na(Mi.bind(null,e),l);break}Mi(e);break;case $o:if(ds(e,a),n=e.lastSuspendedTime,a===n&&(e.nextKnownPendingLevel=Ui(l)),ii&&(l=e.lastPingedTime,0===l||l>=a)){e.lastPingedTime=a,ji(e,a);break}if(l=_i(e),0!==l&&l!==a)break;if(0!==n&&n!==a){e.lastPingedTime=n;break}if(1073741823!==ri?n=10*(1073741821-ri)-nr():1073741823===li?n=0:(n=10*(1073741821-li)-5e3,l=nr(),a=10*(1073741821-a)-l,n=l-n,0>n&&(n=0),n=(120>n?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Oo(n/1960))-n,a<n&&(n=a)),10<n){e.timeoutHandle=Na(Mi.bind(null,e),n);break}Mi(e);break;case Qo:if(1073741823!==li&&null!==ci){r=li;var o=ci;if(n=0|o.busyMinDurationMs,0>=n?n=0:(l=0|o.busyDelayMs,r=nr()-(10*(1073741821-r)-(0|o.timeoutMs||5e3)),n=r<=l?0:l+n-r),10<n){ds(e,a),e.timeoutHandle=Na(Mi.bind(null,e),n);break}}Mi(e);break;default:throw Error(c(329))}if(Gi(e),e.callbackNode===t)return Pi.bind(null,e)}}return null}function Ii(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Jo&(Yo|Bo))!==Uo)throw Error(c(327));if(Wi(),e===Xo&&t===ti||ji(e,t),null!==ei){var a=Jo;Jo|=Yo;var n=qi();do{try{Ci();break}catch(l){Hi(e,l)}}while(1);if(br(),Jo=a,Ro.current=n,ai===Ko)throw a=ni,ji(e,t),ds(e,t),Gi(e),a;if(null!==ei)throw Error(c(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Xo=null,Mi(e),Gi(e)}return null}function Si(){if(null!==fi){var e=fi;fi=null,e.forEach((function(e,t){ps(t,e),Gi(t)})),sr()}}function Ti(e,t){var a=Jo;Jo|=1;try{return e(t)}finally{Jo=a,Jo===Uo&&sr()}}function Ni(e,t){var a=Jo;Jo&=-2,Jo|=Mo;try{return e(t)}finally{Jo=a,Jo===Uo&&sr()}}function ji(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var a=e.timeoutHandle;if(-1!==a&&(e.timeoutHandle=-1,ja(a)),null!==ei)for(a=ei.return;null!==a;){var n=a;switch(n.tag){case 1:n=n.type.childContextTypes,null!==n&&void 0!==n&&Hl();break;case 3:$r(),_l(Sl),_l(Il);break;case 5:Jr(n);break;case 4:$r();break;case 13:_l(Xr);break;case 19:_l(Xr);break;case 10:fr(n)}a=a.return}Xo=e,ei=rs(e.current,null),ti=t,ai=Wo,ni=null,ri=li=1073741823,ci=null,oi=0,ii=!1}function Hi(e,t){do{try{if(br(),ac.current=jc,ic)for(var a=rc.memoizedState;null!==a;){var n=a.queue;null!==n&&(n.pending=null),a=a.next}if(lc=0,oc=cc=rc=null,ic=!1,null===ei||null===ei.return)return ai=Ko,ni=t,ei=null;e:{var l=e,r=ei.return,c=ei,o=t;if(t=ti,c.effectTag|=2048,c.firstEffect=c.lastEffect=null,null!==o&&"object"===typeof o&&"function"===typeof o.then){var i=o;if(0===(2&c.mode)){var s=c.alternate;s?(c.updateQueue=s.updateQueue,c.memoizedState=s.memoizedState,c.expirationTime=s.expirationTime):(c.updateQueue=null,c.memoizedState=null)}var u=0!==(1&Xr.current),m=r;do{var d;if(d=13===m.tag){var E=m.memoizedState;if(null!==E)d=null!==E.dehydrated;else{var p=m.memoizedProps;d=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!u)}}if(d){var h=m.updateQueue;if(null===h){var g=new Set;g.add(i),m.updateQueue=g}else h.add(i);if(0===(2&m.mode)){if(m.effectTag|=64,c.effectTag&=-2981,1===c.tag)if(null===c.alternate)c.tag=17;else{var b=xr(1073741823,null);b.tag=2,_r(c,b)}c.expirationTime=1073741823;break e}o=void 0,c=t;var f=l.pingCache;if(null===f?(f=l.pingCache=new qo,o=new Set,f.set(i,o)):(o=f.get(i),void 0===o&&(o=new Set,f.set(i,o))),!o.has(c)){o.add(c);var y=$i.bind(null,l,i,c);i.then(y,y)}m.effectTag|=4096,m.expirationTime=t;break e}m=m.return}while(null!==m);o=Error((ve(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+we(c))}ai!==Qo&&(ai=Vo),o=bo(o,c),m=r;do{switch(m.tag){case 3:i=o,m.effectTag|=4096,m.expirationTime=t;var k=Do(m,i,t);Gr(m,k);break e;case 1:i=o;var v=m.type,w=m.stateNode;if(0===(64&m.effectTag)&&("function"===typeof v.getDerivedStateFromError||null!==w&&"function"===typeof w.componentDidCatch&&(null===pi||!pi.has(w)))){m.effectTag|=4096,m.expirationTime=t;var L=zo(m,i,t);Gr(m,L);break e}}m=m.return}while(null!==m)}ei=Fi(ei)}catch(A){t=A;continue}break}while(1)}function qi(){var e=Ro.current;return Ro.current=jc,null===e?jc:e}function Di(e,t){e<li&&2<e&&(li=e),null!==t&&e<ri&&2<e&&(ri=e,ci=t)}function zi(e){e>oi&&(oi=e)}function Ci(){for(;null!==ei;)ei=Ri(ei)}function Oi(){for(;null!==ei&&!Ql();)ei=Ri(ei)}function Ri(e){var t=Co(e.alternate,e,ti);return e.memoizedProps=e.pendingProps,null===t&&(t=Fi(e)),Fo.current=null,t}function Fi(e){ei=e;do{var t=ei.alternate;if(e=ei.return,0===(2048&ei.effectTag)){if(t=ho(t,ei,ti),1===ti||1!==ei.childExpirationTime){for(var a=0,n=ei.child;null!==n;){var l=n.expirationTime,r=n.childExpirationTime;l>a&&(a=l),r>a&&(a=r),n=n.sibling}ei.childExpirationTime=a}if(null!==t)return t;null!==e&&0===(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=ei.firstEffect),null!==ei.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=ei.firstEffect),e.lastEffect=ei.lastEffect),1<ei.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=ei:e.firstEffect=ei,e.lastEffect=ei))}else{if(t=go(ei),null!==t)return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(t=ei.sibling,null!==t)return t;ei=e}while(null!==ei);return ai===Wo&&(ai=Qo),null}function Ui(e){var t=e.expirationTime;return e=e.childExpirationTime,t>e?t:e}function Mi(e){var t=lr();return cr(99,Yi.bind(null,e,t)),null}function Yi(e,t){do{Wi()}while(null!==gi);if((Jo&(Yo|Bo))!==Uo)throw Error(c(327));var a=e.finishedWork,n=e.finishedExpirationTime;if(null===a)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,a===e.current)throw Error(c(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var l=Ui(a);if(e.firstPendingTime=l,n<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:n<=e.firstSuspendedTime&&(e.firstSuspendedTime=n-1),n<=e.lastPingedTime&&(e.lastPingedTime=0),n<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Xo&&(ei=Xo=null,ti=0),1<a.effectTag?null!==a.lastEffect?(a.lastEffect.nextEffect=a,l=a.firstEffect):l=a:l=a.firstEffect,null!==l){var r=Jo;Jo|=Bo,Fo.current=null,Pa=ta;var o=wa();if(La(o)){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{i=(i=o.ownerDocument)&&i.defaultView||window;var s=i.getSelection&&i.getSelection();if(s&&0!==s.rangeCount){i=s.anchorNode;var u=s.anchorOffset,m=s.focusNode;s=s.focusOffset;try{i.nodeType,m.nodeType}catch(_){i=null;break e}var d=0,E=-1,p=-1,h=0,g=0,b=o,f=null;t:for(;;){for(var y;;){if(b!==i||0!==u&&3!==b.nodeType||(E=d+u),b!==m||0!==s&&3!==b.nodeType||(p=d+s),3===b.nodeType&&(d+=b.nodeValue.length),null===(y=b.firstChild))break;f=b,b=y}for(;;){if(b===o)break t;if(f===i&&++h===u&&(E=d),f===m&&++g===s&&(p=d),null!==(y=b.nextSibling))break;b=f,f=b.parentNode}b=y}i=-1===E||-1===p?null:{start:E,end:p}}else i=null}i=i||{start:0,end:0}}else i=null;Ia={activeElementDetached:null,focusedElem:o,selectionRange:i},ta=!1,mi=l;do{try{Bi()}catch(_){if(null===mi)throw Error(c(330));Zi(mi,_),mi=mi.nextEffect}}while(null!==mi);mi=l;do{try{for(o=e,i=t;null!==mi;){var k=mi.effectTag;if(16&k&&We(mi.stateNode,""),128&k){var v=mi.alternate;if(null!==v){var w=v.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(1038&k){case 2:Io(mi),mi.effectTag&=-3;break;case 6:Io(mi),mi.effectTag&=-3,jo(mi.alternate,mi);break;case 1024:mi.effectTag&=-1025;break;case 1028:mi.effectTag&=-1025,jo(mi.alternate,mi);break;case 4:jo(mi.alternate,mi);break;case 8:u=mi,No(o,u,i),Go(u)}mi=mi.nextEffect}}catch(_){if(null===mi)throw Error(c(330));Zi(mi,_),mi=mi.nextEffect}}while(null!==mi);if(w=Ia,v=wa(),k=w.focusedElem,i=w.selectionRange,v!==k&&k&&k.ownerDocument&&va(k.ownerDocument.documentElement,k)){null!==i&&La(k)&&(v=i.start,w=i.end,void 0===w&&(w=v),"selectionStart"in k?(k.selectionStart=v,k.selectionEnd=Math.min(w,k.value.length)):(w=(v=k.ownerDocument||document)&&v.defaultView||window,w.getSelection&&(w=w.getSelection(),u=k.textContent.length,o=Math.min(i.start,u),i=void 0===i.end?o:Math.min(i.end,u),!w.extend&&o>i&&(u=i,i=o,o=u),u=ka(k,o),m=ka(k,i),u&&m&&(1!==w.rangeCount||w.anchorNode!==u.node||w.anchorOffset!==u.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(v=v.createRange(),v.setStart(u.node,u.offset),w.removeAllRanges(),o>i?(w.addRange(v),w.extend(m.node,m.offset)):(v.setEnd(m.node,m.offset),w.addRange(v)))))),v=[];for(w=k;w=w.parentNode;)1===w.nodeType&&v.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"===typeof k.focus&&k.focus(),k=0;k<v.length;k++)w=v[k],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}ta=!!Pa,Ia=Pa=null,e.current=a,mi=l;do{try{for(k=e;null!==mi;){var L=mi.effectTag;if(36&L&&xo(k,mi.alternate,mi),128&L){v=void 0;var A=mi.ref;if(null!==A){var x=mi.stateNode;switch(mi.tag){case 5:v=x;break;default:v=x}"function"===typeof A?A(v):A.current=v}}mi=mi.nextEffect}}catch(_){if(null===mi)throw Error(c(330));Zi(mi,_),mi=mi.nextEffect}}while(null!==mi);mi=null,Jl(),Jo=r}else e.current=a;if(hi)hi=!1,gi=e,bi=t;else for(mi=l;null!==mi;)t=mi.nextEffect,mi.nextEffect=null,mi=t;if(t=e.firstPendingTime,0===t&&(pi=null),1073741823===t?e===ki?yi++:(yi=0,ki=e):yi=0,"function"===typeof Ji&&Ji(a.stateNode,n),Gi(e),di)throw di=!1,e=Ei,Ei=null,e;return(Jo&Mo)!==Uo||sr(),null}function Bi(){for(;null!==mi;){var e=mi.effectTag;0!==(256&e)&&wo(mi.alternate,mi),0===(512&e)||hi||(hi=!0,or(97,(function(){return Wi(),null}))),mi=mi.nextEffect}}function Wi(){if(90!==bi){var e=97<bi?97:bi;return bi=90,cr(e,Ki)}}function Ki(){if(null===gi)return!1;var e=gi;if(gi=null,(Jo&(Yo|Bo))!==Uo)throw Error(c(331));var t=Jo;for(Jo|=Bo,e=e.current.firstEffect;null!==e;){try{var a=e;if(0!==(512&a.effectTag))switch(a.tag){case 0:case 11:case 15:case 22:Lo(5,a),Ao(5,a)}}catch(n){if(null===e)throw Error(c(330));Zi(e,n)}a=e.nextEffect,e.nextEffect=null,e=a}return Jo=t,sr(),!0}function Vi(e,t,a){t=bo(a,t),t=Do(e,t,1073741823),_r(e,t),e=xi(e,1073741823),null!==e&&Gi(e)}function Zi(e,t){if(3===e.tag)Vi(e,e,t);else for(var a=e.return;null!==a;){if(3===a.tag){Vi(a,e,t);break}if(1===a.tag){var n=a.stateNode;if("function"===typeof a.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===pi||!pi.has(n))){e=bo(t,e),e=zo(a,e,1073741823),_r(a,e),a=xi(a,1073741823),null!==a&&Gi(a);break}}a=a.return}}function $i(e,t,a){var n=e.pingCache;null!==n&&n.delete(t),Xo===e&&ti===a?ai===$o||ai===Zo&&1073741823===li&&nr()-si<ui?ji(e,ti):ii=!0:ms(e,a)&&(t=e.lastPingedTime,0!==t&&t<a||(e.lastPingedTime=a,Gi(e)))}function Qi(e,t){var a=e.stateNode;null!==a&&a.delete(t),t=0,0===t&&(t=wi(),t=Li(t,e,null)),e=xi(e,t),null!==e&&Gi(e)}Co=function(e,t,a){var n=t.expirationTime;if(null!==e){var l=t.pendingProps;if(e.memoizedProps!==l||Sl.current)Kc=!0;else{if(n<a){switch(Kc=!1,t.tag){case 3:ao(t),Bc();break;case 5:if(Qr(t),4&t.mode&&1!==a&&l.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:jl(t.type)&&zl(t);break;case 4:Zr(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value,l=t.type._context,Gl(Er,l._currentValue),l._currentValue=n;break;case 13:if(null!==t.memoizedState)return n=t.child.childExpirationTime,0!==n&&n>=a?io(e,t,a):(Gl(Xr,1&Xr.current),t=Eo(e,t,a),null!==t?t.sibling:null);Gl(Xr,1&Xr.current);break;case 19:if(n=t.childExpirationTime>=a,0!==(64&e.effectTag)){if(n)return mo(e,t,a);t.effectTag|=64}if(l=t.memoizedState,null!==l&&(l.rendering=null,l.tail=null),Gl(Xr,Xr.current),!n)return null}return Eo(e,t,a)}Kc=!1}}else Kc=!1;switch(t.expirationTime=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,l=Nl(t,Il.current),kr(t,a),l=mc(null,t,n,e,l,a),t.effectTag|=1,"object"===typeof l&&null!==l&&"function"===typeof l.render&&void 0===l.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,jl(n)){var r=!0;zl(t)}else r=!1;t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,Lr(t);var o=n.getDerivedStateFromProps;"function"===typeof o&&Nr(t,n,o,e),l.updater=jr,t.stateNode=l,l._reactInternalFiber=t,zr(t,n,e,a),t=to(null,t,n,!0,r,a)}else t.tag=0,Vc(null,t,l,a),t=t.child;return t;case 16:e:{if(l=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,ke(l),1!==l._status)throw l._result;switch(l=l._result,t.type=l,r=t.tag=ls(l),e=dr(l,e),r){case 0:t=Xc(null,t,l,e,a);break e;case 1:t=eo(null,t,l,e,a);break e;case 11:t=Zc(null,t,l,e,a);break e;case 14:t=$c(null,t,l,dr(l.type,e),n,a);break e}throw Error(c(306,l,""))}return t;case 0:return n=t.type,l=t.pendingProps,l=t.elementType===n?l:dr(n,l),Xc(e,t,n,l,a);case 1:return n=t.type,l=t.pendingProps,l=t.elementType===n?l:dr(n,l),eo(e,t,n,l,a);case 3:if(ao(t),n=t.updateQueue,null===e||null===n)throw Error(c(282));if(n=t.pendingProps,l=t.memoizedState,l=null!==l?l.element:null,Ar(e,t),Pr(t,n,null,a),n=t.memoizedState.element,n===l)Bc(),t=Eo(e,t,a);else{if((l=t.stateNode.hydrate)&&(Cc=Ha(t.stateNode.containerInfo.firstChild),zc=t,l=Oc=!0),l)for(a=Mr(t,null,n,a),t.child=a;a;)a.effectTag=-3&a.effectTag|1024,a=a.sibling;else Vc(e,t,n,a),Bc();t=t.child}return t;case 5:return Qr(t),null===e&&Uc(t),n=t.type,l=t.pendingProps,r=null!==e?e.memoizedProps:null,o=l.children,Ta(n,l)?o=null:null!==r&&Ta(n,r)&&(t.effectTag|=16),Jc(e,t),4&t.mode&&1!==a&&l.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Vc(e,t,o,a),t=t.child),t;case 6:return null===e&&Uc(t),null;case 13:return io(e,t,a);case 4:return Zr(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Ur(t,null,n,a):Vc(e,t,n,a),t.child;case 11:return n=t.type,l=t.pendingProps,l=t.elementType===n?l:dr(n,l),Zc(e,t,n,l,a);case 7:return Vc(e,t,t.pendingProps,a),t.child;case 8:return Vc(e,t,t.pendingProps.children,a),t.child;case 12:return Vc(e,t,t.pendingProps.children,a),t.child;case 10:e:{n=t.type._context,l=t.pendingProps,o=t.memoizedProps,r=l.value;var i=t.type._context;if(Gl(Er,i._currentValue),i._currentValue=r,null!==o)if(i=o.value,r=el(i,r)?0:0|("function"===typeof n._calculateChangedBits?n._calculateChangedBits(i,r):1073741823),0===r){if(o.children===l.children&&!Sl.current){t=Eo(e,t,a);break e}}else for(i=t.child,null!==i&&(i.return=t);null!==i;){var s=i.dependencies;if(null!==s){o=i.child;for(var u=s.firstContext;null!==u;){if(u.context===n&&0!==(u.observedBits&r)){1===i.tag&&(u=xr(a,null),u.tag=2,_r(i,u)),i.expirationTime<a&&(i.expirationTime=a),u=i.alternate,null!==u&&u.expirationTime<a&&(u.expirationTime=a),yr(i.return,a),s.expirationTime<a&&(s.expirationTime=a);break}u=u.next}}else o=10===i.tag&&i.type===t.type?null:i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(i=o.sibling,null!==i){i.return=o.return,o=i;break}o=o.return}i=o}Vc(e,t,l.children,a),t=t.child}return t;case 9:return l=t.type,r=t.pendingProps,n=r.children,kr(t,a),l=vr(l,r.unstable_observedBits),n=n(l),t.effectTag|=1,Vc(e,t,n,a),t.child;case 14:return l=t.type,r=dr(l,t.pendingProps),r=dr(l.type,r),$c(e,t,l,r,n,a);case 15:return Qc(e,t,t.type,t.pendingProps,n,a);case 17:return n=t.type,l=t.pendingProps,l=t.elementType===n?l:dr(n,l),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,jl(n)?(e=!0,zl(t)):e=!1,kr(t,a),qr(t,n,l),zr(t,n,l,a),to(null,t,n,!0,e,a);case 19:return mo(e,t,a)}throw Error(c(156,t.tag))};var Ji=null,Xi=null;function es(e){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var a=t.inject(e);Ji=function(e){try{t.onCommitFiberRoot(a,e,void 0,64===(64&e.current.effectTag))}catch(n){}},Xi=function(e){try{t.onCommitFiberUnmount(a,e)}catch(n){}}}catch(n){}return!0}function ts(e,t,a,n){this.tag=e,this.key=a,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function as(e,t,a,n){return new ts(e,t,a,n)}function ns(e){return e=e.prototype,!(!e||!e.isReactComponent)}function ls(e){if("function"===typeof e)return ns(e)?1:0;if(void 0!==e&&null!==e){if(e=e.$$typeof,e===de)return 11;if(e===he)return 14}return 2}function rs(e,t){var a=e.alternate;return null===a?(a=as(e.tag,t,e.key,e.mode),a.elementType=e.elementType,a.type=e.type,a.stateNode=e.stateNode,a.alternate=e,e.alternate=a):(a.pendingProps=t,a.effectTag=0,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null),a.childExpirationTime=e.childExpirationTime,a.expirationTime=e.expirationTime,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,t=e.dependencies,a.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},a.sibling=e.sibling,a.index=e.index,a.ref=e.ref,a}function cs(e,t,a,n,l,r){var o=2;if(n=e,"function"===typeof e)ns(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case ce:return os(a.children,l,r,t);case me:o=8,l|=7;break;case oe:o=8,l|=1;break;case ie:return e=as(12,a,t,8|l),e.elementType=ie,e.type=ie,e.expirationTime=r,e;case Ee:return e=as(13,a,t,l),e.type=Ee,e.elementType=Ee,e.expirationTime=r,e;case pe:return e=as(19,a,t,l),e.elementType=pe,e.expirationTime=r,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case se:o=10;break e;case ue:o=9;break e;case de:o=11;break e;case he:o=14;break e;case ge:o=16,n=null;break e;case be:o=22;break e}throw Error(c(130,null==e?e:typeof e,""))}return t=as(o,a,t,l),t.elementType=e,t.type=n,t.expirationTime=r,t}function os(e,t,a,n){return e=as(7,e,n,t),e.expirationTime=a,e}function is(e,t,a){return e=as(6,e,null,t),e.expirationTime=a,e}function ss(e,t,a){return t=as(4,null!==e.children?e.children:[],e.key,t),t.expirationTime=a,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function us(e,t,a){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=a,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function ms(e,t){var a=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==a&&a>=t&&e<=t}function ds(e,t){var a=e.firstSuspendedTime,n=e.lastSuspendedTime;a<t&&(e.firstSuspendedTime=t),(n>t||0===a)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Es(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var a=e.firstSuspendedTime;0!==a&&(t>=a?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function ps(e,t){var a=e.lastExpiredTime;(0===a||a>t)&&(e.lastExpiredTime=t)}function hs(e,t,a,n){var l=t.current,r=wi(),o=Sr.suspense;r=Li(r,l,o);e:if(a){a=a._reactInternalFiber;t:{if(rt(a)!==a||1!==a.tag)throw Error(c(170));var i=a;do{switch(i.tag){case 3:i=i.stateNode.context;break t;case 1:if(jl(i.type)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break t}}i=i.return}while(null!==i);throw Error(c(171))}if(1===a.tag){var s=a.type;if(jl(s)){a=Dl(a,s,i);break e}}a=i}else a=Pl;return null===t.context?t.context=a:t.pendingContext=a,t=xr(r,o),t.payload={element:e},n=void 0===n?null:n,null!==n&&(t.callback=n),_r(l,t),Ai(l,r),r}function gs(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function bs(e,t){e=e.memoizedState,null!==e&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function fs(e,t){bs(e,t),(e=e.alternate)&&bs(e,t)}function ys(e,t,a){a=null!=a&&!0===a.hydrate;var n=new us(e,t,a),l=as(3,null,null,2===t?7:1===t?3:0);n.current=l,l.stateNode=n,Lr(l),e[Oa]=n.current,a&&0!==t&&qt(e,9===e.nodeType?e:e.ownerDocument),this._internalRoot=n}function ks(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function vs(e,t){if(t||(t=e?9===e.nodeType?e.documentElement:e.firstChild:null,t=!(!t||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var a;a=e.lastChild;)e.removeChild(a);return new ys(e,0,t?{hydrate:!0}:void 0)}function ws(e,t,a,n,l){var r=a._reactRootContainer;if(r){var c=r._internalRoot;if("function"===typeof l){var o=l;l=function(){var e=gs(c);o.call(e)}}hs(t,c,e,l)}else{if(r=a._reactRootContainer=vs(a,n),c=r._internalRoot,"function"===typeof l){var i=l;l=function(){var e=gs(c);i.call(e)}}Ni((function(){hs(t,c,e,l)}))}return gs(c)}function Ls(e,t,a){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:re,key:null==n?null:""+n,children:e,containerInfo:t,implementation:a}}function As(e,t){var a=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ks(t))throw Error(c(200));return Ls(e,t,null,a)}ys.prototype.render=function(e){hs(e,this._internalRoot,null,null)},ys.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;hs(null,e,null,(function(){t[Oa]=null}))},wt=function(e){if(13===e.tag){var t=mr(wi(),150,100);Ai(e,t),fs(e,t)}},Lt=function(e){13===e.tag&&(Ai(e,3),fs(e,3))},At=function(e){if(13===e.tag){var t=wi();t=Li(t,e,null),Ai(e,t),fs(e,t)}},I=function(e,t,a){switch(t){case"input":if(Te(e,a),t=a.name,"radio"===a.type&&null!=t){for(a=e;a.parentNode;)a=a.parentNode;for(a=a.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<a.length;t++){var n=a[t];if(n!==e&&n.form===e.form){var l=Ma(n);if(!l)throw Error(c(90));Ge(n),Te(n,l)}}}break;case"textarea":Oe(e,a);break;case"select":t=a.value,null!=t&&De(e,!!a.multiple,t,!1)}},q=Ti,D=function(e,t,a,n,l){var r=Jo;Jo|=4;try{return cr(98,e.bind(null,t,a,n,l))}finally{Jo=r,Jo===Uo&&sr()}},z=function(){(Jo&(1|Yo|Bo))===Uo&&(Si(),Wi())},C=function(e,t){var a=Jo;Jo|=2;try{return e(t)}finally{Jo=a,Jo===Uo&&sr()}};var xs={Events:[Fa,Ua,Ma,G,A,$a,function(e){mt(e,Za)},j,H,ca,pt,Wi,{current:!1}]};(function(e){var t=e.findFiberByHostInstance;es(l({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ee.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=st(e),null===e?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:Ra,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=xs,t.createPortal=As,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"===typeof e.render)throw Error(c(188));throw Error(c(268,Object.keys(e)))}return e=st(t),e=null===e?null:e.stateNode,e},t.flushSync=function(e,t){if((Jo&(Yo|Bo))!==Uo)throw Error(c(187));var a=Jo;Jo|=1;try{return cr(99,e.bind(null,t))}finally{Jo=a,sr()}},t.hydrate=function(e,t,a){if(!ks(t))throw Error(c(200));return ws(null,e,t,!0,a)},t.render=function(e,t,a){if(!ks(t))throw Error(c(200));return ws(null,e,t,!1,a)},t.unmountComponentAtNode=function(e){if(!ks(e))throw Error(c(40));return!!e._reactRootContainer&&(Ni((function(){ws(null,null,e,!1,(function(){e._reactRootContainer=null,e[Oa]=null}))})),!0)},t.unstable_batchedUpdates=Ti,t.unstable_createPortal=function(e,t){return As(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,a,n){if(!ks(a))throw Error(c(200));if(null==e||void 0===e._reactInternalFiber)throw Error(c(38));return ws(e,t,a,!1,n)},t.version="16.14.0"},yoRg:function(e,t,a){var n=a("UTVS"),l=a("/GqU"),r=a("TWQb").indexOf,c=a("0BK2");e.exports=function(e,t){var a,o=l(e),i=0,s=[];for(a in o)!n(c,a)&&n(o,a)&&s.push(a);while(t.length>i)n(o,a=t[i++])&&(~r(s,a)||s.push(a));return s}},yq1k:function(e,t,a){"use strict";var n=a("I+eb"),l=a("TWQb").includes,r=a("RNIs"),c=a("rkAj"),o=c("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:!o},{includes:function(e){return l(this,e,arguments.length>1?arguments[1]:void 0)}}),r("includes")},"z+as":function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"Authentication is optional for some REST API endpoints accessing public data, but is required for GraphQL queries. Using authentication also increases your ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"},"API rate limit"),"."),l.a.createElement("p",null,"GitHub supports different authentication strategies:"),l.a.createElement("ol",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Personal access token")," (",l.a.createElement(r["Link"],{to:"https://github.com/settings/tokens/new"},"create"),"). This is the default authentication strategy. Set the ",l.a.createElement("code",null,"options.auth")," option to the token in ",l.a.createElement("code",null,"new Octokit(options)"),". Learn more about the built-in ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-token.js"},l.a.createElement("code",null,"@octokit/auth-token")," authentication strategy"),"."),l.a.createElement("li",null,l.a.createElement("strong",null,"OAuth Apps"),": authenticate using user access token created by an OAuth app, to which you granted selected permissions, or as the OAuth App itself (OAuth using ",l.a.createElement("code",null,"client_id")," and ",l.a.createElement("code",null,"client_secret"),"). Learn more about the optional ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-oauth-app.js"},l.a.createElement("code",null,"@octokit/auth-oauth-app")," authentication strategy")),l.a.createElement("li",null,l.a.createElement("strong",null,"GitHub Apps"),": authenticate using an installation access token or as GitHub App itself. Learn more about the optional ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-app.js/"},l.a.createElement("code",null,"@octokit/auth-app")," authentication strategy"),"."),l.a.createElement("li",null,l.a.createElement("strong",null,"GitHub Actions"),": authenticate using the ",l.a.createElement("code",null,"GITHUB_TOKEN")," secret which is provided to GitHub Actions Workflows. Learn more about the optional ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-action.js"},l.a.createElement("code",null,"@octokit/auth-action")," authentication strategy"),".")),l.a.createElement("p",null,"Learn more about all official and community ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth.js#readme"},"authentication strategies"),"."),l.a.createElement("p",null,"By default, ",l.a.createElement("code",null,"@octokit/rest")," authenticates using the ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/auth-token.js"},"token authentication strategy"),". Pass in a token using ",l.a.createElement("code",null,"options.auth"),". It can be a personal access token, an OAuth token, an installation access token or a JSON Web Token for GitHub App authentication. The ",l.a.createElement("code",null,"Authorization")," request header will be set according to the type of token."),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\n\nconst octokit = new Octokit({\n  auth: "mypersonalaccesstoken123",\n});\n\n// sends request with `Authorization: token mypersonalaccesstoken123` header\nconst { data } = await octokit.request("/user");\n',lang:"js"}),l.a.createElement("p",null,"To use a different authentication strategy, set ",l.a.createElement("code",null,"options.authStrategy"),". Here is an example for GitHub App authentication"),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\nconst { createAppAuth } = require("@octokit/auth-app");\n\nconst appOctokit = new Octokit({\n  authStrategy: createAppAuth,\n  auth: {\n    id: 123,\n    privateKey: process.env.PRIVATE_KEY,\n    // optional: this will make appOctokit authenticate as app (JWT)\n    //           or installation (access token), depending on the request URL\n    installationId: 123,\n  },\n});\n\nconst { data } = await appOctokit.request("/app");\n',lang:"js"}),l.a.createElement("p",null,"The ",l.a.createElement("code",null,".auth()")," method returned by the current authentication strategy can be accessed at ",l.a.createElement("code",null,"octokit.auth()"),". Example"),l.a.createElement(c["a"],{code:'const { token } = await appOctokit.auth({\n  type: "installation",\n  // defaults to `options.auth.installationId` set in the constructor\n  installationId: 123,\n});\n',lang:"js"})))}},z8NH:function(e,t,a){var n=a("dOgj");n("Float32",(function(e){return function(t,a,n){return e(this,t,a,n)}}))},zBJ4:function(e,t,a){var n=a("2oRo"),l=a("hh1v"),r=n.document,c=l(r)&&l(r.createElement);e.exports=function(e){return c?r.createElement(e):{}}},zCfM:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("p",null,"When you send too many requests in too little time you will likely hit errors due to rate and/or abuse limits."),l.a.createElement("p",null,"In order to automatically throttle requests as recommended in ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/rest/guides/best-practices-for-integrators"},"GitHub\u2019s best practices for integrators"),", we recommend you install the ",l.a.createElement(r["Link"],{to:"https://github.com/octokit/plugin-throttling.js"},l.a.createElement("code",null,"@octokit/plugin-throttling")," plugin"),"."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"throttle.onAbuseLimit")," and ",l.a.createElement("code",null,"throttle.onRateLimit")," options are required."),l.a.createElement("p",null,"Return ",l.a.createElement("code",null,"true")," from these functions to automatically retry the request after ",l.a.createElement("code",null,"retryAfter")," seconds. Return ",l.a.createElement("code",null,"false")," or ",l.a.createElement("code",null,"undefined")," to skip retry and throw the error. For rate limit errors, ",l.a.createElement("code",null,"retryAfter")," defaults to seconds until ",l.a.createElement("code",null,"X-RateLimit-Reset"),". For abuse errors, ",l.a.createElement("code",null,"retryAfter")," defaults to the ",l.a.createElement("code",null,"retry-after")," header but is a minimum of five seconds."),l.a.createElement(c["a"],{code:'const { Octokit } = require("@octokit/rest");\nconst { throttling } = require("@octokit/plugin-throttling");\nconst MyOctokit = Octokit.plugin(throttling);\n\nconst octokit = new MyOctokit({\n  auth: "token " + process.env.TOKEN,\n  throttle: {\n    onRateLimit: (retryAfter, options) => {\n      octokit.log.warn(\n        `Request quota exhausted for request ${options.method} ${options.url}`\n      );\n\n      // Retry twice after hitting a rate limit error, then give up\n      if (options.request.retryCount <= 2) {\n        console.log(`Retrying after ${retryAfter} seconds!`);\n        return true;\n      }\n    },\n    onAbuseLimit: (retryAfter, options) => {\n      // does not retry, only logs a warning\n      octokit.log.warn(\n        `Abuse detected for request ${options.method} ${options.url}`\n      );\n    },\n  },\n});\n',lang:"js"})))}},zFjo:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"accept-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#accept-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Accept a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.acceptInvitation({\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#accept-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-app-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#add-app-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add app access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Grants the specified apps push access for this branch. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The GitHub Apps that have push access to this branch. Use the app's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.addAppAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  apps,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"apps"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-app-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-a-repository-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#add-a-repository-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add a repository collaborator"),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement("p",null,'For more information the permission levels, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization"},"Repository permission levels for an organization"),'".'),l.a.createElement("p",null,"Note that, if you choose not to pass any parameters, you'll need to set ",l.a.createElement("code",null,"Content-Length"),' to zero when calling out to this endpoint. For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs"},"HTTP verbs"),'."'),l.a.createElement("p",null,"The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#invitations"},"repository invitations API endpoints"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"Rate limits")),l.a.createElement("p",null,"To prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository."),l.a.createElement(c["a"],{code:"octokit.repos.addCollaborator({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"permission"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permission to grant the collaborator. ",l.a.createElement("strong",null,"Only valid on organization-owned repositories.")," Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"pull")," - can pull, but not push to or administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"push")," - can pull and push, but not administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"admin")," - can pull, push and administer this repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"maintain")," - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"triage")," - Recommended for contributors who need to proactively manage issues and pull requests without write access."))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-a-repository-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#add-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.addStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n  contexts,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-team-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#add-team-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add team access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Grants the specified teams push access for this branch. You can also give push access to child teams."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The teams that can have push access. Use the team's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.addTeamAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  teams,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-team-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"add-user-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#add-user-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Add user access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Grants the specified people push access for this branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Usernames for people who can have push access. ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.addUserAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  users,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#add-user-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-a-user-is-a-repository-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#check-if-a-user-is-a-repository-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if a user is a repository collaborator"),l.a.createElement("p",null,"For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners."),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement(c["a"],{code:"octokit.repos.checkCollaborator({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"check-if-vulnerability-alerts-are-enabled-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#check-if-vulnerability-alerts-are-enabled-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Check if vulnerability alerts are enabled for a repository"),l.a.createElement("p",null,'Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies"},"About security alerts for vulnerable dependencies"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.checkVulnerabilityAlerts({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"compare-two-commits"},l.a.createElement(r["AnchorLink"],{to:"#compare-two-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Compare two commits"),l.a.createElement("p",null,"Both ",l.a.createElement("code",null,":base")," and ",l.a.createElement("code",null,":head")," must be branch names in ",l.a.createElement("code",null,":repo"),". To compare branches across other repositories in the same network as ",l.a.createElement("code",null,":repo"),", use the format ",l.a.createElement("code",null,"<USERNAME>:branch"),"."),l.a.createElement("p",null,"The response from the API is equivalent to running the ",l.a.createElement("code",null,"git log base..head")," command; however, commits are returned in chronological order. Pass the appropriate ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," to fetch diff and patch formats."),l.a.createElement("p",null,"The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a ",l.a.createElement("code",null,"renamed")," status have a ",l.a.createElement("code",null,"previous_filename")," field showing the previous filename of the file, and files with a ",l.a.createElement("code",null,"modified")," status have a ",l.a.createElement("code",null,"patch")," field showing the changes made to the file."),l.a.createElement("p",null,l.a.createElement("strong",null,"Working with large comparisons")),l.a.createElement("p",null,"The response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"List commits")," to enumerate all commits in the range."),l.a.createElement("p",null,"For comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.repos.compareCommits({\n  owner,\n  repo,\n  base,\n  head,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#compare-two-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a commit comment"),l.a.createElement("p",null,"Create a comment for a commit using its ",l.a.createElement("code",null,":commit_sha"),"."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.repos.createCommitComment({\n  owner,\n  repo,\n  commit_sha,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-9"},l.a.createElement(r["AnchorLink"],{to:"#parameters-9","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Relative path of the file to comment on."))),l.a.createElement("tr",null,l.a.createElement("td",null,"position"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Line index in the diff to comment on."))),l.a.createElement("tr",null,l.a.createElement("td",null,"line"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated"),". Use ",l.a.createElement("strong",null,"position")," parameter instead. Line number in the file to comment on."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-commit-signature-protection"},l.a.createElement(r["AnchorLink"],{to:"#create-commit-signature-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create commit signature protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits."),l.a.createElement(c["a"],{code:"octokit.repos.createCommitSignatureProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-10"},l.a.createElement(r["AnchorLink"],{to:"#parameters-10","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-commit-signature-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-commit-status"},l.a.createElement(r["AnchorLink"],{to:"#create-a-commit-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a commit status"),l.a.createElement("p",null,"Users with push access in a repository can create commit statuses for a given SHA."),l.a.createElement("p",null,"Note: there is a limit of 1000 statuses per ",l.a.createElement("code",null,"sha")," and ",l.a.createElement("code",null,"context")," within a repository. Attempts to create more than 1000 statuses will result in a validation error."),l.a.createElement(c["a"],{code:"octokit.repos.createCommitStatus({\n  owner,\n  repo,\n  sha,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-11"},l.a.createElement(r["AnchorLink"],{to:"#parameters-11","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the status. Can be one of ",l.a.createElement("code",null,"error"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"pending"),", or ",l.a.createElement("code",null,"success"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.",l.a.createElement("br",null),"For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:",l.a.createElement("br",null),l.a.createElement("code",null,"http://ci.example.com/user/repo/build/sha")))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the status."))),l.a.createElement("tr",null,l.a.createElement("td",null,"context"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A string label to differentiate this status from the status of other systems."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-commit-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-deploy-key"},l.a.createElement(r["AnchorLink"],{to:"#create-a-deploy-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a deploy key"),l.a.createElement("p",null,"You can create a read-only deploy key."),l.a.createElement(c["a"],{code:"octokit.repos.createDeployKey({\n  owner,\n  repo,\n  key,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-12"},l.a.createElement(r["AnchorLink"],{to:"#parameters-12","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"title"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A name for the key."))),l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the key."))),l.a.createElement("tr",null,l.a.createElement("td",null,"read_only"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If ",l.a.createElement("code",null,"true"),", the key will only be able to read repository contents. Otherwise, the key will be able to read and write."),l.a.createElement("p",null,'Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/repository-permission-levels-for-an-organization/"},"Repository permission levels for an organization"),'" and "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/permission-levels-for-a-user-account-repository/"},"Permission levels for a user account repository"),'."'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deploy-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-deployment"},l.a.createElement(r["AnchorLink"],{to:"#create-a-deployment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a deployment"),l.a.createElement("p",null,"Deployments offer a few configurable parameters with certain defaults."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"ref")," parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"environment")," parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as ",l.a.createElement("code",null,"production"),", ",l.a.createElement("code",null,"staging"),", and ",l.a.createElement("code",null,"qa"),". This parameter makes it easier to track which environments have requested deployments. The default environment is ",l.a.createElement("code",null,"production"),"."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"auto_merge")," parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref ",l.a.createElement("em",null,"is")," behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response."),l.a.createElement("p",null,"By default, ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#statuses"},"commit statuses")," for every submitted context must be in a ",l.a.createElement("code",null,"success"),"state. The ",l.a.createElement("code",null,"required_contexts")," parameter allows you to specify a subset of contexts that must be ",l.a.createElement("code",null,"success"),", or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"payload")," parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"task")," parameter is used by the deployment system to allow different execution paths. In the web world this might be ",l.a.createElement("code",null,"deploy:migrations")," to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled."),l.a.createElement("p",null,"Users with ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"repo_deployment")," scopes can create a deployment for a given ref."),l.a.createElement("h6",{id:"merged-branch-response"},l.a.createElement(r["AnchorLink"],{to:"#merged-branch-response","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merged branch response"),l.a.createElement("p",null,"You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating a deployment. This auto-merge happens when:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Auto-merge option is enabled in the repository"),l.a.createElement("li",null,"Topic branch does not include the latest changes on the base branch, which is ",l.a.createElement("code",null,"master")," in the response example"),l.a.createElement("li",null,"There are no merge conflicts")),l.a.createElement("p",null,"If there are no new commits in the base branch, a new request to create a deployment should give a successful response."),l.a.createElement("h4",{id:"merge-conflict-response"},l.a.createElement(r["AnchorLink"],{to:"#merge-conflict-response","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merge conflict response"),l.a.createElement("p",null,"This error happens when the ",l.a.createElement("code",null,"auto_merge")," option is enabled and when the default branch (in this case ",l.a.createElement("code",null,"master"),"), can't be merged into the branch that's being deployed (in this case ",l.a.createElement("code",null,"topic-branch"),"), due to merge conflicts."),l.a.createElement("h4",{id:"failed-commit-status-checks"},l.a.createElement(r["AnchorLink"],{to:"#failed-commit-status-checks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Failed commit status checks"),l.a.createElement("p",null,"This error happens when the ",l.a.createElement("code",null,"required_contexts")," parameter indicates that one or more contexts need to have a ",l.a.createElement("code",null,"success"),"status for the commit to be deployed, but one or more of the required contexts do not have a state of ",l.a.createElement("code",null,"success"),"."),l.a.createElement(c["a"],{code:"octokit.repos.createDeployment({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h2",{id:"parameters-13"},l.a.createElement(r["AnchorLink"],{to:"#parameters-13","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The ref to deploy. This can be a branch, tag, or SHA."))),l.a.createElement("tr",null,l.a.createElement("td",null,"task"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies a task to execute (e.g., ",l.a.createElement("code",null,"deploy")," or ",l.a.createElement("code",null,"deploy:migrations"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_contexts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#statuses"},"status")," contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts."))),l.a.createElement("tr",null,l.a.createElement("td",null,"payload"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Name for the target deployment environment (e.g., ",l.a.createElement("code",null,"production"),", ",l.a.createElement("code",null,"staging"),", ",l.a.createElement("code",null,"qa"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Short description of the deployment."))),l.a.createElement("tr",null,l.a.createElement("td",null,"transient_environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: ",l.a.createElement("code",null,"false"),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"production_environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies if the given environment is one that end-users directly interact with. Default: ",l.a.createElement("code",null,"true")," when ",l.a.createElement("code",null,"environment")," is ",l.a.createElement("code",null,"production")," and ",l.a.createElement("code",null,"false")," otherwise.",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"created_at"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deployment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-deployment-status"},l.a.createElement(r["AnchorLink"],{to:"#create-a-deployment-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a deployment status"),l.a.createElement("p",null,"Users with ",l.a.createElement("code",null,"push")," access can create deployment statuses for a given deployment."),l.a.createElement("p",null,"GitHub Apps require ",l.a.createElement("code",null,"read & write"),' access to "Deployments" and ',l.a.createElement("code",null,"read-only"),' access to "Repo contents" (for private repos). OAuth Apps require the ',l.a.createElement("code",null,"repo_deployment")," scope."),l.a.createElement(c["a"],{code:"octokit.repos.createDeploymentStatus({\n  owner,\n  repo,\n  deployment_id,\n  state,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-14"},l.a.createElement(r["AnchorLink"],{to:"#parameters-14","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The state of the status. Can be one of ",l.a.createElement("code",null,"error"),", ",l.a.createElement("code",null,"failure"),", ",l.a.createElement("code",null,"inactive"),", ",l.a.createElement("code",null,"in_progress"),", ",l.a.createElement("code",null,"queued")," ",l.a.createElement("code",null,"pending"),", or ",l.a.createElement("code",null,"success"),". ",l.a.createElement("strong",null,"Note:")," To use the ",l.a.createElement("code",null,"inactive")," state, you must provide the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. To use the ",l.a.createElement("code",null,"in_progress")," and ",l.a.createElement("code",null,"queued")," states, you must provide the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#deployment-statuses"},l.a.createElement("code",null,"application/vnd.github.flash-preview+json"))," custom media type. When you set a transient deployment to ",l.a.createElement("code",null,"inactive"),", the deployment will be shown as ",l.a.createElement("code",null,"destroyed")," in GitHub."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. ",l.a.createElement("strong",null,"Note:")," It's recommended to use the ",l.a.createElement("code",null,"log_url")," parameter, which replaces ",l.a.createElement("code",null,"target_url"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"log_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The full URL of the deployment's output. This parameter replaces ",l.a.createElement("code",null,"target_url"),". We will continue to accept ",l.a.createElement("code",null,"target_url")," to support legacy uses, but we recommend replacing ",l.a.createElement("code",null,"target_url")," with ",l.a.createElement("code",null,"log_url"),". Setting ",l.a.createElement("code",null,"log_url")," will automatically set ",l.a.createElement("code",null,"target_url")," to the same value. Default: ",l.a.createElement("code",null,'""'),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the status. The maximum description length is 140 characters."))),l.a.createElement("tr",null,l.a.createElement("td",null,"environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Name for the target deployment environment, which can be changed when setting a deploy status. For example, ",l.a.createElement("code",null,"production"),", ",l.a.createElement("code",null,"staging"),", or ",l.a.createElement("code",null,"qa"),". ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#deployment-statuses"},l.a.createElement("code",null,"application/vnd.github.flash-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"environment_url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Sets the URL for accessing your environment. Default: ",l.a.createElement("code",null,'""'),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type. ",l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_inactive"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Adds a new ",l.a.createElement("code",null,"inactive")," status to all prior non-transient, non-production environment deployments with the same repository and ",l.a.createElement("code",null,"environment")," name as the created status's deployment. An ",l.a.createElement("code",null,"inactive")," status is only added to deployments that had a ",l.a.createElement("code",null,"success")," state. Default: ",l.a.createElement("code",null,"true"),l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," To add an ",l.a.createElement("code",null,"inactive")," status to ",l.a.createElement("code",null,"production")," environments, you must use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#deployment-statuses"},l.a.createElement("code",null,"application/vnd.github.flash-preview+json"))," custom media type.",l.a.createElement("br",null),l.a.createElement("strong",null,"Note:")," This parameter requires you to use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/api-previews#enhanced-deployments"},l.a.createElement("code",null,"application/vnd.github.ant-man-preview+json"))," custom media type."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deployment-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-dispatch-event"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-dispatch-event","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository dispatch event"),l.a.createElement("p",null,"You can use this endpoint to trigger a webhook event called ",l.a.createElement("code",null,"repository_dispatch")," when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the ",l.a.createElement("code",null,"repository_dispatch")," event occurs. For an example ",l.a.createElement("code",null,"repository_dispatch"),' webhook payload, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#repository_dispatch"},"RepositoryDispatchEvent"),'."'),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"client_payload")," parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the ",l.a.createElement("code",null,"client_payload")," can include a message that a user would like to send using a GitHub Actions workflow. Or the ",l.a.createElement("code",null,"client_payload")," can be used as a test to debug your workflow."),l.a.createElement("p",null,"This endpoint requires write access to the repository by providing either:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Personal access tokens with ",l.a.createElement("code",null,"repo"),' scope. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line"},"Creating a personal access token for the command line"),'" in the GitHub Help documentation.'),l.a.createElement("li",null,"GitHub Apps with both ",l.a.createElement("code",null,"metadata:read")," and ",l.a.createElement("code",null,"contents:read&write")," permissions.")),l.a.createElement("p",null,"This input example shows how you can use the ",l.a.createElement("code",null,"client_payload")," as a test to debug your workflow."),l.a.createElement(c["a"],{code:"octokit.repos.createDispatchEvent({\n  owner,\n  repo,\n  event_type,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-15"},l.a.createElement(r["AnchorLink"],{to:"#parameters-15","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"event_type"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"A custom webhook event name."))),l.a.createElement("tr",null,l.a.createElement("td",null,"client_payload"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"JSON payload with extra information about the webhook event that your action or worklow may use."))),l.a.createElement("tr",null,l.a.createElement("td",null,"client_payload.*"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-a-repository-dispatch-event"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository for the authenticated user"),l.a.createElement("p",null,"Creates a new repository for the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"When using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"OAuth"),", authorizations must include:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"public_repo")," scope or ",l.a.createElement("code",null,"repo")," scope to create a public repository"),l.a.createElement("li",null,l.a.createElement("code",null,"repo")," scope to create a private repository")),l.a.createElement(c["a"],{code:"octokit.repos.createForAuthenticatedUser({\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-16"},l.a.createElement(r["AnchorLink"],{to:"#parameters-16","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"homepage"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A URL with more information about the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the repository is private or public."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether issues are enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether projects are enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_wiki"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the wiki is enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_init"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether the repository is initialized with a minimal README."))),l.a.createElement("tr",null,l.a.createElement("td",null,"gitignore_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The desired language or platform to apply to the .gitignore."))),l.a.createElement("tr",null,l.a.createElement("td",null,"license_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The license keyword of the open source license for this repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_squash_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to allow squash merges for pull requests."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_merge_commit"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to allow merge commits for pull requests."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_rebase_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to allow rebase merges for pull requests."))),l.a.createElement("tr",null,l.a.createElement("td",null,"delete_branch_on_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether to delete head branches when pull requests are merged"))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_downloads"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether downloads are enabled."))),l.a.createElement("tr",null,l.a.createElement("td",null,"is_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Whether this repository acts as a template that can be used to generate new repositories."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-a-repository-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-fork"},l.a.createElement(r["AnchorLink"],{to:"#create-a-fork","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a fork"),l.a.createElement("p",null,"Create a fork for the authenticated user."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact ",l.a.createElement(r["Link"],{to:"https://support.github.com/contact"},"GitHub Support")," or ",l.a.createElement(r["Link"],{to:"https://premium.githubsupport.com/"},"GitHub Premium Support"),"."),l.a.createElement(c["a"],{code:"octokit.repos.createFork({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-17"},l.a.createElement(r["AnchorLink"],{to:"#parameters-17","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"organization"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Optional parameter to specify the organization name if forking into an organization."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-fork"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-an-organization-repository"},l.a.createElement(r["AnchorLink"],{to:"#create-an-organization-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create an organization repository"),l.a.createElement("p",null,"Creates a new repository in the specified organization. The authenticated user must be a member of the organization."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"When using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"OAuth"),", authorizations must include:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"public_repo")," scope or ",l.a.createElement("code",null,"repo")," scope to create a public repository"),l.a.createElement("li",null,l.a.createElement("code",null,"repo")," scope to create a private repository")),l.a.createElement(c["a"],{code:"octokit.repos.createInOrg({\n  org,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-18"},l.a.createElement(r["AnchorLink"],{to:"#parameters-18","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"homepage"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A URL with more information about the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to create a private repository or ",l.a.createElement("code",null,"false")," to create a public one."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be ",l.a.createElement("code",null,"public")," or ",l.a.createElement("code",null,"private"),". If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, ",l.a.createElement("code",null,"visibility")," can also be ",l.a.createElement("code",null,"internal"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories"},"Creating an internal repository"),'" in the GitHub Help documentation.',l.a.createElement("br",null),"The ",l.a.createElement("code",null,"visibility")," parameter overrides the ",l.a.createElement("code",null,"private")," parameter when you use both parameters with the ",l.a.createElement("code",null,"nebula-preview")," preview header."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable issues for this repository or ",l.a.createElement("code",null,"false")," to disable them."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable projects for this repository or ",l.a.createElement("code",null,"false")," to disable them. ",l.a.createElement("strong",null,"Note:")," If you're creating a repository in an organization that has disabled repository projects, the default is ",l.a.createElement("code",null,"false"),", and if you pass ",l.a.createElement("code",null,"true"),", the API returns an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_wiki"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable the wiki for this repository or ",l.a.createElement("code",null,"false")," to disable it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"is_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to make this repo available as a template repository or ",l.a.createElement("code",null,"false")," to prevent it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_id"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"auto_init"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Pass ",l.a.createElement("code",null,"true")," to create an initial commit with empty README."))),l.a.createElement("tr",null,l.a.createElement("td",null,"gitignore_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Desired language or platform ",l.a.createElement(r["Link"],{to:"https://github.com/github/gitignore"},".gitignore template"),' to apply. Use the name of the template without the extension. For example, "Haskell".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"license_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Choose an ",l.a.createElement(r["Link"],{to:"https://choosealicense.com/"},"open source license template")," that best suits your needs, and then use the ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type"},"license keyword")," as the ",l.a.createElement("code",null,"license_template"),' string. For example, "mit" or "mpl-2.0".'))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_squash_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow squash-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent squash-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_merge_commit"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow merging pull requests with a merge commit, or ",l.a.createElement("code",null,"false")," to prevent merging pull requests with merge commits."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_rebase_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow rebase-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent rebase-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"delete_branch_on_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow automatically deleting head branches when pull requests are merged, or ",l.a.createElement("code",null,"false")," to prevent automatic deletion."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-an-organization-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-or-update-file-contents"},l.a.createElement(r["AnchorLink"],{to:"#create-or-update-file-contents","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create or update file contents"),l.a.createElement("p",null,"Creates a new file or replaces an existing file in a repository."),l.a.createElement(c["a"],{code:"octokit.repos.createOrUpdateFileContents({\n        owner,\nrepo,\npath,\nmessage,\ncontent,\ncommitter.name,\ncommitter.email,\nauthor.name,\nauthor.email\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-19"},l.a.createElement(r["AnchorLink"],{to:"#parameters-19","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"path+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The new file content, using Base64 encoding."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("strong",null,"Required if you are updating a file"),". The blob SHA of the file being replaced."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The branch name. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The person that committed the file. Default: the authenticated user."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"name")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.email"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"email")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The author of the file. Default: The ",l.a.createElement("code",null,"committer")," or the authenticated user if you omit ",l.a.createElement("code",null,"committer"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"name")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.email"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author or committer of the commit. You'll receive a ",l.a.createElement("code",null,"422")," status code if ",l.a.createElement("code",null,"email")," is omitted."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.date"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-or-update-file-contents"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#create-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a GitHub Pages site"),l.a.createElement("p",null,'Configures a GitHub Pages site. For more information, see "',l.a.createElement(r["Link"],{to:"/github/working-with-github-pages/about-github-pages"},"About GitHub Pages"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.createPagesSite({\n        owner,\nrepo,\nsource,\nsource.branch\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-20"},l.a.createElement(r["AnchorLink"],{to:"#parameters-20","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"source"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The source branch and directory used to publish your Pages site."))),l.a.createElement("tr",null,l.a.createElement("td",null,"source.branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The repository branch used to publish your site's source files."))),l.a.createElement("tr",null,l.a.createElement("td",null,"source.path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The repository directory that includes the source files for the Pages site. Allowed paths are ",l.a.createElement("code",null,"/")," or ",l.a.createElement("code",null,"/docs"),". Default: ",l.a.createElement("code",null,"/")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-release"},l.a.createElement(r["AnchorLink"],{to:"#create-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a release"),l.a.createElement("p",null,"Users with push access to the repository can create a release."),l.a.createElement("p",null,"This endpoint triggers ",l.a.createElement(r["Link"],{to:"https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications"},"notifications"),'. Creating content too quickly using this endpoint may result in abuse rate limiting. See "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits"},"Abuse rate limits"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits"},"Dealing with abuse rate limits"),'" for details.'),l.a.createElement(c["a"],{code:"octokit.repos.createRelease({\n  owner,\n  repo,\n  tag_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-21"},l.a.createElement(r["AnchorLink"],{to:"#parameters-21","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_commitish"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ",l.a.createElement("code",null,"master"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the release."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Text describing the contents of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"draft"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to create a draft (unpublished) release, ",l.a.createElement("code",null,"false")," to create a published one."))),l.a.createElement("tr",null,l.a.createElement("td",null,"prerelease"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to identify the release as a prerelease. ",l.a.createElement("code",null,"false")," to identify the release as a full release."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-using-a-template"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-using-a-template","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository using a template"),l.a.createElement("p",null,"Creates a new repository using a repository template. Use the ",l.a.createElement("code",null,"template_owner")," and ",l.a.createElement("code",null,"template_repo")," route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-repository"},"Get a repository")," endpoint and check that the ",l.a.createElement("code",null,"is_template")," key is ",l.a.createElement("code",null,"true"),"."),l.a.createElement("p",null,l.a.createElement("strong",null,"OAuth scope requirements")),l.a.createElement("p",null,"When using ",l.a.createElement(r["Link"],{to:"https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/"},"OAuth"),", authorizations must include:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"public_repo")," scope or ",l.a.createElement("code",null,"repo")," scope to create a public repository"),l.a.createElement("li",null,l.a.createElement("code",null,"repo")," scope to create a private repository")),l.a.createElement(c["a"],{code:"octokit.repos.createUsingTemplate({\n  template_owner,\n  template_repo,\n  name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-22"},l.a.createElement(r["AnchorLink"],{to:"#parameters-22","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"template_owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"template_repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the new repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the new repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"include_all_branches"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: ",l.a.createElement("code",null,"false"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to create a new private repository or ",l.a.createElement("code",null,"false")," to create a new public one."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#create-a-repository-using-a-template"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"create-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#create-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Create a repository webhook"),l.a.createElement("p",null,"Repositories can have multiple webhooks installed. Each webhook should have a unique ",l.a.createElement("code",null,"config"),". Multiple webhooks can share the same ",l.a.createElement("code",null,"config")," as long as those webhooks do not have any ",l.a.createElement("code",null,"events")," that overlap."),l.a.createElement(c["a"],{code:"octokit.repos.createWebhook({\n        owner,\nrepo,\nconfig,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-23"},l.a.createElement(r["AnchorLink"],{to:"#parameters-23","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Use ",l.a.createElement("code",null,"web")," to create a webhook. Default: ",l.a.createElement("code",null,"web"),". This parameter only accepts the value ",l.a.createElement("code",null,"web"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.token"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config.digest"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"decline-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#decline-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Decline a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.declineInvitation({\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-24"},l.a.createElement(r["AnchorLink"],{to:"#parameters-24","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#decline-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository"),l.a.createElement("p",null,"Deleting a repository requires admin access. If OAuth is used, the ",l.a.createElement("code",null,"delete_repo")," scope is required."),l.a.createElement("p",null,"If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, you will get a ",l.a.createElement("code",null,"403 Forbidden")," response."),l.a.createElement(c["a"],{code:"octokit.repos.delete({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-25"},l.a.createElement(r["AnchorLink"],{to:"#parameters-25","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#delete-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#delete-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Disables the ability to restrict who can push to this branch."),l.a.createElement(c["a"],{code:"octokit.repos.deleteAccessRestrictions({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-26"},l.a.createElement(r["AnchorLink"],{to:"#parameters-26","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-admin-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-admin-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete admin branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.deleteAdminBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-27"},l.a.createElement(r["AnchorLink"],{to:"#parameters-27","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-admin-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.deleteBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-28"},l.a.createElement(r["AnchorLink"],{to:"#parameters-28","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a commit comment"),l.a.createElement(c["a"],{code:"octokit.repos.deleteCommitComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-29"},l.a.createElement(r["AnchorLink"],{to:"#parameters-29","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-commit-signature-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-commit-signature-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete commit signature protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits."),l.a.createElement(c["a"],{code:"octokit.repos.deleteCommitSignatureProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-30"},l.a.createElement(r["AnchorLink"],{to:"#parameters-30","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-commit-signature-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-deploy-key"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-deploy-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a deploy key"),l.a.createElement("p",null,"Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead."),l.a.createElement(c["a"],{code:"octokit.repos.deleteDeployKey({\n  owner,\n  repo,\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-31"},l.a.createElement(r["AnchorLink"],{to:"#parameters-31","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-deploy-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-deployment"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-deployment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a deployment"),l.a.createElement("p",null,"To ensure there can always be an active deployment, you can only delete an ",l.a.createElement("em",null,"inactive")," deployment. Anyone with ",l.a.createElement("code",null,"repo")," or ",l.a.createElement("code",null,"repo_deployment")," scopes can delete an inactive deployment."),l.a.createElement("p",null,"To set a deployment as inactive, you must:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment."),l.a.createElement("li",null,"Mark the active deployment as inactive by adding any non-successful deployment status.")),l.a.createElement("p",null,'For more information, see "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos/#create-a-deployment"},"Create a deployment"),'" and "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-deployment-status"},"Create a deployment status"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.deleteDeployment({\n  owner,\n  repo,\n  deployment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-32"},l.a.createElement(r["AnchorLink"],{to:"#parameters-32","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-deployment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-file"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-file","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a file"),l.a.createElement("p",null,"Deletes a file in a repository."),l.a.createElement("p",null,"You can provide an additional ",l.a.createElement("code",null,"committer")," parameter, which is an object containing information about the committer. Or, you can provide an ",l.a.createElement("code",null,"author")," parameter, which is an object containing information about the author."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"author")," section is optional and is filled in with the ",l.a.createElement("code",null,"committer")," information if omitted. If the ",l.a.createElement("code",null,"committer")," information is omitted, the authenticated user's information is used."),l.a.createElement("p",null,"You must provide values for both ",l.a.createElement("code",null,"name")," and ",l.a.createElement("code",null,"email"),", whether you choose to use ",l.a.createElement("code",null,"author")," or ",l.a.createElement("code",null,"committer"),". Otherwise, you'll receive a ",l.a.createElement("code",null,"422")," status code."),l.a.createElement(c["a"],{code:"octokit.repos.deleteFile({\n  owner,\n  repo,\n  path,\n  message,\n  sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-33"},l.a.createElement(r["AnchorLink"],{to:"#parameters-33","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"path+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"message"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The commit message."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The blob SHA of the file being replaced."))),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The branch name. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"object containing information about the committer."))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"committer.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"object containing information about the author."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the author (or committer) of the commit"))),l.a.createElement("tr",null,l.a.createElement("td",null,"author.email"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The email of the author (or committer) of the commit"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-file"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.deleteInvitation({\n  owner,\n  repo,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-34"},l.a.createElement(r["AnchorLink"],{to:"#parameters-34","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a GitHub Pages site"),l.a.createElement(c["a"],{code:"octokit.repos.deletePagesSite({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-35"},l.a.createElement(r["AnchorLink"],{to:"#parameters-35","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-pull-request-review-protection"},l.a.createElement(r["AnchorLink"],{to:"#delete-pull-request-review-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete pull request review protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.deletePullRequestReviewProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-36"},l.a.createElement(r["AnchorLink"],{to:"#parameters-36","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-pull-request-review-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-release"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a release"),l.a.createElement("p",null,"Users with push access to the repository can delete a release."),l.a.createElement(c["a"],{code:"octokit.repos.deleteRelease({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-37"},l.a.createElement(r["AnchorLink"],{to:"#parameters-37","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a release asset"),l.a.createElement(c["a"],{code:"octokit.repos.deleteReleaseAsset({\n  owner,\n  repo,\n  asset_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-38"},l.a.createElement(r["AnchorLink"],{to:"#parameters-38","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"asset_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"asset_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-release-asset"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"delete-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#delete-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Delete a repository webhook"),l.a.createElement(c["a"],{code:"octokit.repos.deleteWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-39"},l.a.createElement(r["AnchorLink"],{to:"#parameters-39","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#delete-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-automated-security-fixes"},l.a.createElement(r["AnchorLink"],{to:"#disable-automated-security-fixes","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable automated security fixes"),l.a.createElement("p",null,'Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/configuring-automated-security-fixes"},"Configuring automated security fixes"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.disableAutomatedSecurityFixes({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-40"},l.a.createElement(r["AnchorLink"],{to:"#parameters-40","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#disable-automated-security-fixes"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"disable-vulnerability-alerts"},l.a.createElement(r["AnchorLink"],{to:"#disable-vulnerability-alerts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Disable vulnerability alerts"),l.a.createElement("p",null,'Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies"},"About security alerts for vulnerable dependencies"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.disableVulnerabilityAlerts({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-41"},l.a.createElement(r["AnchorLink"],{to:"#parameters-41","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#disable-vulnerability-alerts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-repository-archive-zip"},l.a.createElement(r["AnchorLink"],{to:"#download-a-repository-archive-zip","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a repository archive (zip)"),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated:")," This method has been renamed to repos.downloadZipballArchive"),l.a.createElement("p",null,"Gets a redirect URL to download a zip archive for a repository. If you omit ",l.a.createElement("code",null,":ref"),", the repository\u2019s default branch (usually",l.a.createElement("code",null,"master"),") will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ",l.a.createElement("code",null,"Location")," header to make a second ",l.a.createElement("code",null,"GET")," request.",l.a.createElement("strong",null,"Note"),": For private repositories, these links are temporary and expire after five minutes."),l.a.createElement(c["a"],{code:"octokit.repos.downloadArchive({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-42"},l.a.createElement(r["AnchorLink"],{to:"#parameters-42","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#download-a-repository-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-repository-archive-tar"},l.a.createElement(r["AnchorLink"],{to:"#download-a-repository-archive-tar","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a repository archive (tar)"),l.a.createElement("p",null,"Gets a redirect URL to download a tar archive for a repository. If you omit ",l.a.createElement("code",null,":ref"),", the repository\u2019s default branch (usually",l.a.createElement("code",null,"master"),") will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ",l.a.createElement("code",null,"Location")," header to make a second ",l.a.createElement("code",null,"GET")," request.",l.a.createElement("strong",null,"Note"),": For private repositories, these links are temporary and expire after five minutes."),l.a.createElement(c["a"],{code:"octokit.repos.downloadTarballArchive({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-43"},l.a.createElement(r["AnchorLink"],{to:"#parameters-43","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#download-a-repository-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"download-a-repository-archive-zip-1"},l.a.createElement(r["AnchorLink"],{to:"#download-a-repository-archive-zip-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Download a repository archive (zip)"),l.a.createElement("p",null,"Gets a redirect URL to download a zip archive for a repository. If you omit ",l.a.createElement("code",null,":ref"),", the repository\u2019s default branch (usually",l.a.createElement("code",null,"master"),") will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the ",l.a.createElement("code",null,"Location")," header to make a second ",l.a.createElement("code",null,"GET")," request.",l.a.createElement("strong",null,"Note"),": For private repositories, these links are temporary and expire after five minutes."),l.a.createElement(c["a"],{code:"octokit.repos.downloadZipballArchive({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-44"},l.a.createElement(r["AnchorLink"],{to:"#parameters-44","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#download-a-repository-archive"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-automated-security-fixes"},l.a.createElement(r["AnchorLink"],{to:"#enable-automated-security-fixes","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable automated security fixes"),l.a.createElement("p",null,'Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/configuring-automated-security-fixes"},"Configuring automated security fixes"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.enableAutomatedSecurityFixes({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-45"},l.a.createElement(r["AnchorLink"],{to:"#parameters-45","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#enable-automated-security-fixes"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"enable-vulnerability-alerts"},l.a.createElement(r["AnchorLink"],{to:"#enable-vulnerability-alerts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Enable vulnerability alerts"),l.a.createElement("p",null,'Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies"},"About security alerts for vulnerable dependencies"),'".'),l.a.createElement(c["a"],{code:"octokit.repos.enableVulnerabilityAlerts({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-46"},l.a.createElement(r["AnchorLink"],{to:"#parameters-46","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#enable-vulnerability-alerts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository"),l.a.createElement("p",null,"When you pass the ",l.a.createElement("code",null,"scarlet-witch-preview")," media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"parent")," and ",l.a.createElement("code",null,"source")," objects are present when the repository is a fork. ",l.a.createElement("code",null,"parent")," is the repository this repository was forked from, ",l.a.createElement("code",null,"source")," is the ultimate source for the network."),l.a.createElement(c["a"],{code:"octokit.repos.get({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-47"},l.a.createElement(r["AnchorLink"],{to:"#parameters-47","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#get-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#get-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists who has access to this protected branch."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Users, apps, and teams ",l.a.createElement("code",null,"restrictions")," are only available for organization-owned repositories."),l.a.createElement(c["a"],{code:"octokit.repos.getAccessRestrictions({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-48"},l.a.createElement(r["AnchorLink"],{to:"#parameters-48","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-admin-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-admin-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get admin branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getAdminBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-49"},l.a.createElement(r["AnchorLink"],{to:"#parameters-49","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-admin-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#get-all-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getAllStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-50"},l.a.createElement(r["AnchorLink"],{to:"#parameters-50","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-all-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-repository-topics"},l.a.createElement(r["AnchorLink"],{to:"#get-all-repository-topics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all repository topics"),l.a.createElement(c["a"],{code:"octokit.repos.getAllTopics({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-51"},l.a.createElement(r["AnchorLink"],{to:"#parameters-51","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#get-all-repository-topics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-apps-with-access-to-the-protected-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-apps-with-access-to-the-protected-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get apps with access to the protected branch"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement(c["a"],{code:"octokit.repos.getAppsWithAccessToProtectedBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-52"},l.a.createElement(r["AnchorLink"],{to:"#parameters-52","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-apps-with-access-to-the-protected-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-a-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a branch"),l.a.createElement(c["a"],{code:"octokit.repos.getBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-53"},l.a.createElement(r["AnchorLink"],{to:"#parameters-53","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-54"},l.a.createElement(r["AnchorLink"],{to:"#parameters-54","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-repository-clones"},l.a.createElement(r["AnchorLink"],{to:"#get-repository-clones","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get repository clones"),l.a.createElement("p",null,"Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."),l.a.createElement(c["a"],{code:"octokit.repos.getClones({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-55"},l.a.createElement(r["AnchorLink"],{to:"#parameters-55","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Must be one of: ",l.a.createElement("code",null,"day"),", ",l.a.createElement("code",null,"week"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-clones"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-weekly-commit-activity"},l.a.createElement(r["AnchorLink"],{to:"#get-the-weekly-commit-activity","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the weekly commit activity"),l.a.createElement("p",null,"Returns a weekly aggregate of the number of additions and deletions pushed to a repository."),l.a.createElement(c["a"],{code:"octokit.repos.getCodeFrequencyStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-56"},l.a.createElement(r["AnchorLink"],{to:"#parameters-56","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-weekly-commit-activity"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-repository-permissions-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#get-repository-permissions-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get repository permissions for a user"),l.a.createElement("p",null,"Checks the repository permission of a collaborator. The possible repository permissions are ",l.a.createElement("code",null,"admin"),", ",l.a.createElement("code",null,"write"),", ",l.a.createElement("code",null,"read"),", and ",l.a.createElement("code",null,"none"),"."),l.a.createElement(c["a"],{code:"octokit.repos.getCollaboratorPermissionLevel({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-57"},l.a.createElement(r["AnchorLink"],{to:"#parameters-57","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-permissions-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-combined-status-for-a-specific-reference"},l.a.createElement(r["AnchorLink"],{to:"#get-the-combined-status-for-a-specific-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the combined status for a specific reference"),l.a.createElement("p",null,"Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name."),l.a.createElement("p",null,"The most recent status for each context is returned, up to 100. This field ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination"},"paginates")," if there are over 100 contexts."),l.a.createElement("p",null,"Additionally, a combined ",l.a.createElement("code",null,"state")," is returned. The ",l.a.createElement("code",null,"state")," is one of:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"failure")," if any of the contexts report as ",l.a.createElement("code",null,"error")," or ",l.a.createElement("code",null,"failure")),l.a.createElement("li",null,l.a.createElement("strong",null,"pending")," if there are no statuses or a context is ",l.a.createElement("code",null,"pending")),l.a.createElement("li",null,l.a.createElement("strong",null,"success")," if the latest status for all contexts is ",l.a.createElement("code",null,"success"))),l.a.createElement(c["a"],{code:"octokit.repos.getCombinedStatusForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-58"},l.a.createElement(r["AnchorLink"],{to:"#parameters-58","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-combined-status-for-a-specific-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#get-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a commit"),l.a.createElement("p",null,"Returns the contents of a single commit reference. You must have ",l.a.createElement("code",null,"read")," access for the repository to use this endpoint."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing."),l.a.createElement("p",null,"You can pass the appropriate ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," to fetch ",l.a.createElement("code",null,"diff")," and ",l.a.createElement("code",null,"patch")," formats. Diffs with binary data will have no ",l.a.createElement("code",null,"patch")," property."),l.a.createElement("p",null,"To return only the SHA-1 hash of the commit reference, you can provide the ",l.a.createElement("code",null,"sha")," custom ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests"},"media type")," in the ",l.a.createElement("code",null,"Accept")," header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag."),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.repos.getCommit({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-59"},l.a.createElement(r["AnchorLink"],{to:"#parameters-59","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-last-year-of-commit-activity"},l.a.createElement(r["AnchorLink"],{to:"#get-the-last-year-of-commit-activity","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the last year of commit activity"),l.a.createElement("p",null,"Returns the last year of commit activity grouped by week. The ",l.a.createElement("code",null,"days")," array is a group of commits per day, starting on ",l.a.createElement("code",null,"Sunday"),"."),l.a.createElement(c["a"],{code:"octokit.repos.getCommitActivityStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-60"},l.a.createElement(r["AnchorLink"],{to:"#parameters-60","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-last-year-of-commit-activity"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a commit comment"),l.a.createElement(c["a"],{code:"octokit.repos.getCommitComment({\n  owner,\n  repo,\n  comment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-61"},l.a.createElement(r["AnchorLink"],{to:"#parameters-61","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-commit-signature-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-commit-signature-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get commit signature protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of ",l.a.createElement("code",null,"true")," indicates you must sign commits on this branch. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/signing-commits-with-gpg"},"Signing commits with GPG")," in GitHub Help."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": You must enable branch protection to require signed commits."),l.a.createElement(c["a"],{code:"octokit.repos.getCommitSignatureProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-62"},l.a.createElement(r["AnchorLink"],{to:"#parameters-62","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-commit-signature-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-community-profile-metrics"},l.a.createElement(r["AnchorLink"],{to:"#get-community-profile-metrics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get community profile metrics"),l.a.createElement("p",null,"This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE_TEMPLATE, PULL_REQUEST_TEMPLATE, README, and CONTRIBUTING files."),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"health_percentage")," score is defined as a percentage of how many of these four documents are present: README, CONTRIBUTING, LICENSE, and CODE_OF_CONDUCT. For example, if all four documents are present, then the ",l.a.createElement("code",null,"health_percentage")," is ",l.a.createElement("code",null,"100"),". If only one is present, then the",l.a.createElement("code",null,"health_percentage")," is ",l.a.createElement("code",null,"25"),"."),l.a.createElement("p",null,l.a.createElement("code",null,"content_reports_enabled")," is only returned for organization-owned repositories."),l.a.createElement(c["a"],{code:"octokit.repos.getCommunityProfileMetrics({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-63"},l.a.createElement(r["AnchorLink"],{to:"#parameters-63","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-community-profile-metrics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-repository-content"},l.a.createElement(r["AnchorLink"],{to:"#get-repository-content","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get repository content"),l.a.createElement("p",null,"Gets the contents of a file or directory in a repository. Specify the file path or directory in ",l.a.createElement("code",null,":path"),". If you omit",l.a.createElement("code",null,":path"),", you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories."),l.a.createElement("p",null,"Files and symlinks support ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"a custom media type")," for retrieving the raw content or rendered HTML (when supported). All content types support ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"a custom media type")," to ensure the content is returned in a consistent object format."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),":"),l.a.createElement("ul",null,l.a.createElement("li",null,"To get a repository's contents recursively, you can ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#trees"},"recursively get the tree"),"."),l.a.createElement("li",null,"This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/git#get-a-tree"},"Git Trees API"),"."),l.a.createElement("li",null,"This API supports files up to 1 megabyte in size.")),l.a.createElement("h6",{id:"if-the-content-is-a-directory"},l.a.createElement(r["AnchorLink"],{to:"#if-the-content-is-a-directory","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"If the content is a directory"),l.a.createElement("p",null,'The response will be an array of objects, one object for each item in the directory. When listing the contents of a directory, submodules have their "type" specified as "file". Logically, the value',l.a.createElement("em",null,"should"),' be "submodule". This behavior exists in API v3 ',l.a.createElement(r["Link"],{to:"https://git.io/v1YCW"},"for backwards compatibility purposes"),'. In the next major version of the API, the type will be returned as "submodule".'),l.a.createElement("h4",{id:"if-the-content-is-a-symlink"},l.a.createElement(r["AnchorLink"],{to:"#if-the-content-is-a-symlink","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"If the content is a symlink"),l.a.createElement("p",null,"If the requested ",l.a.createElement("code",null,":path")," points to a symlink, and the symlink's target is a normal file in the repository, then the API responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object describing the symlink itself."),l.a.createElement("h4",{id:"if-the-content-is-a-submodule"},l.a.createElement(r["AnchorLink"],{to:"#if-the-content-is-a-submodule","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"If the content is a submodule"),l.a.createElement("p",null,"The ",l.a.createElement("code",null,"submodule_git_url")," identifies the location of the submodule repository, and the ",l.a.createElement("code",null,"sha")," identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit."),l.a.createElement("p",null,"If the submodule repository is not hosted on github.com, the Git URLs (",l.a.createElement("code",null,"git_url")," and ",l.a.createElement("code",null,'_links["git"]'),") and the github.com URLs (",l.a.createElement("code",null,"html_url")," and ",l.a.createElement("code",null,'_links["html"]'),") will have null values."),l.a.createElement(c["a"],{code:"octokit.repos.getContent({\n  owner,\n  repo,\n  path,\n});\n",lang:"js"}),l.a.createElement("h2",{id:"parameters-64"},l.a.createElement(r["AnchorLink"],{to:"#parameters-64","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"path+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the commit/branch/tag. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-repository-content"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-all-contributor-commit-activity"},l.a.createElement(r["AnchorLink"],{to:"#get-all-contributor-commit-activity","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get all contributor commit activity"),l.a.createElement("p",null,"Returns the ",l.a.createElement("code",null,"total")," number of commits authored by the contributor. In addition, the response includes a Weekly Hash (",l.a.createElement("code",null,"weeks")," array) with the following information:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"w")," - Start of the week, given as a ",l.a.createElement(r["Link"],{to:"http://en.wikipedia.org/wiki/Unix_time"},"Unix timestamp"),"."),l.a.createElement("li",null,l.a.createElement("code",null,"a")," - Number of additions"),l.a.createElement("li",null,l.a.createElement("code",null,"d")," - Number of deletions"),l.a.createElement("li",null,l.a.createElement("code",null,"c")," - Number of commits")),l.a.createElement(c["a"],{code:"octokit.repos.getContributorsStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-65"},l.a.createElement(r["AnchorLink"],{to:"#parameters-65","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-all-contributor-commit-activity"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-deploy-key"},l.a.createElement(r["AnchorLink"],{to:"#get-a-deploy-key","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a deploy key"),l.a.createElement(c["a"],{code:"octokit.repos.getDeployKey({\n  owner,\n  repo,\n  key_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-66"},l.a.createElement(r["AnchorLink"],{to:"#parameters-66","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"key_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"key_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-deploy-key"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-deployment"},l.a.createElement(r["AnchorLink"],{to:"#get-a-deployment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a deployment"),l.a.createElement(c["a"],{code:"octokit.repos.getDeployment({\n  owner,\n  repo,\n  deployment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-67"},l.a.createElement(r["AnchorLink"],{to:"#parameters-67","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-deployment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-deployment-status"},l.a.createElement(r["AnchorLink"],{to:"#get-a-deployment-status","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a deployment status"),l.a.createElement("p",null,"Users with pull access can view a deployment status for a deployment:"),l.a.createElement(c["a"],{code:"octokit.repos.getDeploymentStatus({\n  owner,\n  repo,\n  deployment_id,\n  status_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-68"},l.a.createElement(r["AnchorLink"],{to:"#parameters-68","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"status_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-deployment-status"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-latest-pages-build"},l.a.createElement(r["AnchorLink"],{to:"#get-latest-pages-build","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get latest Pages build"),l.a.createElement(c["a"],{code:"octokit.repos.getLatestPagesBuild({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-69"},l.a.createElement(r["AnchorLink"],{to:"#parameters-69","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-latest-pages-build"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-latest-release"},l.a.createElement(r["AnchorLink"],{to:"#get-the-latest-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the latest release"),l.a.createElement("p",null,"View the latest published full release for the repository."),l.a.createElement("p",null,"The latest release is the most recent non-prerelease, non-draft release, sorted by the ",l.a.createElement("code",null,"created_at")," attribute. The ",l.a.createElement("code",null,"created_at")," attribute is the date of the commit used for the release, and not the date when the release was drafted or published."),l.a.createElement(c["a"],{code:"octokit.repos.getLatestRelease({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-70"},l.a.createElement(r["AnchorLink"],{to:"#parameters-70","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-latest-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#get-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a GitHub Pages site"),l.a.createElement(c["a"],{code:"octokit.repos.getPages({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-71"},l.a.createElement(r["AnchorLink"],{to:"#parameters-71","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-github-pages-build"},l.a.createElement(r["AnchorLink"],{to:"#get-github-pages-build","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get GitHub Pages build"),l.a.createElement(c["a"],{code:"octokit.repos.getPagesBuild({\n  owner,\n  repo,\n  build_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-72"},l.a.createElement(r["AnchorLink"],{to:"#parameters-72","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"build_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-github-pages-build"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-weekly-commit-count"},l.a.createElement(r["AnchorLink"],{to:"#get-the-weekly-commit-count","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the weekly commit count"),l.a.createElement("p",null,"Returns the total commit counts for the ",l.a.createElement("code",null,"owner")," and total commit counts in ",l.a.createElement("code",null,"all"),". ",l.a.createElement("code",null,"all")," is everyone combined, including the ",l.a.createElement("code",null,"owner")," in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract ",l.a.createElement("code",null,"owner")," from ",l.a.createElement("code",null,"all"),"."),l.a.createElement("p",null,"The array order is oldest week (index 0) to most recent week."),l.a.createElement(c["a"],{code:"octokit.repos.getParticipationStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-73"},l.a.createElement(r["AnchorLink"],{to:"#parameters-73","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-weekly-commit-count"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-pull-request-review-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-pull-request-review-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get pull request review protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getPullRequestReviewProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-74"},l.a.createElement(r["AnchorLink"],{to:"#parameters-74","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-pull-request-review-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-the-hourly-commit-count-for-each-day"},l.a.createElement(r["AnchorLink"],{to:"#get-the-hourly-commit-count-for-each-day","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get the hourly commit count for each day"),l.a.createElement("p",null,"Each array contains the day number, hour number, and number of commits:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("code",null,"0-6"),": Sunday - Saturday"),l.a.createElement("li",null,l.a.createElement("code",null,"0-23"),": Hour of day"),l.a.createElement("li",null,"Number of commits")),l.a.createElement("p",null,"For example, ",l.a.createElement("code",null,"[2, 14, 25]")," indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits."),l.a.createElement(c["a"],{code:"octokit.repos.getPunchCardStats({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-75"},l.a.createElement(r["AnchorLink"],{to:"#parameters-75","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-the-hourly-commit-count-for-each-day"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-readme"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-readme","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository README"),l.a.createElement("p",null,"Gets the preferred README for a repository."),l.a.createElement("p",null,"READMEs support ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"custom media types")," for retrieving the raw content or rendered HTML."),l.a.createElement(c["a"],{code:"octokit.repos.getReadme({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-76"},l.a.createElement(r["AnchorLink"],{to:"#parameters-76","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the commit/branch/tag. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-repository-readme"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-release"},l.a.createElement(r["AnchorLink"],{to:"#get-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a release"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," This returns an ",l.a.createElement("code",null,"upload_url")," key corresponding to the endpoint for uploading release assets. This key is a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia"},"hypermedia resource"),"."),l.a.createElement(c["a"],{code:"octokit.repos.getRelease({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-77"},l.a.createElement(r["AnchorLink"],{to:"#parameters-77","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#get-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a release asset"),l.a.createElement("p",null,"To download the asset's binary content, set the ",l.a.createElement("code",null,"Accept")," header of the request to ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types"},l.a.createElement("code",null,"application/octet-stream")),". The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a ",l.a.createElement("code",null,"200")," or ",l.a.createElement("code",null,"302")," response."),l.a.createElement(c["a"],{code:"octokit.repos.getReleaseAsset({\n  owner,\n  repo,\n  asset_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-78"},l.a.createElement(r["AnchorLink"],{to:"#parameters-78","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"asset_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"asset_id parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-release-asset"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-release-by-tag-name"},l.a.createElement(r["AnchorLink"],{to:"#get-a-release-by-tag-name","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a release by tag name"),l.a.createElement("p",null,"Get a published release with the specified tag."),l.a.createElement(c["a"],{code:"octokit.repos.getReleaseByTag({\n  owner,\n  repo,\n  tag,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-79"},l.a.createElement(r["AnchorLink"],{to:"#parameters-79","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"tag"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"tag+ parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-release-by-tag-name"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-status-checks-protection"},l.a.createElement(r["AnchorLink"],{to:"#get-status-checks-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get status checks protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.getStatusChecksProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-80"},l.a.createElement(r["AnchorLink"],{to:"#parameters-80","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-status-checks-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-teams-with-access-to-the-protected-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-teams-with-access-to-the-protected-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get teams with access to the protected branch"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists the teams who have push access to this branch. The list includes child teams."),l.a.createElement(c["a"],{code:"octokit.repos.getTeamsWithAccessToProtectedBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-81"},l.a.createElement(r["AnchorLink"],{to:"#parameters-81","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-teams-with-access-to-the-protected-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-top-referral-paths"},l.a.createElement(r["AnchorLink"],{to:"#get-top-referral-paths","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get top referral paths"),l.a.createElement("p",null,"Get the top 10 popular contents over the last 14 days."),l.a.createElement(c["a"],{code:"octokit.repos.getTopPaths({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-82"},l.a.createElement(r["AnchorLink"],{to:"#parameters-82","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-top-referral-paths"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-top-referral-sources"},l.a.createElement(r["AnchorLink"],{to:"#get-top-referral-sources","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get top referral sources"),l.a.createElement("p",null,"Get the top 10 referrers over the last 14 days."),l.a.createElement(c["a"],{code:"octokit.repos.getTopReferrers({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-83"},l.a.createElement(r["AnchorLink"],{to:"#parameters-83","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-top-referral-sources"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-users-with-access-to-the-protected-branch"},l.a.createElement(r["AnchorLink"],{to:"#get-users-with-access-to-the-protected-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get users with access to the protected branch"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Lists the people who have push access to this branch."),l.a.createElement(c["a"],{code:"octokit.repos.getUsersWithAccessToProtectedBranch({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-84"},l.a.createElement(r["AnchorLink"],{to:"#parameters-84","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-users-with-access-to-the-protected-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-page-views"},l.a.createElement(r["AnchorLink"],{to:"#get-page-views","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get page views"),l.a.createElement("p",null,"Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."),l.a.createElement(c["a"],{code:"octokit.repos.getViews({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-85"},l.a.createElement(r["AnchorLink"],{to:"#parameters-85","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Must be one of: ",l.a.createElement("code",null,"day"),", ",l.a.createElement("code",null,"week"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-page-views"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#get-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a repository webhook"),l.a.createElement("p",null,"Returns a webhook configured in a repository. To get only the webhook ",l.a.createElement("code",null,"config"),' properties, see "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/repos#get-a-webhook-configuration-for-a-repository"},"Get a webhook configuration for a repository"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.getWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-86"},l.a.createElement(r["AnchorLink"],{to:"#parameters-86","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#get-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-a-webhook-configuration-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-a-webhook-configuration-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get a webhook configuration for a repository"),l.a.createElement("p",null,"Returns the webhook configuration for a repository. To get more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#get-a-repository-webhook"},"Get a repository webhook"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"read:repo_hook")," or ",l.a.createElement("code",null,"repo")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"repository_hooks:read")," permission."),l.a.createElement(c["a"],{code:"octokit.repos.getWebhookConfigForRepo({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-87"},l.a.createElement(r["AnchorLink"],{to:"#parameters-87","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos#get-a-webhook-configuration-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-branches"},l.a.createElement(r["AnchorLink"],{to:"#list-branches","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List branches"),l.a.createElement(c["a"],{code:"octokit.repos.listBranches({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-88"},l.a.createElement(r["AnchorLink"],{to:"#parameters-88","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"protected"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Setting to ",l.a.createElement("code",null,"true")," returns only protected branches. When set to ",l.a.createElement("code",null,"false"),", only unprotected branches are returned. Omitting this parameter returns all branches."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-branches"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-branches-for-head-commit"},l.a.createElement(r["AnchorLink"],{to:"#list-branches-for-head-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List branches for HEAD commit"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch."),l.a.createElement(c["a"],{code:"octokit.repos.listBranchesForHeadCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-89"},l.a.createElement(r["AnchorLink"],{to:"#parameters-89","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-branches-for-head-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-collaborators"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-collaborators","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository collaborators"),l.a.createElement("p",null,"For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners."),l.a.createElement("p",null,"Team members will include the members of child teams."),l.a.createElement(c["a"],{code:"octokit.repos.listCollaborators({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-90"},l.a.createElement(r["AnchorLink"],{to:"#parameters-90","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"affiliation"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Filter collaborators returned by their affiliation. Can be one of:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"outside"),": All outside collaborators of an organization-owned repository.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"direct"),": All collaborators with permissions to an organization-owned repository, regardless of organization membership status.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"all"),": All collaborators the authenticated user can see."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-collaborators"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commit-comments"},l.a.createElement(r["AnchorLink"],{to:"#list-commit-comments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commit comments"),l.a.createElement("p",null,"Use the ",l.a.createElement("code",null,":commit_sha")," to specify the commit that will have its comments listed."),l.a.createElement(c["a"],{code:"octokit.repos.listCommentsForCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-91"},l.a.createElement(r["AnchorLink"],{to:"#parameters-91","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commit-comments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commit-comments-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#list-commit-comments-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commit comments for a repository"),l.a.createElement("p",null,"Commit Comments use ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#custom-media-types"},"these custom media types"),". You can read more about the use of media types in the API ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/media-types/"},"here"),"."),l.a.createElement("p",null,"Comments are ordered by ascending ID."),l.a.createElement(c["a"],{code:"octokit.repos.listCommitCommentsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-92"},l.a.createElement(r["AnchorLink"],{to:"#parameters-92","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commit-comments-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commits"},l.a.createElement(r["AnchorLink"],{to:"#list-commits","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commits"),l.a.createElement("p",null,l.a.createElement("strong",null,"Signature verification object")),l.a.createElement("p",null,"The response will include a ",l.a.createElement("code",null,"verification")," object that describes the result of verifying the commit's signature. The following fields are included in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Name"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"verified")),l.a.createElement("td",null,l.a.createElement("code",null,"boolean")),l.a.createElement("td",null,"Indicates whether GitHub considers the signature in this commit to be verified.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"reason")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The reason for verified value. Possible values and their meanings are enumerated in table below.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"signature")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The signature that was extracted from the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"payload")),l.a.createElement("td",null,l.a.createElement("code",null,"string")),l.a.createElement("td",null,"The value that was signed.")))),l.a.createElement("p",null,"These are the possible values for ",l.a.createElement("code",null,"reason")," in the ",l.a.createElement("code",null,"verification")," object:"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Value"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"expired_key")),l.a.createElement("td",null,"The key that made the signature is expired.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"not_signing_key")),l.a.createElement("td",null,'The "signing" flag is not among the usage flags in the GPG key that made the signature.')),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_error")),l.a.createElement("td",null,"There was an error communicating with the signature verification service.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"gpgverify_unavailable")),l.a.createElement("td",null,"The signature verification service is currently unavailable.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unsigned")),l.a.createElement("td",null,"The object does not include a signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_signature_type")),l.a.createElement("td",null,"A non-PGP signature was found in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"no_user")),l.a.createElement("td",null,"No user was associated with the ",l.a.createElement("code",null,"committer")," email address in the commit.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unverified_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit was associated with a user, but the email address is not verified on her/his account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"bad_email")),l.a.createElement("td",null,"The ",l.a.createElement("code",null,"committer")," email address in the commit is not included in the identities of the PGP key that made the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"unknown_key")),l.a.createElement("td",null,"The key that made the signature has not been registered with any user's account.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"malformed_signature")),l.a.createElement("td",null,"There was an error parsing the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"invalid")),l.a.createElement("td",null,"The signature could not be cryptographically verified using the key whose key-id was found in the signature.")),l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"valid")),l.a.createElement("td",null,"None of the above errors applied, so the signature is considered to be verified.")))),l.a.createElement(c["a"],{code:"octokit.repos.listCommits({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-93"},l.a.createElement(r["AnchorLink"],{to:"#parameters-93","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"SHA or branch to start listing commits from. Default: the repository\u2019s default branch (usually ",l.a.createElement("code",null,"master"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"path"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only commits containing this file path will be returned."))),l.a.createElement("tr",null,l.a.createElement("td",null,"author"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"GitHub login or email address by which to filter by commit author."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"until"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only commits before this date will be returned. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commits"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-commit-statuses-for-a-reference"},l.a.createElement(r["AnchorLink"],{to:"#list-commit-statuses-for-a-reference","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List commit statuses for a reference"),l.a.createElement("p",null,"Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one."),l.a.createElement("p",null,"This resource is also available via a legacy route: ",l.a.createElement("code",null,"GET /repos/:owner/:repo/statuses/:ref"),"."),l.a.createElement(c["a"],{code:"octokit.repos.listCommitStatusesForRef({\n  owner,\n  repo,\n  ref,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-94"},l.a.createElement(r["AnchorLink"],{to:"#parameters-94","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"ref+ parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-commit-statuses-for-a-reference"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-contributors"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-contributors","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository contributors"),l.a.createElement("p",null,"Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance."),l.a.createElement("p",null,"GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information."),l.a.createElement(c["a"],{code:"octokit.repos.listContributors({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-95"},l.a.createElement(r["AnchorLink"],{to:"#parameters-95","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"anon"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"1")," or ",l.a.createElement("code",null,"true")," to include anonymous contributors in results."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-contributors"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-deploy-keys"},l.a.createElement(r["AnchorLink"],{to:"#list-deploy-keys","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List deploy keys"),l.a.createElement(c["a"],{code:"octokit.repos.listDeployKeys({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-96"},l.a.createElement(r["AnchorLink"],{to:"#parameters-96","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-deploy-keys"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-deployments"},l.a.createElement(r["AnchorLink"],{to:"#list-deployments","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List deployments"),l.a.createElement("p",null,"Simple filtering of deployments is available via query parameters:"),l.a.createElement(c["a"],{code:"octokit.repos.listDeployments({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-97"},l.a.createElement(r["AnchorLink"],{to:"#parameters-97","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sha"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The SHA recorded at creation time."))),l.a.createElement("tr",null,l.a.createElement("td",null,"ref"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the ref. This can be a branch, tag, or SHA."))),l.a.createElement("tr",null,l.a.createElement("td",null,"task"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the task for the deployment (e.g., ",l.a.createElement("code",null,"deploy")," or ",l.a.createElement("code",null,"deploy:migrations"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"environment"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the environment that was deployed to (e.g., ",l.a.createElement("code",null,"staging")," or ",l.a.createElement("code",null,"production"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-deployments"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-deployment-statuses"},l.a.createElement(r["AnchorLink"],{to:"#list-deployment-statuses","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List deployment statuses"),l.a.createElement("p",null,"Users with pull access can view deployment statuses for a deployment:"),l.a.createElement(c["a"],{code:"octokit.repos.listDeploymentStatuses({\n  owner,\n  repo,\n  deployment_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-98"},l.a.createElement(r["AnchorLink"],{to:"#parameters-98","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"deployment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"deployment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-deployment-statuses"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories for the authenticated user"),l.a.createElement("p",null,"Lists repositories that the authenticated user has explicit permission (",l.a.createElement("code",null,":read"),", ",l.a.createElement("code",null,":write"),", or ",l.a.createElement("code",null,":admin"),") to access."),l.a.createElement("p",null,"The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."),l.a.createElement(c["a"],{code:"octokit.repos.listForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-99"},l.a.createElement(r["AnchorLink"],{to:"#parameters-99","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"public"),", or ",l.a.createElement("code",null,"private"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"affiliation"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Comma-separated list of values. Can include:",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"owner"),": Repositories that are owned by the authenticated user.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"collaborator"),": Repositories that the user has been added to as a collaborator.",l.a.createElement("br",null),"* ",l.a.createElement("code",null,"organization_member"),": Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."))),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"owner"),", ",l.a.createElement("code",null,"public"),", ",l.a.createElement("code",null,"private"),", ",l.a.createElement("code",null,"member"),". Default: ",l.a.createElement("code",null,"all")),l.a.createElement("p",null,"Will cause a ",l.a.createElement("code",null,"422")," error if used in the same request as ",l.a.createElement("strong",null,"visibility")," or ",l.a.createElement("strong",null,"affiliation"),". Will cause a ",l.a.createElement("code",null,"422")," error if used in the same request as ",l.a.createElement("strong",null,"visibility")," or ",l.a.createElement("strong",null,"affiliation"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"pushed"),", ",l.a.createElement("code",null,"full_name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: ",l.a.createElement("code",null,"asc")," when using ",l.a.createElement("code",null,"full_name"),", otherwise ",l.a.createElement("code",null,"desc")))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated after the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"before"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Only show notifications updated before the given time. This is a timestamp in ",l.a.createElement(r["Link"],{to:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format: ",l.a.createElement("code",null,"YYYY-MM-DDTHH:MM:SSZ"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repositories-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-forks"},l.a.createElement(r["AnchorLink"],{to:"#list-forks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List forks"),l.a.createElement(c["a"],{code:"octokit.repos.listForks({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-100"},l.a.createElement(r["AnchorLink"],{to:"#parameters-100","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The sort order. Can be either ",l.a.createElement("code",null,"newest"),", ",l.a.createElement("code",null,"oldest"),", or ",l.a.createElement("code",null,"stargazers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-forks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-organization-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-organization-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List organization repositories"),l.a.createElement("p",null,"Lists repositories for the specified organization."),l.a.createElement(c["a"],{code:"octokit.repos.listForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-101"},l.a.createElement(r["AnchorLink"],{to:"#parameters-101","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the types of repositories you want returned. Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"public"),", ",l.a.createElement("code",null,"private"),", ",l.a.createElement("code",null,"forks"),", ",l.a.createElement("code",null,"sources"),", ",l.a.createElement("code",null,"member"),", ",l.a.createElement("code",null,"internal"),". Default: ",l.a.createElement("code",null,"all"),". If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, ",l.a.createElement("code",null,"type")," can also be ",l.a.createElement("code",null,"internal"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"pushed"),", ",l.a.createElement("code",null,"full_name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: when using ",l.a.createElement("code",null,"full_name"),": ",l.a.createElement("code",null,"asc"),", otherwise ",l.a.createElement("code",null,"desc")))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-organization-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repositories-for-a-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repositories-for-a-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repositories for a user"),l.a.createElement("p",null,"Lists public repositories for the specified user."),l.a.createElement(c["a"],{code:"octokit.repos.listForUser({\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-102"},l.a.createElement(r["AnchorLink"],{to:"#parameters-102","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"all"),", ",l.a.createElement("code",null,"owner"),", ",l.a.createElement("code",null,"member"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"sort"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"created"),", ",l.a.createElement("code",null,"updated"),", ",l.a.createElement("code",null,"pushed"),", ",l.a.createElement("code",null,"full_name"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"direction"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be one of ",l.a.createElement("code",null,"asc")," or ",l.a.createElement("code",null,"desc"),". Default: ",l.a.createElement("code",null,"asc")," when using ",l.a.createElement("code",null,"full_name"),", otherwise ",l.a.createElement("code",null,"desc")))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repositories-for-a-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-invitations"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-invitations","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository invitations"),l.a.createElement("p",null,"When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations."),l.a.createElement(c["a"],{code:"octokit.repos.listInvitations({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-103"},l.a.createElement(r["AnchorLink"],{to:"#parameters-103","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-invitations"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-invitations-for-the-authenticated-user"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-invitations-for-the-authenticated-user","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository invitations for the authenticated user"),l.a.createElement("p",null,"When authenticating as a user, this endpoint will list all currently open repository invitations for that user."),l.a.createElement(c["a"],{code:"octokit.repos.listInvitationsForAuthenticatedUser();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-104"},l.a.createElement(r["AnchorLink"],{to:"#parameters-104","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-invitations-for-the-authenticated-user"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-languages"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-languages","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository languages"),l.a.createElement("p",null,"Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language."),l.a.createElement(c["a"],{code:"octokit.repos.listLanguages({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-105"},l.a.createElement(r["AnchorLink"],{to:"#parameters-105","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-languages"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-github-pages-builds"},l.a.createElement(r["AnchorLink"],{to:"#list-github-pages-builds","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List GitHub Pages builds"),l.a.createElement(c["a"],{code:"octokit.repos.listPagesBuilds({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-106"},l.a.createElement(r["AnchorLink"],{to:"#parameters-106","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-github-pages-builds"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#list-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List public repositories"),l.a.createElement("p",null,"Lists all public repositories in the order that they were created."),l.a.createElement("p",null,"Note: Pagination is powered exclusively by the ",l.a.createElement("code",null,"since")," parameter. Use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header"},"Link header")," to get the URL for the next page of repositories."),l.a.createElement(c["a"],{code:"octokit.repos.listPublic();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-107"},l.a.createElement(r["AnchorLink"],{to:"#parameters-107","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"since"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A repository ID. Only return repositories with an ID greater than this ID."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-public-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-pull-requests-associated-with-a-commit"},l.a.createElement(r["AnchorLink"],{to:"#list-pull-requests-associated-with-a-commit","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List pull requests associated with a commit"),l.a.createElement("p",null,"Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/pulls#list-pull-requests"},"List pull requests")," endpoint."),l.a.createElement(c["a"],{code:"octokit.repos.listPullRequestsAssociatedWithCommit({\n  owner,\n  repo,\n  commit_sha,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-108"},l.a.createElement(r["AnchorLink"],{to:"#parameters-108","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_sha"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"commit_sha parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-pull-requests-associated-with-a-commit"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-release-assets"},l.a.createElement(r["AnchorLink"],{to:"#list-release-assets","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List release assets"),l.a.createElement(c["a"],{code:"octokit.repos.listReleaseAssets({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-109"},l.a.createElement(r["AnchorLink"],{to:"#parameters-109","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-release-assets"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-releases"},l.a.createElement(r["AnchorLink"],{to:"#list-releases","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List releases"),l.a.createElement("p",null,"This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-tags"},"Repository Tags API"),"."),l.a.createElement("p",null,"Information about published releases are available to everyone. Only users with push access will receive listings for draft releases."),l.a.createElement(c["a"],{code:"octokit.repos.listReleases({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-110"},l.a.createElement(r["AnchorLink"],{to:"#parameters-110","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-releases"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-tags"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-tags","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository tags"),l.a.createElement(c["a"],{code:"octokit.repos.listTags({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-111"},l.a.createElement(r["AnchorLink"],{to:"#parameters-111","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-tags"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-teams"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-teams","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository teams"),l.a.createElement(c["a"],{code:"octokit.repos.listTeams({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-112"},l.a.createElement(r["AnchorLink"],{to:"#parameters-112","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#list-repository-teams"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"list-repository-webhooks"},l.a.createElement(r["AnchorLink"],{to:"#list-repository-webhooks","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"List repository webhooks"),l.a.createElement(c["a"],{code:"octokit.repos.listWebhooks({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-113"},l.a.createElement(r["AnchorLink"],{to:"#parameters-113","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"per_page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Results per page (max 100)"))),l.a.createElement("tr",null,l.a.createElement("td",null,"page"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Page number of the results to fetch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-repository-webhooks"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"merge-a-branch"},l.a.createElement(r["AnchorLink"],{to:"#merge-a-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Merge a branch"),l.a.createElement(c["a"],{code:"octokit.repos.merge({\n  owner,\n  repo,\n  base,\n  head,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-114"},l.a.createElement(r["AnchorLink"],{to:"#parameters-114","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"base"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the base branch that the head will be merged into."))),l.a.createElement("tr",null,l.a.createElement("td",null,"head"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The head to merge. This can be a branch name or a commit SHA1."))),l.a.createElement("tr",null,l.a.createElement("td",null,"commit_message"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Commit message to use for the merge commit. If omitted, a default message will be used."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#merge-a-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"ping-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#ping-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Ping a repository webhook"),l.a.createElement("p",null,"This will trigger a ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/#ping-event"},"ping event")," to be sent to the hook."),l.a.createElement(c["a"],{code:"octokit.repos.pingWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-115"},l.a.createElement(r["AnchorLink"],{to:"#parameters-115","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#ping-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-app-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#remove-app-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove app access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removes the ability of an app to push to this branch. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The GitHub Apps that have push access to this branch. Use the app's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.removeAppAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  apps,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-116"},l.a.createElement(r["AnchorLink"],{to:"#parameters-116","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"apps"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-app-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-a-repository-collaborator"},l.a.createElement(r["AnchorLink"],{to:"#remove-a-repository-collaborator","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove a repository collaborator"),l.a.createElement(c["a"],{code:"octokit.repos.removeCollaborator({\n  owner,\n  repo,\n  username,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-117"},l.a.createElement(r["AnchorLink"],{to:"#parameters-117","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"username"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-a-repository-collaborator"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#remove-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.removeStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n  contexts,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-118"},l.a.createElement(r["AnchorLink"],{to:"#parameters-118","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-status-check-protection"},l.a.createElement(r["AnchorLink"],{to:"#remove-status-check-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove status check protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.removeStatusCheckProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-119"},l.a.createElement(r["AnchorLink"],{to:"#parameters-119","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-status-check-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-team-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#remove-team-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove team access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removes the ability of a team to push to this branch. You can also remove push access for child teams."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Teams that should no longer have push access. Use the team's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.removeTeamAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  teams,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-120"},l.a.createElement(r["AnchorLink"],{to:"#parameters-120","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-team-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-user-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#remove-user-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove user access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Removes the ability of a user to push to this branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Usernames of the people who should no longer have push access. ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.removeUserAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  users,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-121"},l.a.createElement(r["AnchorLink"],{to:"#parameters-121","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#remove-user-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"rename-a-branch"},l.a.createElement(r["AnchorLink"],{to:"#rename-a-branch","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Rename a branch"),l.a.createElement("p",null,"Renames a branch in a repository."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note:")," Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won't be able to push to the old branch name while the rename process is in progress. For more information, see \"",l.a.createElement(r["Link"],{to:"https://docs.github.com/github/administering-a-repository/renaming-a-branch"},"Renaming a branch"),'".'),l.a.createElement("p",null,"The permissions required to use this endpoint depends on whether you are renaming the default branch."),l.a.createElement("p",null,"To rename a non-default branch:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Users must have push access."),l.a.createElement("li",null,"GitHub Apps must have the ",l.a.createElement("code",null,"contents:write")," repository permission.")),l.a.createElement("p",null,"To rename the default branch:"),l.a.createElement("ul",null,l.a.createElement("li",null,"Users must have admin or owner permissions."),l.a.createElement("li",null,"GitHub Apps must have the ",l.a.createElement("code",null,"administration:write")," repository permission.")),l.a.createElement(c["a"],{code:"octokit.repos.renameBranch({\n  owner,\n  repo,\n  branch,\n  new_name,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-122"},l.a.createElement(r["AnchorLink"],{to:"#parameters-122","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"new_name"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The new name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#rename-a-branch"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"replace-all-repository-topics"},l.a.createElement(r["AnchorLink"],{to:"#replace-all-repository-topics","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Replace all repository topics"),l.a.createElement(c["a"],{code:"octokit.repos.replaceAllTopics({\n  owner,\n  repo,\n  names,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-123"},l.a.createElement(r["AnchorLink"],{to:"#parameters-123","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"names"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"An array of topics to add to the repository. Pass one or more topics to ",l.a.createElement("em",null,"replace")," the set of existing topics. Send an empty array (",l.a.createElement("code",null,"[]"),") to clear all topics from the repository. ",l.a.createElement("strong",null,"Note:")," Topic ",l.a.createElement("code",null,"names")," cannot contain uppercase letters."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#replace-all-repository-topics"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"request-a-github-pages-build"},l.a.createElement(r["AnchorLink"],{to:"#request-a-github-pages-build","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Request a GitHub Pages build"),l.a.createElement("p",null,"You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures."),l.a.createElement("p",null,"Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes."),l.a.createElement(c["a"],{code:"octokit.repos.requestPagesBuild({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-124"},l.a.createElement(r["AnchorLink"],{to:"#parameters-124","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#request-a-github-pages-build"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-admin-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#set-admin-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set admin branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.setAdminBranchProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-125"},l.a.createElement(r["AnchorLink"],{to:"#parameters-125","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-admin-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-app-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#set-app-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set app access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with ",l.a.createElement("code",null,"write")," access to the ",l.a.createElement("code",null,"contents")," permission can be added as authorized actors on a protected branch."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The GitHub Apps that have push access to this branch. Use the app's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.setAppAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  apps,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-126"},l.a.createElement(r["AnchorLink"],{to:"#parameters-126","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"apps"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-app-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-status-check-contexts"},l.a.createElement(r["AnchorLink"],{to:"#set-status-check-contexts","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set status check contexts"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement(c["a"],{code:"octokit.repos.setStatusCheckContexts({\n  owner,\n  repo,\n  branch,\n  contexts,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-127"},l.a.createElement(r["AnchorLink"],{to:"#parameters-127","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-status-check-contexts"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-team-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#set-team-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set team access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"The teams that can have push access. Use the team's ",l.a.createElement("code",null,"slug"),". ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.setTeamAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  teams,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-128"},l.a.createElement(r["AnchorLink"],{to:"#parameters-128","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-team-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-user-access-restrictions"},l.a.createElement(r["AnchorLink"],{to:"#set-user-access-restrictions","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set user access restrictions"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people."),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,l.a.createElement("code",null,"array")),l.a.createElement("td",null,"Usernames for people who can have push access. ",l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items.")))),l.a.createElement(c["a"],{code:"octokit.repos.setUserAccessRestrictions({\n  owner,\n  repo,\n  branch,\n  users,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-129"},l.a.createElement(r["AnchorLink"],{to:"#parameters-129","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#set-user-access-restrictions"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"test-the-push-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#test-the-push-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Test the push repository webhook"),l.a.createElement("p",null,"This will trigger the hook with the latest push to the current repository if the hook is subscribed to ",l.a.createElement("code",null,"push")," events. If the hook is not subscribed to ",l.a.createElement("code",null,"push")," events, the server will respond with 204 but no test POST will be generated."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Previously ",l.a.createElement("code",null,"/repos/:owner/:repo/hooks/:hook_id/test")),l.a.createElement(c["a"],{code:"octokit.repos.testPushWebhook({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-130"},l.a.createElement(r["AnchorLink"],{to:"#parameters-130","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#test-the-push-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"transfer-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#transfer-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Transfer a repository"),l.a.createElement("p",null,"A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original ",l.a.createElement("code",null,"owner"),", and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-repository-transfers/"},"about repository transfers"),"."),l.a.createElement(c["a"],{code:"octokit.repos.transfer({\n  owner,\n  repo,\n  new_owner,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-131"},l.a.createElement(r["AnchorLink"],{to:"#parameters-131","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"new_owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The username or organization name the repository will be transferred to."))),l.a.createElement("tr",null,l.a.createElement("td",null,"team_ids"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#transfer-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#update-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a repository"),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": To edit a repository's topics, use the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#replace-all-repository-topics"},"Replace all repository topics")," endpoint."),l.a.createElement(c["a"],{code:"octokit.repos.update({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-132"},l.a.createElement(r["AnchorLink"],{to:"#parameters-132","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"description"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A short description of the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"homepage"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"A URL with more information about the repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"private"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to make the repository private or ",l.a.createElement("code",null,"false")," to make it public. Default: ",l.a.createElement("code",null,"false"),".",l.a.createElement("br",null),l.a.createElement("strong",null,"Note"),": You will get a ",l.a.createElement("code",null,"422")," error if the organization restricts ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories"},"changing repository visibility")," to organization owners and a non-owner tries to change the value of private. ",l.a.createElement("strong",null,"Note"),": You will get a ",l.a.createElement("code",null,"422")," error if the organization restricts ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories"},"changing repository visibility")," to organization owners and a non-owner tries to change the value of private."))),l.a.createElement("tr",null,l.a.createElement("td",null,"visibility"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Can be ",l.a.createElement("code",null,"public")," or ",l.a.createElement("code",null,"private"),". If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, ",l.a.createElement("code",null,"visibility")," can also be ",l.a.createElement("code",null,"internal"),". The ",l.a.createElement("code",null,"visibility")," parameter overrides the ",l.a.createElement("code",null,"private")," parameter when you use both along with the ",l.a.createElement("code",null,"nebula-preview")," preview header."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_issues"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable issues for this repository or ",l.a.createElement("code",null,"false")," to disable them."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_projects"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable projects for this repository or ",l.a.createElement("code",null,"false")," to disable them. ",l.a.createElement("strong",null,"Note:")," If you're creating a repository in an organization that has disabled repository projects, the default is ",l.a.createElement("code",null,"false"),", and if you pass ",l.a.createElement("code",null,"true"),", the API returns an error."))),l.a.createElement("tr",null,l.a.createElement("td",null,"has_wiki"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to enable the wiki for this repository or ",l.a.createElement("code",null,"false")," to disable it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"is_template"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to make this repo available as a template repository or ",l.a.createElement("code",null,"false")," to prevent it."))),l.a.createElement("tr",null,l.a.createElement("td",null,"default_branch"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Updates the default branch for this repository."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_squash_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow squash-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent squash-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_merge_commit"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow merging pull requests with a merge commit, or ",l.a.createElement("code",null,"false")," to prevent merging pull requests with merge commits."))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_rebase_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow rebase-merging pull requests, or ",l.a.createElement("code",null,"false")," to prevent rebase-merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"delete_branch_on_merge"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Either ",l.a.createElement("code",null,"true")," to allow automatically deleting head branches when pull requests are merged, or ",l.a.createElement("code",null,"false")," to prevent automatic deletion."))),l.a.createElement("tr",null,l.a.createElement("td",null,"archived"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to archive this repository. ",l.a.createElement("strong",null,"Note"),": You cannot unarchive repositories through the API."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos/#update-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-branch-protection"},l.a.createElement(r["AnchorLink"],{to:"#update-branch-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update branch protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Protecting a branch requires admin or owner permissions to the repository."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Passing new arrays of ",l.a.createElement("code",null,"users")," and ",l.a.createElement("code",null,"teams")," replaces their previous values."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": The list of users, apps, and teams in total is limited to 100 items."),l.a.createElement(c["a"],{code:"octokit.repos.updateBranchProtection({\n        owner,\nrepo,\nbranch,\nrequired_status_checks,\nrequired_status_checks.strict,\nrequired_status_checks.contexts,\nenforce_admins,\nrequired_pull_request_reviews,\nrestrictions,\nrestrictions.users,\nrestrictions.teams\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-133"},l.a.createElement(r["AnchorLink"],{to:"#parameters-133","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_status_checks"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Require status checks to pass before merging. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_status_checks.strict"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Require branches to be up to date before merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_status_checks.contexts"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of status checks to require in order to merge into this branch"))),l.a.createElement("tr",null,l.a.createElement("td",null,"enforce_admins"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Enforce all configured restrictions for administrators. Set to ",l.a.createElement("code",null,"true")," to enforce required status checks for repository administrators. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Require at least one approving review on a pull request, before merging. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismissal_restrictions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify which users and teams can dismiss pull request reviews. Pass an empty ",l.a.createElement("code",null,"dismissal_restrictions")," object to disable. User and team ",l.a.createElement("code",null,"dismissal_restrictions")," are only available for organization-owned repositories. Omit this parameter for personal repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismissal_restrictions.users"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of user ",l.a.createElement("code",null,"login"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismissal_restrictions.teams"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of team ",l.a.createElement("code",null,"slug"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.dismiss_stale_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," if you want to automatically dismiss approving reviews when someone pushes a new commit."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.require_code_owner_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Blocks merging pull requests until ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-code-owners/"},"code owners")," review them."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_pull_request_reviews.required_approving_review_count"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6."))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"Restrict who can push to the protected branch. User, app, and team ",l.a.createElement("code",null,"restrictions")," are only available for organization-owned repositories. Set to ",l.a.createElement("code",null,"null")," to disable."))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions.users"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of user ",l.a.createElement("code",null,"login"),"s with push access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions.teams"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of team ",l.a.createElement("code",null,"slug"),"s with push access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"restrictions.apps"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of app ",l.a.createElement("code",null,"slug"),"s with push access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_linear_history"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to ",l.a.createElement("code",null,"true")," to enforce a linear commit history. Set to ",l.a.createElement("code",null,"false")," to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: ",l.a.createElement("code",null,"false"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history"},"Requiring a linear commit history"),'" in the GitHub Help documentation.'))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_force_pushes"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Permits force pushes to the protected branch by anyone with write access to the repository. Set to ",l.a.createElement("code",null,"true")," to allow force pushes. Set to ",l.a.createElement("code",null,"false")," or ",l.a.createElement("code",null,"null")," to block force pushes. Default: ",l.a.createElement("code",null,"false"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch"},"Enabling force pushes to a protected branch"),'" in the GitHub Help documentation."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"allow_deletions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Allows deletion of the protected branch by anyone with write access to the repository. Set to ",l.a.createElement("code",null,"false")," to prevent deletion of the protected branch. Default: ",l.a.createElement("code",null,"false"),'. For more information, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch"},"Enabling force pushes to a protected branch"),'" in the GitHub Help documentation.'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-branch-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-commit-comment"},l.a.createElement(r["AnchorLink"],{to:"#update-a-commit-comment","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a commit comment"),l.a.createElement(c["a"],{code:"octokit.repos.updateCommitComment({\n  owner,\n  repo,\n  comment_id,\n  body,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-134"},l.a.createElement(r["AnchorLink"],{to:"#parameters-134","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"comment_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"comment_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The contents of the comment"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-commit-comment"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-information-about-a-github-pages-site"},l.a.createElement(r["AnchorLink"],{to:"#update-information-about-a-github-pages-site","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update information about a GitHub Pages site"),l.a.createElement("p",null,'Updates information for a GitHub Pages site. For more information, see "',l.a.createElement(r["Link"],{to:"/github/working-with-github-pages/about-github-pages"},"About GitHub Pages"),"."),l.a.createElement(c["a"],{code:"octokit.repos.updateInformationAboutPagesSite({\n  owner,\n  repo,\n  source,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-135"},l.a.createElement(r["AnchorLink"],{to:"#parameters-135","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"cname"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify a custom domain for the repository. Sending a ",l.a.createElement("code",null,"null"),' value will remove the custom domain. For more about custom domains, see "',l.a.createElement(r["Link"],{to:"https://help.github.com/articles/using-a-custom-domain-with-github-pages/"},"Using a custom domain with GitHub Pages"),'."'))),l.a.createElement("tr",null,l.a.createElement("td",null,"public"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Configures access controls for the GitHub Pages site. If public is set to ",l.a.createElement("code",null,"true"),", the site is accessible to anyone on the internet. If set to ",l.a.createElement("code",null,"false"),", the site will only be accessible to users who have at least ",l.a.createElement("code",null,"read")," access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to ",l.a.createElement("code",null,"internal")," visibility. This feature is only available to repositories in an organization on an Enterprise plan."))),l.a.createElement("tr",null,l.a.createElement("td",null,"source"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-information-about-a-github-pages-site"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-repository-invitation"},l.a.createElement(r["AnchorLink"],{to:"#update-a-repository-invitation","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a repository invitation"),l.a.createElement(c["a"],{code:"octokit.repos.updateInvitation({\n  owner,\n  repo,\n  invitation_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-136"},l.a.createElement(r["AnchorLink"],{to:"#parameters-136","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"invitation_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"invitation_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"permissions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The permissions that the associated user will have on the repository. Valid values are ",l.a.createElement("code",null,"read"),", ",l.a.createElement("code",null,"write"),", ",l.a.createElement("code",null,"maintain"),", ",l.a.createElement("code",null,"triage"),", and ",l.a.createElement("code",null,"admin"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-repository-invitation"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-pull-request-review-protection"},l.a.createElement(r["AnchorLink"],{to:"#update-pull-request-review-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update pull request review protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement("p",null,l.a.createElement("strong",null,"Note"),": Passing new arrays of ",l.a.createElement("code",null,"users")," and ",l.a.createElement("code",null,"teams")," replaces their previous values."),l.a.createElement(c["a"],{code:"octokit.repos.updatePullRequestReviewProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-137"},l.a.createElement(r["AnchorLink"],{to:"#parameters-137","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissal_restrictions"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specify which users and teams can dismiss pull request reviews. Pass an empty ",l.a.createElement("code",null,"dismissal_restrictions")," object to disable. User and team ",l.a.createElement("code",null,"dismissal_restrictions")," are only available for organization-owned repositories. Omit this parameter for personal repositories."))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissal_restrictions.users"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of user ",l.a.createElement("code",null,"login"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissal_restrictions.teams"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of team ",l.a.createElement("code",null,"slug"),"s with dismissal access"))),l.a.createElement("tr",null,l.a.createElement("td",null,"dismiss_stale_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Set to ",l.a.createElement("code",null,"true")," if you want to automatically dismiss approving reviews when someone pushes a new commit."))),l.a.createElement("tr",null,l.a.createElement("td",null,"require_code_owner_reviews"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Blocks merging pull requests until ",l.a.createElement(r["Link"],{to:"https://help.github.com/articles/about-code-owners/"},"code owners")," have reviewed."))),l.a.createElement("tr",null,l.a.createElement("td",null,"required_approving_review_count"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-pull-request-review-protection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-release"},l.a.createElement(r["AnchorLink"],{to:"#update-a-release","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a release"),l.a.createElement("p",null,"Users with push access to the repository can edit a release."),l.a.createElement(c["a"],{code:"octokit.repos.updateRelease({\n  owner,\n  repo,\n  release_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-138"},l.a.createElement(r["AnchorLink"],{to:"#parameters-138","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"tag_name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"target_commitish"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually ",l.a.createElement("code",null,"master"),")."))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the release."))),l.a.createElement("tr",null,l.a.createElement("td",null,"body"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Text describing the contents of the tag."))),l.a.createElement("tr",null,l.a.createElement("td",null,"draft"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," makes the release a draft, and ",l.a.createElement("code",null,"false")," publishes the release."))),l.a.createElement("tr",null,l.a.createElement("td",null,"prerelease"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,l.a.createElement("code",null,"true")," to identify the release as a prerelease, ",l.a.createElement("code",null,"false")," to identify the release as a full release."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-release"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#update-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a release asset"),l.a.createElement("p",null,"Users with push access to the repository can edit a release asset."),l.a.createElement(c["a"],{code:"octokit.repos.updateReleaseAsset({\n  owner,\n  repo,\n  asset_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-139"},l.a.createElement(r["AnchorLink"],{to:"#parameters-139","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"asset_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"asset_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The file name of the asset."))),l.a.createElement("tr",null,l.a.createElement("td",null,"label"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"An alternate short description of the asset. Used in place of the filename."))),l.a.createElement("tr",null,l.a.createElement("td",null,"state"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-release-asset"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-status-check-protection"},l.a.createElement(r["AnchorLink"],{to:"#update-status-check-protection","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update status check protection"),l.a.createElement("p",null,l.a.createElement("strong",null,"Deprecated:")," This method has been renamed to repos.updateStatusCheckProtection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.updateStatusCheckPotection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-140"},l.a.createElement(r["AnchorLink"],{to:"#parameters-140","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"strict"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Require branches to be up to date before merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of status checks to require in order to merge into this branch"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-status-check-potection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-status-check-protection-1"},l.a.createElement(r["AnchorLink"],{to:"#update-status-check-protection-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update status check protection"),l.a.createElement("p",null,"Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see ",l.a.createElement(r["Link"],{to:"https://help.github.com/github/getting-started-with-github/githubs-products"},"GitHub's products")," in the GitHub Help documentation."),l.a.createElement("p",null,"Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled."),l.a.createElement(c["a"],{code:"octokit.repos.updateStatusCheckProtection({\n  owner,\n  repo,\n  branch,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-141"},l.a.createElement(r["AnchorLink"],{to:"#parameters-141","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"branch"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The name of the branch."))),l.a.createElement("tr",null,l.a.createElement("td",null,"strict"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Require branches to be up to date before merging."))),l.a.createElement("tr",null,l.a.createElement("td",null,"contexts"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The list of status checks to require in order to merge into this branch"))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-status-check-potection"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-repository-webhook"},l.a.createElement(r["AnchorLink"],{to:"#update-a-repository-webhook","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a repository webhook"),l.a.createElement("p",null,"Updates a webhook configured in a repository. If you previously had a ",l.a.createElement("code",null,"secret")," set, you must provide the same ",l.a.createElement("code",null,"secret")," or set a new ",l.a.createElement("code",null,"secret")," or the secret will be removed. If you are only updating individual webhook ",l.a.createElement("code",null,"config"),' properties, use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/repos#update-a-webhook-configuration-for-a-repository"},"Update a webhook configuration for a repository"),'."'),l.a.createElement(c["a"],{code:"octokit.repos.updateWebhook({\n        owner,\nrepo,\nhook_id,\nconfig.url\n      })\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-142"},l.a.createElement(r["AnchorLink"],{to:"#parameters-142","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Key/value pairs to provide settings for this webhook. ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-hook-config-params"},"These are defined below"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.url"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))),l.a.createElement("tr",null,l.a.createElement("td",null,"config.address"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"config.room"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines what ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads"},"events")," the hook is triggered for. This replaces the entire array of events."))),l.a.createElement("tr",null,l.a.createElement("td",null,"add_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines a list of events to be added to the list of events that the Hook triggers for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"remove_events"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines a list of events to be removed from the list of events that the Hook triggers for."))),l.a.createElement("tr",null,l.a.createElement("td",null,"active"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines if notifications are sent when the webhook is triggered. Set to ",l.a.createElement("code",null,"true")," to send notifications."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#update-a-repository-webhook"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"update-a-webhook-configuration-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#update-a-webhook-configuration-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Update a webhook configuration for a repository"),l.a.createElement("p",null,"Updates the webhook configuration for a repository. To update more information about the webhook, including the ",l.a.createElement("code",null,"active")," state and ",l.a.createElement("code",null,"events"),', use "',l.a.createElement(r["AnchorLink"],{to:"/rest/reference/orgs#update-a-repository-webhook"},"Update a repository webhook"),'."'),l.a.createElement("p",null,"Access tokens must have the ",l.a.createElement("code",null,"write:repo_hook")," or ",l.a.createElement("code",null,"repo")," scope, and GitHub Apps must have the ",l.a.createElement("code",null,"repository_hooks:write")," permission."),l.a.createElement(c["a"],{code:"octokit.repos.updateWebhookConfigForRepo({\n  owner,\n  repo,\n  hook_id,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-143"},l.a.createElement(r["AnchorLink"],{to:"#parameters-143","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"hook_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"url"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL to which the payloads will be delivered."))),l.a.createElement("tr",null,l.a.createElement("td",null,"content_type"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The media type used to serialize the payloads. Supported values include ",l.a.createElement("code",null,"json")," and ",l.a.createElement("code",null,"form"),". The default is ",l.a.createElement("code",null,"form"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"secret"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"If provided, the ",l.a.createElement("code",null,"secret")," will be used as the ",l.a.createElement("code",null,"key")," to generate the HMAC hex digest value for ",l.a.createElement(r["Link"],{to:"https://docs.github.com/webhooks/event-payloads/#delivery-headers"},"delivery signature headers"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"insecure_ssl"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"Determines whether the SSL certificate of the host for ",l.a.createElement("code",null,"url")," will be verified when delivering payloads. Supported values include ",l.a.createElement("code",null,"0")," (verification is performed) and ",l.a.createElement("code",null,"1")," (verification is not performed). The default is ",l.a.createElement("code",null,"0"),". ",l.a.createElement("strong",null,"We strongly recommend not setting this to ",l.a.createElement("code",null,"1")," as you are subject to man-in-the-middle and other attacks.")))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/v3/repos#update-a-webhook-configuration-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"upload-a-release-asset"},l.a.createElement(r["AnchorLink"],{to:"#upload-a-release-asset","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Upload a release asset"),l.a.createElement("p",null,"This endpoint makes use of ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia"},"a Hypermedia relation")," to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the ",l.a.createElement("code",null,"upload_url")," returned in the response of the ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#create-a-release"},"Create a release endpoint")," to upload a release asset."),l.a.createElement("p",null,"You need to use an HTTP client which supports ",l.a.createElement(r["Link"],{to:"http://en.wikipedia.org/wiki/Server_Name_Indication"},"SNI")," to make calls to this endpoint."),l.a.createElement("p",null,"Most libraries will set the required ",l.a.createElement("code",null,"Content-Length")," header automatically. Use the required ",l.a.createElement("code",null,"Content-Type")," header to provide the media type of the asset. For a list of media types, see ",l.a.createElement(r["Link"],{to:"https://www.iana.org/assignments/media-types/media-types.xhtml"},"Media Types"),". For example:"),l.a.createElement("p",null,l.a.createElement("code",null,"application/zip")),l.a.createElement("p",null,"GitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset."),l.a.createElement("p",null,"When an upstream failure occurs, you will receive a ",l.a.createElement("code",null,"502 Bad Gateway")," status. This may leave an empty asset with a state of ",l.a.createElement("code",null,"starter"),". It can be safely deleted."),l.a.createElement("p",null,l.a.createElement("strong",null,"Notes:")),l.a.createElement("ul",null,l.a.createElement("li",null,'GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The "',l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#list-assets-for-a-release"},"List assets for a release"),'" endpoint lists the renamed filenames. For more information and help, contact ',l.a.createElement(r["Link"],{to:"https://support.github.com/contact"},"GitHub Support"),"."),l.a.createElement("li",null,"If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.")),l.a.createElement(c["a"],{code:"octokit.repos.uploadReleaseAsset({\n  owner,\n  repo,\n  release_id,\n  data,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-144"},l.a.createElement(r["AnchorLink"],{to:"#parameters-144","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"release_id"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"release_id parameter"))),l.a.createElement("tr",null,l.a.createElement("td",null,"name"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"label"),l.a.createElement("td",null,"no"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"data"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The raw file data"))),l.a.createElement("tr",null,l.a.createElement("td",null,"origin"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The URL origin (protocol + host name + port) is included in ",l.a.createElement("code",null,"upload_url"),' returned in the response of the "Create a release" endpoint'))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/repos#upload-a-release-asset"},"GitHub Developer Guide documentation"),".")))}},zKZe:function(e,t,a){var n=a("I+eb"),l=a("YNrV");n({target:"Object",stat:!0,forced:Object.assign!==l},{assign:l})},zLVn:function(e,t,a){"use strict";function n(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}a.d(t,"a",(function(){return n}))},zTfE:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),r=a("dEAq"),c=a("ZpkN");t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"get-interaction-restrictions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#get-interaction-restrictions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get interaction restrictions for an organization"),l.a.createElement("p",null,"Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no restrictions, you will see an empty response."),l.a.createElement(c["a"],{code:"octokit.interactions.getRestrictionsForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters"},l.a.createElement(r["AnchorLink"],{to:"#parameters","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-interaction-restrictions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#get-interaction-restrictions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get interaction restrictions for a repository"),l.a.createElement("p",null,"Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response."),l.a.createElement(c["a"],{code:"octokit.interactions.getRestrictionsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-1"},l.a.createElement(r["AnchorLink"],{to:"#parameters-1","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"get-interaction-restrictions-for-your-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#get-interaction-restrictions-for-your-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Get interaction restrictions for your public repositories"),l.a.createElement("p",null,"Shows which type of GitHub user can interact with your public repositories and when the restriction expires. If there are no restrictions, you will see an empty response."),l.a.createElement(c["a"],{code:"octokit.interactions.getRestrictionsForYourPublicRepos();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-2"},l.a.createElement(r["AnchorLink"],{to:"#parameters-2","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-your-public-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-interaction-restrictions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#remove-interaction-restrictions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove interaction restrictions for an organization"),l.a.createElement("p",null,"Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions."),l.a.createElement(c["a"],{code:"octokit.interactions.removeRestrictionsForOrg({\n  org,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-3"},l.a.createElement(r["AnchorLink"],{to:"#parameters-3","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-interaction-restrictions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#remove-interaction-restrictions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove interaction restrictions for a repository"),l.a.createElement("p",null,"Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions. If the interaction limit is set for the user or organization that owns this repository, you will receive a ",l.a.createElement("code",null,"409 Conflict")," response and will not be able to use this endpoint to change the interaction limit for a single repository."),l.a.createElement(c["a"],{code:"octokit.interactions.removeRestrictionsForRepo({\n  owner,\n  repo,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-4"},l.a.createElement(r["AnchorLink"],{to:"#parameters-4","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"remove-interaction-restrictions-from-your-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#remove-interaction-restrictions-from-your-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Remove interaction restrictions from your public repositories"),l.a.createElement("p",null,"Removes any interaction restrictions from your public repositories."),l.a.createElement(c["a"],{code:"octokit.interactions.removeRestrictionsForYourPublicRepos();\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-5"},l.a.createElement(r["AnchorLink"],{to:"#parameters-5","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("p",null,"This endpoint has no parameters"),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-from-your-public-repositories"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-interaction-restrictions-for-an-organization"},l.a.createElement(r["AnchorLink"],{to:"#set-interaction-restrictions-for-an-organization","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set interaction restrictions for an organization"),l.a.createElement("p",null,"Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. You must be an organization owner to set these restrictions. Setting the interaction limit at the organization level will overwrite any interaction limits that are set for individual repositories owned by the organization."),l.a.createElement(c["a"],{code:"octokit.interactions.setRestrictionsForOrg({\n  org,\n  limit,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-6"},l.a.createElement(r["AnchorLink"],{to:"#parameters-6","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"org"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"limit"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: ",l.a.createElement("code",null,"existing_users"),", ",l.a.createElement("code",null,"contributors_only"),", ",l.a.createElement("code",null,"collaborators_only"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"expiry"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The duration of the interaction restriction. Can be one of: ",l.a.createElement("code",null,"one_day"),", ",l.a.createElement("code",null,"three_days"),", ",l.a.createElement("code",null,"one_week"),", ",l.a.createElement("code",null,"one_month"),", ",l.a.createElement("code",null,"six_months"),". Default: ",l.a.createElement("code",null,"one_day"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-an-organization"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-interaction-restrictions-for-a-repository"},l.a.createElement(r["AnchorLink"],{to:"#set-interaction-restrictions-for-a-repository","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set interaction restrictions for a repository"),l.a.createElement("p",null,"Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or admin access to set these restrictions. If an interaction limit is set for the user or organization that owns this repository, you will receive a ",l.a.createElement("code",null,"409 Conflict")," response and will not be able to use this endpoint to change the interaction limit for a single repository."),l.a.createElement(c["a"],{code:"octokit.interactions.setRestrictionsForRepo({\n  owner,\n  repo,\n  limit,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-7"},l.a.createElement(r["AnchorLink"],{to:"#parameters-7","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"owner"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"repo"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null)),l.a.createElement("tr",null,l.a.createElement("td",null,"limit"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: ",l.a.createElement("code",null,"existing_users"),", ",l.a.createElement("code",null,"contributors_only"),", ",l.a.createElement("code",null,"collaborators_only"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"expiry"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The duration of the interaction restriction. Can be one of: ",l.a.createElement("code",null,"one_day"),", ",l.a.createElement("code",null,"three_days"),", ",l.a.createElement("code",null,"one_week"),", ",l.a.createElement("code",null,"one_month"),", ",l.a.createElement("code",null,"six_months"),". Default: ",l.a.createElement("code",null,"one_day"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-a-repository"},"GitHub Developer Guide documentation"),"."),l.a.createElement("h2",{id:"set-interaction-restrictions-for-your-public-repositories"},l.a.createElement(r["AnchorLink"],{to:"#set-interaction-restrictions-for-your-public-repositories","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Set interaction restrictions for your public repositories"),l.a.createElement("p",null,"Temporarily restricts which type of GitHub user can interact with your public repositories. Setting the interaction limit at the user level will overwrite any interaction limits that are set for individual repositories owned by the user."),l.a.createElement(c["a"],{code:"octokit.interactions.setRestrictionsForYourPublicRepos({\n  limit,\n});\n",lang:"js"}),l.a.createElement("h4",{id:"parameters-8"},l.a.createElement(r["AnchorLink"],{to:"#parameters-8","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Parameters"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"name"),l.a.createElement("th",null,"required"),l.a.createElement("th",null,"description"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"limit"),l.a.createElement("td",null,"yes"),l.a.createElement("td",null,l.a.createElement("p",null,"The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: ",l.a.createElement("code",null,"existing_users"),", ",l.a.createElement("code",null,"contributors_only"),", ",l.a.createElement("code",null,"collaborators_only"),"."))),l.a.createElement("tr",null,l.a.createElement("td",null,"expiry"),l.a.createElement("td",null,"no"),l.a.createElement("td",null,l.a.createElement("p",null,"The duration of the interaction restriction. Can be one of: ",l.a.createElement("code",null,"one_day"),", ",l.a.createElement("code",null,"three_days"),", ",l.a.createElement("code",null,"one_week"),", ",l.a.createElement("code",null,"one_month"),", ",l.a.createElement("code",null,"six_months"),". Default: ",l.a.createElement("code",null,"one_day"),"."))))),l.a.createElement("p",null,"See also: ",l.a.createElement(r["Link"],{to:"https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-your-public-repositories"},"GitHub Developer Guide documentation"),".")))}},zYLY:function(e,t,a){"use strict";function n(){var e=r(a("q1tI"));return n=function(){return e},e}function l(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var c=n?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(a,r,c):a[r]=e[r]}return a["default"]=e,t&&t.set(e,a),a}function c(e,t){return m(e)||u(e,t)||i(e,t)||o()}function o(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e,t){if(e){if("string"===typeof e)return s(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?s(e,t):void 0}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function u(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function m(e){if(Array.isArray(e))return e}function d(e,t,a){var n,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(l<t.length){var r=t[l],o=function(){return d(e,t,a,l+1)},i=r.match(/^([^:]+):?(.*)$/)||[],s=c(i,3),u=s[1],m=s[2];switch(u){case"autoplay":o();break;case"click":var E=m.match(/^(global\()?(.+?)\)?$/)||[],p=c(E,3),h=p[1],g=p[2],b=h?document:e;null===(n=b.querySelector(g))||void 0===n||n.click(),o();break;case"timeout":setTimeout(o,Number(m));break;case"capture":window.postMessage({type:"dumi:capture-element",value:m},"*"),o();break;default:console.warn("[dumi: motion] unknown motion '".concat(r,"', skip.")),o()}}else a()}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=void 0;var E=function(e,t){var a=(0,n().useState)(!1),l=c(a,2),r=l[0],o=l[1],i=(0,n().useCallback)((function(){r||(d(t,e,(function(){o(!1)})),o(!0))}),[e,t,r]);return(0,n().useEffect)((function(){"autoplay"===e[0]&&t&&i()}),[e,t]),[i,r]};t["default"]=E},zfnd:function(e,t,a){var n=a("glrk"),l=a("hh1v"),r=a("8GlL");e.exports=function(e,t){if(n(e),l(t)&&t.constructor===e)return t;var a=r.f(e),c=a.resolve;return c(t),a.promise}},zk60:function(e,t,a){var n=a("2oRo"),l=a("kRJp");e.exports=function(e,t){try{l(n,e,t)}catch(a){n[e]=t}return t}},zlVK:function(e,t,a){"use strict";var n=a("o0o1");Object.defineProperty(t,"__esModule",{value:!0});var l=a("i8i4"),r=a("q1tI"),c=a("LtsZ"),o=a("V/vL");function i(e){return e&&"object"===typeof e&&"default"in e?e:{default:e}}var s=i(r);function u(e,t,a,n,l,r,c){try{var o=e[r](c),i=o.value}catch(s){return void a(s)}o.done?t(i):Promise.resolve(i).then(n,l)}function m(e){return function(){var t=this,a=arguments;return new Promise((function(n,l){var r=e.apply(t,a);function c(e){u(r,n,l,c,o,"next",e)}function o(e){u(r,n,l,c,o,"throw",e)}c(void 0)}))}}function d(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function E(){return E=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},E.apply(this,arguments)}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function h(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){d(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function g(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}function b(e,t){if(null==e)return{};var a,n,l=g(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}function f(e,t){return y(e)||k(e,t)||v(e,t)||L()}function y(e){if(Array.isArray(e))return e}function k(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var a=[],n=!0,l=!1,r=void 0;try{for(var c,o=e[Symbol.iterator]();!(n=(c=o.next()).done);n=!0)if(a.push(c.value),t&&a.length===t)break}catch(i){l=!0,r=i}finally{try{n||null==o["return"]||o["return"]()}finally{if(l)throw r}}return a}}function v(e,t){if(e){if("string"===typeof e)return w(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?w(e,t):void 0}}function w(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function L(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function A(e,t){var a;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(a=v(e))||t&&e&&"number"===typeof e.length){a&&(e=a);var n=0,l=function(){};return{s:l,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,c=!0,o=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return c=e.done,e},e:function(e){o=!0,r=e},f:function(){try{c||null==a["return"]||a["return"]()}finally{if(o)throw r}}}}function x(e){return s["default"].createElement(c.__RouterContext.Consumer,null,(function(t){var a,n=e.children,l=b(e,["children"]),o=t.location,i=null;return r.Children.forEach(n,(function(e){if(null===i&&r.isValidElement(e)){a=e;var n=e.props.path||e.props.from;i=n?c.matchPath(o.pathname,h(h({},e.props),{},{path:n})):t.match}})),i?r.cloneElement(a,{location:o,computedMatch:i,layoutProps:l}):null}))}function _(e){return s["default"].createElement(c.__RouterContext.Consumer,null,(function(t){var a=t.location,n=e.computedMatch,l=h(h({},t),{},{location:a,match:n}),r=e.render;return s["default"].createElement(c.__RouterContext.Provider,{value:l},l.match?r(h(h({},e.layoutProps),l)):null)}))}function G(e,t){e.component;var a=b(e,["component"]),l=e.component;function o(o){var i=r.useState((function(){return window.g_initialProps})),u=f(i,2),d=u[0],p=u[1];return r.useEffect((function(){var r=function(){var r=m(n.mark((function r(){var i,s,u,m,d;return n.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(!l.preload){n.next=5;break}return n.next=3,l.preload();case 3:s=n.sent,l=s["default"]||s;case 5:if(u=h(h({isServer:!1,match:null===o||void 0===o?void 0:o.match,history:null===o||void 0===o?void 0:o.history,route:e},t.getInitialPropsCtx||{}),a),!(null===(i=l)||void 0===i?void 0:i.getInitialProps)){n.next=14;break}return n.next=9,t.plugin.applyPlugins({key:"ssr.modifyGetInitialPropsCtx",type:c.ApplyPluginsType.modify,initialValue:u,async:!0});case 9:return m=n.sent,n.next=12,l.getInitialProps(m||u);case 12:d=n.sent,p(d);case 14:case"end":return n.stop()}}),r)})));return function(){return r.apply(this,arguments)}}();window.g_initialProps||r()}),[window.location.pathname,window.location.search]),s["default"].createElement(l,E({},o,d))}return o.wrapInitialPropsLoaded=!0,o.displayName="ComponentWithInitialPropsFetch",o}function P(e){var t=e.route,a=e.opts,n=e.props,l=S(h(h({},a),{},{routes:t.routes||[],rootRoutes:a.rootRoutes})),c=t.component,o=t.wrappers;if(c){var i=a.isServer?{}:window.g_initialProps,u=h(h(h(h({},n),a.extraProps),a.pageInitialProps||i),{},{route:t,routes:a.rootRoutes}),m=s["default"].createElement(c,u,l);if(o){var d=o.length-1;while(d>=0)m=r.createElement(o[d],u,m),d-=1}return m}return l}function I(e){var t,a,n,l=e.route,r=e.index,o=e.opts,i={key:l.key||r,exact:l.exact,strict:l.strict,sensitive:l.sensitive,path:l.path};return l.redirect?s["default"].createElement(c.Redirect,E({},i,{from:l.path,to:l.redirect})):(!o.ssrProps||o.isServer||(null===(t=l.component)||void 0===t?void 0:t.wrapInitialPropsLoaded)||!(null===(a=l.component)||void 0===a?void 0:a.getInitialProps)&&!(null===(n=l.component)||void 0===n?void 0:n.preload)||(l.component=G(l,o)),s["default"].createElement(_,E({},i,{render:function(e){return P({route:l,opts:o,props:e})}})))}function S(e){return e.routes?s["default"].createElement(x,null,e.routes.map((function(t,a){return I({route:t,index:a,opts:h(h({},e),{},{rootRoutes:e.rootRoutes||e.routes})})}))):null}function T(e){var t=e.history,a=b(e,["history"]);return r.useEffect((function(){function n(t,n){var l=o.matchRoutes(e.routes,t.pathname);"undefined"!==typeof document&&void 0!==a.defaultTitle&&(document.title=l.length&&l[l.length-1].route.title||a.defaultTitle||""),e.plugin.applyPlugins({key:"onRouteChange",type:c.ApplyPluginsType.event,args:{routes:e.routes,matchedRoutes:l,location:t,action:n}})}return window.g_useSSR&&(window.g_initialProps=null),n(t.location,"POP"),t.listen(n)}),[t]),s["default"].createElement(c.Router,{history:t},S(a))}function N(e){return j.apply(this,arguments)}function j(){return j=m(n.mark((function e(t){var a,l,r,c,i,s,u,m,d=arguments;return n.wrap((function(e){while(1)switch(e.prev=e.next){case 0:a=d.length>1&&void 0!==d[1]?d[1]:window.location.pathname,l=o.matchRoutes(t,a),r=A(l),e.prev=3,r.s();case 5:if((c=r.n()).done){e.next=19;break}if(s=c.value,u=s.route,!(null===(i=u.component)||void 0===i?void 0:i.preload)){e.next=13;break}return e.next=11,u.component.preload();case 11:m=e.sent,u.component=m["default"]||m;case 13:if(!u.routes){e.next=17;break}return e.next=16,N(u.routes,a);case 16:u.routes=e.sent;case 17:e.next=5;break;case 19:e.next=24;break;case 21:e.prev=21,e.t0=e["catch"](3),r.e(e.t0);case 24:return e.prev=24,r.f(),e.finish(24);case 27:return e.abrupt("return",t);case 28:case"end":return e.stop()}}),e,null,[[3,21,24,27]])}))),j.apply(this,arguments)}function H(e){var t=e.plugin.applyPlugins({type:c.ApplyPluginsType.modify,key:"rootContainer",initialValue:s["default"].createElement(T,{history:e.history,routes:e.routes,plugin:e.plugin,ssrProps:e.ssrProps,defaultTitle:e.defaultTitle}),args:{history:e.history,routes:e.routes,plugin:e.plugin}});if(!e.rootElement)return t;var a="string"===typeof e.rootElement?document.getElementById(e.rootElement):e.rootElement,n=e.callback||function(){};window.g_useSSR?e.dynamicImport?N(e.routes).then((function(){l.hydrate(t,a,n)})):l.hydrate(t,a,n):l.render(t,a,n)}t.renderClient=H,t.renderRoutes=S},zqmC:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=t.LinkWrapper=void 0;var n=r(a("q1tI")),l=a("LtsZ");function r(e){return e&&e.__esModule?e:{default:e}}function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},c.apply(this,arguments)}function o(e,t){if(null==e)return{};var a,n,l=i(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}function i(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}var s=function(e){return function(t){var a=t.to,l=o(t,["to"]),r=/^(\w+:)?\/\//.test(a)||!a,i=n["default"].isValidElement(l.children);return n["default"].createElement(e,c({to:a||"",component:r?function(){return n["default"].createElement("a",{target:"_blank",rel:"noopener noreferrer",href:a},l.children,a&&!i&&n["default"].createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},n["default"].createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),n["default"].createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))}:void 0},l,r?{}:{onClick:function(){var e;window.scrollTo({top:0});for(var t=arguments.length,a=new Array(t),n=0;n<t;n++)a[n]=arguments[n];null===(e=l.onClick)||void 0===e||e.apply(this,a)}}))}};t.LinkWrapper=s;var u=s(l.Link);t["default"]=u},"zu+z":function(e,t,a){var n=a("I+eb"),l=a("qY7S");n({target:"Map",stat:!0},{from:l})}});